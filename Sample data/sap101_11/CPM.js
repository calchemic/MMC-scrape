if (!window.cp) window.cp = function(str) {
    return document.getElementById(str)
};
cp.CPProjInit = function() {
    if (cp && cp.model && cp.model.data) return;
    cp.model = {};
    cp.poolResources = {};
    cp.D = cp.model.data = {
        pref: {
            acc: 0,
            rkt: 0,
            hsr: 0
        },
        StAd0: {
            from: 40,
            to: 110,
            src: 'ar/12735.mp3',
            du: 2376
        },
        Widget_2: {
            type: 133,
            from: 1,
            to: 14185,
            rp: 1,
            rpa: 1,
            mdi: 'Widget_2c',
            immo: false,
            apsn: 'Slide12832',
            trin: 0,
            trout: 0
        },
        Widget_2c: {
            b: [633, 10, 780, 63],
            uid: 13240,
            dn: 'Widget_2',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Widget ',
            traccstr: '',
            ti: 2500,
            wp: '<object><property id="text"><string>/logcomp_post.php|/logcomp_redirect.php|/validate.php|/login.php|/validate.php|/errorExternal.php</string></property><property id="widgetfactory_setBefore"><true/></property><property id="widgetfactory_canAccessLibrary"><true/></property><property id="widgetfactory_captivateVersion"><string>8</string></property></object>',
            iiw: false,
            iqw: false,
            id: 13240,
            wc: 'widgetMMC_HybridLesson',
            wu: 'wr/w_13240/Widget_13240.htm',
            sn: 'Slide12832',
            a: 1,
            vbwr: [633, 10, 780, 63],
            vb: [633, 10, 780, 63]
        },
        SmartShape_15: {
            type: 612,
            from: 7,
            to: 126,
            rp: 0,
            rpa: 0,
            mdi: 'SmartShape_15c',
            immo: false,
            apsn: 'Slide12832',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            trin: 0,
            trout: 0
        },
        SmartShape_15c: {
            b: [149, 171, 644, 292],
            uid: 12771,
            dn: 'SmartShape_15',
            visible: 1,
            JSONEffectData: false,
            accstr: ' ',
            traccstr: '',
            ti: -1,
            sc: '#ffffff',
            sw: 0,
            ss: 0,
            fa: 50,
            bc: '#ffffff',
            p0: [
                [0],
                [1, 149, 171],
                [2, 149, 292],
                [2, 644, 292],
                [2, 644, 171],
                [2, 149, 171],
                [4]
            ],
            vbwr: [149, 171, 644, 292],
            vb: [149, 171, 644, 292]
        },
        Button_14: {
            type: 177,
            from: 46,
            to: 126,
            rp: 0,
            rpa: 0,
            mdi: 'Button_14c',
            immo: false,
            apsn: 'Slide12832',
            JSONTT_4: [],
            cpa: false,
            oca: 'cpCmndResume = 1;',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: '',
            ofct: 0,
            pa: 112,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            amc: true,
            ca: 'Button_14ClkAd',
            kh: cp.cbKH,
            sc: {
                k: 13,
                s: 0,
                c: 0,
                a: 0
            },
            eh: cp.cbKH,
            siq: false,
            sat: true,
            subt: 3,
            itr: false,
            trin: 0,
            trout: 0
        },
        Button_14c: {
            b: [339, 307, 458, 345],
            uid: 12799,
            sr: cp.fd,
            ip: 'dr/11426_120_39.png',
            dn: 'Button_14',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Let’s Go! ',
            traccstr: ' Trigger this button to continue',
            ti: 2500,
            hImg: 'dr/11426_120_39.png',
            pImg: 'dr/11426_120_39.png',
            vbwr: [338, 306, 458, 345],
            vb: [338, 306, 458, 345]
        },
        Button_14ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        Text_Caption_195: {
            type: 19,
            from: 7,
            to: 126,
            rp: 0,
            rpa: 0,
            mdi: 'Text_Caption_195c',
            immo: false,
            apsn: 'Slide12832',
            trin: 0,
            trout: 0
        },
        Text_Caption_195c: {
            b: [0, 180, 791, 285],
            uid: 12819,
            sr: cp.fd,
            ip: 'dr/Text_Caption_195.png',
            dn: 'Text_Caption_195',
            visible: 1,
            JSONEffectData: false,
            accstr: 'SAP101 Introduction to SAP ',
            traccstr: '',
            ti: -1,
            vbwr: [0, 180, 791, 285],
            vb: [0, 180, 791, 285]
        },
        Slide12832: {
            lb: 'Michael Management Corporation - Online SAP Training',
            id: 12832,
            from: 1,
            to: 126,
            mmot: false,
            mdi: 'Slide12832c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: 'Michael Management Corporation - Online SAP Training ',
            si: [{
                n: 'Widget_2',
                t: 133
            }, {
                n: 'SmartShape_15',
                t: 612
            }, {
                n: 'Button_14',
                t: 177
            }, {
                n: 'Text_Caption_195',
                t: 19
            }],
            iph: [],
            ea: 'Button_14ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide12832c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/12072.png',
            dn: 'Slide12832',
            visible: '1'
        },
        StAd1: {
            from: 157,
            to: 228,
            src: 'ar/11493.mp3',
            du: 2402
        },
        SmartShape_2: {
            type: 612,
            from: 127,
            to: 252,
            rp: 0,
            rpa: 0,
            mdi: 'SmartShape_2c',
            immo: false,
            apsn: 'Slide11606',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            trin: 0,
            trout: 0
        },
        SmartShape_2c: {
            b: [-2, 69, 792, 133],
            uid: 11520,
            dn: 'SmartShape_2',
            visible: 1,
            JSONEffectData: false,
            accstr: ' ',
            traccstr: '',
            ti: -1,
            sc: '#ffffff',
            sw: 0,
            ss: 0,
            fa: 50,
            bc: '#ffffff',
            p0: [
                [0],
                [1, -2, 69],
                [2, -2, 133],
                [2, 792, 133],
                [2, 792, 69],
                [2, -2, 69],
                [4]
            ],
            vbwr: [-2, 69, 793, 133],
            vb: [-2, 69, 793, 133]
        },
        SmartShape_3: {
            type: 612,
            from: 127,
            to: 252,
            rp: 0,
            rpa: 0,
            mdi: 'SmartShape_3c',
            immo: false,
            apsn: 'Slide11606',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            trin: 0,
            trout: 0
        },
        SmartShape_3c: {
            b: [-6, 148, 790, 322],
            uid: 11537,
            dn: 'SmartShape_3',
            visible: 1,
            JSONEffectData: false,
            accstr: ' ',
            traccstr: '',
            ti: -1,
            sc: '#ffffff',
            sw: 0,
            ss: 0,
            fa: 50,
            bc: '#ffffff',
            p0: [
                [0],
                [1, -6, 148],
                [2, -6, 322],
                [2, 790.00, 322],
                [2, 790.00, 148],
                [2, -6, 148],
                [4]
            ],
            vbwr: [-6, 148, 790, 322],
            vb: [-6, 148, 790, 322]
        },
        Text_Caption_171: {
            type: 19,
            from: 127,
            to: 252,
            rp: 0,
            rpa: 0,
            mdi: 'Text_Caption_171c',
            immo: false,
            apsn: 'Slide11606',
            trin: 0,
            trout: 0
        },
        Text_Caption_171c: {
            b: [23, 83, 786, 137],
            uid: 11557,
            sr: cp.fd,
            ip: 'dr/Text_Caption_171.png',
            dn: 'Text_Caption_171',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Working with Master Records - Create Vendor ',
            traccstr: '',
            ti: -1,
            vbwr: [23, 83, 786, 137],
            vb: [23, 83, 786, 137]
        },
        Text_Caption_172: {
            type: 19,
            from: 127,
            to: 252,
            rp: 0,
            rpa: 0,
            mdi: 'Text_Caption_172c',
            immo: false,
            apsn: 'Slide11606',
            trin: 0,
            trout: 0
        },
        Text_Caption_172c: {
            b: [-2, 148, 784, 319],
            uid: 11561,
            sr: cp.fd,
            ip: 'dr/Text_Caption_172.png',
            dn: 'Text_Caption_172',
            visible: 1,
            JSONEffectData: false,
            accstr: 'In this lesson you will learn how to: Identify characteristics of creating a vendor master record Recognize information stored in the vendor master record ',
            traccstr: '',
            ti: -1,
            vbwr: [-2, 148, 784, 319],
            vb: [-2, 148, 784, 319]
        },
        Button_11: {
            type: 177,
            from: 127,
            to: 252,
            rp: 0,
            rpa: 0,
            mdi: 'Button_11c',
            immo: false,
            apsn: 'Slide11606',
            JSONTT_4: [],
            cpa: false,
            oca: 'cpCmndResume = 1;',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: '',
            ofct: 0,
            pa: 247,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            amc: true,
            ca: 'Button_11ClkAd',
            kh: cp.cbKH,
            sc: {
                k: 13,
                s: 0,
                c: 0,
                a: 0
            },
            eh: cp.cbKH,
            siq: false,
            sat: true,
            subt: 3,
            itr: false,
            trin: 0,
            trout: 0
        },
        Button_11c: {
            b: [20, 500, 139, 538],
            uid: 11593,
            sr: cp.fd,
            ip: 'dr/11577_120_39.png',
            dn: 'Button_11',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Continue ',
            traccstr: ' Trigger this button to continue',
            ti: 2500,
            hImg: 'dr/11577_120_39.png',
            pImg: 'dr/11577_120_39.png',
            vbwr: [19, 499, 139, 538],
            vb: [19, 499, 139, 538]
        },
        Button_11ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        Slide11606: {
            lb: '',
            id: 11606,
            from: 127,
            to: 252,
            mmot: false,
            mdi: 'Slide11606c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'SmartShape_2',
                t: 612
            }, {
                n: 'SmartShape_3',
                t: 612
            }, {
                n: 'Text_Caption_171',
                t: 19
            }, {
                n: 'Text_Caption_172',
                t: 19
            }, {
                n: 'Button_11',
                t: 177
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'Button_11ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide11606c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/11490.png',
            dn: 'Slide11606',
            visible: '1'
        },
        StAd2: {
            from: 283,
            to: 373,
            src: 'ar/12497.mp3',
            du: 3055
        },
        SmartShape_4: {
            type: 612,
            from: 253,
            to: 378,
            rp: 0,
            rpa: 0,
            mdi: 'SmartShape_4c',
            immo: false,
            apsn: 'Slide11755',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            trin: 0,
            trout: 0
        },
        SmartShape_4c: {
            b: [-2, 69, 792, 473],
            uid: 11636,
            dn: 'SmartShape_4',
            visible: 1,
            JSONEffectData: false,
            accstr: ' ',
            traccstr: '',
            ti: -1,
            sc: '#ffffff',
            sw: 0,
            ss: 0,
            fa: 50,
            bc: '#ffffff',
            p0: [
                [0],
                [1, -2, 69],
                [2, -2, 473],
                [2, 792, 473],
                [2, 792, 69],
                [2, -2, 69],
                [4]
            ],
            vbwr: [-2, 69, 793, 474],
            vb: [-2, 69, 793, 474]
        },
        Text_Caption_174: {
            type: 19,
            from: 253,
            to: 378,
            rp: 0,
            rpa: 0,
            mdi: 'Text_Caption_174c',
            immo: false,
            apsn: 'Slide11755',
            trin: 0,
            trout: 0
        },
        Text_Caption_174c: {
            b: [23, 83, 786, 137],
            uid: 11656,
            sr: cp.fd,
            ip: 'dr/Text_Caption_174.png',
            dn: 'Text_Caption_174',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Business Scenario ',
            traccstr: '',
            ti: -1,
            vbwr: [23, 83, 786, 137],
            vb: [23, 83, 786, 137]
        },
        Text_Caption_175: {
            type: 19,
            from: 253,
            to: 378,
            rp: 0,
            rpa: 0,
            mdi: 'Text_Caption_175c',
            immo: false,
            apsn: 'Slide11755',
            trin: 0,
            trout: 0
        },
        Text_Caption_175c: {
            b: [23, 124, 773, 206],
            uid: 11660,
            sr: cp.fd,
            ip: 'dr/Text_Caption_175.png',
            dn: 'Text_Caption_175',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Your supervisor has asked you to create a vendor master record. Vendors in SAP include all business partners that provide your company with goods or services. In order to perform this task, you must learn how to create a vendor master record. In knowing how to create this record, you can then store various business objects such as customers, vendors or financial accounts.    ',
            traccstr: '',
            ti: -1,
            vbwr: [23, 124, 773, 206],
            vb: [23, 124, 773, 206]
        },
        Button_12: {
            type: 177,
            from: 253,
            to: 378,
            rp: 0,
            rpa: 0,
            mdi: 'Button_12c',
            immo: false,
            apsn: 'Slide11755',
            JSONTT_4: [],
            cpa: false,
            oca: 'cpCmndResume = 1;',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: '',
            ofct: 0,
            pa: 373,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            amc: true,
            ca: 'Button_12ClkAd',
            kh: cp.cbKH,
            sc: {
                k: 13,
                s: 0,
                c: 0,
                a: 0
            },
            eh: cp.cbKH,
            siq: false,
            sat: true,
            subt: 3,
            itr: false,
            trin: 0,
            trout: 0
        },
        Button_12c: {
            b: [20, 500, 139, 538],
            uid: 11692,
            sr: cp.fd,
            ip: 'dr/11577_120_39.png',
            dn: 'Button_12',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Continue ',
            traccstr: ' Trigger this button to continue',
            ti: 2500,
            hImg: 'dr/11577_120_39.png',
            pImg: 'dr/11577_120_39.png',
            vbwr: [19, 499, 139, 538],
            vb: [19, 499, 139, 538]
        },
        Button_12ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        Image_17: {
            type: 15,
            from: 253,
            to: 378,
            rp: 0,
            rpa: 0,
            mdi: 'Image_17c',
            immo: false,
            apsn: 'Slide11755',
            trin: 0,
            trout: 0
        },
        Image_17c: {
            b: [225, 284, 375, 434],
            uid: 11984,
            sr: cp.fd,
            ip: 'dr/11980_150_150.png',
            dn: 'Image_17',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Image ',
            traccstr: '',
            ti: -1,
            vbwr: [225, 284, 375, 434],
            vb: [225, 284, 375, 434]
        },
        SmartShape_5: {
            type: 612,
            from: 253,
            to: 378,
            rp: 0,
            rpa: 0,
            mdi: 'SmartShape_5c',
            immo: false,
            apsn: 'Slide11755',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            trin: 0,
            trout: 0
        },
        SmartShape_5c: {
            b: [60, 225, 251, 341],
            uid: 11723,
            sr: cp.fd,
            ip: 'dr/SmartShape_5.png',
            dn: 'SmartShape_5',
            visible: 1,
            JSONEffectData: false,
            accstr: '“We haven’t talked about how to create a Vendor Master Record yet, and I need to know that process!” ',
            traccstr: '',
            ti: -1,
            sc: '#76cbfe',
            sw: 1,
            ss: 0,
            fa: 100,
            bc: '#ffffff',
            p0: [
                [0],
                [1, 211.55, 329.96],
                [3, 180.04, 343.84, 137.8, 344.7, 104.81, 332.16],
                [3, 60.1, 315.15, 46.57, 279.36, 74.56, 252.21],
                [3, 102.56, 225.07, 161.49, 216.84, 206.19, 233.84],
                [3, 250.89, 250.85, 264.43, 286.64, 236.44, 313.79],
                [2, 257.7, 341],
                [2, 211.55, 329.96],
                [4]
            ],
            vbwr: [58, 223, 260, 343],
            vb: [58, 223, 260, 343]
        },
        Image_23: {
            type: 15,
            from: 253,
            to: 378,
            rp: 0,
            rpa: 0,
            mdi: 'Image_23c',
            immo: false,
            apsn: 'Slide11755',
            trin: 0,
            trout: 0
        },
        Image_23c: {
            b: [379, 288, 529, 438],
            uid: 12728,
            sr: cp.fd,
            ip: 'dr/12726_150_150.png',
            dn: 'Image_23',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Image ',
            traccstr: '',
            ti: -1,
            vbwr: [379, 288, 529, 438],
            vb: [379, 288, 529, 438]
        },
        SmartShape_6: {
            type: 612,
            from: 253,
            to: 378,
            rp: 0,
            rpa: 0,
            mdi: 'SmartShape_6c',
            immo: false,
            apsn: 'Slide11755',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            trin: 0,
            trout: 0
        },
        SmartShape_6c: {
            b: [522, 225, 718, 337],
            uid: 11742,
            sr: cp.fd,
            ip: 'dr/SmartShape_6.png',
            dn: 'SmartShape_6',
            visible: 1,
            JSONEffectData: false,
            accstr: '“Great subject Kathryn! Master records are a very important component of SAP.” ',
            traccstr: '',
            ti: -1,
            sc: '#76cbfe',
            sw: 1,
            ss: 0,
            fa: 100,
            bc: '#ffffff',
            p0: [
                [0],
                [1, 533.1, 306.90],
                [3, 514.63, 286.66, 519.5, 262.04, 545.43, 244.67],
                [3, 580.55, 221.13, 642.4, 218.32, 683.59, 238.39],
                [3, 724.77, 258.46, 729.69, 293.8, 694.57, 317.33],
                [3, 659.45, 340.87, 597.60, 343.68, 556.41, 323.61],
                [2, 497, 337],
                [2, 533.1, 306.90],
                [4]
            ],
            vbwr: [495, 223, 720, 339],
            vb: [495, 223, 720, 339]
        },
        Slide11755: {
            lb: '',
            id: 11755,
            from: 253,
            to: 378,
            mmot: false,
            mdi: 'Slide11755c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'SmartShape_4',
                t: 612
            }, {
                n: 'Text_Caption_174',
                t: 19
            }, {
                n: 'Text_Caption_175',
                t: 19
            }, {
                n: 'Button_12',
                t: 177
            }, {
                n: 'Image_17',
                t: 15
            }, {
                n: 'SmartShape_5',
                t: 612
            }, {
                n: 'Image_23',
                t: 15
            }, {
                n: 'SmartShape_6',
                t: 612
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'Button_12ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide11755c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/11490.png',
            dn: 'Slide11755',
            visible: '1'
        },
        StAd3: {
            from: 409,
            to: 685,
            src: 'ar/2795.mp3',
            du: 9247
        },
        CaptivateItem16: {
            type: 177,
            from: 379,
            to: 687,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem16c',
            immo: false,
            apsn: 'Slide4505',
            JSONTT_4: [],
            cpa: false,
            oca: 'cpCmndResume = 1;',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: '',
            ofct: 0,
            pa: 670,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            amc: true,
            ca: 'CaptivateItem16ClkAd',
            kh: cp.cbKH,
            sc: {
                k: 13,
                s: 0,
                c: 0,
                a: 0
            },
            eh: cp.cbKH,
            siq: false,
            sat: true,
            subt: 3,
            itr: false,
            trin: 0,
            trout: 0
        },
        CaptivateItem16c: {
            b: [36, 474, 155, 512],
            uid: 4531,
            sr: cp.fd,
            ip: 'dr/12066_121_40.png',
            dn: 'CaptivateItem16',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Continue ',
            traccstr: ' Trigger this button to continue',
            ti: 2500,
            hImg: 'dr/12070_121_40.png',
            pImg: 'dr/12068_121_40.png',
            vbwr: [35, 473, 156, 513],
            vb: [35, 473, 156, 513]
        },
        CaptivateItem16ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem20: {
            type: 19,
            from: 379,
            to: 687,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem20c',
            immo: false,
            apsn: 'Slide4505',
            trin: 0,
            trout: 0
        },
        CaptivateItem20c: {
            b: [22, 6, 762, 45],
            uid: 4561,
            sr: cp.fd,
            ip: 'dr/CaptivateItem20.png',
            dn: 'CaptivateItem20',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Working with Master Records (Create Vendor) ',
            traccstr: '',
            ti: -1,
            vbwr: [22, 6, 762, 45],
            vb: [22, 6, 762, 45]
        },
        Image_20: {
            type: 15,
            from: 379,
            to: 687,
            rp: 0,
            rpa: 0,
            mdi: 'Image_20c',
            immo: false,
            apsn: 'Slide4505',
            trin: 0,
            trout: 0
        },
        Image_20c: {
            b: [96, 114, 246, 264],
            uid: 12006,
            sr: cp.fd,
            ip: 'dr/12002_150_150.png',
            dn: 'Image_20',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Image ',
            traccstr: '',
            ti: -1,
            vbwr: [96, 114, 246, 264],
            vb: [96, 114, 246, 264]
        },
        SmartShape_7: {
            type: 612,
            from: 379,
            to: 687,
            rp: 0,
            rpa: 0,
            mdi: 'SmartShape_7c',
            immo: false,
            apsn: 'Slide4505',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            trin: 0,
            trout: 0
        },
        SmartShape_7c: {
            b: [236, 74, 527, 178],
            uid: 12036,
            sr: cp.fd,
            ip: 'dr/SmartShape_7.png',
            dn: 'SmartShape_7',
            visible: 1,
            JSONEffectData: false,
            accstr: '“SAP uses master records to store important information about certain business objects such  as customers, vendors or financial accounts.” ',
            traccstr: '',
            ti: -1,
            sc: '#76cbfe',
            sw: 1,
            ss: 0,
            fa: 100,
            bc: '#ffffff',
            p0: [
                [0],
                [1, 253.99, 151.05],
                [3, 225.42, 132.47, 231.26, 109.56, 268.75, 93.13],
                [3, 319.54, 70.88, 411.20, 67.55, 473.47, 85.7],
                [3, 535.74, 103.86, 545.04, 136.61, 494.25, 158.87],
                [3, 443.46, 181.12, 351.8, 184.45, 289.53, 166.30],
                [2, 210.2, 177],
                [2, 253.99, 151.05],
                [4]
            ],
            vbwr: [208, 72, 529, 180],
            vb: [208, 72, 529, 180]
        },
        Image_21: {
            type: 15,
            from: 643,
            to: 687,
            rp: 0,
            rpa: 0,
            mdi: 'Image_21c',
            immo: false,
            apsn: 'Slide4505',
            trin: 15,
            trout: 0
        },
        Image_21c: {
            b: [486, 321, 769, 521],
            uid: 12041,
            sr: cp.fd,
            ip: 'dr/12037_283_200.png',
            dn: 'Image_21',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Image ',
            traccstr: '',
            ti: -1,
            vbwr: [486, 321, 769, 521],
            vb: [486, 321, 769, 521]
        },
        CaptivateItem18: {
            type: 19,
            from: 643,
            to: 687,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem18c',
            immo: false,
            apsn: 'Slide4505',
            trin: 15,
            trout: 0
        },
        CaptivateItem18c: {
            b: [36, 304, 598, 371],
            uid: 4555,
            sr: cp.fd,
            ip: 'dr/CaptivateItem18.png',
            dn: 'CaptivateItem18',
            visible: 1,
            JSONEffectData: false,
            accstr: 'All modules in SAP use master records (for example, the Accounts Receivable (FI-AR) module uses customer master records and the Materials Management (MM) module uses material master records, etc.). These master records are a very important component of SAP as they contain information about each individual record (i.e. customers, vendors, materials, etc.).    ',
            traccstr: '',
            ti: -1,
            vbwr: [36, 304, 598, 371],
            vb: [36, 304, 598, 371]
        },
        Slide4505: {
            lb: '',
            id: 4505,
            from: 379,
            to: 687,
            mmot: false,
            mdi: 'Slide4505c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem16',
                t: 177
            }, {
                n: 'CaptivateItem20',
                t: 19
            }, {
                n: 'Image_20',
                t: 15
            }, {
                n: 'SmartShape_7',
                t: 612
            }, {
                n: 'Image_21',
                t: 15
            }, {
                n: 'CaptivateItem18',
                t: 19
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem16ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide4505c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/11998.png',
            dn: 'Slide4505',
            visible: '1'
        },
        StAd4: {
            from: 718,
            to: 771,
            src: 'ar/2841.mp3',
            du: 1803
        },
        CaptivateItem22: {
            type: 14,
            from: 688,
            to: 783,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem22c',
            immo: false,
            apsn: 'Slide4565',
            trin: 15,
            trout: 0
        },
        CaptivateItem22c: {
            b: [22, 247, 47, 267],
            uid: 4603,
            sr: cp.fd,
            dn: 'CaptivateItem22',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [21, 246, 48, 268],
            vb: [21, 246, 48, 268]
        },
        CaptivateItem23: {
            type: 13,
            from: 688,
            to: 783,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem23c',
            immo: false,
            apsn: 'Slide4565',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem26',
            ofct: 1,
            dep: ['CaptivateItem24'],
            pa: 782,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem23ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem23c: {
            b: [22, 247, 47, 267],
            uid: 4607,
            sr: cp.fd,
            dn: 'CaptivateItem23',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [22, 247, 47, 267],
            vb: [22, 247, 47, 267]
        },
        CaptivateItem23ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem25: {
            type: 19,
            from: 688,
            to: 783,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem25c',
            immo: false,
            apsn: 'Slide4565',
            trin: 0,
            trout: 0
        },
        CaptivateItem25c: {
            b: [286, 160, 496, 222],
            uid: 4623,
            sr: cp.fd,
            ip: 'dr/CaptivateItem25.png',
            dn: 'CaptivateItem25',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Begin by going to Accounting.  ',
            traccstr: '',
            ti: -1,
            vbwr: [286, 160, 496, 222],
            vb: [286, 160, 496, 222]
        },
        CaptivateItem24: {
            type: 23,
            from: 688,
            to: 756,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem24c',
            immo: false,
            apsn: 'Slide4565',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem24c: {
            b: [31, 267, 190, 349],
            uid: 4619,
            sr: cp.fd,
            ip: 'dr/CaptivateItem24.png',
            dn: 'CaptivateItem24',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [31, 267, 190, 349],
            vb: [31, 267, 190, 349]
        },
        CaptivateItem26: {
            type: 22,
            from: 688,
            to: 777,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem26c',
            immo: false,
            apsn: 'Slide4565',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem26c: {
            b: [208, 251, 360, 313],
            uid: 4627,
            sr: cp.fd,
            ip: 'dr/CaptivateItem26.png',
            dn: 'CaptivateItem26',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [208, 251, 360, 313],
            vb: [208, 251, 360, 313]
        },
        Slide4565: {
            lb: '',
            id: 4565,
            from: 688,
            to: 783,
            mmot: false,
            mdi: 'Slide4565c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem22',
                t: 14
            }, {
                n: 'CaptivateItem23',
                t: 13,
                d: {
                    hc: 'CaptivateItem24',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem25',
                t: 19
            }, {
                n: 'CaptivateItem24',
                t: 23
            }, {
                n: 'CaptivateItem26',
                t: 22
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem23ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide4565c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2254.png',
            dn: 'Slide4565',
            visible: '1'
        },
        StAd5: {
            from: 814,
            to: 859,
            src: 'ar/2844.mp3',
            du: 1541
        },
        CaptivateItem27: {
            type: 14,
            from: 784,
            to: 873,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem27c',
            immo: false,
            apsn: 'Slide4631',
            trin: 15,
            trout: 0
        },
        CaptivateItem27c: {
            b: [42, 263, 69, 283],
            uid: 4650,
            sr: cp.fd,
            dn: 'CaptivateItem27',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [41, 262, 70, 284],
            vb: [41, 262, 70, 284]
        },
        CaptivateItem28: {
            type: 13,
            from: 784,
            to: 873,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem28c',
            immo: false,
            apsn: 'Slide4631',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem29',
            ofct: 1,
            dep: ['CaptivateItem30'],
            pa: 872,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem28ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem28c: {
            b: [41, 264, 70, 284],
            uid: 4654,
            sr: cp.fd,
            dn: 'CaptivateItem28',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [41, 264, 70, 284],
            vb: [41, 264, 70, 284]
        },
        CaptivateItem28ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem32: {
            type: 19,
            from: 784,
            to: 873,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem32c',
            immo: false,
            apsn: 'Slide4631',
            trin: 0,
            trout: 0
        },
        CaptivateItem32c: {
            b: [320, 275, 512, 337],
            uid: 4675,
            sr: cp.fd,
            ip: 'dr/CaptivateItem32.png',
            dn: 'CaptivateItem32',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Go to Financial Accounting.  ',
            traccstr: '',
            ti: -1,
            vbwr: [320, 275, 512, 337],
            vb: [320, 275, 512, 337]
        },
        CaptivateItem29: {
            type: 22,
            from: 784,
            to: 852,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem29c',
            immo: false,
            apsn: 'Slide4631',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem29c: {
            b: [58, 317, 210, 379],
            uid: 4666,
            sr: cp.fd,
            ip: 'dr/CaptivateItem29.png',
            dn: 'CaptivateItem29',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [58, 317, 210, 379],
            vb: [58, 317, 210, 379]
        },
        CaptivateItem30: {
            type: 23,
            from: 784,
            to: 852,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem30c',
            immo: false,
            apsn: 'Slide4631',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem30c: {
            b: [51, 284, 210, 366],
            uid: 4670,
            sr: cp.fd,
            ip: 'dr/CaptivateItem30.png',
            dn: 'CaptivateItem30',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [51, 284, 210, 366],
            vb: [51, 284, 210, 366]
        },
        Slide4631: {
            lb: '',
            id: 4631,
            from: 784,
            to: 873,
            mmot: false,
            mdi: 'Slide4631c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem27',
                t: 14
            }, {
                n: 'CaptivateItem28',
                t: 13,
                d: {
                    hc: 'CaptivateItem30',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem32',
                t: 19
            }, {
                n: 'CaptivateItem29',
                t: 22
            }, {
                n: 'CaptivateItem30',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem28ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide4631c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2234.png',
            dn: 'Slide4631',
            visible: '1'
        },
        StAd6: {
            from: 904,
            to: 953,
            src: 'ar/2847.mp3',
            du: 1672
        },
        CaptivateItem33: {
            type: 14,
            from: 874,
            to: 963,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem33c',
            immo: false,
            apsn: 'Slide4679',
            trin: 15,
            trout: 0
        },
        CaptivateItem33c: {
            b: [61, 318, 89, 338],
            uid: 4698,
            sr: cp.fd,
            dn: 'CaptivateItem33',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [60, 317, 90, 339],
            vb: [60, 317, 90, 339]
        },
        CaptivateItem34: {
            type: 13,
            from: 874,
            to: 963,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem34c',
            immo: false,
            apsn: 'Slide4679',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem35',
            ofct: 1,
            dep: ['CaptivateItem36'],
            pa: 962,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem34ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem34c: {
            b: [61, 318, 89, 338],
            uid: 4702,
            sr: cp.fd,
            dn: 'CaptivateItem34',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [61, 318, 89, 338],
            vb: [61, 318, 89, 338]
        },
        CaptivateItem34ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem38: {
            type: 19,
            from: 874,
            to: 963,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem38c',
            immo: false,
            apsn: 'Slide4679',
            trin: 0,
            trout: 0
        },
        CaptivateItem38c: {
            b: [399, 286, 594, 348],
            uid: 4723,
            sr: cp.fd,
            ip: 'dr/CaptivateItem38.png',
            dn: 'CaptivateItem38',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Go to Accounts Payable. ',
            traccstr: '',
            ti: -1,
            vbwr: [399, 286, 594, 348],
            vb: [399, 286, 594, 348]
        },
        CaptivateItem35: {
            type: 22,
            from: 874,
            to: 942,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem35c',
            immo: false,
            apsn: 'Slide4679',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem35c: {
            b: [89, 374, 241, 436],
            uid: 4714,
            sr: cp.fd,
            ip: 'dr/CaptivateItem35.png',
            dn: 'CaptivateItem35',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [89, 374, 241, 436],
            vb: [89, 374, 241, 436]
        },
        CaptivateItem36: {
            type: 23,
            from: 874,
            to: 942,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem36c',
            immo: false,
            apsn: 'Slide4679',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem36c: {
            b: [76, 338, 235, 420],
            uid: 4718,
            sr: cp.fd,
            ip: 'dr/CaptivateItem36.png',
            dn: 'CaptivateItem36',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [76, 338, 235, 420],
            vb: [76, 338, 235, 420]
        },
        Slide4679: {
            lb: '',
            id: 4679,
            from: 874,
            to: 963,
            mmot: false,
            mdi: 'Slide4679c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem33',
                t: 14
            }, {
                n: 'CaptivateItem34',
                t: 13,
                d: {
                    hc: 'CaptivateItem36',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem38',
                t: 19
            }, {
                n: 'CaptivateItem35',
                t: 22
            }, {
                n: 'CaptivateItem36',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem34ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide4679c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2238.png',
            dn: 'Slide4679',
            visible: '1'
        },
        StAd7: {
            from: 994,
            to: 1036,
            src: 'ar/2850.mp3',
            du: 1437
        },
        CaptivateItem39: {
            type: 14,
            from: 964,
            to: 1047,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem39c',
            immo: false,
            apsn: 'Slide4727',
            trin: 15,
            trout: 0
        },
        CaptivateItem39c: {
            b: [80, 389, 107, 409],
            uid: 4746,
            sr: cp.fd,
            dn: 'CaptivateItem39',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [79, 388, 108, 410],
            vb: [79, 388, 108, 410]
        },
        CaptivateItem40: {
            type: 13,
            from: 964,
            to: 1047,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem40c',
            immo: false,
            apsn: 'Slide4727',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem41',
            ofct: 1,
            dep: ['CaptivateItem42'],
            pa: 1046,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem40ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem40c: {
            b: [80, 389, 106, 409],
            uid: 4750,
            sr: cp.fd,
            dn: 'CaptivateItem40',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [80, 389, 106, 409],
            vb: [80, 389, 106, 409]
        },
        CaptivateItem40ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem44: {
            type: 19,
            from: 964,
            to: 1047,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem44c',
            immo: false,
            apsn: 'Slide4727',
            trin: 0,
            trout: 0
        },
        CaptivateItem44c: {
            b: [347, 299, 526, 361],
            uid: 4771,
            sr: cp.fd,
            ip: 'dr/CaptivateItem44.png',
            dn: 'CaptivateItem44',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Go to Master Records. ',
            traccstr: '',
            ti: -1,
            vbwr: [347, 299, 526, 361],
            vb: [347, 299, 526, 361]
        },
        CaptivateItem41: {
            type: 22,
            from: 964,
            to: 1032,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem41c',
            immo: false,
            apsn: 'Slide4727',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem41c: {
            b: [106, 440, 258, 502],
            uid: 4762,
            sr: cp.fd,
            ip: 'dr/CaptivateItem41.png',
            dn: 'CaptivateItem41',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [106, 440, 258, 502],
            vb: [106, 440, 258, 502]
        },
        CaptivateItem42: {
            type: 23,
            from: 964,
            to: 1032,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem42c',
            immo: false,
            apsn: 'Slide4727',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem42c: {
            b: [92, 409, 251, 491],
            uid: 4766,
            sr: cp.fd,
            ip: 'dr/CaptivateItem42.png',
            dn: 'CaptivateItem42',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [92, 409, 251, 491],
            vb: [92, 409, 251, 491]
        },
        Slide4727: {
            lb: '',
            id: 4727,
            from: 964,
            to: 1047,
            mmot: false,
            mdi: 'Slide4727c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem39',
                t: 14
            }, {
                n: 'CaptivateItem40',
                t: 13,
                d: {
                    hc: 'CaptivateItem42',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem44',
                t: 19
            }, {
                n: 'CaptivateItem41',
                t: 22
            }, {
                n: 'CaptivateItem42',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem40ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide4727c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2242.png',
            dn: 'Slide4727',
            visible: '1'
        },
        StAd8: {
            from: 1078,
            to: 1328,
            src: 'ar/2804.mp3',
            du: 8385
        },
        CaptivateItem46: {
            type: 19,
            from: 1048,
            to: 1329,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem46c',
            immo: false,
            apsn: 'Slide4775',
            trin: 0,
            trout: 0
        },
        CaptivateItem46c: {
            b: [285, 164, 715, 287],
            uid: 4797,
            sr: cp.fd,
            ip: 'dr/CaptivateItem46.png',
            dn: 'CaptivateItem46',
            visible: 1,
            JSONEffectData: false,
            accstr: 'The transactions in the Master Records folder can be used to Create, Change, Display, Block/Unblock and Delete Vendor Master Records.   In this lesson, you will learn how to create a Vendor Master Record from scratch. Vendors in SAP include all business partners that provide goods or services to the company. ',
            traccstr: '',
            ti: -1,
            vbwr: [285, 164, 715, 287],
            vb: [285, 164, 715, 287]
        },
        CaptivateItem47: {
            type: 177,
            from: 1048,
            to: 1329,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem47c',
            immo: false,
            apsn: 'Slide4775',
            JSONTT_4: [],
            cpa: false,
            oca: 'cpCmndResume = 1;',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: '',
            ofct: 0,
            pa: 1315,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            amc: true,
            ca: 'CaptivateItem47ClkAd',
            kh: cp.cbKH,
            sc: {
                k: 13,
                s: 0,
                c: 0,
                a: 0
            },
            eh: cp.cbKH,
            siq: false,
            sat: true,
            subt: 0,
            itr: false,
            trin: 0,
            trout: 0
        },
        CaptivateItem47c: {
            b: [607, 252, 710, 281],
            uid: 4801,
            sr: cp.fd,
            ip: 'dr/CaptivateItem47.png',
            dn: 'CaptivateItem47',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Continue ',
            traccstr: ' Trigger this button to continue',
            ti: 2500,
            hImg: 'dr/CaptivateItem47o.png',
            pImg: 'dr/CaptivateItem47d.png',
            vbwr: [606, 251, 711, 282],
            vb: [606, 251, 711, 282]
        },
        CaptivateItem47ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        Highlight_Box_77: {
            type: 14,
            from: 1048,
            to: 1329,
            rp: 0,
            rpa: 0,
            mdi: 'Highlight_Box_77c',
            immo: false,
            apsn: 'Slide4775',
            trin: 15,
            trout: 0
        },
        Highlight_Box_77c: {
            b: [125, 319, 313, 412],
            uid: 11372,
            sr: cp.fd,
            dn: 'Highlight_Box_77',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 2,
            fo: 10,
            foa: 0,
            vbwr: [123, 317, 314, 413],
            vb: [123, 317, 314, 413]
        },
        Slide4775: {
            lb: '',
            id: 4775,
            from: 1048,
            to: 1330,
            mmot: false,
            mdi: 'Slide4775c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem46',
                t: 19
            }, {
                n: 'CaptivateItem47',
                t: 177
            }, {
                n: 'Highlight_Box_77',
                t: 14
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem47ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide4775c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2246.png',
            dn: 'Slide4775',
            visible: '1'
        },
        StAd9: {
            from: 1361,
            to: 1478,
            src: 'ar/2853.mp3',
            du: 3944
        },
        CaptivateItem48: {
            type: 14,
            from: 1331,
            to: 1483,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem48c',
            immo: false,
            apsn: 'Slide4821',
            trin: 15,
            trout: 0
        },
        CaptivateItem48c: {
            b: [119, 318, 151, 338],
            uid: 4841,
            sr: cp.fd,
            dn: 'CaptivateItem48',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [118, 317, 152, 339],
            vb: [118, 317, 152, 339]
        },
        CaptivateItem49: {
            type: 13,
            from: 1331,
            to: 1483,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem49c',
            immo: false,
            apsn: 'Slide4821',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem50',
            ofct: 1,
            dep: ['CaptivateItem51'],
            pa: 1482,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: true,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem49ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem49c: {
            b: [118, 319, 152, 339],
            uid: 4845,
            sr: cp.fd,
            dn: 'CaptivateItem49',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [118, 319, 152, 339],
            vb: [118, 319, 152, 339]
        },
        CaptivateItem49ClkAd: {
            src: 'ar/dblmouse.mp3',
            du: 365
        },
        CaptivateItem53: {
            type: 19,
            from: 1331,
            to: 1483,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem53c',
            immo: false,
            apsn: 'Slide4821',
            trin: 0,
            trout: 0
        },
        CaptivateItem53c: {
            b: [253, 252, 508, 314],
            uid: 4866,
            sr: cp.fd,
            ip: 'dr/CaptivateItem53.png',
            dn: 'CaptivateItem53',
            visible: 1,
            JSONEffectData: false,
            accstr: 'To begin, start transaction FK01 - Create. ',
            traccstr: '',
            ti: -1,
            vbwr: [253, 252, 508, 314],
            vb: [253, 252, 508, 314]
        },
        CaptivateItem50: {
            type: 22,
            from: 1331,
            to: 1399,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem50c',
            immo: false,
            apsn: 'Slide4821',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem50c: {
            b: [157, 374, 309, 436],
            uid: 4857,
            sr: cp.fd,
            ip: 'dr/CaptivateItem50.png',
            dn: 'CaptivateItem50',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [157, 374, 309, 436],
            vb: [157, 374, 309, 436]
        },
        CaptivateItem51: {
            type: 23,
            from: 1331,
            to: 1399,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem51c',
            immo: false,
            apsn: 'Slide4821',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem51c: {
            b: [134, 338, 293, 420],
            uid: 4861,
            sr: cp.fd,
            ip: 'dr/CaptivateItem51.png',
            dn: 'CaptivateItem51',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Double-click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [134, 338, 293, 420],
            vb: [134, 338, 293, 420]
        },
        Slide4821: {
            lb: '',
            id: 4821,
            from: 1331,
            to: 1483,
            mmot: false,
            mdi: 'Slide4821c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem48',
                t: 14
            }, {
                n: 'CaptivateItem49',
                t: 13,
                d: {
                    hc: 'CaptivateItem51',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem53',
                t: 19
            }, {
                n: 'CaptivateItem50',
                t: 22
            }, {
                n: 'CaptivateItem51',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem49ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide4821c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2246.png',
            dn: 'Slide4821',
            visible: '1'
        },
        StAd10: {
            from: 1514,
            to: 1619,
            src: 'ar/2856.mp3',
            du: 3553
        },
        CaptivateItem54: {
            type: 14,
            from: 1484,
            to: 1630,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem54c',
            immo: false,
            apsn: 'Slide4870',
            trin: 15,
            trout: 0
        },
        CaptivateItem54c: {
            b: [175, 202, 209, 220],
            uid: 4890,
            sr: cp.fd,
            dn: 'CaptivateItem54',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [174, 201, 210, 221],
            vb: [174, 201, 210, 221]
        },
        CaptivateItem55: {
            type: 13,
            from: 1484,
            to: 1630,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem55c',
            immo: false,
            apsn: 'Slide4870',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem56',
            ofct: 1,
            dep: ['CaptivateItem57'],
            pa: 1629,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem55ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem55c: {
            b: [175, 201, 209, 221],
            uid: 4894,
            sr: cp.fd,
            dn: 'CaptivateItem55',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [175, 201, 209, 221],
            vb: [175, 201, 209, 221]
        },
        CaptivateItem55ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem59: {
            type: 19,
            from: 1484,
            to: 1630,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem59c',
            immo: false,
            apsn: 'Slide4870',
            trin: 0,
            trout: 0
        },
        CaptivateItem59c: {
            b: [330, 105, 592, 176],
            uid: 4915,
            sr: cp.fd,
            ip: 'dr/CaptivateItem59.png',
            dn: 'CaptivateItem59',
            visible: 1,
            JSONEffectData: false,
            accstr: 'First, you have to specify the company for which you will create a vendor.   Click in the Company Code field. ',
            traccstr: '',
            ti: -1,
            vbwr: [330, 105, 592, 176],
            vb: [330, 105, 592, 176]
        },
        CaptivateItem56: {
            type: 22,
            from: 1484,
            to: 1552,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem56c',
            immo: false,
            apsn: 'Slide4870',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem56c: {
            b: [205, 250, 357, 312],
            uid: 4906,
            sr: cp.fd,
            ip: 'dr/CaptivateItem56.png',
            dn: 'CaptivateItem56',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [205, 250, 357, 312],
            vb: [205, 250, 357, 312]
        },
        CaptivateItem57: {
            type: 23,
            from: 1484,
            to: 1552,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem57c',
            immo: false,
            apsn: 'Slide4870',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem57c: {
            b: [193, 221, 352, 303],
            uid: 4910,
            sr: cp.fd,
            ip: 'dr/CaptivateItem57.png',
            dn: 'CaptivateItem57',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [193, 221, 352, 303],
            vb: [193, 221, 352, 303]
        },
        Slide4870: {
            lb: '',
            id: 4870,
            from: 1484,
            to: 1630,
            mmot: false,
            mdi: 'Slide4870c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem54',
                t: 14
            }, {
                n: 'CaptivateItem55',
                t: 13,
                d: {
                    hc: 'CaptivateItem57',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem59',
                t: 19
            }, {
                n: 'CaptivateItem56',
                t: 22
            }, {
                n: 'CaptivateItem57',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem55ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide4870c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2258.png',
            dn: 'Slide4870',
            visible: '1'
        },
        StAd11: {
            from: 1661,
            to: 1747,
            src: 'ar/2859.mp3',
            du: 2900
        },
        CaptivateItem60: {
            type: 14,
            from: 1631,
            to: 1756,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem60c',
            immo: false,
            apsn: 'Slide4919',
            trin: 15,
            trout: 0
        },
        CaptivateItem60c: {
            b: [206, 203, 232, 223],
            uid: 4939,
            sr: cp.fd,
            dn: 'CaptivateItem60',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [205, 202, 233, 224],
            vb: [205, 202, 233, 224]
        },
        CaptivateItem61: {
            type: 13,
            from: 1631,
            to: 1756,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem61c',
            immo: false,
            apsn: 'Slide4919',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem62',
            ofct: 1,
            dep: ['CaptivateItem63'],
            pa: 1755,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem61ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem61c: {
            b: [206, 203, 232, 223],
            uid: 4943,
            sr: cp.fd,
            dn: 'CaptivateItem61',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [206, 203, 232, 223],
            vb: [206, 203, 232, 223]
        },
        CaptivateItem61ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem65: {
            type: 19,
            from: 1631,
            to: 1756,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem65c',
            immo: false,
            apsn: 'Slide4919',
            trin: 0,
            trout: 0
        },
        CaptivateItem65c: {
            b: [337, 141, 520, 203],
            uid: 4964,
            sr: cp.fd,
            ip: 'dr/CaptivateItem65.png',
            dn: 'CaptivateItem65',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Now click the Search icon to select a company code. ',
            traccstr: '',
            ti: -1,
            vbwr: [337, 141, 520, 203],
            vb: [337, 141, 520, 203]
        },
        CaptivateItem62: {
            type: 22,
            from: 1631,
            to: 1699,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem62c',
            immo: false,
            apsn: 'Slide4919',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem62c: {
            b: [232, 244, 384, 306],
            uid: 4955,
            sr: cp.fd,
            ip: 'dr/CaptivateItem62.png',
            dn: 'CaptivateItem62',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [232, 244, 384, 306],
            vb: [232, 244, 384, 306]
        },
        CaptivateItem63: {
            type: 23,
            from: 1631,
            to: 1699,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem63c',
            immo: false,
            apsn: 'Slide4919',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem63c: {
            b: [217, 217, 376, 299],
            uid: 4959,
            sr: cp.fd,
            ip: 'dr/CaptivateItem63.png',
            dn: 'CaptivateItem63',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [217, 217, 376, 299],
            vb: [217, 217, 376, 299]
        },
        Slide4919: {
            lb: '',
            id: 4919,
            from: 1631,
            to: 1756,
            mmot: false,
            mdi: 'Slide4919c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem60',
                t: 14
            }, {
                n: 'CaptivateItem61',
                t: 13,
                d: {
                    hc: 'CaptivateItem63',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem65',
                t: 19
            }, {
                n: 'CaptivateItem62',
                t: 22
            }, {
                n: 'CaptivateItem63',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem61ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide4919c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2262.png',
            dn: 'Slide4919',
            visible: '1'
        },
        StAd12: {
            from: 1790,
            to: 1883,
            src: 'ar/2862.mp3',
            du: 3135
        },
        CaptivateItem67: {
            type: 19,
            from: 1757,
            to: 1884,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem67c',
            immo: false,
            apsn: 'Slide4968',
            trin: 0,
            trout: 0
        },
        CaptivateItem67c: {
            b: [415, 45, 733, 122],
            uid: 4989,
            sr: cp.fd,
            ip: 'dr/CaptivateItem67.png',
            dn: 'CaptivateItem67',
            visible: 1,
            JSONEffectData: false,
            accstr: 'SAP displays a list of all available company codes.   Now scroll down. ',
            traccstr: '',
            ti: -1,
            vbwr: [415, 45, 733, 122],
            vb: [415, 45, 733, 122]
        },
        CaptivateItem68: {
            type: 14,
            from: 1757,
            to: 1884,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem68c',
            immo: false,
            apsn: 'Slide4968',
            trin: 15,
            trout: 0
        },
        CaptivateItem68c: {
            b: [679, 186, 704, 434],
            uid: 4993,
            sr: cp.fd,
            dn: 'CaptivateItem68',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [678, 185, 705, 435],
            vb: [678, 185, 705, 435]
        },
        CaptivateItem69: {
            type: 13,
            from: 1757,
            to: 1884,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem69c',
            immo: false,
            apsn: 'Slide4968',
            JSONTT_4: [],
            cpa: false,
            oca: 'cpCmndResume = 1;',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem70',
            ofct: 1,
            dep: ['CaptivateItem71'],
            pa: 1882,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem69ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem69c: {
            b: [682, 186, 702, 436],
            uid: 4997,
            sr: cp.fd,
            dn: 'CaptivateItem69',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [682, 186, 702, 436],
            vb: [682, 186, 702, 436]
        },
        CaptivateItem69ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem70: {
            type: 22,
            from: 1757,
            to: 1846,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem70c',
            immo: false,
            apsn: 'Slide4968',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem70c: {
            b: [516, 186, 668, 248],
            uid: 5009,
            sr: cp.fd,
            ip: 'dr/CaptivateItem70.png',
            dn: 'CaptivateItem70',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [516, 186, 668, 248],
            vb: [516, 186, 668, 248]
        },
        CaptivateItem71: {
            type: 23,
            from: 1757,
            to: 1846,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem71c',
            immo: false,
            apsn: 'Slide4968',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem71c: {
            b: [531, 155, 688, 234],
            uid: 5013,
            sr: cp.fd,
            ip: 'dr/CaptivateItem71.png',
            dn: 'CaptivateItem71',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [531, 155, 688, 234],
            vb: [531, 155, 688, 234]
        },
        Slide4968: {
            lb: '',
            id: 4968,
            from: 1757,
            to: 1884,
            mmot: false,
            mdi: 'Slide4968c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem67',
                t: 19
            }, {
                n: 'CaptivateItem68',
                t: 14
            }, {
                n: 'CaptivateItem69',
                t: 13,
                d: {
                    hc: 'CaptivateItem71',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem70',
                t: 22
            }, {
                n: 'CaptivateItem71',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem69ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide4968c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2266.png',
            dn: 'Slide4968',
            visible: '1'
        },
        StAd13: {
            from: 1915,
            to: 1974,
            src: 'ar/2865.mp3',
            du: 2012
        },
        CaptivateItem72: {
            type: 14,
            from: 1885,
            to: 1986,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem72c',
            immo: false,
            apsn: 'Slide5017',
            trin: 15,
            trout: 0
        },
        CaptivateItem72c: {
            b: [136, 143, 265, 165],
            uid: 5037,
            sr: cp.fd,
            dn: 'CaptivateItem72',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [135, 142, 266, 166],
            vb: [135, 142, 266, 166]
        },
        CaptivateItem73: {
            type: 13,
            from: 1885,
            to: 1986,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem73c',
            immo: false,
            apsn: 'Slide5017',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem74',
            ofct: 1,
            dep: ['CaptivateItem75'],
            pa: 1985,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem73ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem73c: {
            b: [137, 144, 263, 164],
            uid: 5041,
            sr: cp.fd,
            dn: 'CaptivateItem73',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [137, 144, 263, 164],
            vb: [137, 144, 263, 164]
        },
        CaptivateItem73ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem77: {
            type: 19,
            from: 1885,
            to: 1986,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem77c',
            immo: false,
            apsn: 'Slide5017',
            trin: 0,
            trout: 0
        },
        CaptivateItem77c: {
            b: [480, 45, 669, 107],
            uid: 5062,
            sr: cp.fd,
            ip: 'dr/CaptivateItem77.png',
            dn: 'CaptivateItem77',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Select company code 3000. ',
            traccstr: '',
            ti: -1,
            vbwr: [480, 45, 669, 107],
            vb: [480, 45, 669, 107]
        },
        CaptivateItem74: {
            type: 22,
            from: 1885,
            to: 1953,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem74c',
            immo: false,
            apsn: 'Slide5017',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem74c: {
            b: [179, 201, 331, 263],
            uid: 5053,
            sr: cp.fd,
            ip: 'dr/CaptivateItem74.png',
            dn: 'CaptivateItem74',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [179, 201, 331, 263],
            vb: [179, 201, 331, 263]
        },
        CaptivateItem75: {
            type: 23,
            from: 1885,
            to: 1953,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem75c',
            immo: false,
            apsn: 'Slide5017',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem75c: {
            b: [164, 162, 323, 244],
            uid: 5057,
            sr: cp.fd,
            ip: 'dr/CaptivateItem75.png',
            dn: 'CaptivateItem75',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [164, 162, 323, 244],
            vb: [164, 162, 323, 244]
        },
        Slide5017: {
            lb: '',
            id: 5017,
            from: 1885,
            to: 1986,
            mmot: false,
            mdi: 'Slide5017c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem72',
                t: 14
            }, {
                n: 'CaptivateItem73',
                t: 13,
                d: {
                    hc: 'CaptivateItem75',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem77',
                t: 19
            }, {
                n: 'CaptivateItem74',
                t: 22
            }, {
                n: 'CaptivateItem75',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem73ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide5017c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2270.png',
            dn: 'Slide5017',
            visible: '1'
        },
        sf_2278: {
            from: 2071,
            to: 2076,
            mdi: 'sf_2278c'
        },
        sf_2278c: {
            id: 'sf_2278c',
            b: [0, 0, 790, 19],
            l: 0,
            t: 142,
            dn: 'sf_2278',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        sf_2281: {
            from: 2071,
            to: 2076,
            mdi: 'sf_2281c'
        },
        sf_2281c: {
            id: 'sf_2281c',
            b: [0, 19, 790, 22],
            l: 0,
            t: 97,
            dn: 'sf_2281',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        StAd14: {
            from: 2017,
            to: 2068,
            src: 'ar/2868.mp3',
            du: 1751
        },
        CaptivateItem78: {
            type: 14,
            from: 1987,
            to: 2076,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem78c',
            immo: false,
            apsn: 'Slide5066',
            trin: 15,
            trout: 0
        },
        CaptivateItem78c: {
            b: [134, 94, 160, 118],
            uid: 5092,
            sr: cp.fd,
            dn: 'CaptivateItem78',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [133, 93, 161, 119],
            vb: [133, 93, 161, 119]
        },
        CaptivateItem79: {
            type: 13,
            from: 1987,
            to: 2076,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem79c',
            immo: false,
            apsn: 'Slide5066',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem80',
            ofct: 1,
            dep: ['CaptivateItem81'],
            pa: 2075,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem79ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem79c: {
            b: [135, 96, 161, 118],
            uid: 5096,
            sr: cp.fd,
            dn: 'CaptivateItem79',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [135, 96, 161, 118],
            vb: [135, 96, 161, 118]
        },
        CaptivateItem79ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem83: {
            type: 19,
            from: 1987,
            to: 2076,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem83c',
            immo: false,
            apsn: 'Slide5066',
            trin: 0,
            trout: 0
        },
        CaptivateItem83c: {
            b: [465, 49, 654, 111],
            uid: 5117,
            sr: cp.fd,
            ip: 'dr/CaptivateItem83.png',
            dn: 'CaptivateItem83',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Now click the Continue icon. ',
            traccstr: '',
            ti: -1,
            vbwr: [465, 49, 654, 111],
            vb: [465, 49, 654, 111]
        },
        CaptivateItem80: {
            type: 22,
            from: 1987,
            to: 2076,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem80c',
            immo: false,
            apsn: 'Slide5066',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem80c: {
            b: [153, 151, 305, 213],
            uid: 5108,
            sr: cp.fd,
            ip: 'dr/CaptivateItem80.png',
            dn: 'CaptivateItem80',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [153, 151, 305, 213],
            vb: [153, 151, 305, 213]
        },
        CaptivateItem81: {
            type: 23,
            from: 1987,
            to: 2076,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem81c',
            immo: false,
            apsn: 'Slide5066',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem81c: {
            b: [146, 118, 305, 200],
            uid: 5112,
            sr: cp.fd,
            ip: 'dr/CaptivateItem81.png',
            dn: 'CaptivateItem81',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [146, 118, 305, 200],
            vb: [146, 118, 305, 200]
        },
        Slide5066: {
            lb: '',
            id: 5066,
            from: 1987,
            to: 2076,
            mmot: false,
            mdi: 'Slide5066c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'sf_2278',
                t: 64
            }, {
                n: 'sf_2281',
                t: 64
            }, {
                n: 'CaptivateItem78',
                t: 14
            }, {
                n: 'CaptivateItem79',
                t: 13,
                d: {
                    hc: 'CaptivateItem81',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem83',
                t: 19
            }, {
                n: 'CaptivateItem80',
                t: 22
            }, {
                n: 'CaptivateItem81',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem79ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide5066c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2274.png',
            dn: 'Slide5066',
            visible: '1'
        },
        Image_24: {
            type: 15,
            from: 2077,
            to: 2400,
            rp: 0,
            rpa: 0,
            mdi: 'Image_24c',
            immo: false,
            apsn: 'Slide5121',
            trin: 0,
            trout: 0
        },
        Image_24c: {
            b: [558, 223, 785, 522],
            uid: 12979,
            sr: cp.fd,
            ip: 'dr/12977_227_299.png',
            dn: 'Image_24',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Image ',
            traccstr: '',
            ti: -1,
            vbwr: [558, 223, 785, 522],
            vb: [558, 223, 785, 522]
        },
        Video_Object_2: {
            type: 98,
            from: 2092,
            to: 2400,
            rp: 0,
            rpa: 0,
            mdi: 'Video_Object_2c',
            immo: false,
            apsn: 'Slide5121',
            psv: 2398,
            trin: 0,
            trout: 0
        },
        Video_Object_2c: {
            b: [409, 221, 941, 521],
            uid: 13206,
            dn: 'Video_Object_2',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Video ',
            traccstr: '',
            ti: -1,
            mp4: 'vr/Vi2.mp4',
            svc: false,
            au: 1,
            ar: 0,
            l: 0,
            vbwr: [409, 221, 942, 522],
            vb: [409, 221, 942, 522]
        },
        CaptivateItem84: {
            type: 14,
            from: 2344,
            to: 2400,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem84c',
            immo: false,
            apsn: 'Slide5121',
            trin: 15,
            trout: 0
        },
        CaptivateItem84c: {
            b: [175, 224, 209, 241],
            uid: 5141,
            sr: cp.fd,
            dn: 'CaptivateItem84',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [174, 223, 210, 242],
            vb: [174, 223, 210, 242]
        },
        Image_25: {
            type: 15,
            from: 2077,
            to: 2400,
            rp: 0,
            rpa: 0,
            mdi: 'Image_25c',
            immo: false,
            apsn: 'Slide5121',
            trin: 0,
            trout: 0
        },
        Image_25c: {
            b: [407, 137, 558, 525],
            uid: 13084,
            sr: cp.fd,
            ip: 'dr/13080_151_388.png',
            dn: 'Image_25',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Image ',
            traccstr: '',
            ti: -1,
            vbwr: [407, 137, 558, 525],
            vb: [407, 137, 558, 525]
        },
        SmartShape_16: {
            type: 612,
            from: 2077,
            to: 2400,
            rp: 0,
            rpa: 0,
            mdi: 'SmartShape_16c',
            immo: false,
            apsn: 'Slide5121',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            trin: 0,
            trout: 0
        },
        SmartShape_16c: {
            b: [358, 111, 638, 239],
            uid: 13008,
            sr: cp.fd,
            ip: 'dr/SmartShape_16.png',
            dn: 'SmartShape_16',
            visible: 0,
            JSONEffectData: false,
            accstr: '“The account group is an important setting for a vendor master record. It determines the number range for the vendor number as well as the data that is relevant for the master record.” ',
            traccstr: '',
            ti: -1,
            sc: '#76cbfe',
            sw: 1,
            ss: 0,
            fa: 100,
            bc: '#ffffff',
            p0: [
                [0],
                [1, 533.25, 236.94],
                [3, 478.02, 243.5, 419.60, 234.09, 385.58, 213.14],
                [3, 339.50, 184.76, 352.47, 144.68, 414.56, 123.6],
                [3, 476.65, 102.54, 564.34, 108.47, 610.42, 136.86],
                [3, 656.5, 165.24, 643.53, 205.32, 581.44, 226.39],
                [2, 595.55, 268.14],
                [2, 533.25, 236.94],
                [4]
            ],
            vbwr: [356, 109, 640, 271],
            vb: [356, 109, 640, 271]
        },
        CaptivateItem85: {
            type: 13,
            from: 2077,
            to: 2400,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem85c',
            immo: false,
            apsn: 'Slide5121',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem86',
            ofct: 1,
            dep: ['CaptivateItem87'],
            pa: 2399,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem85ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem85c: {
            b: [176, 223, 210, 243],
            uid: 5145,
            sr: cp.fd,
            dn: 'CaptivateItem85',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [176, 223, 210, 243],
            vb: [176, 223, 210, 243]
        },
        CaptivateItem85ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        Button_15: {
            type: 177,
            from: 2128,
            to: 2400,
            rp: 0,
            rpa: 0,
            mdi: 'Button_15c',
            immo: false,
            apsn: 'Slide5121',
            JSONTT_4: [],
            cpa: true,
            oca: 'if ((cp.ho(\'showtext\') == cp.ho(\'False\')))\
{\
cp.show("SmartShape_16");\
window.showtext=cp.ho(\'True\');}else{cp.hide("SmartShape_16");\
window.showtext=cp.ho(\'False\');}\
;',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: '',
            ofct: 0,
            pa: 2389,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            amc: true,
            ca: 'Button_15ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            subt: 3,
            itr: false,
            trin: 0,
            trout: 0
        },
        Button_15c: {
            b: [732, 239, 782, 283],
            uid: 13053,
            sr: cp.fd,
            ip: 'dr/13020_52_46.png',
            dn: 'Button_15',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Button ',
            traccstr: '',
            ti: 2500,
            hImg: 'dr/13024_52_46.png',
            pImg: 'dr/13022_52_46.png',
            vbwr: [731, 238, 783, 284],
            vb: [731, 238, 783, 284]
        },
        Button_15ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem89: {
            type: 19,
            from: 2344,
            to: 2400,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem89c',
            immo: false,
            apsn: 'Slide5121',
            trin: 0,
            trout: 0
        },
        CaptivateItem89c: {
            b: [144, 351, 374, 419],
            uid: 5166,
            sr: cp.fd,
            ip: 'dr/CaptivateItem89.png',
            dn: 'CaptivateItem89',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Each vendor master record must be assigned to an account group.  Click in the Account group field. ',
            traccstr: '',
            ti: -1,
            vbwr: [144, 351, 374, 419],
            vb: [144, 351, 374, 419]
        },
        CaptivateItem86: {
            type: 22,
            from: 2077,
            to: 2145,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem86c',
            immo: false,
            apsn: 'Slide5121',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem86c: {
            b: [200, 268, 352, 330],
            uid: 5157,
            sr: cp.fd,
            ip: 'dr/CaptivateItem86.png',
            dn: 'CaptivateItem86',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [200, 268, 352, 330],
            vb: [200, 268, 352, 330]
        },
        CaptivateItem87: {
            type: 23,
            from: 2077,
            to: 2145,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem87c',
            immo: false,
            apsn: 'Slide5121',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem87c: {
            b: [193, 241, 352, 323],
            uid: 5161,
            sr: cp.fd,
            ip: 'dr/CaptivateItem87.png',
            dn: 'CaptivateItem87',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [193, 241, 352, 323],
            vb: [193, 241, 352, 323]
        },
        Slide5121: {
            lb: '',
            id: 5121,
            from: 2077,
            to: 2400,
            mmot: false,
            mdi: 'Slide5121c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'Image_24',
                t: 15
            }, {
                n: 'Video_Object_2',
                t: 98
            }, {
                n: 'CaptivateItem84',
                t: 14
            }, {
                n: 'Image_25',
                t: 15
            }, {
                n: 'SmartShape_16',
                t: 612
            }, {
                n: 'CaptivateItem85',
                t: 13,
                d: {
                    hc: 'CaptivateItem87',
                    cur: 1
                }
            }, {
                n: 'Button_15',
                t: 177
            }, {
                n: 'CaptivateItem89',
                t: 19
            }, {
                n: 'CaptivateItem86',
                t: 22
            }, {
                n: 'CaptivateItem87',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem85ClkAd,Button_15ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide5121c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2284.png',
            dn: 'Slide5121',
            visible: '1'
        },
        StAd15: {
            from: 2431,
            to: 2517,
            src: 'ar/2871.mp3',
            du: 2926
        },
        CaptivateItem90: {
            type: 14,
            from: 2401,
            to: 2523,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem90c',
            immo: false,
            apsn: 'Slide5170',
            trin: 15,
            trout: 0
        },
        CaptivateItem90c: {
            b: [204, 221, 233, 240],
            uid: 5190,
            sr: cp.fd,
            dn: 'CaptivateItem90',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [203, 220, 234, 241],
            vb: [203, 220, 234, 241]
        },
        CaptivateItem91: {
            type: 13,
            from: 2401,
            to: 2523,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem91c',
            immo: false,
            apsn: 'Slide5170',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem92',
            ofct: 1,
            dep: ['CaptivateItem93'],
            pa: 2522,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem91ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem91c: {
            b: [205, 222, 233, 240],
            uid: 5194,
            sr: cp.fd,
            dn: 'CaptivateItem91',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [205, 222, 233, 240],
            vb: [205, 222, 233, 240]
        },
        CaptivateItem91ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem95: {
            type: 19,
            from: 2401,
            to: 2523,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem95c',
            immo: false,
            apsn: 'Slide5170',
            trin: 0,
            trout: 0
        },
        CaptivateItem95c: {
            b: [312, 155, 492, 217],
            uid: 5215,
            sr: cp.fd,
            ip: 'dr/CaptivateItem95.png',
            dn: 'CaptivateItem95',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Now click the Search icon to select an account group. ',
            traccstr: '',
            ti: -1,
            vbwr: [312, 155, 492, 217],
            vb: [312, 155, 492, 217]
        },
        CaptivateItem92: {
            type: 22,
            from: 2401,
            to: 2469,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem92c',
            immo: false,
            apsn: 'Slide5170',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem92c: {
            b: [233, 260, 385, 322],
            uid: 5206,
            sr: cp.fd,
            ip: 'dr/CaptivateItem92.png',
            dn: 'CaptivateItem92',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [233, 260, 385, 322],
            vb: [233, 260, 385, 322]
        },
        CaptivateItem93: {
            type: 23,
            from: 2401,
            to: 2469,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem93c',
            immo: false,
            apsn: 'Slide5170',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem93c: {
            b: [220, 240, 379, 322],
            uid: 5210,
            sr: cp.fd,
            ip: 'dr/CaptivateItem93.png',
            dn: 'CaptivateItem93',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [220, 240, 379, 322],
            vb: [220, 240, 379, 322]
        },
        Slide5170: {
            lb: '',
            id: 5170,
            from: 2401,
            to: 2523,
            mmot: false,
            mdi: 'Slide5170c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem90',
                t: 14
            }, {
                n: 'CaptivateItem91',
                t: 13,
                d: {
                    hc: 'CaptivateItem93',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem95',
                t: 19
            }, {
                n: 'CaptivateItem92',
                t: 22
            }, {
                n: 'CaptivateItem93',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem91ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide5170c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2288.png',
            dn: 'Slide5170',
            visible: '1'
        },
        StAd16: {
            from: 2554,
            to: 2809,
            src: 'ar/2874.mp3',
            du: 8542
        },
        CaptivateItem97: {
            type: 19,
            from: 2524,
            to: 2811,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem97c',
            immo: false,
            apsn: 'Slide5219',
            trin: 0,
            trout: 0
        },
        CaptivateItem97c: {
            b: [372, 17, 729, 103],
            uid: 5241,
            sr: cp.fd,
            ip: 'dr/CaptivateItem97.png',
            dn: 'CaptivateItem97',
            visible: 1,
            JSONEffectData: false,
            accstr: 'The system displays a list of all available account groups. These groups include settings for regular vendors, one-time vendors, international vendors, etc.    Now scroll down. ',
            traccstr: '',
            ti: -1,
            vbwr: [372, 17, 729, 103],
            vb: [372, 17, 729, 103]
        },
        CaptivateItem98: {
            type: 13,
            from: 2524,
            to: 2811,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem98c',
            immo: false,
            apsn: 'Slide5219',
            JSONTT_4: [],
            cpa: false,
            oca: 'cpCmndResume = 1;',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem100',
            ofct: 1,
            dep: ['CaptivateItem101'],
            pa: 2810,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem98ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem98c: {
            b: [591, 225, 607, 403],
            uid: 5245,
            sr: cp.fd,
            dn: 'CaptivateItem98',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [591, 225, 607, 403],
            vb: [591, 225, 607, 403]
        },
        CaptivateItem98ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem99: {
            type: 14,
            from: 2524,
            to: 2811,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem99c',
            immo: false,
            apsn: 'Slide5219',
            trin: 15,
            trout: 0
        },
        CaptivateItem99c: {
            b: [587, 225, 607, 405],
            uid: 5257,
            sr: cp.fd,
            dn: 'CaptivateItem99',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [586, 224, 608, 406],
            vb: [586, 224, 608, 406]
        },
        CaptivateItem100: {
            type: 22,
            from: 2524,
            to: 2613,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem100c',
            immo: false,
            apsn: 'Slide5219',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem100c: {
            b: [619, 297, 771, 359],
            uid: 5261,
            sr: cp.fd,
            ip: 'dr/CaptivateItem100.png',
            dn: 'CaptivateItem100',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [619, 297, 771, 359],
            vb: [619, 297, 771, 359]
        },
        CaptivateItem101: {
            type: 23,
            from: 2524,
            to: 2613,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem101c',
            immo: false,
            apsn: 'Slide5219',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem101c: {
            b: [437, 225, 591, 304],
            uid: 5265,
            sr: cp.fd,
            ip: 'dr/CaptivateItem101.png',
            dn: 'CaptivateItem101',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [437, 225, 591, 304],
            vb: [437, 225, 591, 304]
        },
        Slide5219: {
            lb: '',
            id: 5219,
            from: 2524,
            to: 2811,
            mmot: false,
            mdi: 'Slide5219c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem97',
                t: 19
            }, {
                n: 'CaptivateItem98',
                t: 13,
                d: {
                    hc: 'CaptivateItem101',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem99',
                t: 14
            }, {
                n: 'CaptivateItem100',
                t: 22
            }, {
                n: 'CaptivateItem101',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem98ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide5219c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2292.png',
            dn: 'Slide5219',
            visible: '1'
        },
        StAd17: {
            from: 2845,
            to: 2963,
            src: 'ar/2877.mp3',
            du: 3996
        },
        CaptivateItem102: {
            type: 14,
            from: 2812,
            to: 2985,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem102c',
            immo: false,
            apsn: 'Slide5269',
            trin: 15,
            trout: 0
        },
        CaptivateItem102c: {
            b: [145, 167, 186, 187],
            uid: 5289,
            sr: cp.fd,
            dn: 'CaptivateItem102',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [144, 166, 187, 188],
            vb: [144, 166, 187, 188]
        },
        CaptivateItem103: {
            type: 13,
            from: 2812,
            to: 2985,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem103c',
            immo: false,
            apsn: 'Slide5269',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem104',
            ofct: 1,
            dep: ['CaptivateItem105'],
            pa: 2984,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem103ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem103c: {
            b: [147, 167, 187, 187],
            uid: 5293,
            sr: cp.fd,
            dn: 'CaptivateItem103',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [147, 167, 187, 187],
            vb: [147, 167, 187, 187]
        },
        CaptivateItem103ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem107: {
            type: 19,
            from: 2812,
            to: 2985,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem107c',
            immo: false,
            apsn: 'Slide5269',
            trin: 0,
            trout: 0
        },
        CaptivateItem107c: {
            b: [446, 135, 652, 198],
            uid: 5314,
            sr: cp.fd,
            ip: 'dr/CaptivateItem107.png',
            dn: 'CaptivateItem107',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Select LIEF as your account group to create a regular vendor. ',
            traccstr: '',
            ti: -1,
            vbwr: [446, 135, 652, 198],
            vb: [446, 135, 652, 198]
        },
        CaptivateItem104: {
            type: 22,
            from: 2812,
            to: 2880,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem104c',
            immo: false,
            apsn: 'Slide5269',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem104c: {
            b: [178, 215, 330, 277],
            uid: 5305,
            sr: cp.fd,
            ip: 'dr/CaptivateItem104.png',
            dn: 'CaptivateItem104',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [178, 215, 330, 277],
            vb: [178, 215, 330, 277]
        },
        CaptivateItem105: {
            type: 23,
            from: 2812,
            to: 2880,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem105c',
            immo: false,
            apsn: 'Slide5269',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem105c: {
            b: [171, 184, 330, 266],
            uid: 5309,
            sr: cp.fd,
            ip: 'dr/CaptivateItem105.png',
            dn: 'CaptivateItem105',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [171, 184, 330, 266],
            vb: [171, 184, 330, 266]
        },
        Slide5269: {
            lb: '',
            id: 5269,
            from: 2812,
            to: 2985,
            mmot: false,
            mdi: 'Slide5269c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem102',
                t: 14
            }, {
                n: 'CaptivateItem103',
                t: 13,
                d: {
                    hc: 'CaptivateItem105',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem107',
                t: 19
            }, {
                n: 'CaptivateItem104',
                t: 22
            }, {
                n: 'CaptivateItem105',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem103ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide5269c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2296.png',
            dn: 'Slide5269',
            visible: '1'
        },
        sf_2304: {
            from: 3073,
            to: 3078,
            mdi: 'sf_2304c'
        },
        sf_2304c: {
            id: 'sf_2304c',
            b: [0, 41, 790, 22],
            l: 0,
            t: 122,
            dn: 'sf_2304',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        StAd18: {
            from: 3016,
            to: 3068,
            src: 'ar/2880.mp3',
            du: 1776
        },
        CaptivateItem108: {
            type: 14,
            from: 2986,
            to: 3078,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem108c',
            immo: false,
            apsn: 'Slide5318',
            trin: 15,
            trout: 0
        },
        CaptivateItem108c: {
            b: [146, 121, 174, 145],
            uid: 5342,
            sr: cp.fd,
            dn: 'CaptivateItem108',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [145, 120, 175, 146],
            vb: [145, 120, 175, 146]
        },
        CaptivateItem109: {
            type: 13,
            from: 2986,
            to: 3078,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem109c',
            immo: false,
            apsn: 'Slide5318',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem110',
            ofct: 1,
            dep: ['CaptivateItem111'],
            pa: 3077,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem109ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem109c: {
            b: [146, 121, 174, 145],
            uid: 5346,
            sr: cp.fd,
            dn: 'CaptivateItem109',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [146, 121, 174, 145],
            vb: [146, 121, 174, 145]
        },
        CaptivateItem109ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem113: {
            type: 19,
            from: 2986,
            to: 3078,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem113c',
            immo: false,
            apsn: 'Slide5318',
            trin: 0,
            trout: 0
        },
        CaptivateItem113c: {
            b: [415, 75, 628, 137],
            uid: 5367,
            sr: cp.fd,
            ip: 'dr/CaptivateItem113.png',
            dn: 'CaptivateItem113',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Now click the Continue icon. ',
            traccstr: '',
            ti: -1,
            vbwr: [415, 75, 628, 137],
            vb: [415, 75, 628, 137]
        },
        CaptivateItem110: {
            type: 22,
            from: 2986,
            to: 3075,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem110c',
            immo: false,
            apsn: 'Slide5318',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem110c: {
            b: [174, 175, 326, 237],
            uid: 5358,
            sr: cp.fd,
            ip: 'dr/CaptivateItem110.png',
            dn: 'CaptivateItem110',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [174, 175, 326, 237],
            vb: [174, 175, 326, 237]
        },
        CaptivateItem111: {
            type: 23,
            from: 2986,
            to: 3075,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem111c',
            immo: false,
            apsn: 'Slide5318',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem111c: {
            b: [158, 137, 317, 219],
            uid: 5362,
            sr: cp.fd,
            ip: 'dr/CaptivateItem111.png',
            dn: 'CaptivateItem111',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [158, 137, 317, 219],
            vb: [158, 137, 317, 219]
        },
        Slide5318: {
            lb: '',
            id: 5318,
            from: 2986,
            to: 3078,
            mmot: false,
            mdi: 'Slide5318c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'sf_2304',
                t: 64
            }, {
                n: 'CaptivateItem108',
                t: 14
            }, {
                n: 'CaptivateItem109',
                t: 13,
                d: {
                    hc: 'CaptivateItem111',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem113',
                t: 19
            }, {
                n: 'CaptivateItem110',
                t: 22
            }, {
                n: 'CaptivateItem111',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem109ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide5318c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2300.png',
            dn: 'Slide5318',
            visible: '1'
        },
        StAd19: {
            from: 3109,
            to: 3276,
            src: 'ar/2883.mp3',
            du: 5617
        },
        CaptivateItem114: {
            type: 14,
            from: 3079,
            to: 3276,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem114c',
            immo: false,
            apsn: 'Slide5371',
            trin: 15,
            trout: 0
        },
        CaptivateItem114c: {
            b: [7, 35, 37, 64],
            uid: 5391,
            sr: cp.fd,
            dn: 'CaptivateItem114',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [6, 34, 38, 65],
            vb: [6, 34, 38, 65]
        },
        CaptivateItem115: {
            type: 13,
            from: 3079,
            to: 3276,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem115c',
            immo: false,
            apsn: 'Slide5371',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem116',
            ofct: 1,
            dep: ['CaptivateItem117'],
            pa: 3275,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem115ClkAd',
            kh: cp.cbKH,
            sc: {
                k: 13,
                s: 0,
                c: 0,
                a: 0
            },
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem115c: {
            b: [6, 34, 36, 65],
            uid: 5395,
            sr: cp.fd,
            dn: 'CaptivateItem115',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [6, 34, 36, 65],
            vb: [6, 34, 36, 65]
        },
        CaptivateItem115ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem119: {
            type: 19,
            from: 3079,
            to: 3276,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem119c',
            immo: false,
            apsn: 'Slide5371',
            trin: 0,
            trout: 0
        },
        CaptivateItem119c: {
            b: [316, 97, 661, 159],
            uid: 5416,
            sr: cp.fd,
            ip: 'dr/CaptivateItem119.png',
            dn: 'CaptivateItem119',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Press the Enter key on your keyboard or click the Enter button to start the creation of the vendor master record. ',
            traccstr: '',
            ti: -1,
            vbwr: [316, 97, 661, 159],
            vb: [316, 97, 661, 159]
        },
        CaptivateItem116: {
            type: 22,
            from: 3079,
            to: 3147,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem116c',
            immo: false,
            apsn: 'Slide5371',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem116c: {
            b: [28, 105, 180, 167],
            uid: 5407,
            sr: cp.fd,
            ip: 'dr/CaptivateItem116.png',
            dn: 'CaptivateItem116',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [28, 105, 180, 167],
            vb: [28, 105, 180, 167]
        },
        CaptivateItem117: {
            type: 23,
            from: 3079,
            to: 3147,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem117c',
            immo: false,
            apsn: 'Slide5371',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem117c: {
            b: [15, 72, 174, 159],
            uid: 5411,
            sr: cp.fd,
            ip: 'dr/CaptivateItem117.png',
            dn: 'CaptivateItem117',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [15, 72, 174, 159],
            vb: [15, 72, 174, 159]
        },
        Slide5371: {
            lb: '',
            id: 5371,
            from: 3079,
            to: 3278,
            mmot: false,
            mdi: 'Slide5371c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem114',
                t: 14
            }, {
                n: 'CaptivateItem115',
                t: 13,
                d: {
                    hc: 'CaptivateItem117',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem119',
                t: 19
            }, {
                n: 'CaptivateItem116',
                t: 22
            }, {
                n: 'CaptivateItem117',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem115ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide5371c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/11110.png',
            dn: 'Slide5371',
            visible: '1'
        },
        StAd20: {
            from: 3309,
            to: 3384,
            src: 'ar/2886.mp3',
            du: 2560
        },
        CaptivateItem120: {
            type: 14,
            from: 3279,
            to: 3392,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem120c',
            immo: false,
            apsn: 'Slide5420',
            trin: 15,
            trout: 0
        },
        CaptivateItem120c: {
            b: [369, 222, 394, 242],
            uid: 5440,
            sr: cp.fd,
            dn: 'CaptivateItem120',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [368, 221, 395, 243],
            vb: [368, 221, 395, 243]
        },
        CaptivateItem121: {
            type: 13,
            from: 3279,
            to: 3392,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem121c',
            immo: false,
            apsn: 'Slide5420',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem122',
            ofct: 1,
            dep: ['CaptivateItem123'],
            pa: 3391,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem121ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem121c: {
            b: [370, 222, 394, 242],
            uid: 5444,
            sr: cp.fd,
            dn: 'CaptivateItem121',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [370, 222, 394, 242],
            vb: [370, 222, 394, 242]
        },
        CaptivateItem121ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem125: {
            type: 19,
            from: 3279,
            to: 3392,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem125c',
            immo: false,
            apsn: 'Slide5420',
            trin: 0,
            trout: 0
        },
        CaptivateItem125c: {
            b: [323, 92, 600, 155],
            uid: 5465,
            sr: cp.fd,
            ip: 'dr/CaptivateItem125.png',
            dn: 'CaptivateItem125',
            visible: 1,
            JSONEffectData: false,
            accstr: 'First, you need to select a title for the vendor.   Click the drop-down icon for the Title field. ',
            traccstr: '',
            ti: -1,
            vbwr: [323, 92, 600, 155],
            vb: [323, 92, 600, 155]
        },
        CaptivateItem122: {
            type: 22,
            from: 3279,
            to: 3347,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem122c',
            immo: false,
            apsn: 'Slide5420',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem122c: {
            b: [408, 260, 560, 322],
            uid: 5456,
            sr: cp.fd,
            ip: 'dr/CaptivateItem122.png',
            dn: 'CaptivateItem122',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [408, 260, 560, 322],
            vb: [408, 260, 560, 322]
        },
        CaptivateItem123: {
            type: 23,
            from: 3279,
            to: 3347,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem123c',
            immo: false,
            apsn: 'Slide5420',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem123c: {
            b: [381, 242, 540, 324],
            uid: 5460,
            sr: cp.fd,
            ip: 'dr/CaptivateItem123.png',
            dn: 'CaptivateItem123',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [381, 242, 540, 324],
            vb: [381, 242, 540, 324]
        },
        Slide5420: {
            lb: '',
            id: 5420,
            from: 3279,
            to: 3392,
            mmot: false,
            mdi: 'Slide5420c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem120',
                t: 14
            }, {
                n: 'CaptivateItem121',
                t: 13,
                d: {
                    hc: 'CaptivateItem123',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem125',
                t: 19
            }, {
                n: 'CaptivateItem122',
                t: 22
            }, {
                n: 'CaptivateItem123',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem121ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide5420c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2311.png',
            dn: 'Slide5420',
            visible: '1'
        },
        StAd21: {
            from: 3423,
            to: 3515,
            src: 'ar/2889.mp3',
            du: 3109
        },
        CaptivateItem126: {
            type: 14,
            from: 3393,
            to: 3521,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem126c',
            immo: false,
            apsn: 'Slide5469',
            trin: 15,
            trout: 0
        },
        CaptivateItem126c: {
            b: [162, 274, 388, 292],
            uid: 5488,
            sr: cp.fd,
            dn: 'CaptivateItem126',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [161, 273, 389, 293],
            vb: [161, 273, 389, 293]
        },
        CaptivateItem127: {
            type: 13,
            from: 3393,
            to: 3521,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem127c',
            immo: false,
            apsn: 'Slide5469',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem128',
            ofct: 1,
            dep: ['CaptivateItem129'],
            pa: 3520,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem127ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem127c: {
            b: [162, 275, 388, 293],
            uid: 5492,
            sr: cp.fd,
            dn: 'CaptivateItem127',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [162, 275, 388, 293],
            vb: [162, 275, 388, 293]
        },
        CaptivateItem127ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem131: {
            type: 19,
            from: 3393,
            to: 3521,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem131c',
            immo: false,
            apsn: 'Slide5469',
            trin: 0,
            trout: 0
        },
        CaptivateItem131c: {
            b: [361, 150, 561, 212],
            uid: 5513,
            sr: cp.fd,
            ip: 'dr/CaptivateItem131.png',
            dn: 'CaptivateItem131',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Since this will be a male vendor, select the Mr. title. ',
            traccstr: '',
            ti: -1,
            vbwr: [361, 150, 561, 212],
            vb: [361, 150, 561, 212]
        },
        CaptivateItem128: {
            type: 22,
            from: 3393,
            to: 3482,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem128c',
            immo: false,
            apsn: 'Slide5469',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem128c: {
            b: [392, 243, 544, 305],
            uid: 5504,
            sr: cp.fd,
            ip: 'dr/CaptivateItem128.png',
            dn: 'CaptivateItem128',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [392, 243, 544, 305],
            vb: [392, 243, 544, 305]
        },
        CaptivateItem129: {
            type: 23,
            from: 3393,
            to: 3482,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem129c',
            immo: false,
            apsn: 'Slide5469',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem129c: {
            b: [336, 298, 495, 380],
            uid: 5508,
            sr: cp.fd,
            ip: 'dr/CaptivateItem129.png',
            dn: 'CaptivateItem129',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [336, 298, 495, 380],
            vb: [336, 298, 495, 380]
        },
        Slide5469: {
            lb: '',
            id: 5469,
            from: 3393,
            to: 3521,
            mmot: false,
            mdi: 'Slide5469c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem126',
                t: 14
            }, {
                n: 'CaptivateItem127',
                t: 13,
                d: {
                    hc: 'CaptivateItem129',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem131',
                t: 19
            }, {
                n: 'CaptivateItem128',
                t: 22
            }, {
                n: 'CaptivateItem129',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem127ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide5469c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2315.png',
            dn: 'Slide5469',
            visible: '1'
        },
        StAd22: {
            from: 3552,
            to: 3612,
            src: 'ar/2892.mp3',
            du: 2064
        },
        CaptivateItem132: {
            type: 14,
            from: 3522,
            to: 3623,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem132c',
            immo: false,
            apsn: 'Slide5517',
            trin: 15,
            trout: 0
        },
        CaptivateItem132c: {
            b: [162, 244, 447, 264],
            uid: 5537,
            sr: cp.fd,
            dn: 'CaptivateItem132',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [161, 243, 448, 265],
            vb: [161, 243, 448, 265]
        },
        CaptivateItem133: {
            type: 13,
            from: 3522,
            to: 3623,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem133c',
            immo: false,
            apsn: 'Slide5517',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem134',
            ofct: 1,
            dep: ['CaptivateItem135'],
            pa: 3622,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem133ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem133c: {
            b: [160, 244, 448, 264],
            uid: 5541,
            sr: cp.fd,
            dn: 'CaptivateItem133',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [160, 244, 448, 264],
            vb: [160, 244, 448, 264]
        },
        CaptivateItem133ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem137: {
            type: 19,
            from: 3522,
            to: 3623,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem137c',
            immo: false,
            apsn: 'Slide5517',
            trin: 0,
            trout: 0
        },
        CaptivateItem137c: {
            b: [362, 134, 625, 196],
            uid: 5562,
            sr: cp.fd,
            ip: 'dr/CaptivateItem137.png',
            dn: 'CaptivateItem137',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Next, you need to enter the vendor’s name.   Click in the Name field. ',
            traccstr: '',
            ti: -1,
            vbwr: [362, 134, 625, 196],
            vb: [362, 134, 625, 196]
        },
        CaptivateItem134: {
            type: 22,
            from: 3522,
            to: 3590,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem134c',
            immo: false,
            apsn: 'Slide5517',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem134c: {
            b: [457, 228, 609, 290],
            uid: 5553,
            sr: cp.fd,
            ip: 'dr/CaptivateItem134.png',
            dn: 'CaptivateItem134',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [457, 228, 609, 290],
            vb: [457, 228, 609, 290]
        },
        CaptivateItem135: {
            type: 23,
            from: 3522,
            to: 3590,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem135c',
            immo: false,
            apsn: 'Slide5517',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem135c: {
            b: [384, 270, 543, 352],
            uid: 5557,
            sr: cp.fd,
            ip: 'dr/CaptivateItem135.png',
            dn: 'CaptivateItem135',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [384, 270, 543, 352],
            vb: [384, 270, 543, 352]
        },
        Slide5517: {
            lb: '',
            id: 5517,
            from: 3522,
            to: 3623,
            mmot: false,
            mdi: 'Slide5517c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem132',
                t: 14
            }, {
                n: 'CaptivateItem133',
                t: 13,
                d: {
                    hc: 'CaptivateItem135',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem137',
                t: 19
            }, {
                n: 'CaptivateItem134',
                t: 22
            }, {
                n: 'CaptivateItem135',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem133ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide5517c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2319.png',
            dn: 'Slide5517',
            visible: '1'
        },
        StAd23: {
            from: 3654,
            to: 3726,
            src: 'ar/2895.mp3',
            du: 2456
        },
        CaptivateItem138: {
            type: 24,
            from: 3624,
            to: 3728,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem138c',
            immo: false,
            apsn: 'Slide5566',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            JSONTT_2: [],
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem140',
            ofct: 1,
            dep: ['CaptivateItem141'],
            pa: 3711,
            enabled: 1,
            ma: -1,
            pfc: 1,
            kh: cp.tebKH,
            sc: {
                k: 13,
                s: 0,
                c: 0,
                a: 0
            },
            eh: cp.cbKH,
            siq: false,
            sat: true,
            vn: 'TTextEntryItemVar1',
            vuin: 1,
            exp: ['John Smith'],
            val: 0,
            cs: 0,
            id: 'CaptivateItem138',
            as: 0,
            num: 0,
            ucase: 0,
            lcase: 0,
            nc: 0,
            cl: -1,
            trin: 0,
            trout: 0
        },
        CaptivateItem138c: {
            b: [161, 244, 447, 263],
            uid: 5585,
            dn: 'CaptivateItem138',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Text Entry Box  ',
            traccstr: '',
            ti: 2500,
            txt: '',
            rtx: 1,
            ft: 't',
            id: 'CaptivateItem138',
            ss: false,
            fc: '#fff09e',
            fa: 1,
            sb: true,
            font: {
                n: 'Verdana',
                s: 11,
                c: '#000000',
                B: 0,
                i: 0,
                u: 0
            },
            vbwr: [161, 244, 447, 263],
            vb: [161, 244, 447, 263]
        },
        CaptivateItem142: {
            type: 19,
            from: 3624,
            to: 3728,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem142c',
            immo: false,
            apsn: 'Slide5566',
            trin: 0,
            trout: 0
        },
        CaptivateItem142c: {
            b: [354, 133, 578, 195],
            uid: 5614,
            sr: cp.fd,
            ip: 'dr/CaptivateItem142.png',
            dn: 'CaptivateItem142',
            visible: 1,
            JSONEffectData: false,
            accstr: 'In the Name field, type John Smith and then press the Enter key. ',
            traccstr: '',
            ti: -1,
            vbwr: [354, 133, 578, 195],
            vb: [354, 133, 578, 195]
        },
        CaptivateItem140: {
            type: 22,
            from: 3624,
            to: 3692,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem140c',
            immo: false,
            apsn: 'Slide5566',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem140c: {
            b: [452, 201, 604, 263],
            uid: 5606,
            sr: cp.fd,
            ip: 'dr/CaptivateItem140.png',
            dn: 'CaptivateItem140',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [452, 201, 604, 263],
            vb: [452, 201, 604, 263]
        },
        CaptivateItem141: {
            type: 23,
            from: 3624,
            to: 3716,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem141c',
            immo: false,
            apsn: 'Slide5566',
            du: 93,
            trin: 15,
            trout: 15
        },
        CaptivateItem141c: {
            b: [386, 266, 545, 348],
            uid: 5610,
            sr: cp.fd,
            ip: 'dr/CaptivateItem141.png',
            dn: 'CaptivateItem141',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Please type:  John Smith  then press Enter key. ',
            traccstr: '',
            ti: -1,
            vbwr: [386, 266, 545, 348],
            vb: [386, 266, 545, 348]
        },
        Slide5566: {
            lb: '',
            id: 5566,
            from: 3624,
            to: 3728,
            mmot: false,
            mdi: 'Slide5566c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem138',
                t: 24,
                d: {
                    hc: 'CaptivateItem141',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem142',
                t: 19
            }, {
                n: 'CaptivateItem140',
                t: 22
            }, {
                n: 'CaptivateItem141',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide5566c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2323.png',
            dn: 'Slide5566',
            visible: '1'
        },
        StAd24: {
            from: 3759,
            to: 3913,
            src: 'ar/2812.mp3',
            du: 5198
        },
        CaptivateItem143: {
            type: 24,
            from: 3729,
            to: 3914,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem143c',
            immo: false,
            apsn: 'Slide5618',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            JSONTT_2: [],
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem145',
            ofct: 1,
            dep: ['CaptivateItem146'],
            pa: 3903,
            enabled: 1,
            ma: -1,
            pfc: 1,
            kh: cp.tebKH,
            sc: {
                k: 13,
                s: 0,
                c: 0,
                a: 0
            },
            eh: cp.cbKH,
            siq: false,
            sat: true,
            vn: 'TTextEntryItemVar2',
            vuin: 1,
            exp: ['SMITHJ'],
            val: 0,
            cs: 0,
            id: 'CaptivateItem143',
            as: 0,
            num: 0,
            ucase: 0,
            lcase: 0,
            nc: 0,
            cl: -1,
            trin: 0,
            trout: 0
        },
        CaptivateItem143c: {
            b: [162, 328, 307, 347],
            uid: 5637,
            dn: 'CaptivateItem143',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Text Entry Box  ',
            traccstr: '',
            ti: 2500,
            txt: '',
            rtx: 1,
            ft: 't',
            id: 'CaptivateItem143',
            ss: false,
            fc: '#fff09e',
            fa: 1,
            sb: true,
            font: {
                n: 'Verdana',
                s: 11,
                c: '#000000',
                B: 0,
                i: 0,
                u: 0
            },
            vbwr: [162, 328, 307, 347],
            vb: [162, 328, 307, 347]
        },
        CaptivateItem147: {
            type: 19,
            from: 3729,
            to: 3914,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem147c',
            immo: false,
            apsn: 'Slide5618',
            trin: 0,
            trout: 0
        },
        CaptivateItem147c: {
            b: [373, 118, 728, 203],
            uid: 5666,
            sr: cp.fd,
            ip: 'dr/CaptivateItem147.png',
            dn: 'CaptivateItem147',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Now, you need to enter a search term for this vendor. The search term makes searching and finding vendors easy.   Type SMITHJ in the Search term 1/2 field and then press the Enter key. ',
            traccstr: '',
            ti: -1,
            vbwr: [373, 118, 728, 203],
            vb: [373, 118, 728, 203]
        },
        CaptivateItem145: {
            type: 22,
            from: 3729,
            to: 3797,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem145c',
            immo: false,
            apsn: 'Slide5618',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem145c: {
            b: [320, 295, 472, 357],
            uid: 5658,
            sr: cp.fd,
            ip: 'dr/CaptivateItem145.png',
            dn: 'CaptivateItem145',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [320, 295, 472, 357],
            vb: [320, 295, 472, 357]
        },
        CaptivateItem146: {
            type: 23,
            from: 3729,
            to: 3821,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem146c',
            immo: false,
            apsn: 'Slide5618',
            du: 93,
            trin: 15,
            trout: 15
        },
        CaptivateItem146c: {
            b: [272, 349, 431, 431],
            uid: 5662,
            sr: cp.fd,
            ip: 'dr/CaptivateItem146.png',
            dn: 'CaptivateItem146',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Please type:  SMITHJ then press Enter key. ',
            traccstr: '',
            ti: -1,
            vbwr: [272, 349, 431, 431],
            vb: [272, 349, 431, 431]
        },
        Slide5618: {
            lb: '',
            id: 5618,
            from: 3729,
            to: 3915,
            mmot: false,
            mdi: 'Slide5618c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem143',
                t: 24,
                d: {
                    hc: 'CaptivateItem146',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem147',
                t: 19
            }, {
                n: 'CaptivateItem145',
                t: 22
            }, {
                n: 'CaptivateItem146',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide5618c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2327.png',
            dn: 'Slide5618',
            visible: '1'
        },
        StAd25: {
            from: 3943,
            to: 4146,
            src: 'ar/2898.mp3',
            du: 6818
        },
        CaptivateItem148: {
            type: 24,
            from: 3916,
            to: 4146,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem148c',
            immo: false,
            apsn: 'Slide5670',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            JSONTT_2: [],
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem150',
            ofct: 1,
            dep: ['CaptivateItem151'],
            pa: 4135,
            enabled: 1,
            ma: -1,
            pfc: 1,
            kh: cp.tebKH,
            sc: {
                k: 13,
                s: 0,
                c: 0,
                a: 0
            },
            eh: cp.cbKH,
            siq: false,
            sat: true,
            vn: 'TTextEntryItemVar3',
            vuin: 1,
            exp: ['Main street'],
            val: 0,
            cs: 0,
            id: 'CaptivateItem148',
            as: 0,
            num: 0,
            ucase: 0,
            lcase: 0,
            nc: 0,
            cl: -1,
            trin: 0,
            trout: 0
        },
        CaptivateItem148c: {
            b: [162, 391, 390, 409],
            uid: 5690,
            dn: 'CaptivateItem148',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Text Entry Box  ',
            traccstr: '',
            ti: 2500,
            txt: '',
            rtx: 1,
            ft: 't',
            id: 'CaptivateItem148',
            ss: false,
            fc: '#fff09e',
            fa: 1,
            sb: true,
            font: {
                n: 'Verdana',
                s: 11,
                c: '#000000',
                B: 0,
                i: 0,
                u: 0
            },
            vbwr: [162, 391, 390, 409],
            vb: [162, 391, 390, 409]
        },
        CaptivateItem152: {
            type: 19,
            from: 3916,
            to: 4146,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem152c',
            immo: false,
            apsn: 'Slide5670',
            trin: 0,
            trout: 0
        },
        CaptivateItem152c: {
            b: [334, 80, 768, 155],
            uid: 5719,
            sr: cp.fd,
            ip: 'dr/CaptivateItem152.png',
            dn: 'CaptivateItem152',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Notice the error message at the bottom of your screen. SAP is reminding you that you have to fill in the address information for this vendor.   Type Main Street in the Street field and then press the Enter key. ',
            traccstr: '',
            ti: -1,
            vbwr: [334, 80, 768, 155],
            vb: [334, 80, 768, 155]
        },
        CaptivateItem153: {
            type: 14,
            from: 3916,
            to: 4146,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem153c',
            immo: false,
            apsn: 'Slide5670',
            trin: 15,
            trout: 0
        },
        CaptivateItem153c: {
            b: [11, 521, 202, 548],
            uid: 5723,
            sr: cp.fd,
            dn: 'CaptivateItem153',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [10, 520, 203, 549],
            vb: [10, 520, 203, 549]
        },
        CaptivateItem150: {
            type: 22,
            from: 3916,
            to: 3984,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem150c',
            immo: false,
            apsn: 'Slide5670',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem150c: {
            b: [350, 316, 502, 378],
            uid: 5711,
            sr: cp.fd,
            ip: 'dr/CaptivateItem150.png',
            dn: 'CaptivateItem150',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [350, 316, 502, 378],
            vb: [350, 316, 502, 378]
        },
        CaptivateItem151: {
            type: 23,
            from: 3916,
            to: 4016,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem151c',
            immo: false,
            apsn: 'Slide5670',
            du: 101,
            trin: 15,
            trout: 15
        },
        CaptivateItem151c: {
            b: [249, 409, 408, 491],
            uid: 5715,
            sr: cp.fd,
            ip: 'dr/CaptivateItem151.png',
            dn: 'CaptivateItem151',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Please type:  Main Street then press Enter key. ',
            traccstr: '',
            ti: -1,
            vbwr: [249, 409, 408, 491],
            vb: [249, 409, 408, 491]
        },
        Slide5670: {
            lb: '',
            id: 5670,
            from: 3916,
            to: 4148,
            mmot: false,
            mdi: 'Slide5670c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem148',
                t: 24,
                d: {
                    hc: 'CaptivateItem151',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem152',
                t: 19
            }, {
                n: 'CaptivateItem153',
                t: 14
            }, {
                n: 'CaptivateItem150',
                t: 22
            }, {
                n: 'CaptivateItem151',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide5670c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2331.png',
            dn: 'Slide5670',
            visible: '1'
        },
        StAd26: {
            from: 4179,
            to: 4306,
            src: 'ar/2901.mp3',
            du: 4284
        },
        CaptivateItem154: {
            type: 24,
            from: 4149,
            to: 4307,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem154c',
            immo: false,
            apsn: 'Slide5727',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            JSONTT_2: [],
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem156',
            ofct: 1,
            dep: ['CaptivateItem157'],
            pa: 4299,
            enabled: 1,
            ma: -1,
            pfc: 1,
            kh: cp.tebKH,
            sc: {
                k: 13,
                s: 0,
                c: 0,
                a: 0
            },
            eh: cp.cbKH,
            siq: false,
            sat: true,
            vn: 'TTextEntryItemVar4',
            vuin: 1,
            exp: ['100'],
            val: 0,
            cs: 0,
            id: 'CaptivateItem154',
            as: 0,
            num: 0,
            ucase: 0,
            lcase: 0,
            nc: 0,
            cl: -1,
            trin: 0,
            trout: 0
        },
        CaptivateItem154c: {
            b: [393, 391, 448, 409],
            uid: 5747,
            dn: 'CaptivateItem154',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Text Entry Box  ',
            traccstr: '',
            ti: 2500,
            txt: '',
            rtx: 1,
            ft: 't',
            id: 'CaptivateItem154',
            ss: false,
            fc: '#fff09e',
            fa: 1,
            sb: true,
            font: {
                n: 'Verdana',
                s: 11,
                c: '#000000',
                B: 0,
                i: 0,
                u: 0
            },
            vbwr: [393, 391, 448, 409],
            vb: [393, 391, 448, 409]
        },
        CaptivateItem158: {
            type: 19,
            from: 4149,
            to: 4307,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem158c',
            immo: false,
            apsn: 'Slide5727',
            trin: 0,
            trout: 0
        },
        CaptivateItem158c: {
            b: [473, 321, 703, 383],
            uid: 5776,
            sr: cp.fd,
            ip: 'dr/CaptivateItem158.png',
            dn: 'CaptivateItem158',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Now type 100 in the House number field and then press the Enter key. ',
            traccstr: '',
            ti: -1,
            vbwr: [473, 321, 703, 383],
            vb: [473, 321, 703, 383]
        },
        CaptivateItem156: {
            type: 22,
            from: 4149,
            to: 4217,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem156c',
            immo: false,
            apsn: 'Slide5727',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem156c: {
            b: [407, 437, 559, 499],
            uid: 5768,
            sr: cp.fd,
            ip: 'dr/CaptivateItem156.png',
            dn: 'CaptivateItem156',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [407, 437, 559, 499],
            vb: [407, 437, 559, 499]
        },
        CaptivateItem157: {
            type: 23,
            from: 4149,
            to: 4241,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem157c',
            immo: false,
            apsn: 'Slide5727',
            du: 93,
            trin: 15,
            trout: 15
        },
        CaptivateItem157c: {
            b: [418, 409, 577, 491],
            uid: 5772,
            sr: cp.fd,
            ip: 'dr/CaptivateItem157.png',
            dn: 'CaptivateItem157',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Please type:  100  then press Enter key. ',
            traccstr: '',
            ti: -1,
            vbwr: [418, 409, 577, 491],
            vb: [418, 409, 577, 491]
        },
        Slide5727: {
            lb: '',
            id: 5727,
            from: 4149,
            to: 4308,
            mmot: false,
            mdi: 'Slide5727c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem154',
                t: 24,
                d: {
                    hc: 'CaptivateItem157',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem158',
                t: 19
            }, {
                n: 'CaptivateItem156',
                t: 22
            }, {
                n: 'CaptivateItem157',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide5727c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2335.png',
            dn: 'Slide5727',
            visible: '1'
        },
        StAd27: {
            from: 4339,
            to: 4470,
            src: 'ar/2904.mp3',
            du: 4415
        },
        CaptivateItem159: {
            type: 24,
            from: 4309,
            to: 4470,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem159c',
            immo: false,
            apsn: 'Slide5780',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            JSONTT_2: [],
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem161',
            ofct: 1,
            dep: ['CaptivateItem162'],
            pa: 4459,
            enabled: 1,
            ma: -1,
            pfc: 1,
            kh: cp.tebKH,
            sc: {
                k: 13,
                s: 0,
                c: 0,
                a: 0
            },
            eh: cp.cbKH,
            siq: false,
            sat: true,
            vn: 'TTextEntryItemVar5',
            vuin: 1,
            exp: ['77001'],
            val: 0,
            cs: 0,
            id: 'CaptivateItem159',
            as: 0,
            num: 0,
            ucase: 0,
            lcase: 0,
            nc: 0,
            cl: -1,
            trin: 0,
            trout: 0
        },
        CaptivateItem159c: {
            b: [161, 411, 237, 430],
            uid: 5800,
            dn: 'CaptivateItem159',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Text Entry Box  ',
            traccstr: '',
            ti: 2500,
            txt: '',
            rtx: 1,
            ft: 't',
            id: 'CaptivateItem159',
            ss: false,
            fc: '#fff09e',
            fa: 1,
            sb: true,
            font: {
                n: 'Verdana',
                s: 11,
                c: '#000000',
                B: 0,
                i: 0,
                u: 0
            },
            vbwr: [161, 411, 237, 430],
            vb: [161, 411, 237, 430]
        },
        CaptivateItem163: {
            type: 19,
            from: 4309,
            to: 4470,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem163c',
            immo: false,
            apsn: 'Slide5780',
            trin: 0,
            trout: 0
        },
        CaptivateItem163c: {
            b: [348, 314, 576, 376],
            uid: 5829,
            sr: cp.fd,
            ip: 'dr/CaptivateItem163.png',
            dn: 'CaptivateItem163',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Type 77001 in the Postal Code field and then press the Enter key. ',
            traccstr: '',
            ti: -1,
            vbwr: [348, 314, 576, 376],
            vb: [348, 314, 576, 376]
        },
        CaptivateItem161: {
            type: 22,
            from: 4309,
            to: 4377,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem161c',
            immo: false,
            apsn: 'Slide5780',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem161c: {
            b: [243, 435, 395, 497],
            uid: 5821,
            sr: cp.fd,
            ip: 'dr/CaptivateItem161.png',
            dn: 'CaptivateItem161',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [243, 435, 395, 497],
            vb: [243, 435, 395, 497]
        },
        CaptivateItem162: {
            type: 23,
            from: 4309,
            to: 4377,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem162c',
            immo: false,
            apsn: 'Slide5780',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem162c: {
            b: [199, 430, 358, 512],
            uid: 5825,
            sr: cp.fd,
            ip: 'dr/CaptivateItem162.png',
            dn: 'CaptivateItem162',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Please type:  77001  then press Enter key. ',
            traccstr: '',
            ti: -1,
            vbwr: [199, 430, 358, 512],
            vb: [199, 430, 358, 512]
        },
        Slide5780: {
            lb: '',
            id: 5780,
            from: 4309,
            to: 4472,
            mmot: false,
            mdi: 'Slide5780c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem159',
                t: 24,
                d: {
                    hc: 'CaptivateItem162',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem163',
                t: 19
            }, {
                n: 'CaptivateItem161',
                t: 22
            }, {
                n: 'CaptivateItem162',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide5780c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2339.png',
            dn: 'Slide5780',
            visible: '1'
        },
        StAd28: {
            from: 4503,
            to: 4595,
            src: 'ar/2907.mp3',
            du: 3109
        },
        CaptivateItem164: {
            type: 24,
            from: 4473,
            to: 4595,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem164c',
            immo: false,
            apsn: 'Slide5833',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            JSONTT_2: [],
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem166',
            ofct: 1,
            dep: ['CaptivateItem167'],
            pa: 4581,
            enabled: 1,
            ma: -1,
            pfc: 1,
            kh: cp.tebKH,
            sc: {
                k: 13,
                s: 0,
                c: 0,
                a: 0
            },
            eh: cp.cbKH,
            siq: false,
            sat: true,
            vn: 'TTextEntryItemVar6',
            vuin: 1,
            exp: ['Houston'],
            val: 0,
            cs: 0,
            id: 'CaptivateItem164',
            as: 0,
            num: 0,
            ucase: 0,
            lcase: 0,
            nc: 0,
            cl: -1,
            trin: 0,
            trout: 0
        },
        CaptivateItem164c: {
            b: [238, 412, 523, 430],
            uid: 5853,
            dn: 'CaptivateItem164',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Text Entry Box  ',
            traccstr: '',
            ti: 2500,
            txt: '',
            rtx: 1,
            ft: 't',
            id: 'CaptivateItem164',
            ss: false,
            fc: '#fff09e',
            fa: 1,
            sb: true,
            font: {
                n: 'Verdana',
                s: 11,
                c: '#000000',
                B: 0,
                i: 0,
                u: 0
            },
            vbwr: [238, 412, 523, 430],
            vb: [238, 412, 523, 430]
        },
        CaptivateItem168: {
            type: 19,
            from: 4473,
            to: 4595,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem168c',
            immo: false,
            apsn: 'Slide5833',
            trin: 0,
            trout: 0
        },
        CaptivateItem168c: {
            b: [458, 337, 676, 399],
            uid: 5882,
            sr: cp.fd,
            ip: 'dr/CaptivateItem168.png',
            dn: 'CaptivateItem168',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Now type Houston in the City field and then press the Enter key. ',
            traccstr: '',
            ti: -1,
            vbwr: [458, 337, 676, 399],
            vb: [458, 337, 676, 399]
        },
        CaptivateItem166: {
            type: 22,
            from: 4473,
            to: 4541,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem166c',
            immo: false,
            apsn: 'Slide5833',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem166c: {
            b: [481, 440, 633, 502],
            uid: 5874,
            sr: cp.fd,
            ip: 'dr/CaptivateItem166.png',
            dn: 'CaptivateItem166',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [481, 440, 633, 502],
            vb: [481, 440, 633, 502]
        },
        CaptivateItem167: {
            type: 23,
            from: 4473,
            to: 4565,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem167c',
            immo: false,
            apsn: 'Slide5833',
            du: 93,
            trin: 15,
            trout: 15
        },
        CaptivateItem167c: {
            b: [442, 430, 601, 512],
            uid: 5878,
            sr: cp.fd,
            ip: 'dr/CaptivateItem167.png',
            dn: 'CaptivateItem167',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Please type:  Houston then press Enter key. ',
            traccstr: '',
            ti: -1,
            vbwr: [442, 430, 601, 512],
            vb: [442, 430, 601, 512]
        },
        Slide5833: {
            lb: '',
            id: 5833,
            from: 4473,
            to: 4597,
            mmot: false,
            mdi: 'Slide5833c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem164',
                t: 24,
                d: {
                    hc: 'CaptivateItem167',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem168',
                t: 19
            }, {
                n: 'CaptivateItem166',
                t: 22
            }, {
                n: 'CaptivateItem167',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide5833c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2343.png',
            dn: 'Slide5833',
            visible: '1'
        },
        StAd29: {
            from: 4628,
            to: 4707,
            src: 'ar/2910.mp3',
            du: 2690
        },
        CaptivateItem169: {
            type: 14,
            from: 4598,
            to: 4723,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem169c',
            immo: false,
            apsn: 'Slide5886',
            trin: 15,
            trout: 0
        },
        CaptivateItem169c: {
            b: [186, 431, 212, 451],
            uid: 5906,
            sr: cp.fd,
            dn: 'CaptivateItem169',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [185, 430, 213, 452],
            vb: [185, 430, 213, 452]
        },
        CaptivateItem170: {
            type: 13,
            from: 4598,
            to: 4723,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem170c',
            immo: false,
            apsn: 'Slide5886',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem171',
            ofct: 1,
            dep: ['CaptivateItem172'],
            pa: 4722,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem170ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem170c: {
            b: [187, 431, 213, 451],
            uid: 5910,
            sr: cp.fd,
            dn: 'CaptivateItem170',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [187, 431, 213, 451],
            vb: [187, 431, 213, 451]
        },
        CaptivateItem170ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem174: {
            type: 19,
            from: 4598,
            to: 4723,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem174c',
            immo: false,
            apsn: 'Slide5886',
            trin: 0,
            trout: 0
        },
        CaptivateItem174c: {
            b: [462, 344, 646, 406],
            uid: 5931,
            sr: cp.fd,
            ip: 'dr/CaptivateItem174.png',
            dn: 'CaptivateItem174',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click the Search icon to find the correct country. ',
            traccstr: '',
            ti: -1,
            vbwr: [462, 344, 646, 406],
            vb: [462, 344, 646, 406]
        },
        CaptivateItem171: {
            type: 22,
            from: 4598,
            to: 4666,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem171c',
            immo: false,
            apsn: 'Slide5886',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem171c: {
            b: [223, 456, 375, 518],
            uid: 5922,
            sr: cp.fd,
            ip: 'dr/CaptivateItem171.png',
            dn: 'CaptivateItem171',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [223, 456, 375, 518],
            vb: [223, 456, 375, 518]
        },
        CaptivateItem172: {
            type: 23,
            from: 4598,
            to: 4666,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem172c',
            immo: false,
            apsn: 'Slide5886',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem172c: {
            b: [196, 451, 355, 533],
            uid: 5926,
            sr: cp.fd,
            ip: 'dr/CaptivateItem172.png',
            dn: 'CaptivateItem172',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [196, 451, 355, 533],
            vb: [196, 451, 355, 533]
        },
        Slide5886: {
            lb: '',
            id: 5886,
            from: 4598,
            to: 4723,
            mmot: false,
            mdi: 'Slide5886c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem169',
                t: 14
            }, {
                n: 'CaptivateItem170',
                t: 13,
                d: {
                    hc: 'CaptivateItem172',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem174',
                t: 19
            }, {
                n: 'CaptivateItem171',
                t: 22
            }, {
                n: 'CaptivateItem172',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem170ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide5886c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2347.png',
            dn: 'Slide5886',
            visible: '1'
        },
        StAd30: {
            from: 4754,
            to: 4839,
            src: 'ar/2913.mp3',
            du: 2874
        },
        CaptivateItem176: {
            type: 19,
            from: 4724,
            to: 4843,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem176c',
            immo: false,
            apsn: 'Slide5935',
            trin: 0,
            trout: 0
        },
        CaptivateItem176c: {
            b: [455, 105, 726, 167],
            uid: 5956,
            sr: cp.fd,
            ip: 'dr/CaptivateItem176.png',
            dn: 'CaptivateItem176',
            visible: 1,
            JSONEffectData: false,
            accstr: 'SAP displays a list of all available countries.   Scroll down. ',
            traccstr: '',
            ti: -1,
            vbwr: [455, 105, 726, 167],
            vb: [455, 105, 726, 167]
        },
        CaptivateItem177: {
            type: 13,
            from: 4724,
            to: 4843,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem177c',
            immo: false,
            apsn: 'Slide5935',
            JSONTT_4: [],
            cpa: false,
            oca: 'cpCmndResume = 1;',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem178',
            ofct: 1,
            dep: ['CaptivateItem180'],
            pa: 4842,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem177ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem177c: {
            b: [572, 191, 589, 450],
            uid: 5960,
            sr: cp.fd,
            dn: 'CaptivateItem177',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [572, 191, 589, 450],
            vb: [572, 191, 589, 450]
        },
        CaptivateItem177ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem179: {
            type: 14,
            from: 4724,
            to: 4843,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem179c',
            immo: false,
            apsn: 'Slide5935',
            trin: 15,
            trout: 0
        },
        CaptivateItem179c: {
            b: [571, 188, 588, 449],
            uid: 5976,
            sr: cp.fd,
            dn: 'CaptivateItem179',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [570, 187, 589, 450],
            vb: [570, 187, 589, 450]
        },
        CaptivateItem178: {
            type: 22,
            from: 4724,
            to: 4813,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem178c',
            immo: false,
            apsn: 'Slide5935',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem178c: {
            b: [396, 226, 548, 288],
            uid: 5972,
            sr: cp.fd,
            ip: 'dr/CaptivateItem178.png',
            dn: 'CaptivateItem178',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [396, 226, 548, 288],
            vb: [396, 226, 548, 288]
        },
        CaptivateItem180: {
            type: 23,
            from: 4724,
            to: 4813,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem180c',
            immo: false,
            apsn: 'Slide5935',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem180c: {
            b: [417, 205, 572, 284],
            uid: 5980,
            sr: cp.fd,
            ip: 'dr/CaptivateItem180.png',
            dn: 'CaptivateItem180',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [417, 205, 572, 284],
            vb: [417, 205, 572, 284]
        },
        Slide5935: {
            lb: '',
            id: 5935,
            from: 4724,
            to: 4843,
            mmot: false,
            mdi: 'Slide5935c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem176',
                t: 19
            }, {
                n: 'CaptivateItem177',
                t: 13,
                d: {
                    hc: 'CaptivateItem180',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem179',
                t: 14
            }, {
                n: 'CaptivateItem178',
                t: 22
            }, {
                n: 'CaptivateItem180',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem177ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide5935c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2351.png',
            dn: 'Slide5935',
            visible: '1'
        },
        StAd31: {
            from: 4874,
            to: 4939,
            src: 'ar/2916.mp3',
            du: 2221
        },
        CaptivateItem181: {
            type: 14,
            from: 4844,
            to: 4945,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem181c',
            immo: false,
            apsn: 'Slide5984',
            trin: 15,
            trout: 0
        },
        CaptivateItem181c: {
            b: [215, 151, 335, 171],
            uid: 6004,
            sr: cp.fd,
            dn: 'CaptivateItem181',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [214, 150, 336, 172],
            vb: [214, 150, 336, 172]
        },
        CaptivateItem182: {
            type: 13,
            from: 4844,
            to: 4945,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem182c',
            immo: false,
            apsn: 'Slide5984',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem183',
            ofct: 1,
            dep: ['CaptivateItem184'],
            pa: 4944,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem182ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem182c: {
            b: [214, 150, 338, 170],
            uid: 6008,
            sr: cp.fd,
            dn: 'CaptivateItem182',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [214, 150, 338, 170],
            vb: [214, 150, 338, 170]
        },
        CaptivateItem182ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem186: {
            type: 19,
            from: 4844,
            to: 4945,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem186c',
            immo: false,
            apsn: 'Slide5984',
            trin: 0,
            trout: 0
        },
        CaptivateItem186c: {
            b: [380, 115, 551, 177],
            uid: 6029,
            sr: cp.fd,
            ip: 'dr/CaptivateItem186.png',
            dn: 'CaptivateItem186',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Select US - United States. ',
            traccstr: '',
            ti: -1,
            vbwr: [380, 115, 551, 177],
            vb: [380, 115, 551, 177]
        },
        CaptivateItem183: {
            type: 22,
            from: 4844,
            to: 4912,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem183c',
            immo: false,
            apsn: 'Slide5984',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem183c: {
            b: [323, 212, 475, 274],
            uid: 6020,
            sr: cp.fd,
            ip: 'dr/CaptivateItem183.png',
            dn: 'CaptivateItem183',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [323, 212, 475, 274],
            vb: [323, 212, 475, 274]
        },
        CaptivateItem184: {
            type: 23,
            from: 4844,
            to: 4912,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem184c',
            immo: false,
            apsn: 'Slide5984',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem184c: {
            b: [301, 172, 460, 254],
            uid: 6024,
            sr: cp.fd,
            ip: 'dr/CaptivateItem184.png',
            dn: 'CaptivateItem184',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [301, 172, 460, 254],
            vb: [301, 172, 460, 254]
        },
        Slide5984: {
            lb: '',
            id: 5984,
            from: 4844,
            to: 4945,
            mmot: false,
            mdi: 'Slide5984c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem181',
                t: 14
            }, {
                n: 'CaptivateItem182',
                t: 13,
                d: {
                    hc: 'CaptivateItem184',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem186',
                t: 19
            }, {
                n: 'CaptivateItem183',
                t: 22
            }, {
                n: 'CaptivateItem184',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem182ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide5984c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2355.png',
            dn: 'Slide5984',
            visible: '1'
        },
        sf_2363: {
            from: 5030,
            to: 5035,
            mdi: 'sf_2363c'
        },
        sf_2363c: {
            id: 'sf_2363c',
            b: [0, 63, 790, 22],
            l: 0,
            t: 86,
            dn: 'sf_2363',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        StAd32: {
            from: 4976,
            to: 5025,
            src: 'ar/2919.mp3',
            du: 1698
        },
        CaptivateItem187: {
            type: 14,
            from: 4946,
            to: 5035,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem187c',
            immo: false,
            apsn: 'Slide6033',
            trin: 15,
            trout: 0
        },
        CaptivateItem187c: {
            b: [214, 85, 242, 109],
            uid: 6057,
            sr: cp.fd,
            dn: 'CaptivateItem187',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [213, 84, 243, 110],
            vb: [213, 84, 243, 110]
        },
        CaptivateItem188: {
            type: 13,
            from: 4946,
            to: 5035,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem188c',
            immo: false,
            apsn: 'Slide6033',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem189',
            ofct: 1,
            dep: ['CaptivateItem190'],
            pa: 5034,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem188ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem188c: {
            b: [214, 85, 242, 109],
            uid: 6061,
            sr: cp.fd,
            dn: 'CaptivateItem188',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [214, 85, 242, 109],
            vb: [214, 85, 242, 109]
        },
        CaptivateItem188ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem192: {
            type: 19,
            from: 4946,
            to: 5035,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem192c',
            immo: false,
            apsn: 'Slide6033',
            trin: 0,
            trout: 0
        },
        CaptivateItem192c: {
            b: [373, 117, 555, 179],
            uid: 6082,
            sr: cp.fd,
            ip: 'dr/CaptivateItem192.png',
            dn: 'CaptivateItem192',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Now click the Continue icon. ',
            traccstr: '',
            ti: -1,
            vbwr: [373, 117, 555, 179],
            vb: [373, 117, 555, 179]
        },
        CaptivateItem189: {
            type: 22,
            from: 4946,
            to: 5035,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem189c',
            immo: false,
            apsn: 'Slide6033',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem189c: {
            b: [53, 60, 205, 122],
            uid: 6073,
            sr: cp.fd,
            ip: 'dr/CaptivateItem189.png',
            dn: 'CaptivateItem189',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [53, 60, 205, 122],
            vb: [53, 60, 205, 122]
        },
        CaptivateItem190: {
            type: 23,
            from: 4946,
            to: 5035,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem190c',
            immo: false,
            apsn: 'Slide6033',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem190c: {
            b: [77, 109, 229, 188],
            uid: 6077,
            sr: cp.fd,
            ip: 'dr/CaptivateItem190.png',
            dn: 'CaptivateItem190',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [77, 109, 229, 188],
            vb: [77, 109, 229, 188]
        },
        Slide6033: {
            lb: '',
            id: 6033,
            from: 4946,
            to: 5035,
            mmot: false,
            mdi: 'Slide6033c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'sf_2363',
                t: 64
            }, {
                n: 'CaptivateItem187',
                t: 14
            }, {
                n: 'CaptivateItem188',
                t: 13,
                d: {
                    hc: 'CaptivateItem190',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem192',
                t: 19
            }, {
                n: 'CaptivateItem189',
                t: 22
            }, {
                n: 'CaptivateItem190',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem188ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide6033c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2359.png',
            dn: 'Slide6033',
            visible: '1'
        },
        StAd33: {
            from: 5066,
            to: 5142,
            src: 'ar/2922.mp3',
            du: 2586
        },
        CaptivateItem193: {
            type: 14,
            from: 5036,
            to: 5152,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem193c',
            immo: false,
            apsn: 'Slide6086',
            trin: 15,
            trout: 0
        },
        CaptivateItem193c: {
            b: [764, 367, 787, 491],
            uid: 6106,
            sr: cp.fd,
            dn: 'CaptivateItem193',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [763, 366, 788, 492],
            vb: [763, 366, 788, 492]
        },
        CaptivateItem194: {
            type: 13,
            from: 5036,
            to: 5152,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem194c',
            immo: false,
            apsn: 'Slide6086',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem195',
            ofct: 1,
            dep: ['CaptivateItem196'],
            pa: 5151,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem194ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem194c: {
            b: [766, 369, 789, 492],
            uid: 6110,
            sr: cp.fd,
            dn: 'CaptivateItem194',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [766, 369, 789, 492],
            vb: [766, 369, 789, 492]
        },
        CaptivateItem194ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem198: {
            type: 19,
            from: 5036,
            to: 5152,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem198c',
            immo: false,
            apsn: 'Slide6086',
            trin: 0,
            trout: 0
        },
        CaptivateItem198c: {
            b: [548, 223, 735, 293],
            uid: 6131,
            sr: cp.fd,
            ip: 'dr/CaptivateItem198.png',
            dn: 'CaptivateItem198',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Let’s see the remaining fields on this Address screen.  Scroll down. ',
            traccstr: '',
            ti: -1,
            vbwr: [548, 223, 735, 293],
            vb: [548, 223, 735, 293]
        },
        CaptivateItem195: {
            type: 22,
            from: 5036,
            to: 5125,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem195c',
            immo: false,
            apsn: 'Slide6086',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem195c: {
            b: [602, 378, 754, 440],
            uid: 6122,
            sr: cp.fd,
            ip: 'dr/CaptivateItem195.png',
            dn: 'CaptivateItem195',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [602, 378, 754, 440],
            vb: [602, 378, 754, 440]
        },
        CaptivateItem196: {
            type: 23,
            from: 5036,
            to: 5104,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem196c',
            immo: false,
            apsn: 'Slide6086',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem196c: {
            b: [612, 305, 766, 384],
            uid: 6126,
            sr: cp.fd,
            ip: 'dr/CaptivateItem196.png',
            dn: 'CaptivateItem196',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [612, 305, 766, 384],
            vb: [612, 305, 766, 384]
        },
        Slide6086: {
            lb: '',
            id: 6086,
            from: 5036,
            to: 5152,
            mmot: false,
            mdi: 'Slide6086c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem193',
                t: 14
            }, {
                n: 'CaptivateItem194',
                t: 13,
                d: {
                    hc: 'CaptivateItem196',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem198',
                t: 19
            }, {
                n: 'CaptivateItem195',
                t: 22
            }, {
                n: 'CaptivateItem196',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem194ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide6086c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2366.png',
            dn: 'Slide6086',
            visible: '1'
        },
        StAd34: {
            from: 5183,
            to: 5232,
            src: 'ar/2925.mp3',
            du: 1698
        },
        CaptivateItem199: {
            type: 14,
            from: 5153,
            to: 5242,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem199c',
            immo: false,
            apsn: 'Slide6135',
            trin: 15,
            trout: 0
        },
        CaptivateItem199c: {
            b: [159, 399, 309, 423],
            uid: 6155,
            sr: cp.fd,
            dn: 'CaptivateItem199',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [158, 398, 310, 424],
            vb: [158, 398, 310, 424]
        },
        CaptivateItem200: {
            type: 13,
            from: 5153,
            to: 5242,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem200c',
            immo: false,
            apsn: 'Slide6135',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem201',
            ofct: 1,
            dep: ['CaptivateItem202'],
            pa: 5241,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem200ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem200c: {
            b: [159, 401, 310, 421],
            uid: 6159,
            sr: cp.fd,
            dn: 'CaptivateItem200',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [159, 401, 310, 421],
            vb: [159, 401, 310, 421]
        },
        CaptivateItem200ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem204: {
            type: 19,
            from: 5153,
            to: 5242,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem204c',
            immo: false,
            apsn: 'Slide6135',
            trin: 0,
            trout: 0
        },
        CaptivateItem204c: {
            b: [277, 286, 515, 348],
            uid: 6180,
            sr: cp.fd,
            ip: 'dr/CaptivateItem204.png',
            dn: 'CaptivateItem204',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Let’s enter the vendor’s phone number.  Click in the Telephone field. ',
            traccstr: '',
            ti: -1,
            vbwr: [277, 286, 515, 348],
            vb: [277, 286, 515, 348]
        },
        CaptivateItem201: {
            type: 22,
            from: 5153,
            to: 5221,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem201c',
            immo: false,
            apsn: 'Slide6135',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem201c: {
            b: [211, 450, 363, 512],
            uid: 6171,
            sr: cp.fd,
            ip: 'dr/CaptivateItem201.png',
            dn: 'CaptivateItem201',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [211, 450, 363, 512],
            vb: [211, 450, 363, 512]
        },
        CaptivateItem202: {
            type: 23,
            from: 5153,
            to: 5221,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem202c',
            immo: false,
            apsn: 'Slide6135',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem202c: {
            b: [226, 421, 385, 503],
            uid: 6175,
            sr: cp.fd,
            ip: 'dr/CaptivateItem202.png',
            dn: 'CaptivateItem202',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [226, 421, 385, 503],
            vb: [226, 421, 385, 503]
        },
        Slide6135: {
            lb: '',
            id: 6135,
            from: 5153,
            to: 5242,
            mmot: false,
            mdi: 'Slide6135c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem199',
                t: 14
            }, {
                n: 'CaptivateItem200',
                t: 13,
                d: {
                    hc: 'CaptivateItem202',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem204',
                t: 19
            }, {
                n: 'CaptivateItem201',
                t: 22
            }, {
                n: 'CaptivateItem202',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem200ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide6135c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2370.png',
            dn: 'Slide6135',
            visible: '1'
        },
        StAd35: {
            from: 5273,
            to: 5320,
            src: 'ar/2928.mp3',
            du: 1620
        },
        CaptivateItem205: {
            type: 24,
            from: 5243,
            to: 5332,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem205c',
            immo: false,
            apsn: 'Slide6184',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            JSONTT_2: [],
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem207',
            ofct: 1,
            dep: ['CaptivateItem208'],
            pa: 5324,
            enabled: 1,
            ma: -1,
            pfc: 1,
            kh: cp.tebKH,
            sc: {
                k: 13,
                s: 0,
                c: 0,
                a: 0
            },
            eh: cp.cbKH,
            siq: false,
            sat: true,
            vn: 'TTextEntryItemVar7',
            vuin: 1,
            exp: ['7135551212', '713-555-1212'],
            val: 0,
            cs: 0,
            id: 'CaptivateItem205',
            as: 0,
            num: 0,
            ucase: 0,
            lcase: 0,
            nc: 0,
            cl: -1,
            trin: 0,
            trout: 0
        },
        CaptivateItem205c: {
            b: [161, 402, 306, 421],
            uid: 6203,
            dn: 'CaptivateItem205',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Text Entry Box  ',
            traccstr: '',
            ti: 2500,
            txt: '',
            rtx: 1,
            ft: 't',
            id: 'CaptivateItem205',
            ss: false,
            fc: '#fff09e',
            fa: 1,
            sb: true,
            font: {
                n: 'Verdana',
                s: 11,
                c: '#000000',
                B: 0,
                i: 0,
                u: 0
            },
            vbwr: [161, 402, 306, 421],
            vb: [161, 402, 306, 421]
        },
        CaptivateItem209: {
            type: 19,
            from: 5243,
            to: 5332,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem209c',
            immo: false,
            apsn: 'Slide6184',
            trin: 0,
            trout: 0
        },
        CaptivateItem209c: {
            b: [285, 308, 511, 370],
            uid: 6232,
            sr: cp.fd,
            ip: 'dr/CaptivateItem209.png',
            dn: 'CaptivateItem209',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Type 7135551212 in the Telephone field and then press the Enter key. ',
            traccstr: '',
            ti: -1,
            vbwr: [285, 308, 511, 370],
            vb: [285, 308, 511, 370]
        },
        CaptivateItem207: {
            type: 22,
            from: 5243,
            to: 5311,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem207c',
            immo: false,
            apsn: 'Slide6184',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem207c: {
            b: [207, 450, 359, 512],
            uid: 6224,
            sr: cp.fd,
            ip: 'dr/CaptivateItem207.png',
            dn: 'CaptivateItem207',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [207, 450, 359, 512],
            vb: [207, 450, 359, 512]
        },
        CaptivateItem208: {
            type: 23,
            from: 5243,
            to: 5311,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem208c',
            immo: false,
            apsn: 'Slide6184',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem208c: {
            b: [211, 422, 390, 504],
            uid: 6228,
            sr: cp.fd,
            ip: 'dr/CaptivateItem208.png',
            dn: 'CaptivateItem208',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Please type:  7135551212  then press the Enter key. ',
            traccstr: '',
            ti: -1,
            vbwr: [211, 422, 390, 504],
            vb: [211, 422, 390, 504]
        },
        Slide6184: {
            lb: '',
            id: 6184,
            from: 5243,
            to: 5332,
            mmot: false,
            mdi: 'Slide6184c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem205',
                t: 24,
                d: {
                    hc: 'CaptivateItem208',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem209',
                t: 19
            }, {
                n: 'CaptivateItem207',
                t: 22
            }, {
                n: 'CaptivateItem208',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide6184c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2374.png',
            dn: 'Slide6184',
            visible: '1'
        },
        StAd36: {
            from: 5363,
            to: 5490,
            src: 'ar/2815.mp3',
            du: 4284
        },
        CaptivateItem211: {
            type: 14,
            from: 5333,
            to: 5491,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem211c',
            immo: false,
            apsn: 'Slide6236',
            trin: 15,
            trout: 0
        },
        CaptivateItem211c: {
            b: [36, 100, 60, 125],
            uid: 6256,
            sr: cp.fd,
            dn: 'CaptivateItem211',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [35, 99, 61, 126],
            vb: [35, 99, 61, 126]
        },
        CaptivateItem212: {
            type: 13,
            from: 5333,
            to: 5491,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem212c',
            immo: false,
            apsn: 'Slide6236',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem213',
            ofct: 1,
            dep: ['CaptivateItem214'],
            pa: 5490,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem212ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem212c: {
            b: [35, 100, 59, 124],
            uid: 6260,
            sr: cp.fd,
            dn: 'CaptivateItem212',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [35, 100, 59, 124],
            vb: [35, 100, 59, 124]
        },
        CaptivateItem212ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem215: {
            type: 19,
            from: 5333,
            to: 5491,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem215c',
            immo: false,
            apsn: 'Slide6236',
            trin: 0,
            trout: 0
        },
        CaptivateItem215c: {
            b: [352, 74, 649, 136],
            uid: 6280,
            sr: cp.fd,
            ip: 'dr/CaptivateItem215.png',
            dn: 'CaptivateItem215',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Well done!   Now, click the Next icon to go to the next screen. ',
            traccstr: '',
            ti: -1,
            vbwr: [352, 74, 649, 136],
            vb: [352, 74, 649, 136]
        },
        CaptivateItem213: {
            type: 22,
            from: 5333,
            to: 5422,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem213c',
            immo: false,
            apsn: 'Slide6236',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem213c: {
            b: [53, 149, 205, 211],
            uid: 6272,
            sr: cp.fd,
            ip: 'dr/CaptivateItem213.png',
            dn: 'CaptivateItem213',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [53, 149, 205, 211],
            vb: [53, 149, 205, 211]
        },
        CaptivateItem214: {
            type: 23,
            from: 5333,
            to: 5422,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem214c',
            immo: false,
            apsn: 'Slide6236',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem214c: {
            b: [46, 124, 205, 206],
            uid: 6276,
            sr: cp.fd,
            ip: 'dr/CaptivateItem214.png',
            dn: 'CaptivateItem214',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [46, 124, 205, 206],
            vb: [46, 124, 205, 206]
        },
        Slide6236: {
            lb: '',
            id: 6236,
            from: 5333,
            to: 5492,
            mmot: false,
            mdi: 'Slide6236c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem211',
                t: 14
            }, {
                n: 'CaptivateItem212',
                t: 13,
                d: {
                    hc: 'CaptivateItem214',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem215',
                t: 19
            }, {
                n: 'CaptivateItem213',
                t: 22
            }, {
                n: 'CaptivateItem214',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem212ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide6236c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2378.png',
            dn: 'Slide6236',
            visible: '1'
        },
        StAd37: {
            from: 5523,
            to: 5714,
            src: 'ar/2931.mp3',
            du: 6401
        },
        CaptivateItem216: {
            type: 14,
            from: 5493,
            to: 5714,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem216c',
            immo: false,
            apsn: 'Slide6284',
            trin: 15,
            trout: 0
        },
        CaptivateItem216c: {
            b: [125, 285, 245, 305],
            uid: 6304,
            sr: cp.fd,
            dn: 'CaptivateItem216',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [124, 284, 246, 306],
            vb: [124, 284, 246, 306]
        },
        CaptivateItem217: {
            type: 13,
            from: 5493,
            to: 5714,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem217c',
            immo: false,
            apsn: 'Slide6284',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem218',
            ofct: 1,
            dep: ['CaptivateItem219'],
            pa: 5713,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem217ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem217c: {
            b: [124, 285, 245, 306],
            uid: 6308,
            sr: cp.fd,
            dn: 'CaptivateItem217',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [124, 285, 245, 306],
            vb: [124, 285, 245, 306]
        },
        CaptivateItem217ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem221: {
            type: 19,
            from: 5493,
            to: 5714,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem221c',
            immo: false,
            apsn: 'Slide6284',
            trin: 0,
            trout: 0
        },
        CaptivateItem221c: {
            b: [369, 102, 735, 189],
            uid: 6329,
            sr: cp.fd,
            ip: 'dr/CaptivateItem221.png',
            dn: 'CaptivateItem221',
            visible: 1,
            JSONEffectData: false,
            accstr: 'This is the Control screen of the vendor master record. We can specify various control parameters and information here.   Click in the Tax Number 1 field to add the vendor’s tax identification number. ',
            traccstr: '',
            ti: -1,
            vbwr: [369, 102, 735, 189],
            vb: [369, 102, 735, 189]
        },
        CaptivateItem218: {
            type: 22,
            from: 5493,
            to: 5561,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem218c',
            immo: false,
            apsn: 'Slide6284',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem218c: {
            b: [27, 318, 179, 380],
            uid: 6320,
            sr: cp.fd,
            ip: 'dr/CaptivateItem218.png',
            dn: 'CaptivateItem218',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [27, 318, 179, 380],
            vb: [27, 318, 179, 380]
        },
        CaptivateItem219: {
            type: 23,
            from: 5493,
            to: 5561,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem219c',
            immo: false,
            apsn: 'Slide6284',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem219c: {
            b: [195, 306, 354, 388],
            uid: 6324,
            sr: cp.fd,
            ip: 'dr/CaptivateItem219.png',
            dn: 'CaptivateItem219',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [195, 306, 354, 388],
            vb: [195, 306, 354, 388]
        },
        Slide6284: {
            lb: '',
            id: 6284,
            from: 5493,
            to: 5715,
            mmot: false,
            mdi: 'Slide6284c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem216',
                t: 14
            }, {
                n: 'CaptivateItem217',
                t: 13,
                d: {
                    hc: 'CaptivateItem219',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem221',
                t: 19
            }, {
                n: 'CaptivateItem218',
                t: 22
            }, {
                n: 'CaptivateItem219',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem217ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide6284c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2382.png',
            dn: 'Slide6284',
            visible: '1'
        },
        StAd38: {
            from: 5746,
            to: 5922,
            src: 'ar/2934.mp3',
            du: 5904
        },
        CaptivateItem222: {
            type: 24,
            from: 5716,
            to: 5922,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem222c',
            immo: false,
            apsn: 'Slide6333',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            JSONTT_2: [],
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem225',
            ofct: 1,
            dep: ['CaptivateItem226'],
            pa: 5917,
            enabled: 1,
            ma: -1,
            pfc: 1,
            kh: cp.tebKH,
            sc: {
                k: 13,
                s: 0,
                c: 0,
                a: 0
            },
            eh: cp.cbKH,
            siq: false,
            sat: true,
            vn: 'TTextEntryItemVar8',
            vuin: 1,
            exp: ['123-44-5678'],
            val: 0,
            cs: 0,
            id: 'CaptivateItem222',
            as: 0,
            num: 0,
            ucase: 0,
            lcase: 0,
            nc: 0,
            cl: -1,
            trin: 0,
            trout: 0
        },
        CaptivateItem222c: {
            b: [127, 286, 244, 305],
            uid: 6352,
            dn: 'CaptivateItem222',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Text Entry Box  ',
            traccstr: '',
            ti: 2500,
            txt: '',
            rtx: 1,
            ft: 't',
            id: 'CaptivateItem222',
            ss: false,
            fc: '#fff09e',
            fa: 1,
            sb: true,
            font: {
                n: 'Verdana',
                s: 11,
                c: '#000000',
                B: 0,
                i: 0,
                u: 0
            },
            vbwr: [127, 286, 244, 305],
            vb: [127, 286, 244, 305]
        },
        CaptivateItem227: {
            type: 19,
            from: 5716,
            to: 5922,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem227c',
            immo: false,
            apsn: 'Slide6333',
            trin: 0,
            trout: 0
        },
        CaptivateItem227c: {
            b: [463, 213, 656, 275],
            uid: 6400,
            sr: cp.fd,
            ip: 'dr/CaptivateItem227.png',
            dn: 'CaptivateItem227',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Type 123-44-5678 in the field and then press the Enter key. ',
            traccstr: '',
            ti: -1,
            vbwr: [463, 213, 656, 275],
            vb: [463, 213, 656, 275]
        },
        CaptivateItem225: {
            type: 22,
            from: 5716,
            to: 5784,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem225c',
            immo: false,
            apsn: 'Slide6333',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem225c: {
            b: [218, 335, 370, 397],
            uid: 6392,
            sr: cp.fd,
            ip: 'dr/CaptivateItem225.png',
            dn: 'CaptivateItem225',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [218, 335, 370, 397],
            vb: [218, 335, 370, 397]
        },
        CaptivateItem226: {
            type: 23,
            from: 5716,
            to: 5808,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem226c',
            immo: false,
            apsn: 'Slide6333',
            du: 93,
            trin: 15,
            trout: 15
        },
        CaptivateItem226c: {
            b: [201, 306, 360, 388],
            uid: 6396,
            sr: cp.fd,
            ip: 'dr/CaptivateItem226.png',
            dn: 'CaptivateItem226',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Please type:  123-44-5678 then press Enter key. ',
            traccstr: '',
            ti: -1,
            vbwr: [201, 306, 360, 388],
            vb: [201, 306, 360, 388]
        },
        Slide6333: {
            lb: '',
            id: 6333,
            from: 5716,
            to: 5923,
            mmot: false,
            mdi: 'Slide6333c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem222',
                t: 24,
                d: {
                    hc: 'CaptivateItem226',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem227',
                t: 19
            }, {
                n: 'CaptivateItem225',
                t: 22
            }, {
                n: 'CaptivateItem226',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide6333c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2386.png',
            dn: 'Slide6333',
            visible: '1'
        },
        StAd39: {
            from: 5954,
            to: 6040,
            src: 'ar/2937.mp3',
            du: 2900
        },
        CaptivateItem228: {
            type: 14,
            from: 5924,
            to: 6052,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem228c',
            immo: false,
            apsn: 'Slide6404',
            trin: 15,
            trout: 0
        },
        CaptivateItem228c: {
            b: [769, 447, 788, 490],
            uid: 6424,
            sr: cp.fd,
            dn: 'CaptivateItem228',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [768, 446, 789, 491],
            vb: [768, 446, 789, 491]
        },
        CaptivateItem229: {
            type: 13,
            from: 5924,
            to: 6052,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem229c',
            immo: false,
            apsn: 'Slide6404',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem230',
            ofct: 1,
            dep: ['CaptivateItem231'],
            pa: 6051,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem229ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem229c: {
            b: [769, 448, 787, 490],
            uid: 6428,
            sr: cp.fd,
            dn: 'CaptivateItem229',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [769, 448, 787, 490],
            vb: [769, 448, 787, 490]
        },
        CaptivateItem229ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem233: {
            type: 19,
            from: 5924,
            to: 6052,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem233c',
            immo: false,
            apsn: 'Slide6404',
            trin: 0,
            trout: 0
        },
        CaptivateItem233c: {
            b: [562, 218, 758, 280],
            uid: 6449,
            sr: cp.fd,
            ip: 'dr/CaptivateItem233.png',
            dn: 'CaptivateItem233',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Now, scroll down to see the remaining fields on this screen. ',
            traccstr: '',
            ti: -1,
            vbwr: [562, 218, 758, 280],
            vb: [562, 218, 758, 280]
        },
        CaptivateItem230: {
            type: 22,
            from: 5924,
            to: 6013,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem230c',
            immo: false,
            apsn: 'Slide6404',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem230c: {
            b: [601, 408, 753, 470],
            uid: 6440,
            sr: cp.fd,
            ip: 'dr/CaptivateItem230.png',
            dn: 'CaptivateItem230',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [601, 408, 753, 470],
            vb: [601, 408, 753, 470]
        },
        CaptivateItem231: {
            type: 23,
            from: 5924,
            to: 5992,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem231c',
            immo: false,
            apsn: 'Slide6404',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem231c: {
            b: [610, 387, 764, 466],
            uid: 6444,
            sr: cp.fd,
            ip: 'dr/CaptivateItem231.png',
            dn: 'CaptivateItem231',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [610, 387, 764, 466],
            vb: [610, 387, 764, 466]
        },
        Slide6404: {
            lb: '',
            id: 6404,
            from: 5924,
            to: 6052,
            mmot: false,
            mdi: 'Slide6404c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem228',
                t: 14
            }, {
                n: 'CaptivateItem229',
                t: 13,
                d: {
                    hc: 'CaptivateItem231',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem233',
                t: 19
            }, {
                n: 'CaptivateItem230',
                t: 22
            }, {
                n: 'CaptivateItem231',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem229ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide6404c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2390.png',
            dn: 'Slide6404',
            visible: '1'
        },
        StAd40: {
            from: 6083,
            to: 6305,
            src: 'ar/2940.mp3',
            du: 7445
        },
        CaptivateItem234: {
            type: 14,
            from: 6053,
            to: 6307,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem234c',
            immo: false,
            apsn: 'Slide6453',
            trin: 15,
            trout: 0
        },
        CaptivateItem234c: {
            b: [127, 445, 161, 463],
            uid: 6474,
            sr: cp.fd,
            dn: 'CaptivateItem234',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [126, 444, 162, 464],
            vb: [126, 444, 162, 464]
        },
        CaptivateItem235: {
            type: 13,
            from: 6053,
            to: 6307,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem235c',
            immo: false,
            apsn: 'Slide6453',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem236',
            ofct: 1,
            dep: ['CaptivateItem237'],
            pa: 6306,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem235ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem235c: {
            b: [128, 444, 162, 464],
            uid: 6478,
            sr: cp.fd,
            dn: 'CaptivateItem235',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [128, 444, 162, 464],
            vb: [128, 444, 162, 464]
        },
        CaptivateItem235ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem239: {
            type: 19,
            from: 6053,
            to: 6307,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem239c',
            immo: false,
            apsn: 'Slide6453',
            trin: 0,
            trout: 0
        },
        CaptivateItem239c: {
            b: [344, 348, 739, 416],
            uid: 6499,
            sr: cp.fd,
            ip: 'dr/CaptivateItem239.png',
            dn: 'CaptivateItem239',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Let’s specify the vendor’s industry code, too. This information can later be used to report on or classify certain vendors together.    Click in the Industry field. ',
            traccstr: '',
            ti: -1,
            vbwr: [344, 348, 739, 416],
            vb: [344, 348, 739, 416]
        },
        CaptivateItem236: {
            type: 22,
            from: 6053,
            to: 6121,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem236c',
            immo: false,
            apsn: 'Slide6453',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem236c: {
            b: [167, 472, 319, 534],
            uid: 6490,
            sr: cp.fd,
            ip: 'dr/CaptivateItem236.png',
            dn: 'CaptivateItem236',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [167, 472, 319, 534],
            vb: [167, 472, 319, 534]
        },
        CaptivateItem237: {
            type: 23,
            from: 6053,
            to: 6121,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem237c',
            immo: false,
            apsn: 'Slide6453',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem237c: {
            b: [145, 462, 304, 544],
            uid: 6494,
            sr: cp.fd,
            ip: 'dr/CaptivateItem237.png',
            dn: 'CaptivateItem237',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [145, 462, 304, 544],
            vb: [145, 462, 304, 544]
        },
        Slide6453: {
            lb: '',
            id: 6453,
            from: 6053,
            to: 6307,
            mmot: false,
            mdi: 'Slide6453c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem234',
                t: 14
            }, {
                n: 'CaptivateItem235',
                t: 13,
                d: {
                    hc: 'CaptivateItem237',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem239',
                t: 19
            }, {
                n: 'CaptivateItem236',
                t: 22
            }, {
                n: 'CaptivateItem237',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem235ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide6453c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2394.png',
            dn: 'Slide6453',
            visible: '1'
        },
        StAd41: {
            from: 6338,
            to: 6439,
            src: 'ar/2943.mp3',
            du: 3422
        },
        CaptivateItem240: {
            type: 14,
            from: 6308,
            to: 6460,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem240c',
            immo: false,
            apsn: 'Slide6503',
            trin: 15,
            trout: 0
        },
        CaptivateItem240c: {
            b: [156, 442, 184, 462],
            uid: 6522,
            sr: cp.fd,
            dn: 'CaptivateItem240',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [155, 441, 185, 463],
            vb: [155, 441, 185, 463]
        },
        CaptivateItem241: {
            type: 13,
            from: 6308,
            to: 6460,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem241c',
            immo: false,
            apsn: 'Slide6503',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem242',
            ofct: 1,
            dep: ['CaptivateItem243'],
            pa: 6459,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem241ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem241c: {
            b: [157, 442, 184, 462],
            uid: 6526,
            sr: cp.fd,
            dn: 'CaptivateItem241',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [157, 442, 184, 462],
            vb: [157, 442, 184, 462]
        },
        CaptivateItem241ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem245: {
            type: 19,
            from: 6308,
            to: 6460,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem245c',
            immo: false,
            apsn: 'Slide6503',
            trin: 0,
            trout: 0
        },
        CaptivateItem245c: {
            b: [344, 349, 531, 411],
            uid: 6547,
            sr: cp.fd,
            ip: 'dr/CaptivateItem245.png',
            dn: 'CaptivateItem245',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click the Search icon to view the available Industry codes. ',
            traccstr: '',
            ti: -1,
            vbwr: [344, 349, 531, 411],
            vb: [344, 349, 531, 411]
        },
        CaptivateItem242: {
            type: 22,
            from: 6308,
            to: 6376,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem242c',
            immo: false,
            apsn: 'Slide6503',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem242c: {
            b: [196, 462, 348, 524],
            uid: 6538,
            sr: cp.fd,
            ip: 'dr/CaptivateItem242.png',
            dn: 'CaptivateItem242',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [196, 462, 348, 524],
            vb: [196, 462, 348, 524]
        },
        CaptivateItem243: {
            type: 23,
            from: 6308,
            to: 6376,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem243c',
            immo: false,
            apsn: 'Slide6503',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem243c: {
            b: [169, 462, 328, 544],
            uid: 6542,
            sr: cp.fd,
            ip: 'dr/CaptivateItem243.png',
            dn: 'CaptivateItem243',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [169, 462, 328, 544],
            vb: [169, 462, 328, 544]
        },
        Slide6503: {
            lb: '',
            id: 6503,
            from: 6308,
            to: 6460,
            mmot: false,
            mdi: 'Slide6503c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem240',
                t: 14
            }, {
                n: 'CaptivateItem241',
                t: 13,
                d: {
                    hc: 'CaptivateItem243',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem245',
                t: 19
            }, {
                n: 'CaptivateItem242',
                t: 22
            }, {
                n: 'CaptivateItem243',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem241ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide6503c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2398.png',
            dn: 'Slide6503',
            visible: '1'
        },
        StAd42: {
            from: 6491,
            to: 6571,
            src: 'ar/2946.mp3',
            du: 2717
        },
        CaptivateItem247: {
            type: 19,
            from: 6461,
            to: 6580,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem247c',
            immo: false,
            apsn: 'Slide6551',
            trin: 0,
            trout: 0
        },
        CaptivateItem247c: {
            b: [462, 60, 693, 122],
            uid: 6572,
            sr: cp.fd,
            ip: 'dr/CaptivateItem247.png',
            dn: 'CaptivateItem247',
            visible: 1,
            JSONEffectData: false,
            accstr: 'SAP displays a list of industry codes.   Scroll down. ',
            traccstr: '',
            ti: -1,
            vbwr: [462, 60, 693, 122],
            vb: [462, 60, 693, 122]
        },
        CaptivateItem248: {
            type: 13,
            from: 6461,
            to: 6580,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem248c',
            immo: false,
            apsn: 'Slide6551',
            JSONTT_4: [],
            cpa: false,
            oca: 'cpCmndResume = 1;',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem250',
            ofct: 1,
            dep: ['CaptivateItem251'],
            pa: 6579,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem248ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem248c: {
            b: [578, 212, 599, 440],
            uid: 6576,
            sr: cp.fd,
            dn: 'CaptivateItem248',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [578, 212, 599, 440],
            vb: [578, 212, 599, 440]
        },
        CaptivateItem248ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem249: {
            type: 14,
            from: 6461,
            to: 6580,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem249c',
            immo: false,
            apsn: 'Slide6551',
            trin: 15,
            trout: 0
        },
        CaptivateItem249c: {
            b: [578, 211, 599, 444],
            uid: 6588,
            sr: cp.fd,
            dn: 'CaptivateItem249',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [577, 210, 600, 445],
            vb: [577, 210, 600, 445]
        },
        CaptivateItem250: {
            type: 22,
            from: 6461,
            to: 6550,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem250c',
            immo: false,
            apsn: 'Slide6551',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem250c: {
            b: [411, 256, 563, 318],
            uid: 6592,
            sr: cp.fd,
            ip: 'dr/CaptivateItem250.png',
            dn: 'CaptivateItem250',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again.  ',
            traccstr: '',
            ti: -1,
            vbwr: [411, 256, 563, 318],
            vb: [411, 256, 563, 318]
        },
        CaptivateItem251: {
            type: 23,
            from: 6461,
            to: 6550,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem251c',
            immo: false,
            apsn: 'Slide6551',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem251c: {
            b: [424, 234, 578, 313],
            uid: 6596,
            sr: cp.fd,
            ip: 'dr/CaptivateItem251.png',
            dn: 'CaptivateItem251',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [424, 234, 578, 313],
            vb: [424, 234, 578, 313]
        },
        Slide6551: {
            lb: '',
            id: 6551,
            from: 6461,
            to: 6580,
            mmot: false,
            mdi: 'Slide6551c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem247',
                t: 19
            }, {
                n: 'CaptivateItem248',
                t: 13,
                d: {
                    hc: 'CaptivateItem251',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem249',
                t: 14
            }, {
                n: 'CaptivateItem250',
                t: 22
            }, {
                n: 'CaptivateItem251',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem248ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide6551c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2402.png',
            dn: 'Slide6551',
            visible: '1'
        },
        StAd43: {
            from: 6611,
            to: 6797,
            src: 'ar/2949.mp3',
            du: 6243
        },
        CaptivateItem252: {
            type: 14,
            from: 6581,
            to: 6799,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem252c',
            immo: false,
            apsn: 'Slide6600',
            trin: 15,
            trout: 0
        },
        CaptivateItem252c: {
            b: [194, 336, 372, 356],
            uid: 6620,
            sr: cp.fd,
            dn: 'CaptivateItem252',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [193, 335, 373, 357],
            vb: [193, 335, 373, 357]
        },
        CaptivateItem253: {
            type: 13,
            from: 6581,
            to: 6799,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem253c',
            immo: false,
            apsn: 'Slide6600',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem254',
            ofct: 1,
            dep: ['CaptivateItem255'],
            pa: 6798,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem253ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem253c: {
            b: [194, 337, 372, 357],
            uid: 6624,
            sr: cp.fd,
            dn: 'CaptivateItem253',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [194, 337, 372, 357],
            vb: [194, 337, 372, 357]
        },
        CaptivateItem253ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem257: {
            type: 19,
            from: 6581,
            to: 6799,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem257c',
            immo: false,
            apsn: 'Slide6600',
            trin: 0,
            trout: 0
        },
        CaptivateItem257c: {
            b: [384, 147, 742, 209],
            uid: 6645,
            sr: cp.fd,
            ip: 'dr/CaptivateItem257.png',
            dn: 'CaptivateItem257',
            visible: 1,
            JSONEffectData: false,
            accstr: 'The vendor we are creating is a consultant to our company.  Select the CONS - Consulting Services code. ',
            traccstr: '',
            ti: -1,
            vbwr: [384, 147, 742, 209],
            vb: [384, 147, 742, 209]
        },
        CaptivateItem254: {
            type: 22,
            from: 6581,
            to: 6649,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem254c',
            immo: false,
            apsn: 'Slide6600',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem254c: {
            b: [379, 356, 531, 418],
            uid: 6636,
            sr: cp.fd,
            ip: 'dr/CaptivateItem254.png',
            dn: 'CaptivateItem254',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [379, 356, 531, 418],
            vb: [379, 356, 531, 418]
        },
        CaptivateItem255: {
            type: 23,
            from: 6581,
            to: 6649,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem255c',
            immo: false,
            apsn: 'Slide6600',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem255c: {
            b: [358, 357, 517, 439],
            uid: 6640,
            sr: cp.fd,
            ip: 'dr/CaptivateItem255.png',
            dn: 'CaptivateItem255',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [358, 357, 517, 439],
            vb: [358, 357, 517, 439]
        },
        Slide6600: {
            lb: '',
            id: 6600,
            from: 6581,
            to: 6799,
            mmot: false,
            mdi: 'Slide6600c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem252',
                t: 14
            }, {
                n: 'CaptivateItem253',
                t: 13,
                d: {
                    hc: 'CaptivateItem255',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem257',
                t: 19
            }, {
                n: 'CaptivateItem254',
                t: 22
            }, {
                n: 'CaptivateItem255',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem253ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide6600c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2406.png',
            dn: 'Slide6600',
            visible: '1'
        },
        sf_2414: {
            from: 6890,
            to: 6895,
            mdi: 'sf_2414c'
        },
        sf_2414c: {
            id: 'sf_2414c',
            b: [0, 85, 790, 22],
            l: 0,
            t: 82,
            dn: 'sf_2414',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        StAd44: {
            from: 6830,
            to: 6883,
            src: 'ar/2952.mp3',
            du: 1829
        },
        CaptivateItem258: {
            type: 14,
            from: 6800,
            to: 6895,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem258c',
            immo: false,
            apsn: 'Slide6649',
            trin: 15,
            trout: 0
        },
        CaptivateItem258c: {
            b: [193, 81, 221, 105],
            uid: 6673,
            sr: cp.fd,
            dn: 'CaptivateItem258',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [192, 80, 222, 106],
            vb: [192, 80, 222, 106]
        },
        CaptivateItem259: {
            type: 13,
            from: 6800,
            to: 6895,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem259c',
            immo: false,
            apsn: 'Slide6649',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem260',
            ofct: 1,
            dep: ['CaptivateItem261'],
            pa: 6894,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem259ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem259c: {
            b: [193, 81, 221, 105],
            uid: 6677,
            sr: cp.fd,
            dn: 'CaptivateItem259',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [193, 81, 221, 105],
            vb: [193, 81, 221, 105]
        },
        CaptivateItem259ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem263: {
            type: 19,
            from: 6800,
            to: 6895,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem263c',
            immo: false,
            apsn: 'Slide6649',
            trin: 0,
            trout: 0
        },
        CaptivateItem263c: {
            b: [438, 109, 598, 171],
            uid: 6698,
            sr: cp.fd,
            ip: 'dr/CaptivateItem263.png',
            dn: 'CaptivateItem263',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click the Continue icon. ',
            traccstr: '',
            ti: -1,
            vbwr: [438, 109, 598, 171],
            vb: [438, 109, 598, 171]
        },
        CaptivateItem260: {
            type: 22,
            from: 6800,
            to: 6889,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem260c',
            immo: false,
            apsn: 'Slide6649',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem260c: {
            b: [221, 141, 373, 203],
            uid: 6689,
            sr: cp.fd,
            ip: 'dr/CaptivateItem260.png',
            dn: 'CaptivateItem260',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [221, 141, 373, 203],
            vb: [221, 141, 373, 203]
        },
        CaptivateItem261: {
            type: 23,
            from: 6800,
            to: 6889,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem261c',
            immo: false,
            apsn: 'Slide6649',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem261c: {
            b: [203, 105, 362, 187],
            uid: 6693,
            sr: cp.fd,
            ip: 'dr/CaptivateItem261.png',
            dn: 'CaptivateItem261',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [203, 105, 362, 187],
            vb: [203, 105, 362, 187]
        },
        Slide6649: {
            lb: '',
            id: 6649,
            from: 6800,
            to: 6895,
            mmot: false,
            mdi: 'Slide6649c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'sf_2414',
                t: 64
            }, {
                n: 'CaptivateItem258',
                t: 14
            }, {
                n: 'CaptivateItem259',
                t: 13,
                d: {
                    hc: 'CaptivateItem261',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem263',
                t: 19
            }, {
                n: 'CaptivateItem260',
                t: 22
            }, {
                n: 'CaptivateItem261',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem259ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide6649c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2410.png',
            dn: 'Slide6649',
            visible: '1'
        },
        sf_2421: {
            from: 6986,
            to: 6991,
            mdi: 'sf_2421c'
        },
        sf_2421c: {
            id: 'sf_2421c',
            b: [0, 107, 790, 11],
            l: 0,
            t: 530,
            dn: 'sf_2421',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        sf_2424: {
            from: 6986,
            to: 6991,
            mdi: 'sf_2424c'
        },
        sf_2424c: {
            id: 'sf_2424c',
            b: [0, 118, 790, 19],
            l: 0,
            t: 444,
            dn: 'sf_2424',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        sf_2427: {
            from: 6986,
            to: 6991,
            mdi: 'sf_2427c'
        },
        sf_2427c: {
            id: 'sf_2427c',
            b: [0, 137, 790, 21],
            l: 0,
            t: 102,
            dn: 'sf_2427',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        sf_2430: {
            from: 6986,
            to: 6991,
            mdi: 'sf_2430c'
        },
        sf_2430c: {
            id: 'sf_2430c',
            b: [0, 158, 790, 50],
            l: 0,
            t: 14,
            dn: 'sf_2430',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        StAd45: {
            from: 6926,
            to: 6975,
            src: 'ar/2955.mp3',
            du: 1672
        },
        CaptivateItem264: {
            type: 14,
            from: 6896,
            to: 6991,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem264c',
            immo: false,
            apsn: 'Slide6702',
            trin: 15,
            trout: 0
        },
        CaptivateItem264c: {
            b: [37, 101, 58, 123],
            uid: 6733,
            sr: cp.fd,
            dn: 'CaptivateItem264',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [36, 100, 59, 124],
            vb: [36, 100, 59, 124]
        },
        CaptivateItem265: {
            type: 13,
            from: 6896,
            to: 6991,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem265c',
            immo: false,
            apsn: 'Slide6702',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem266',
            ofct: 1,
            dep: ['CaptivateItem267'],
            pa: 6990,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem265ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem265c: {
            b: [36, 101, 58, 124],
            uid: 6737,
            sr: cp.fd,
            dn: 'CaptivateItem265',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [36, 101, 58, 124],
            vb: [36, 101, 58, 124]
        },
        CaptivateItem265ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem269: {
            type: 19,
            from: 6896,
            to: 6991,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem269c',
            immo: false,
            apsn: 'Slide6702',
            trin: 0,
            trout: 0
        },
        CaptivateItem269c: {
            b: [262, 73, 464, 135],
            uid: 6758,
            sr: cp.fd,
            ip: 'dr/CaptivateItem269.png',
            dn: 'CaptivateItem269',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Now, let’s go to the next screen.   Click the Next screen icon. ',
            traccstr: '',
            ti: -1,
            vbwr: [262, 73, 464, 135],
            vb: [262, 73, 464, 135]
        },
        CaptivateItem266: {
            type: 22,
            from: 6896,
            to: 6985,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem266c',
            immo: false,
            apsn: 'Slide6702',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem266c: {
            b: [63, 156, 215, 218],
            uid: 6749,
            sr: cp.fd,
            ip: 'dr/CaptivateItem266.png',
            dn: 'CaptivateItem266',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [63, 156, 215, 218],
            vb: [63, 156, 215, 218]
        },
        CaptivateItem267: {
            type: 23,
            from: 6896,
            to: 6985,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem267c',
            immo: false,
            apsn: 'Slide6702',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem267c: {
            b: [45, 119, 204, 201],
            uid: 6753,
            sr: cp.fd,
            ip: 'dr/CaptivateItem267.png',
            dn: 'CaptivateItem267',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [45, 119, 204, 201],
            vb: [45, 119, 204, 201]
        },
        Slide6702: {
            lb: '',
            id: 6702,
            from: 6896,
            to: 6991,
            mmot: false,
            mdi: 'Slide6702c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'sf_2421',
                t: 64
            }, {
                n: 'sf_2424',
                t: 64
            }, {
                n: 'sf_2427',
                t: 64
            }, {
                n: 'sf_2430',
                t: 64
            }, {
                n: 'CaptivateItem264',
                t: 14
            }, {
                n: 'CaptivateItem265',
                t: 13,
                d: {
                    hc: 'CaptivateItem267',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem269',
                t: 19
            }, {
                n: 'CaptivateItem266',
                t: 22
            }, {
                n: 'CaptivateItem267',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem265ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide6702c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2417.png',
            dn: 'Slide6702',
            visible: '1'
        },
        StAd46: {
            from: 7022,
            to: 7278,
            src: 'ar/2818.mp3',
            du: 8568
        },
        CaptivateItem270: {
            type: 14,
            from: 6992,
            to: 7279,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem270c',
            immo: false,
            apsn: 'Slide6762',
            trin: 15,
            trout: 0
        },
        CaptivateItem270c: {
            b: [38, 224, 63, 244],
            uid: 6781,
            sr: cp.fd,
            dn: 'CaptivateItem270',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [37, 223, 64, 245],
            vb: [37, 223, 64, 245]
        },
        CaptivateItem271: {
            type: 13,
            from: 6992,
            to: 7279,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem271c',
            immo: false,
            apsn: 'Slide6762',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem272',
            ofct: 1,
            dep: ['CaptivateItem273'],
            pa: 7278,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem271ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem271c: {
            b: [38, 224, 63, 244],
            uid: 6785,
            sr: cp.fd,
            dn: 'CaptivateItem271',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [38, 224, 63, 244],
            vb: [38, 224, 63, 244]
        },
        CaptivateItem271ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem275: {
            type: 19,
            from: 6992,
            to: 7279,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem275c',
            immo: false,
            apsn: 'Slide6762',
            trin: 0,
            trout: 0
        },
        CaptivateItem275c: {
            b: [373, 92, 742, 180],
            uid: 6806,
            sr: cp.fd,
            ip: 'dr/CaptivateItem275.png',
            dn: 'CaptivateItem275',
            visible: 1,
            JSONEffectData: false,
            accstr: 'This is the Payment transactions screen for the vendor. Here we can specify various options for paying this vendor. Let’s add the vendor’s bank account information.   Click the Search icon for the Country field. ',
            traccstr: '',
            ti: -1,
            vbwr: [373, 92, 742, 180],
            vb: [373, 92, 742, 180]
        },
        CaptivateItem272: {
            type: 22,
            from: 6992,
            to: 7060,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem272c',
            immo: false,
            apsn: 'Slide6762',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem272c: {
            b: [54, 269, 206, 331],
            uid: 6797,
            sr: cp.fd,
            ip: 'dr/CaptivateItem272.png',
            dn: 'CaptivateItem272',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [54, 269, 206, 331],
            vb: [54, 269, 206, 331]
        },
        CaptivateItem273: {
            type: 23,
            from: 6992,
            to: 7060,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem273c',
            immo: false,
            apsn: 'Slide6762',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem273c: {
            b: [47, 244, 206, 326],
            uid: 6801,
            sr: cp.fd,
            ip: 'dr/CaptivateItem273.png',
            dn: 'CaptivateItem273',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [47, 244, 206, 326],
            vb: [47, 244, 206, 326]
        },
        Slide6762: {
            lb: '',
            id: 6762,
            from: 6992,
            to: 7279,
            mmot: false,
            mdi: 'Slide6762c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem270',
                t: 14
            }, {
                n: 'CaptivateItem271',
                t: 13,
                d: {
                    hc: 'CaptivateItem273',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem275',
                t: 19
            }, {
                n: 'CaptivateItem272',
                t: 22
            }, {
                n: 'CaptivateItem273',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem271ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide6762c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2434.png',
            dn: 'Slide6762',
            visible: '1'
        },
        StAd47: {
            from: 7310,
            to: 7396,
            src: 'ar/2958.mp3',
            du: 2926
        },
        CaptivateItem277: {
            type: 19,
            from: 7280,
            to: 7399,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem277c',
            immo: false,
            apsn: 'Slide6810',
            trin: 0,
            trout: 0
        },
        CaptivateItem277c: {
            b: [552, 125, 707, 196],
            uid: 6831,
            sr: cp.fd,
            ip: 'dr/CaptivateItem277.png',
            dn: 'CaptivateItem277',
            visible: 1,
            JSONEffectData: false,
            accstr: 'SAP displays a list of all available countries.   Scroll down. ',
            traccstr: '',
            ti: -1,
            vbwr: [552, 125, 707, 196],
            vb: [552, 125, 707, 196]
        },
        CaptivateItem278: {
            type: 13,
            from: 7280,
            to: 7399,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem278c',
            immo: false,
            apsn: 'Slide6810',
            JSONTT_4: [],
            cpa: false,
            oca: 'cpCmndResume = 1;',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem280',
            ofct: 1,
            dep: ['CaptivateItem281'],
            pa: 7398,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem278ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem278c: {
            b: [518, 196, 541, 453],
            uid: 6835,
            sr: cp.fd,
            dn: 'CaptivateItem278',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [518, 196, 541, 453],
            vb: [518, 196, 541, 453]
        },
        CaptivateItem278ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem279: {
            type: 14,
            from: 7280,
            to: 7399,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem279c',
            immo: false,
            apsn: 'Slide6810',
            trin: 15,
            trout: 0
        },
        CaptivateItem279c: {
            b: [518, 196, 541, 454],
            uid: 6847,
            sr: cp.fd,
            dn: 'CaptivateItem279',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [517, 195, 542, 455],
            vb: [517, 195, 542, 455]
        },
        CaptivateItem280: {
            type: 22,
            from: 7280,
            to: 7369,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem280c',
            immo: false,
            apsn: 'Slide6810',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem280c: {
            b: [351, 249, 503, 311],
            uid: 6851,
            sr: cp.fd,
            ip: 'dr/CaptivateItem280.png',
            dn: 'CaptivateItem280',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [351, 249, 503, 311],
            vb: [351, 249, 503, 311]
        },
        CaptivateItem281: {
            type: 23,
            from: 7280,
            to: 7369,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem281c',
            immo: false,
            apsn: 'Slide6810',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem281c: {
            b: [351, 164, 506, 243],
            uid: 6855,
            sr: cp.fd,
            ip: 'dr/CaptivateItem281.png',
            dn: 'CaptivateItem281',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [351, 164, 506, 243],
            vb: [351, 164, 506, 243]
        },
        Slide6810: {
            lb: '',
            id: 6810,
            from: 7280,
            to: 7399,
            mmot: false,
            mdi: 'Slide6810c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem277',
                t: 19
            }, {
                n: 'CaptivateItem278',
                t: 13,
                d: {
                    hc: 'CaptivateItem281',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem279',
                t: 14
            }, {
                n: 'CaptivateItem280',
                t: 22
            }, {
                n: 'CaptivateItem281',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem278ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide6810c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2438.png',
            dn: 'Slide6810',
            visible: '1'
        },
        StAd48: {
            from: 7430,
            to: 7466,
            src: 'ar/2961.mp3',
            du: 1254
        },
        CaptivateItem283: {
            type: 19,
            from: 7400,
            to: 7474,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem283c',
            immo: false,
            apsn: 'Slide6859',
            trin: 0,
            trout: 0
        },
        CaptivateItem283c: {
            b: [326, 150, 478, 212],
            uid: 6880,
            sr: cp.fd,
            ip: 'dr/CaptivateItem283.png',
            dn: 'CaptivateItem283',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Scroll down again. ',
            traccstr: '',
            ti: -1,
            vbwr: [326, 150, 478, 212],
            vb: [326, 150, 478, 212]
        },
        CaptivateItem284: {
            type: 13,
            from: 7400,
            to: 7474,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem284c',
            immo: false,
            apsn: 'Slide6859',
            JSONTT_4: [],
            cpa: false,
            oca: 'cpCmndResume = 1;',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem286',
            ofct: 1,
            dep: ['CaptivateItem287'],
            pa: 7473,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem284ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem284c: {
            b: [520, 278, 540, 453],
            uid: 6884,
            sr: cp.fd,
            dn: 'CaptivateItem284',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [520, 278, 540, 453],
            vb: [520, 278, 540, 453]
        },
        CaptivateItem284ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem285: {
            type: 14,
            from: 7400,
            to: 7474,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem285c',
            immo: false,
            apsn: 'Slide6859',
            trin: 15,
            trout: 0
        },
        CaptivateItem285c: {
            b: [518, 276, 541, 453],
            uid: 6896,
            sr: cp.fd,
            dn: 'CaptivateItem285',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [517, 275, 542, 454],
            vb: [517, 275, 542, 454]
        },
        CaptivateItem286: {
            type: 22,
            from: 7400,
            to: 7474,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem286c',
            immo: false,
            apsn: 'Slide6859',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem286c: {
            b: [360, 402, 512, 464],
            uid: 6900,
            sr: cp.fd,
            ip: 'dr/CaptivateItem286.png',
            dn: 'CaptivateItem286',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [360, 402, 512, 464],
            vb: [360, 402, 512, 464]
        },
        CaptivateItem287: {
            type: 23,
            from: 7400,
            to: 7474,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem287c',
            immo: false,
            apsn: 'Slide6859',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem287c: {
            b: [364, 278, 518, 357],
            uid: 6904,
            sr: cp.fd,
            ip: 'dr/CaptivateItem287.png',
            dn: 'CaptivateItem287',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [364, 278, 518, 357],
            vb: [364, 278, 518, 357]
        },
        Slide6859: {
            lb: '',
            id: 6859,
            from: 7400,
            to: 7474,
            mmot: false,
            mdi: 'Slide6859c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem283',
                t: 19
            }, {
                n: 'CaptivateItem284',
                t: 13,
                d: {
                    hc: 'CaptivateItem287',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem285',
                t: 14
            }, {
                n: 'CaptivateItem286',
                t: 22
            }, {
                n: 'CaptivateItem287',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem284ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide6859c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2442.png',
            dn: 'Slide6859',
            visible: '1'
        },
        StAd49: {
            from: 7508,
            to: 7576,
            src: 'ar/2964.mp3',
            du: 2325
        },
        CaptivateItem288: {
            type: 14,
            from: 7475,
            to: 7579,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem288c',
            immo: false,
            apsn: 'Slide6908',
            trin: 15,
            trout: 0
        },
        CaptivateItem288c: {
            b: [163, 155, 304, 175],
            uid: 6928,
            sr: cp.fd,
            dn: 'CaptivateItem288',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [162, 154, 305, 176],
            vb: [162, 154, 305, 176]
        },
        CaptivateItem289: {
            type: 13,
            from: 7475,
            to: 7579,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem289c',
            immo: false,
            apsn: 'Slide6908',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem290',
            ofct: 1,
            dep: ['CaptivateItem291'],
            pa: 7578,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem289ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem289c: {
            b: [164, 155, 303, 175],
            uid: 6932,
            sr: cp.fd,
            dn: 'CaptivateItem289',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [164, 155, 303, 175],
            vb: [164, 155, 303, 175]
        },
        CaptivateItem289ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem293: {
            type: 19,
            from: 7475,
            to: 7579,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem293c',
            immo: false,
            apsn: 'Slide6908',
            trin: 0,
            trout: 0
        },
        CaptivateItem293c: {
            b: [481, 65, 656, 127],
            uid: 6953,
            sr: cp.fd,
            ip: 'dr/CaptivateItem293.png',
            dn: 'CaptivateItem293',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Select US - United States. ',
            traccstr: '',
            ti: -1,
            vbwr: [481, 65, 656, 127],
            vb: [481, 65, 656, 127]
        },
        CaptivateItem290: {
            type: 22,
            from: 7475,
            to: 7543,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem290c',
            immo: false,
            apsn: 'Slide6908',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem290c: {
            b: [315, 117, 467, 179],
            uid: 6944,
            sr: cp.fd,
            ip: 'dr/CaptivateItem290.png',
            dn: 'CaptivateItem290',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [315, 117, 467, 179],
            vb: [315, 117, 467, 179]
        },
        CaptivateItem291: {
            type: 23,
            from: 7475,
            to: 7543,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem291c',
            immo: false,
            apsn: 'Slide6908',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem291c: {
            b: [203, 175, 362, 257],
            uid: 6948,
            sr: cp.fd,
            ip: 'dr/CaptivateItem291.png',
            dn: 'CaptivateItem291',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [203, 175, 362, 257],
            vb: [203, 175, 362, 257]
        },
        Slide6908: {
            lb: '',
            id: 6908,
            from: 7475,
            to: 7579,
            mmot: false,
            mdi: 'Slide6908c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem288',
                t: 14
            }, {
                n: 'CaptivateItem289',
                t: 13,
                d: {
                    hc: 'CaptivateItem291',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem293',
                t: 19
            }, {
                n: 'CaptivateItem290',
                t: 22
            }, {
                n: 'CaptivateItem291',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem289ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide6908c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2446.png',
            dn: 'Slide6908',
            visible: '1'
        },
        sf_2454: {
            from: 7664,
            to: 7669,
            mdi: 'sf_2454c'
        },
        sf_2454c: {
            id: 'sf_2454c',
            b: [0, 208, 790, 22],
            l: 0,
            t: 91,
            dn: 'sf_2454',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        StAd50: {
            from: 7610,
            to: 7659,
            src: 'ar/2967.mp3',
            du: 1672
        },
        CaptivateItem294: {
            type: 14,
            from: 7580,
            to: 7669,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem294c',
            immo: false,
            apsn: 'Slide6957',
            trin: 15,
            trout: 0
        },
        CaptivateItem294c: {
            b: [163, 90, 191, 114],
            uid: 6981,
            sr: cp.fd,
            dn: 'CaptivateItem294',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [162, 89, 192, 115],
            vb: [162, 89, 192, 115]
        },
        CaptivateItem295: {
            type: 13,
            from: 7580,
            to: 7669,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem295c',
            immo: false,
            apsn: 'Slide6957',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem296',
            ofct: 1,
            dep: ['CaptivateItem297'],
            pa: 7668,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem295ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem295c: {
            b: [163, 90, 191, 114],
            uid: 6985,
            sr: cp.fd,
            dn: 'CaptivateItem295',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [163, 90, 191, 114],
            vb: [163, 90, 191, 114]
        },
        CaptivateItem295ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem299: {
            type: 19,
            from: 7580,
            to: 7669,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem299c',
            immo: false,
            apsn: 'Slide6957',
            trin: 0,
            trout: 0
        },
        CaptivateItem299c: {
            b: [463, 90, 624, 152],
            uid: 7006,
            sr: cp.fd,
            ip: 'dr/CaptivateItem299.png',
            dn: 'CaptivateItem299',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click the Continue icon. ',
            traccstr: '',
            ti: -1,
            vbwr: [463, 90, 624, 152],
            vb: [463, 90, 624, 152]
        },
        CaptivateItem296: {
            type: 22,
            from: 7580,
            to: 7669,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem296c',
            immo: false,
            apsn: 'Slide6957',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem296c: {
            b: [32, 20, 184, 82],
            uid: 6997,
            sr: cp.fd,
            ip: 'dr/CaptivateItem296.png',
            dn: 'CaptivateItem296',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [32, 20, 184, 82],
            vb: [32, 20, 184, 82]
        },
        CaptivateItem297: {
            type: 23,
            from: 7580,
            to: 7669,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem297c',
            immo: false,
            apsn: 'Slide6957',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem297c: {
            b: [174, 114, 333, 196],
            uid: 7001,
            sr: cp.fd,
            ip: 'dr/CaptivateItem297.png',
            dn: 'CaptivateItem297',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [174, 114, 333, 196],
            vb: [174, 114, 333, 196]
        },
        Slide6957: {
            lb: '',
            id: 6957,
            from: 7580,
            to: 7669,
            mmot: false,
            mdi: 'Slide6957c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'sf_2454',
                t: 64
            }, {
                n: 'CaptivateItem294',
                t: 14
            }, {
                n: 'CaptivateItem295',
                t: 13,
                d: {
                    hc: 'CaptivateItem297',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem299',
                t: 19
            }, {
                n: 'CaptivateItem296',
                t: 22
            }, {
                n: 'CaptivateItem297',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem295ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide6957c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2450.png',
            dn: 'Slide6957',
            visible: '1'
        },
        StAd51: {
            from: 7700,
            to: 7760,
            src: 'ar/2970.mp3',
            du: 2037
        },
        CaptivateItem300: {
            type: 14,
            from: 7670,
            to: 7771,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem300c',
            immo: false,
            apsn: 'Slide7010',
            trin: 15,
            trout: 0
        },
        CaptivateItem300c: {
            b: [55, 220, 149, 243],
            uid: 7030,
            sr: cp.fd,
            dn: 'CaptivateItem300',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [54, 219, 150, 244],
            vb: [54, 219, 150, 244]
        },
        CaptivateItem301: {
            type: 13,
            from: 7670,
            to: 7771,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem301c',
            immo: false,
            apsn: 'Slide7010',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem302',
            ofct: 1,
            dep: ['CaptivateItem303'],
            pa: 7770,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem301ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem301c: {
            b: [57, 222, 149, 242],
            uid: 7034,
            sr: cp.fd,
            dn: 'CaptivateItem301',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [57, 222, 149, 242],
            vb: [57, 222, 149, 242]
        },
        CaptivateItem301ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem305: {
            type: 19,
            from: 7670,
            to: 7771,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem305c',
            immo: false,
            apsn: 'Slide7010',
            trin: 0,
            trout: 0
        },
        CaptivateItem305c: {
            b: [297, 236, 472, 298],
            uid: 7055,
            sr: cp.fd,
            ip: 'dr/CaptivateItem305.png',
            dn: 'CaptivateItem305',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click in the Bank Key field. ',
            traccstr: '',
            ti: -1,
            vbwr: [297, 236, 472, 298],
            vb: [297, 236, 472, 298]
        },
        CaptivateItem302: {
            type: 22,
            from: 7670,
            to: 7738,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem302c',
            immo: false,
            apsn: 'Slide7010',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem302c: {
            b: [117, 263, 269, 325],
            uid: 7046,
            sr: cp.fd,
            ip: 'dr/CaptivateItem302.png',
            dn: 'CaptivateItem302',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [117, 263, 269, 325],
            vb: [117, 263, 269, 325]
        },
        CaptivateItem303: {
            type: 23,
            from: 7670,
            to: 7738,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem303c',
            immo: false,
            apsn: 'Slide7010',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem303c: {
            b: [103, 243, 262, 325],
            uid: 7050,
            sr: cp.fd,
            ip: 'dr/CaptivateItem303.png',
            dn: 'CaptivateItem303',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [103, 243, 262, 325],
            vb: [103, 243, 262, 325]
        },
        Slide7010: {
            lb: '',
            id: 7010,
            from: 7670,
            to: 7771,
            mmot: false,
            mdi: 'Slide7010c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem300',
                t: 14
            }, {
                n: 'CaptivateItem301',
                t: 13,
                d: {
                    hc: 'CaptivateItem303',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem305',
                t: 19
            }, {
                n: 'CaptivateItem302',
                t: 22
            }, {
                n: 'CaptivateItem303',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem301ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide7010c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2457.png',
            dn: 'Slide7010',
            visible: '1'
        },
        StAd52: {
            from: 7802,
            to: 7873,
            src: 'ar/2973.mp3',
            du: 2429
        },
        CaptivateItem306: {
            type: 14,
            from: 7772,
            to: 7882,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem306c',
            immo: false,
            apsn: 'Slide7059',
            trin: 15,
            trout: 0
        },
        CaptivateItem306c: {
            b: [146, 223, 172, 243],
            uid: 7079,
            sr: cp.fd,
            dn: 'CaptivateItem306',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [145, 222, 173, 244],
            vb: [145, 222, 173, 244]
        },
        CaptivateItem307: {
            type: 13,
            from: 7772,
            to: 7882,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem307c',
            immo: false,
            apsn: 'Slide7059',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem308',
            ofct: 1,
            dep: ['CaptivateItem309'],
            pa: 7881,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem307ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem307c: {
            b: [146, 223, 172, 243],
            uid: 7083,
            sr: cp.fd,
            dn: 'CaptivateItem307',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [146, 223, 172, 243],
            vb: [146, 223, 172, 243]
        },
        CaptivateItem307ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem311: {
            type: 19,
            from: 7772,
            to: 7882,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem311c',
            immo: false,
            apsn: 'Slide7059',
            trin: 0,
            trout: 0
        },
        CaptivateItem311c: {
            b: [307, 128, 564, 190],
            uid: 7104,
            sr: cp.fd,
            ip: 'dr/CaptivateItem311.png',
            dn: 'CaptivateItem311',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click the Search icon to select a bank key. ',
            traccstr: '',
            ti: -1,
            vbwr: [307, 128, 564, 190],
            vb: [307, 128, 564, 190]
        },
        CaptivateItem308: {
            type: 22,
            from: 7772,
            to: 7840,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem308c',
            immo: false,
            apsn: 'Slide7059',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem308c: {
            b: [172, 249, 324, 311],
            uid: 7095,
            sr: cp.fd,
            ip: 'dr/CaptivateItem308.png',
            dn: 'CaptivateItem308',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [172, 249, 324, 311],
            vb: [172, 249, 324, 311]
        },
        CaptivateItem309: {
            type: 23,
            from: 7772,
            to: 7840,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem309c',
            immo: false,
            apsn: 'Slide7059',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem309c: {
            b: [155, 243, 314, 325],
            uid: 7099,
            sr: cp.fd,
            ip: 'dr/CaptivateItem309.png',
            dn: 'CaptivateItem309',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [155, 243, 314, 325],
            vb: [155, 243, 314, 325]
        },
        Slide7059: {
            lb: '',
            id: 7059,
            from: 7772,
            to: 7882,
            mmot: false,
            mdi: 'Slide7059c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem306',
                t: 14
            }, {
                n: 'CaptivateItem307',
                t: 13,
                d: {
                    hc: 'CaptivateItem309',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem311',
                t: 19
            }, {
                n: 'CaptivateItem308',
                t: 22
            }, {
                n: 'CaptivateItem309',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem307ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide7059c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2461.png',
            dn: 'Slide7059',
            visible: '1'
        },
        sf_2469: {
            from: 8153,
            to: 8158,
            mdi: 'sf_2469c'
        },
        sf_2469c: {
            id: 'sf_2469c',
            b: [0, 230, 790, 11],
            l: 0,
            t: 530,
            dn: 'sf_2469',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        sf_2472: {
            from: 8153,
            to: 8158,
            mdi: 'sf_2472c'
        },
        sf_2472c: {
            id: 'sf_2472c',
            b: [0, 241, 790, 21],
            l: 0,
            t: 429,
            dn: 'sf_2472',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        sf_2475: {
            from: 8153,
            to: 8158,
            mdi: 'sf_2475c'
        },
        sf_2475c: {
            id: 'sf_2475c',
            b: [0, 262, 790, 19],
            l: 0,
            t: 209,
            dn: 'sf_2475',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        StAd53: {
            from: 7913,
            to: 8156,
            src: 'ar/2976.mp3',
            du: 8151
        },
        CaptivateItem312: {
            type: 14,
            from: 7883,
            to: 8158,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem312c',
            immo: false,
            apsn: 'Slide7108',
            trin: 15,
            trout: 0
        },
        CaptivateItem312c: {
            b: [109, 428, 130, 449],
            uid: 7137,
            sr: cp.fd,
            dn: 'CaptivateItem312',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [108, 427, 131, 450],
            vb: [108, 427, 131, 450]
        },
        CaptivateItem313: {
            type: 13,
            from: 7883,
            to: 8158,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem313c',
            immo: false,
            apsn: 'Slide7108',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem314',
            ofct: 1,
            dep: ['CaptivateItem315'],
            pa: 8157,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem313ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem313c: {
            b: [109, 427, 131, 450],
            uid: 7141,
            sr: cp.fd,
            dn: 'CaptivateItem313',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [109, 427, 131, 450],
            vb: [109, 427, 131, 450]
        },
        CaptivateItem313ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem317: {
            type: 19,
            from: 7883,
            to: 8158,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem317c',
            immo: false,
            apsn: 'Slide7108',
            trin: 0,
            trout: 0
        },
        CaptivateItem317c: {
            b: [386, 400, 710, 486],
            uid: 7162,
            sr: cp.fd,
            ip: 'dr/CaptivateItem317.png',
            dn: 'CaptivateItem317',
            visible: 1,
            JSONEffectData: false,
            accstr: 'You could use this pop-up box to limit your search for a bank key (for example, by City or Bank Name). We’ll leave all options blank to search for all banks.   Click the Continue icon. ',
            traccstr: '',
            ti: -1,
            vbwr: [386, 400, 710, 486],
            vb: [386, 400, 710, 486]
        },
        CaptivateItem314: {
            type: 22,
            from: 7883,
            to: 7972,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem314c',
            immo: false,
            apsn: 'Slide7108',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem314c: {
            b: [131, 476, 283, 538],
            uid: 7153,
            sr: cp.fd,
            ip: 'dr/CaptivateItem314.png',
            dn: 'CaptivateItem314',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [131, 476, 283, 538],
            vb: [131, 476, 283, 538]
        },
        CaptivateItem315: {
            type: 23,
            from: 7883,
            to: 7972,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem315c',
            immo: false,
            apsn: 'Slide7108',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem315c: {
            b: [118, 450, 277, 532],
            uid: 7157,
            sr: cp.fd,
            ip: 'dr/CaptivateItem315.png',
            dn: 'CaptivateItem315',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [118, 450, 277, 532],
            vb: [118, 450, 277, 532]
        },
        Slide7108: {
            lb: '',
            id: 7108,
            from: 7883,
            to: 8158,
            mmot: false,
            mdi: 'Slide7108c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'sf_2469',
                t: 64
            }, {
                n: 'sf_2472',
                t: 64
            }, {
                n: 'sf_2475',
                t: 64
            }, {
                n: 'CaptivateItem312',
                t: 14
            }, {
                n: 'CaptivateItem313',
                t: 13,
                d: {
                    hc: 'CaptivateItem315',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem317',
                t: 19
            }, {
                n: 'CaptivateItem314',
                t: 22
            }, {
                n: 'CaptivateItem315',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem313ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide7108c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2465.png',
            dn: 'Slide7108',
            visible: '1'
        },
        StAd54: {
            from: 8189,
            to: 8296,
            src: 'ar/2979.mp3',
            du: 3631
        },
        CaptivateItem319: {
            type: 19,
            from: 8159,
            to: 8298,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem319c',
            immo: false,
            apsn: 'Slide7166',
            trin: 0,
            trout: 0
        },
        CaptivateItem319c: {
            b: [529, 34, 747, 109],
            uid: 7187,
            sr: cp.fd,
            ip: 'dr/CaptivateItem319.png',
            dn: 'CaptivateItem319',
            visible: 1,
            JSONEffectData: false,
            accstr: 'SAP displays a list of all banks that are available in the system.   Scroll down. ',
            traccstr: '',
            ti: -1,
            vbwr: [529, 34, 747, 109],
            vb: [529, 34, 747, 109]
        },
        CaptivateItem320: {
            type: 13,
            from: 8159,
            to: 8298,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem320c',
            immo: false,
            apsn: 'Slide7166',
            JSONTT_4: [],
            cpa: false,
            oca: 'cpCmndResume = 1;',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem322',
            ofct: 1,
            dep: ['CaptivateItem323'],
            pa: 8296,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem320ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem320c: {
            b: [691, 228, 710, 417],
            uid: 7191,
            sr: cp.fd,
            dn: 'CaptivateItem320',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [691, 228, 710, 417],
            vb: [691, 228, 710, 417]
        },
        CaptivateItem320ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem321: {
            type: 14,
            from: 8159,
            to: 8298,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem321c',
            immo: false,
            apsn: 'Slide7166',
            trin: 15,
            trout: 0
        },
        CaptivateItem321c: {
            b: [691, 227, 710, 419],
            uid: 7203,
            sr: cp.fd,
            dn: 'CaptivateItem321',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [690, 226, 711, 420],
            vb: [690, 226, 711, 420]
        },
        CaptivateItem322: {
            type: 22,
            from: 8159,
            to: 8248,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem322c',
            immo: false,
            apsn: 'Slide7166',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem322c: {
            b: [530, 330, 682, 392],
            uid: 7207,
            sr: cp.fd,
            ip: 'dr/CaptivateItem322.png',
            dn: 'CaptivateItem322',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [530, 330, 682, 392],
            vb: [530, 330, 682, 392]
        },
        CaptivateItem323: {
            type: 23,
            from: 8159,
            to: 8248,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem323c',
            immo: false,
            apsn: 'Slide7166',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem323c: {
            b: [536, 228, 691, 307],
            uid: 7211,
            sr: cp.fd,
            ip: 'dr/CaptivateItem323.png',
            dn: 'CaptivateItem323',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [536, 228, 691, 307],
            vb: [536, 228, 691, 307]
        },
        Slide7166: {
            lb: '',
            id: 7166,
            from: 8159,
            to: 8298,
            mmot: false,
            mdi: 'Slide7166c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem319',
                t: 19
            }, {
                n: 'CaptivateItem320',
                t: 13,
                d: {
                    hc: 'CaptivateItem323',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem321',
                t: 14
            }, {
                n: 'CaptivateItem322',
                t: 22
            }, {
                n: 'CaptivateItem323',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem320ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide7166c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2478.png',
            dn: 'Slide7166',
            visible: '1'
        },
        StAd55: {
            from: 8329,
            to: 8383,
            src: 'ar/2982.mp3',
            du: 1855
        },
        CaptivateItem324: {
            type: 14,
            from: 8299,
            to: 8403,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem324c',
            immo: false,
            apsn: 'Slide7215',
            trin: 15,
            trout: 0
        },
        CaptivateItem324c: {
            b: [85, 264, 230, 284],
            uid: 7235,
            sr: cp.fd,
            dn: 'CaptivateItem324',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [84, 263, 231, 285],
            vb: [84, 263, 231, 285]
        },
        CaptivateItem325: {
            type: 13,
            from: 8299,
            to: 8403,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem325c',
            immo: false,
            apsn: 'Slide7215',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem326',
            ofct: 1,
            dep: ['CaptivateItem327'],
            pa: 8402,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem325ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem325c: {
            b: [84, 264, 229, 284],
            uid: 7239,
            sr: cp.fd,
            dn: 'CaptivateItem325',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [84, 264, 229, 284],
            vb: [84, 264, 229, 284]
        },
        CaptivateItem325ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem329: {
            type: 19,
            from: 8299,
            to: 8403,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem329c',
            immo: false,
            apsn: 'Slide7215',
            trin: 0,
            trout: 0
        },
        CaptivateItem329c: {
            b: [501, 41, 684, 103],
            uid: 7260,
            sr: cp.fd,
            ip: 'dr/CaptivateItem329.png',
            dn: 'CaptivateItem329',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Select Citibank in New York. ',
            traccstr: '',
            ti: -1,
            vbwr: [501, 41, 684, 103],
            vb: [501, 41, 684, 103]
        },
        CaptivateItem326: {
            type: 22,
            from: 8299,
            to: 8367,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem326c',
            immo: false,
            apsn: 'Slide7215',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem326c: {
            b: [184, 314, 336, 376],
            uid: 7251,
            sr: cp.fd,
            ip: 'dr/CaptivateItem326.png',
            dn: 'CaptivateItem326',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [184, 314, 336, 376],
            vb: [184, 314, 336, 376]
        },
        CaptivateItem327: {
            type: 23,
            from: 8299,
            to: 8367,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem327c',
            immo: false,
            apsn: 'Slide7215',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem327c: {
            b: [173, 284, 332, 366],
            uid: 7255,
            sr: cp.fd,
            ip: 'dr/CaptivateItem327.png',
            dn: 'CaptivateItem327',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [173, 284, 332, 366],
            vb: [173, 284, 332, 366]
        },
        Slide7215: {
            lb: '',
            id: 7215,
            from: 8299,
            to: 8403,
            mmot: false,
            mdi: 'Slide7215c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem324',
                t: 14
            }, {
                n: 'CaptivateItem325',
                t: 13,
                d: {
                    hc: 'CaptivateItem327',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem329',
                t: 19
            }, {
                n: 'CaptivateItem326',
                t: 22
            }, {
                n: 'CaptivateItem327',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem325ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide7215c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2482.png',
            dn: 'Slide7215',
            visible: '1'
        },
        sf_2490: {
            from: 8488,
            to: 8493,
            mdi: 'sf_2490c'
        },
        sf_2490c: {
            id: 'sf_2490c',
            b: [0, 281, 790, 22],
            l: 0,
            t: 86,
            dn: 'sf_2490',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        StAd56: {
            from: 8434,
            to: 8487,
            src: 'ar/2985.mp3',
            du: 1829
        },
        CaptivateItem330: {
            type: 14,
            from: 8404,
            to: 8493,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem330c',
            immo: false,
            apsn: 'Slide7264',
            trin: 15,
            trout: 0
        },
        CaptivateItem330c: {
            b: [55, 85, 83, 109],
            uid: 7288,
            sr: cp.fd,
            dn: 'CaptivateItem330',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [54, 84, 84, 110],
            vb: [54, 84, 84, 110]
        },
        CaptivateItem331: {
            type: 13,
            from: 8404,
            to: 8493,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem331c',
            immo: false,
            apsn: 'Slide7264',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem332',
            ofct: 1,
            dep: ['CaptivateItem333'],
            pa: 8492,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem331ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem331c: {
            b: [55, 85, 83, 109],
            uid: 7292,
            sr: cp.fd,
            dn: 'CaptivateItem331',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [55, 85, 83, 109],
            vb: [55, 85, 83, 109]
        },
        CaptivateItem331ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem335: {
            type: 19,
            from: 8404,
            to: 8493,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem335c',
            immo: false,
            apsn: 'Slide7264',
            trin: 0,
            trout: 0
        },
        CaptivateItem335c: {
            b: [502, 42, 663, 104],
            uid: 7313,
            sr: cp.fd,
            ip: 'dr/CaptivateItem335.png',
            dn: 'CaptivateItem335',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click the Continue icon. ',
            traccstr: '',
            ti: -1,
            vbwr: [502, 42, 663, 104],
            vb: [502, 42, 663, 104]
        },
        CaptivateItem332: {
            type: 22,
            from: 8404,
            to: 8493,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem332c',
            immo: false,
            apsn: 'Slide7264',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem332c: {
            b: [83, 145, 235, 207],
            uid: 7304,
            sr: cp.fd,
            ip: 'dr/CaptivateItem332.png',
            dn: 'CaptivateItem332',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [83, 145, 235, 207],
            vb: [83, 145, 235, 207]
        },
        CaptivateItem333: {
            type: 23,
            from: 8404,
            to: 8493,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem333c',
            immo: false,
            apsn: 'Slide7264',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem333c: {
            b: [67, 109, 226, 191],
            uid: 7308,
            sr: cp.fd,
            ip: 'dr/CaptivateItem333.png',
            dn: 'CaptivateItem333',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [67, 109, 226, 191],
            vb: [67, 109, 226, 191]
        },
        Slide7264: {
            lb: '',
            id: 7264,
            from: 8404,
            to: 8493,
            mmot: false,
            mdi: 'Slide7264c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'sf_2490',
                t: 64
            }, {
                n: 'CaptivateItem330',
                t: 14
            }, {
                n: 'CaptivateItem331',
                t: 13,
                d: {
                    hc: 'CaptivateItem333',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem335',
                t: 19
            }, {
                n: 'CaptivateItem332',
                t: 22
            }, {
                n: 'CaptivateItem333',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem331ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide7264c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2486.png',
            dn: 'Slide7264',
            visible: '1'
        },
        StAd57: {
            from: 8524,
            to: 8634,
            src: 'ar/2821.mp3',
            du: 3710
        },
        CaptivateItem336: {
            type: 14,
            from: 8494,
            to: 8634,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem336c',
            immo: false,
            apsn: 'Slide7317',
            trin: 15,
            trout: 0
        },
        CaptivateItem336c: {
            b: [165, 222, 281, 243],
            uid: 7336,
            sr: cp.fd,
            dn: 'CaptivateItem336',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [164, 221, 282, 244],
            vb: [164, 221, 282, 244]
        },
        CaptivateItem337: {
            type: 13,
            from: 8494,
            to: 8634,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem337c',
            immo: false,
            apsn: 'Slide7317',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem338',
            ofct: 1,
            dep: ['CaptivateItem339'],
            pa: 8633,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem337ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem337c: {
            b: [167, 222, 283, 242],
            uid: 7340,
            sr: cp.fd,
            dn: 'CaptivateItem337',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [167, 222, 283, 242],
            vb: [167, 222, 283, 242]
        },
        CaptivateItem337ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem341: {
            type: 19,
            from: 8494,
            to: 8634,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem341c',
            immo: false,
            apsn: 'Slide7317',
            trin: 0,
            trout: 0
        },
        CaptivateItem341c: {
            b: [537, 115, 749, 189],
            uid: 7361,
            sr: cp.fd,
            ip: 'dr/CaptivateItem341.png',
            dn: 'CaptivateItem341',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Enter the vendor’s account number at the Citibank branch.   Click in the Bank Account field. ',
            traccstr: '',
            ti: -1,
            vbwr: [537, 115, 749, 189],
            vb: [537, 115, 749, 189]
        },
        CaptivateItem338: {
            type: 22,
            from: 8494,
            to: 8562,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem338c',
            immo: false,
            apsn: 'Slide7317',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem338c: {
            b: [258, 266, 410, 328],
            uid: 7352,
            sr: cp.fd,
            ip: 'dr/CaptivateItem338.png',
            dn: 'CaptivateItem338',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [258, 266, 410, 328],
            vb: [258, 266, 410, 328]
        },
        CaptivateItem339: {
            type: 23,
            from: 8494,
            to: 8562,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem339c',
            immo: false,
            apsn: 'Slide7317',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem339c: {
            b: [247, 241, 406, 323],
            uid: 7356,
            sr: cp.fd,
            ip: 'dr/CaptivateItem339.png',
            dn: 'CaptivateItem339',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [247, 241, 406, 323],
            vb: [247, 241, 406, 323]
        },
        Slide7317: {
            lb: '',
            id: 7317,
            from: 8494,
            to: 8636,
            mmot: false,
            mdi: 'Slide7317c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem336',
                t: 14
            }, {
                n: 'CaptivateItem337',
                t: 13,
                d: {
                    hc: 'CaptivateItem339',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem341',
                t: 19
            }, {
                n: 'CaptivateItem338',
                t: 22
            }, {
                n: 'CaptivateItem339',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem337ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide7317c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2493.png',
            dn: 'Slide7317',
            visible: '1'
        },
        StAd58: {
            from: 8664,
            to: 8717,
            src: 'ar/2988.mp3',
            du: 1803
        },
        CaptivateItem342: {
            type: 24,
            from: 8637,
            to: 8726,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem342c',
            immo: false,
            apsn: 'Slide7365',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            JSONTT_2: [],
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem345',
            ofct: 1,
            dep: ['CaptivateItem346'],
            pa: 8712,
            enabled: 1,
            ma: -1,
            pfc: 1,
            kh: cp.tebKH,
            sc: {
                k: 13,
                s: 0,
                c: 0,
                a: 0
            },
            eh: cp.cbKH,
            siq: false,
            sat: true,
            vn: 'TTextEntryItemVar9',
            vuin: 1,
            exp: ['100020003000'],
            val: 0,
            cs: 0,
            id: 'CaptivateItem342',
            as: 0,
            num: 0,
            ucase: 0,
            lcase: 0,
            nc: 0,
            cl: -1,
            trin: 0,
            trout: 0
        },
        CaptivateItem342c: {
            b: [150, 223, 281, 242],
            uid: 7384,
            dn: 'CaptivateItem342',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Text Entry Box  ',
            traccstr: '',
            ti: 2500,
            txt: '',
            rtx: 1,
            ft: 't',
            id: 'CaptivateItem342',
            ss: false,
            fc: '#fff09e',
            fa: 1,
            sb: true,
            font: {
                n: 'Verdana',
                s: 11,
                c: '#000000',
                B: 0,
                i: 0,
                u: 0
            },
            vbwr: [150, 223, 281, 242],
            vb: [150, 223, 281, 242]
        },
        CaptivateItem347: {
            type: 19,
            from: 8637,
            to: 8726,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem347c',
            immo: false,
            apsn: 'Slide7365',
            trin: 0,
            trout: 0
        },
        CaptivateItem347c: {
            b: [300, 120, 597, 182],
            uid: 7432,
            sr: cp.fd,
            ip: 'dr/CaptivateItem347.png',
            dn: 'CaptivateItem347',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Type 100020003000 in the Bank Account field and then press the Enter key.   ',
            traccstr: '',
            ti: -1,
            vbwr: [300, 120, 597, 182],
            vb: [300, 120, 597, 182]
        },
        CaptivateItem345: {
            type: 22,
            from: 8637,
            to: 8705,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem345c',
            immo: false,
            apsn: 'Slide7365',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem345c: {
            b: [36, 247, 188, 309],
            uid: 7424,
            sr: cp.fd,
            ip: 'dr/CaptivateItem345.png',
            dn: 'CaptivateItem345',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [36, 247, 188, 309],
            vb: [36, 247, 188, 309]
        },
        CaptivateItem346: {
            type: 23,
            from: 8637,
            to: 8726,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem346c',
            immo: false,
            apsn: 'Slide7365',
            du: 93,
            trin: 15,
            trout: 15
        },
        CaptivateItem346c: {
            b: [202, 242, 361, 324],
            uid: 7428,
            sr: cp.fd,
            ip: 'dr/CaptivateItem346.png',
            dn: 'CaptivateItem346',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Please type:  100020003000  then press Enter key. ',
            traccstr: '',
            ti: -1,
            vbwr: [202, 242, 361, 324],
            vb: [202, 242, 361, 324]
        },
        Slide7365: {
            lb: '',
            id: 7365,
            from: 8637,
            to: 8726,
            mmot: false,
            mdi: 'Slide7365c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem342',
                t: 24,
                d: {
                    hc: 'CaptivateItem346',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem347',
                t: 19
            }, {
                n: 'CaptivateItem345',
                t: 22
            }, {
                n: 'CaptivateItem346',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide7365c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2497.png',
            dn: 'Slide7365',
            visible: '1'
        },
        StAd59: {
            from: 8757,
            to: 8862,
            src: 'ar/2991.mp3',
            du: 3553
        },
        CaptivateItem348: {
            type: 24,
            from: 8727,
            to: 8864,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem348c',
            immo: false,
            apsn: 'Slide7436',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            JSONTT_2: [],
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem350',
            ofct: 1,
            dep: ['CaptivateItem351'],
            pa: 8850,
            enabled: 1,
            ma: -1,
            pfc: 1,
            kh: cp.tebKH,
            sc: {
                k: 13,
                s: 0,
                c: 0,
                a: 0
            },
            eh: cp.cbKH,
            siq: false,
            sat: true,
            vn: 'TTextEntryItemVar10',
            vuin: 1,
            exp: ['John Smith'],
            val: 0,
            cs: 0,
            id: 'CaptivateItem348',
            as: 0,
            num: 0,
            ucase: 0,
            lcase: 0,
            nc: 0,
            cl: -1,
            trin: 0,
            trout: 0
        },
        CaptivateItem348c: {
            b: [281, 223, 487, 242],
            uid: 7456,
            dn: 'CaptivateItem348',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Text Entry Box  ',
            traccstr: '',
            ti: 2500,
            txt: '',
            rtx: 1,
            ft: 't',
            id: 'CaptivateItem348',
            ss: false,
            fc: '#fff09e',
            fa: 1,
            sb: true,
            font: {
                n: 'Verdana',
                s: 11,
                c: '#000000',
                B: 0,
                i: 0,
                u: 0
            },
            vbwr: [281, 223, 487, 242],
            vb: [281, 223, 487, 242]
        },
        CaptivateItem352: {
            type: 19,
            from: 8727,
            to: 8864,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem352c',
            immo: false,
            apsn: 'Slide7436',
            trin: 0,
            trout: 0
        },
        CaptivateItem352c: {
            b: [317, 107, 551, 180],
            uid: 7485,
            sr: cp.fd,
            ip: 'dr/CaptivateItem352.png',
            dn: 'CaptivateItem352',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Enter in the account holder’s name.  Type John Smith in the field and then press the Enter key. ',
            traccstr: '',
            ti: -1,
            vbwr: [317, 107, 551, 180],
            vb: [317, 107, 551, 180]
        },
        CaptivateItem350: {
            type: 22,
            from: 8727,
            to: 8795,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem350c',
            immo: false,
            apsn: 'Slide7436',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem350c: {
            b: [175, 252, 327, 314],
            uid: 7477,
            sr: cp.fd,
            ip: 'dr/CaptivateItem350.png',
            dn: 'CaptivateItem350',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [175, 252, 327, 314],
            vb: [175, 252, 327, 314]
        },
        CaptivateItem351: {
            type: 23,
            from: 8727,
            to: 8827,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem351c',
            immo: false,
            apsn: 'Slide7436',
            du: 101,
            trin: 15,
            trout: 15
        },
        CaptivateItem351c: {
            b: [346, 242, 505, 324],
            uid: 7481,
            sr: cp.fd,
            ip: 'dr/CaptivateItem351.png',
            dn: 'CaptivateItem351',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Please type:  John Smith  then press Enter key. ',
            traccstr: '',
            ti: -1,
            vbwr: [346, 242, 505, 324],
            vb: [346, 242, 505, 324]
        },
        Slide7436: {
            lb: '',
            id: 7436,
            from: 8727,
            to: 8864,
            mmot: false,
            mdi: 'Slide7436c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem348',
                t: 24,
                d: {
                    hc: 'CaptivateItem351',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem352',
                t: 19
            }, {
                n: 'CaptivateItem350',
                t: 22
            }, {
                n: 'CaptivateItem351',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide7436c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2501.png',
            dn: 'Slide7436',
            visible: '1'
        },
        StAd60: {
            from: 8895,
            to: 8994,
            src: 'ar/2994.mp3',
            du: 3343
        },
        CaptivateItem353: {
            type: 14,
            from: 8865,
            to: 9017,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem353c',
            immo: false,
            apsn: 'Slide7489',
            trin: 15,
            trout: 0
        },
        CaptivateItem353c: {
            b: [14, 348, 104, 370],
            uid: 7509,
            sr: cp.fd,
            dn: 'CaptivateItem353',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [13, 347, 105, 371],
            vb: [13, 347, 105, 371]
        },
        CaptivateItem354: {
            type: 13,
            from: 8865,
            to: 9017,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem354c',
            immo: false,
            apsn: 'Slide7489',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem355',
            ofct: 1,
            dep: ['CaptivateItem356'],
            pa: 9016,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem354ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem354c: {
            b: [14, 349, 103, 368],
            uid: 7513,
            sr: cp.fd,
            dn: 'CaptivateItem354',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [14, 349, 103, 368],
            vb: [14, 349, 103, 368]
        },
        CaptivateItem354ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem358: {
            type: 19,
            from: 8865,
            to: 9017,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem358c',
            immo: false,
            apsn: 'Slide7489',
            trin: 0,
            trout: 0
        },
        CaptivateItem358c: {
            b: [264, 298, 506, 379],
            uid: 7534,
            sr: cp.fd,
            ip: 'dr/CaptivateItem358.png',
            dn: 'CaptivateItem358',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Before we move on, let’s make sure that we have selected the correct bank.   Click the Bank Data button. ',
            traccstr: '',
            ti: -1,
            vbwr: [264, 298, 506, 379],
            vb: [264, 298, 506, 379]
        },
        CaptivateItem355: {
            type: 22,
            from: 8865,
            to: 8933,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem355c',
            immo: false,
            apsn: 'Slide7489',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem355c: {
            b: [66, 398, 218, 460],
            uid: 7525,
            sr: cp.fd,
            ip: 'dr/CaptivateItem355.png',
            dn: 'CaptivateItem355',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [66, 398, 218, 460],
            vb: [66, 398, 218, 460]
        },
        CaptivateItem356: {
            type: 23,
            from: 8865,
            to: 8933,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem356c',
            immo: false,
            apsn: 'Slide7489',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem356c: {
            b: [55, 370, 214, 452],
            uid: 7529,
            sr: cp.fd,
            ip: 'dr/CaptivateItem356.png',
            dn: 'CaptivateItem356',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [55, 370, 214, 452],
            vb: [55, 370, 214, 452]
        },
        Slide7489: {
            lb: '',
            id: 7489,
            from: 8865,
            to: 9017,
            mmot: false,
            mdi: 'Slide7489c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem353',
                t: 14
            }, {
                n: 'CaptivateItem354',
                t: 13,
                d: {
                    hc: 'CaptivateItem356',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem358',
                t: 19
            }, {
                n: 'CaptivateItem355',
                t: 22
            }, {
                n: 'CaptivateItem356',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem354ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide7489c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/11118.png',
            dn: 'Slide7489',
            visible: '1'
        },
        sf_2513: {
            from: 9165,
            to: 9170,
            mdi: 'sf_2513c'
        },
        sf_2513c: {
            id: 'sf_2513c',
            b: [0, 303, 790, 11],
            l: 0,
            t: 530,
            dn: 'sf_2513',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        sf_2516: {
            from: 9165,
            to: 9170,
            mdi: 'sf_2516c'
        },
        sf_2516c: {
            id: 'sf_2516c',
            b: [0, 314, 790, 21],
            l: 0,
            t: 450,
            dn: 'sf_2516',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        sf_2519: {
            from: 9165,
            to: 9170,
            mdi: 'sf_2519c'
        },
        sf_2519c: {
            id: 'sf_2519c',
            b: [0, 335, 790, 17],
            l: 0,
            t: 189,
            dn: 'sf_2519',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        StAd61: {
            from: 9048,
            to: 9163,
            src: 'ar/2997.mp3',
            du: 3892
        },
        CaptivateItem359: {
            type: 14,
            from: 9018,
            to: 9170,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem359c',
            immo: false,
            apsn: 'Slide7538',
            trin: 15,
            trout: 0
        },
        CaptivateItem359c: {
            b: [120, 449, 142, 472],
            uid: 7567,
            sr: cp.fd,
            dn: 'CaptivateItem359',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [119, 448, 143, 473],
            vb: [119, 448, 143, 473]
        },
        CaptivateItem360: {
            type: 13,
            from: 9018,
            to: 9170,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem360c',
            immo: false,
            apsn: 'Slide7538',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem361',
            ofct: 1,
            dep: ['CaptivateItem362'],
            pa: 9169,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem360ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem360c: {
            b: [120, 449, 142, 472],
            uid: 7571,
            sr: cp.fd,
            dn: 'CaptivateItem360',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [120, 449, 142, 472],
            vb: [120, 449, 142, 472]
        },
        CaptivateItem360ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem364: {
            type: 19,
            from: 9018,
            to: 9170,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem364c',
            immo: false,
            apsn: 'Slide7538',
            trin: 0,
            trout: 0
        },
        CaptivateItem364c: {
            b: [366, 321, 640, 393],
            uid: 7592,
            sr: cp.fd,
            ip: 'dr/CaptivateItem364.png',
            dn: 'CaptivateItem364',
            visible: 1,
            JSONEffectData: false,
            accstr: 'SAP displays the bank details in this window. It looks good!   Click the Continue icon. ',
            traccstr: '',
            ti: -1,
            vbwr: [366, 321, 640, 393],
            vb: [366, 321, 640, 393]
        },
        CaptivateItem361: {
            type: 22,
            from: 9018,
            to: 9107,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem361c',
            immo: false,
            apsn: 'Slide7538',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem361c: {
            b: [202, 445, 354, 507],
            uid: 7583,
            sr: cp.fd,
            ip: 'dr/CaptivateItem361.png',
            dn: 'CaptivateItem361',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [202, 445, 354, 507],
            vb: [202, 445, 354, 507]
        },
        CaptivateItem362: {
            type: 23,
            from: 9018,
            to: 9107,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem362c',
            immo: false,
            apsn: 'Slide7538',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem362c: {
            b: [133, 462, 292, 544],
            uid: 7587,
            sr: cp.fd,
            ip: 'dr/CaptivateItem362.png',
            dn: 'CaptivateItem362',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [133, 462, 292, 544],
            vb: [133, 462, 292, 544]
        },
        Slide7538: {
            lb: '',
            id: 7538,
            from: 9018,
            to: 9170,
            mmot: false,
            mdi: 'Slide7538c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'sf_2513',
                t: 64
            }, {
                n: 'sf_2516',
                t: 64
            }, {
                n: 'sf_2519',
                t: 64
            }, {
                n: 'CaptivateItem359',
                t: 14
            }, {
                n: 'CaptivateItem360',
                t: 13,
                d: {
                    hc: 'CaptivateItem362',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem364',
                t: 19
            }, {
                n: 'CaptivateItem361',
                t: 22
            }, {
                n: 'CaptivateItem362',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem360ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide7538c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2509.png',
            dn: 'Slide7538',
            visible: '1'
        },
        sf_2526: {
            from: 9255,
            to: 9260,
            mdi: 'sf_2526c'
        },
        sf_2526c: {
            id: 'sf_2526c',
            b: [0, 352, 790, 11],
            l: 0,
            t: 530,
            dn: 'sf_2526',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        sf_2529: {
            from: 9255,
            to: 9260,
            mdi: 'sf_2529c'
        },
        sf_2529c: {
            id: 'sf_2529c',
            b: [0, 363, 790, 19],
            l: 0,
            t: 223,
            dn: 'sf_2529',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        sf_2532: {
            from: 9255,
            to: 9260,
            mdi: 'sf_2532c'
        },
        sf_2532c: {
            id: 'sf_2532c',
            b: [0, 382, 790, 21],
            l: 0,
            t: 102,
            dn: 'sf_2532',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        StAd62: {
            from: 9201,
            to: 9254,
            src: 'ar/3000.mp3',
            du: 1803
        },
        CaptivateItem365: {
            type: 14,
            from: 9171,
            to: 9260,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem365c',
            immo: false,
            apsn: 'Slide7596',
            trin: 15,
            trout: 0
        },
        CaptivateItem365c: {
            b: [35, 100, 61, 126],
            uid: 7625,
            sr: cp.fd,
            dn: 'CaptivateItem365',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [34, 99, 62, 127],
            vb: [34, 99, 62, 127]
        },
        CaptivateItem366: {
            type: 13,
            from: 9171,
            to: 9260,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem366c',
            immo: false,
            apsn: 'Slide7596',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem367',
            ofct: 1,
            dep: ['CaptivateItem368'],
            pa: 9259,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem366ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem366c: {
            b: [37, 102, 59, 125],
            uid: 7629,
            sr: cp.fd,
            dn: 'CaptivateItem366',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [37, 102, 59, 125],
            vb: [37, 102, 59, 125]
        },
        CaptivateItem366ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem370: {
            type: 19,
            from: 9171,
            to: 9260,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem370c',
            immo: false,
            apsn: 'Slide7596',
            trin: 0,
            trout: 0
        },
        CaptivateItem370c: {
            b: [382, 64, 597, 126],
            uid: 7650,
            sr: cp.fd,
            ip: 'dr/CaptivateItem370.png',
            dn: 'CaptivateItem370',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Let’s move on to the next screen.   Click the Next screen icon. ',
            traccstr: '',
            ti: -1,
            vbwr: [382, 64, 597, 126],
            vb: [382, 64, 597, 126]
        },
        CaptivateItem367: {
            type: 22,
            from: 9171,
            to: 9260,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem367c',
            immo: false,
            apsn: 'Slide7596',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem367c: {
            b: [100, 135, 252, 197],
            uid: 7641,
            sr: cp.fd,
            ip: 'dr/CaptivateItem367.png',
            dn: 'CaptivateItem367',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [100, 135, 252, 197],
            vb: [100, 135, 252, 197]
        },
        CaptivateItem368: {
            type: 23,
            from: 9171,
            to: 9260,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem368c',
            immo: false,
            apsn: 'Slide7596',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem368c: {
            b: [48, 123, 252, 205],
            uid: 7645,
            sr: cp.fd,
            ip: 'dr/CaptivateItem368.png',
            dn: 'CaptivateItem368',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click the Next screen icon. ',
            traccstr: '',
            ti: -1,
            vbwr: [48, 123, 252, 205],
            vb: [48, 123, 252, 205]
        },
        Slide7596: {
            lb: '',
            id: 7596,
            from: 9171,
            to: 9260,
            mmot: false,
            mdi: 'Slide7596c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'sf_2526',
                t: 64
            }, {
                n: 'sf_2529',
                t: 64
            }, {
                n: 'sf_2532',
                t: 64
            }, {
                n: 'CaptivateItem365',
                t: 14
            }, {
                n: 'CaptivateItem366',
                t: 13,
                d: {
                    hc: 'CaptivateItem368',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem370',
                t: 19
            }, {
                n: 'CaptivateItem367',
                t: 22
            }, {
                n: 'CaptivateItem368',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem366ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide7596c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2522.png',
            dn: 'Slide7596',
            visible: '1'
        },
        StAd63: {
            from: 9291,
            to: 9467,
            src: 'ar/2824.mp3',
            du: 5930
        },
        CaptivateItem371: {
            type: 14,
            from: 9261,
            to: 9469,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem371c',
            immo: false,
            apsn: 'Slide7654',
            trin: 15,
            trout: 0
        },
        CaptivateItem371c: {
            b: [201, 222, 226, 242],
            uid: 7674,
            sr: cp.fd,
            dn: 'CaptivateItem371',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [200, 221, 227, 243],
            vb: [200, 221, 227, 243]
        },
        CaptivateItem372: {
            type: 13,
            from: 9261,
            to: 9469,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem372c',
            immo: false,
            apsn: 'Slide7654',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem373',
            ofct: 1,
            dep: ['CaptivateItem374'],
            pa: 9467,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem372ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem372c: {
            b: [202, 222, 225, 242],
            uid: 7678,
            sr: cp.fd,
            dn: 'CaptivateItem372',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [202, 222, 225, 242],
            vb: [202, 222, 225, 242]
        },
        CaptivateItem372ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem376: {
            type: 19,
            from: 9261,
            to: 9469,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem376c',
            immo: false,
            apsn: 'Slide7654',
            trin: 0,
            trout: 0
        },
        CaptivateItem376c: {
            b: [211, 338, 737, 517],
            uid: 7699,
            sr: cp.fd,
            ip: 'dr/CaptivateItem376.png',
            dn: 'CaptivateItem376',
            visible: 1,
            JSONEffectData: false,
            accstr: 'One of the most important accounting aspects for a vendor in SAP is the reconciliation account number.  A reconciliation account is a General Ledger account to which transactions from a sub-ledger (such as Accounts Payable or Receivable) are posted automatically.  Every time you post a transaction to a vendor in the sub-ledger, SAP will automatically post the transaction to this reconciliation account, too. That way the sub-ledger will always be in sync with the General Ledger.  Click the Search icon for the Recon. account field to select an account.  ',
            traccstr: '',
            ti: -1,
            vbwr: [211, 338, 737, 517],
            vb: [211, 338, 737, 517]
        },
        CaptivateItem373: {
            type: 22,
            from: 9261,
            to: 9329,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem373c',
            immo: false,
            apsn: 'Slide7654',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem373c: {
            b: [225, 250, 377, 312],
            uid: 7690,
            sr: cp.fd,
            ip: 'dr/CaptivateItem373.png',
            dn: 'CaptivateItem373',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [225, 250, 377, 312],
            vb: [225, 250, 377, 312]
        },
        CaptivateItem374: {
            type: 23,
            from: 9261,
            to: 9329,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem374c',
            immo: false,
            apsn: 'Slide7654',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem374c: {
            b: [211, 240, 370, 322],
            uid: 7694,
            sr: cp.fd,
            ip: 'dr/CaptivateItem374.png',
            dn: 'CaptivateItem374',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [211, 240, 370, 322],
            vb: [211, 240, 370, 322]
        },
        Slide7654: {
            lb: '',
            id: 7654,
            from: 9261,
            to: 9469,
            mmot: false,
            mdi: 'Slide7654c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem371',
                t: 14
            }, {
                n: 'CaptivateItem372',
                t: 13,
                d: {
                    hc: 'CaptivateItem374',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem376',
                t: 19
            }, {
                n: 'CaptivateItem373',
                t: 22
            }, {
                n: 'CaptivateItem374',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem372ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide7654c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2535.png',
            dn: 'Slide7654',
            visible: '1'
        },
        StAd64: {
            from: 9500,
            to: 9553,
            src: 'ar/3003.mp3',
            du: 1829
        },
        CaptivateItem377: {
            type: 14,
            from: 9470,
            to: 9574,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem377c',
            immo: false,
            apsn: 'Slide7703',
            trin: 15,
            trout: 0
        },
        CaptivateItem377c: {
            b: [3, 323, 146, 343],
            uid: 7723,
            sr: cp.fd,
            dn: 'CaptivateItem377',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [2, 322, 147, 344],
            vb: [2, 322, 147, 344]
        },
        CaptivateItem378: {
            type: 13,
            from: 9470,
            to: 9574,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem378c',
            immo: false,
            apsn: 'Slide7703',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem379',
            ofct: 1,
            dep: ['CaptivateItem380'],
            pa: 9573,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem378ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem378c: {
            b: [3, 324, 146, 344],
            uid: 7727,
            sr: cp.fd,
            dn: 'CaptivateItem378',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [3, 324, 146, 344],
            vb: [3, 324, 146, 344]
        },
        CaptivateItem378ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem382: {
            type: 19,
            from: 9470,
            to: 9574,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem382c',
            immo: false,
            apsn: 'Slide7703',
            trin: 0,
            trout: 0
        },
        CaptivateItem382c: {
            b: [298, 131, 562, 193],
            uid: 7748,
            sr: cp.fd,
            ip: 'dr/CaptivateItem382.png',
            dn: 'CaptivateItem382',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Select account 160000 - Trade Payables. ',
            traccstr: '',
            ti: -1,
            vbwr: [298, 131, 562, 193],
            vb: [298, 131, 562, 193]
        },
        CaptivateItem379: {
            type: 22,
            from: 9470,
            to: 9538,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem379c',
            immo: false,
            apsn: 'Slide7703',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem379c: {
            b: [137, 372, 289, 434],
            uid: 7739,
            sr: cp.fd,
            ip: 'dr/CaptivateItem379.png',
            dn: 'CaptivateItem379',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [137, 372, 289, 434],
            vb: [137, 372, 289, 434]
        },
        CaptivateItem380: {
            type: 23,
            from: 9470,
            to: 9538,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem380c',
            immo: false,
            apsn: 'Slide7703',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem380c: {
            b: [124, 349, 283, 434],
            uid: 7743,
            sr: cp.fd,
            ip: 'dr/CaptivateItem380.png',
            dn: 'CaptivateItem380',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [124, 349, 283, 434],
            vb: [124, 349, 283, 434]
        },
        Slide7703: {
            lb: '',
            id: 7703,
            from: 9470,
            to: 9574,
            mmot: false,
            mdi: 'Slide7703c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem377',
                t: 14
            }, {
                n: 'CaptivateItem378',
                t: 13,
                d: {
                    hc: 'CaptivateItem380',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem382',
                t: 19
            }, {
                n: 'CaptivateItem379',
                t: 22
            }, {
                n: 'CaptivateItem380',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem378ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide7703c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2539.png',
            dn: 'Slide7703',
            visible: '1'
        },
        sf_2547: {
            from: 9659,
            to: 9664,
            mdi: 'sf_2547c'
        },
        sf_2547c: {
            id: 'sf_2547c',
            b: [0, 403, 790, 22],
            l: 0,
            t: 75,
            dn: 'sf_2547',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        StAd65: {
            from: 9605,
            to: 9654,
            src: 'ar/3006.mp3',
            du: 1672
        },
        CaptivateItem383: {
            type: 14,
            from: 9575,
            to: 9664,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem383c',
            immo: false,
            apsn: 'Slide7752',
            trin: 15,
            trout: 0
        },
        CaptivateItem383c: {
            b: [74, 74, 102, 98],
            uid: 7776,
            sr: cp.fd,
            dn: 'CaptivateItem383',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [73, 73, 103, 99],
            vb: [73, 73, 103, 99]
        },
        CaptivateItem384: {
            type: 13,
            from: 9575,
            to: 9664,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem384c',
            immo: false,
            apsn: 'Slide7752',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem385',
            ofct: 1,
            dep: ['CaptivateItem386'],
            pa: 9663,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem384ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem384c: {
            b: [74, 74, 102, 98],
            uid: 7780,
            sr: cp.fd,
            dn: 'CaptivateItem384',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [74, 74, 102, 98],
            vb: [74, 74, 102, 98]
        },
        CaptivateItem384ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem388: {
            type: 19,
            from: 9575,
            to: 9664,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem388c',
            immo: false,
            apsn: 'Slide7752',
            trin: 0,
            trout: 0
        },
        CaptivateItem388c: {
            b: [433, 94, 598, 156],
            uid: 7801,
            sr: cp.fd,
            ip: 'dr/CaptivateItem388.png',
            dn: 'CaptivateItem388',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click the Continue icon. ',
            traccstr: '',
            ti: -1,
            vbwr: [433, 94, 598, 156],
            vb: [433, 94, 598, 156]
        },
        CaptivateItem385: {
            type: 22,
            from: 9575,
            to: 9664,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem385c',
            immo: false,
            apsn: 'Slide7752',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem385c: {
            b: [97, 140, 249, 202],
            uid: 7792,
            sr: cp.fd,
            ip: 'dr/CaptivateItem385.png',
            dn: 'CaptivateItem385',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [97, 140, 249, 202],
            vb: [97, 140, 249, 202]
        },
        CaptivateItem386: {
            type: 23,
            from: 9575,
            to: 9664,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem386c',
            immo: false,
            apsn: 'Slide7752',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem386c: {
            b: [90, 106, 249, 188],
            uid: 7796,
            sr: cp.fd,
            ip: 'dr/CaptivateItem386.png',
            dn: 'CaptivateItem386',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [90, 106, 249, 188],
            vb: [90, 106, 249, 188]
        },
        Slide7752: {
            lb: '',
            id: 7752,
            from: 9575,
            to: 9664,
            mmot: false,
            mdi: 'Slide7752c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'sf_2547',
                t: 64
            }, {
                n: 'CaptivateItem383',
                t: 14
            }, {
                n: 'CaptivateItem384',
                t: 13,
                d: {
                    hc: 'CaptivateItem386',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem388',
                t: 19
            }, {
                n: 'CaptivateItem385',
                t: 22
            }, {
                n: 'CaptivateItem386',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem384ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide7752c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2543.png',
            dn: 'Slide7752',
            visible: '1'
        },
        StAd66: {
            from: 9695,
            to: 9765,
            src: 'ar/3009.mp3',
            du: 2377
        },
        CaptivateItem389: {
            type: 14,
            from: 9665,
            to: 9775,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem389c',
            immo: false,
            apsn: 'Slide7805',
            trin: 15,
            trout: 0
        },
        CaptivateItem389c: {
            b: [372, 264, 446, 284],
            uid: 7825,
            sr: cp.fd,
            dn: 'CaptivateItem389',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [371, 263, 447, 285],
            vb: [371, 263, 447, 285]
        },
        CaptivateItem390: {
            type: 13,
            from: 9665,
            to: 9775,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem390c',
            immo: false,
            apsn: 'Slide7805',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem391',
            ofct: 1,
            dep: ['CaptivateItem392'],
            pa: 9774,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem390ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem390c: {
            b: [372, 265, 447, 285],
            uid: 7829,
            sr: cp.fd,
            dn: 'CaptivateItem390',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [372, 265, 447, 285],
            vb: [372, 265, 447, 285]
        },
        CaptivateItem390ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem394: {
            type: 19,
            from: 9665,
            to: 9775,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem394c',
            immo: false,
            apsn: 'Slide7805',
            trin: 0,
            trout: 0
        },
        CaptivateItem394c: {
            b: [423, 135, 659, 197],
            uid: 7850,
            sr: cp.fd,
            ip: 'dr/CaptivateItem394.png',
            dn: 'CaptivateItem394',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click in the Cash management group (Cash mgmnt group) field. ',
            traccstr: '',
            ti: -1,
            vbwr: [423, 135, 659, 197],
            vb: [423, 135, 659, 197]
        },
        CaptivateItem391: {
            type: 22,
            from: 9665,
            to: 9733,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem391c',
            immo: false,
            apsn: 'Slide7805',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem391c: {
            b: [460, 219, 612, 281],
            uid: 7841,
            sr: cp.fd,
            ip: 'dr/CaptivateItem391.png',
            dn: 'CaptivateItem391',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [460, 219, 612, 281],
            vb: [460, 219, 612, 281]
        },
        CaptivateItem392: {
            type: 23,
            from: 9665,
            to: 9733,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem392c',
            immo: false,
            apsn: 'Slide7805',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem392c: {
            b: [398, 285, 557, 367],
            uid: 7845,
            sr: cp.fd,
            ip: 'dr/CaptivateItem392.png',
            dn: 'CaptivateItem392',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [398, 285, 557, 367],
            vb: [398, 285, 557, 367]
        },
        Slide7805: {
            lb: '',
            id: 7805,
            from: 9665,
            to: 9775,
            mmot: false,
            mdi: 'Slide7805c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem389',
                t: 14
            }, {
                n: 'CaptivateItem390',
                t: 13,
                d: {
                    hc: 'CaptivateItem392',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem394',
                t: 19
            }, {
                n: 'CaptivateItem391',
                t: 22
            }, {
                n: 'CaptivateItem392',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem390ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide7805c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2550.png',
            dn: 'Slide7805',
            visible: '1'
        },
        StAd67: {
            from: 9806,
            to: 9973,
            src: 'ar/2827.mp3',
            du: 5617
        },
        CaptivateItem395: {
            type: 14,
            from: 9776,
            to: 9973,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem395c',
            immo: false,
            apsn: 'Slide7854',
            trin: 15,
            trout: 0
        },
        CaptivateItem395c: {
            b: [445, 263, 474, 283],
            uid: 7873,
            sr: cp.fd,
            dn: 'CaptivateItem395',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [444, 262, 475, 284],
            vb: [444, 262, 475, 284]
        },
        CaptivateItem396: {
            type: 13,
            from: 9776,
            to: 9973,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem396c',
            immo: false,
            apsn: 'Slide7854',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem397',
            ofct: 1,
            dep: ['CaptivateItem398'],
            pa: 9972,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem396ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem396c: {
            b: [446, 263, 474, 283],
            uid: 7877,
            sr: cp.fd,
            dn: 'CaptivateItem396',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [446, 263, 474, 283],
            vb: [446, 263, 474, 283]
        },
        CaptivateItem396ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem400: {
            type: 19,
            from: 9776,
            to: 9973,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem400c',
            immo: false,
            apsn: 'Slide7854',
            trin: 0,
            trout: 0
        },
        CaptivateItem400c: {
            b: [367, 98, 705, 202],
            uid: 7898,
            sr: cp.fd,
            ip: 'dr/CaptivateItem400.png',
            dn: 'CaptivateItem400',
            visible: 1,
            JSONEffectData: false,
            accstr: 'A cash management group is a group of accounts that can be transferred to a cash management system.   Let’s select a group for this vendor.  Click the Search icon.  ',
            traccstr: '',
            ti: -1,
            vbwr: [367, 98, 705, 202],
            vb: [367, 98, 705, 202]
        },
        CaptivateItem397: {
            type: 22,
            from: 9776,
            to: 9844,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem397c',
            immo: false,
            apsn: 'Slide7854',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem397c: {
            b: [494, 217, 646, 279],
            uid: 7889,
            sr: cp.fd,
            ip: 'dr/CaptivateItem397.png',
            dn: 'CaptivateItem397',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [494, 217, 646, 279],
            vb: [494, 217, 646, 279]
        },
        CaptivateItem398: {
            type: 23,
            from: 9776,
            to: 9844,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem398c',
            immo: false,
            apsn: 'Slide7854',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem398c: {
            b: [457, 283, 616, 365],
            uid: 7893,
            sr: cp.fd,
            ip: 'dr/CaptivateItem398.png',
            dn: 'CaptivateItem398',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [457, 283, 616, 365],
            vb: [457, 283, 616, 365]
        },
        Slide7854: {
            lb: '',
            id: 7854,
            from: 9776,
            to: 9975,
            mmot: false,
            mdi: 'Slide7854c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem395',
                t: 14
            }, {
                n: 'CaptivateItem396',
                t: 13,
                d: {
                    hc: 'CaptivateItem398',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem400',
                t: 19
            }, {
                n: 'CaptivateItem397',
                t: 22
            }, {
                n: 'CaptivateItem398',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem396ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide7854c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2554.png',
            dn: 'Slide7854',
            visible: '1'
        },
        sf_2562: {
            from: 10147,
            to: 10153,
            mdi: 'sf_2562c'
        },
        sf_2562c: {
            id: 'sf_2562c',
            b: [0, 425, 790, 22],
            l: 0,
            t: 90,
            dn: 'sf_2562',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        StAd68: {
            from: 10006,
            to: 10151,
            src: 'ar/3012.mp3',
            du: 4885
        },
        CaptivateItem401: {
            type: 14,
            from: 9976,
            to: 10152,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem401c',
            immo: false,
            apsn: 'Slide7902',
            trin: 15,
            trout: 0
        },
        CaptivateItem401c: {
            b: [188, 89, 216, 113],
            uid: 7927,
            sr: cp.fd,
            dn: 'CaptivateItem401',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [187, 88, 217, 114],
            vb: [187, 88, 217, 114]
        },
        CaptivateItem402: {
            type: 13,
            from: 9976,
            to: 10152,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem402c',
            immo: false,
            apsn: 'Slide7902',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem403',
            ofct: 1,
            dep: ['CaptivateItem404'],
            pa: 10151,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem402ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem402c: {
            b: [188, 89, 216, 113],
            uid: 7931,
            sr: cp.fd,
            dn: 'CaptivateItem402',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [188, 89, 216, 113],
            vb: [188, 89, 216, 113]
        },
        CaptivateItem402ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem406: {
            type: 19,
            from: 9976,
            to: 10152,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem406c',
            immo: false,
            apsn: 'Slide7902',
            trin: 0,
            trout: 0
        },
        CaptivateItem406c: {
            b: [429, 33, 748, 109],
            uid: 7952,
            sr: cp.fd,
            ip: 'dr/CaptivateItem406.png',
            dn: 'CaptivateItem406',
            visible: 1,
            JSONEffectData: false,
            accstr: 'We’ll select the first option: A1 - Domestic payments since this vendor is located in the US.  Click the Continue icon. ',
            traccstr: '',
            ti: -1,
            vbwr: [429, 33, 748, 109],
            vb: [429, 33, 748, 109]
        },
        CaptivateItem403: {
            type: 22,
            from: 9976,
            to: 10065,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem403c',
            immo: false,
            apsn: 'Slide7902',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem403c: {
            b: [35, 23, 187, 85],
            uid: 7943,
            sr: cp.fd,
            ip: 'dr/CaptivateItem403.png',
            dn: 'CaptivateItem403',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [35, 23, 187, 85],
            vb: [35, 23, 187, 85]
        },
        CaptivateItem404: {
            type: 23,
            from: 9976,
            to: 10065,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem404c',
            immo: false,
            apsn: 'Slide7902',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem404c: {
            b: [46, 113, 205, 195],
            uid: 7947,
            sr: cp.fd,
            ip: 'dr/CaptivateItem404.png',
            dn: 'CaptivateItem404',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [46, 113, 205, 195],
            vb: [46, 113, 205, 195]
        },
        Slide7902: {
            lb: '',
            id: 7902,
            from: 9976,
            to: 10153,
            mmot: false,
            mdi: 'Slide7902c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'sf_2562',
                t: 64
            }, {
                n: 'CaptivateItem401',
                t: 14
            }, {
                n: 'CaptivateItem402',
                t: 13,
                d: {
                    hc: 'CaptivateItem404',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem406',
                t: 19
            }, {
                n: 'CaptivateItem403',
                t: 22
            }, {
                n: 'CaptivateItem404',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem402ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide7902c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2558.png',
            dn: 'Slide7902',
            visible: '1'
        },
        StAd69: {
            from: 10184,
            to: 10355,
            src: 'ar/3015.mp3',
            du: 5747
        },
        CaptivateItem407: {
            type: 14,
            from: 10154,
            to: 10357,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem407c',
            immo: false,
            apsn: 'Slide7956',
            trin: 15,
            trout: 0
        },
        CaptivateItem407c: {
            b: [372, 224, 398, 242],
            uid: 7976,
            sr: cp.fd,
            dn: 'CaptivateItem407',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [371, 223, 399, 243],
            vb: [371, 223, 399, 243]
        },
        CaptivateItem408: {
            type: 13,
            from: 10154,
            to: 10357,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem408c',
            immo: false,
            apsn: 'Slide7956',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem409',
            ofct: 1,
            dep: ['CaptivateItem410'],
            pa: 10356,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem408ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem408c: {
            b: [372, 223, 399, 243],
            uid: 7980,
            sr: cp.fd,
            dn: 'CaptivateItem408',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [372, 223, 399, 243],
            vb: [372, 223, 399, 243]
        },
        CaptivateItem408ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem412: {
            type: 19,
            from: 10154,
            to: 10357,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem412c',
            immo: false,
            apsn: 'Slide7956',
            trin: 0,
            trout: 0
        },
        CaptivateItem412c: {
            b: [352, 130, 643, 203],
            uid: 8001,
            sr: cp.fd,
            ip: 'dr/CaptivateItem412.png',
            dn: 'CaptivateItem412',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Now, specify a sort key. This key will determine how line items for a vendor are sorted in lists.   Click in the Sort key field. ',
            traccstr: '',
            ti: -1,
            vbwr: [352, 130, 643, 203],
            vb: [352, 130, 643, 203]
        },
        CaptivateItem409: {
            type: 22,
            from: 10154,
            to: 10222,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem409c',
            immo: false,
            apsn: 'Slide7956',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem409c: {
            b: [426, 218, 578, 280],
            uid: 7992,
            sr: cp.fd,
            ip: 'dr/CaptivateItem409.png',
            dn: 'CaptivateItem409',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [426, 218, 578, 280],
            vb: [426, 218, 578, 280]
        },
        CaptivateItem410: {
            type: 23,
            from: 10154,
            to: 10222,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem410c',
            immo: false,
            apsn: 'Slide7956',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem410c: {
            b: [385, 242, 544, 324],
            uid: 7996,
            sr: cp.fd,
            ip: 'dr/CaptivateItem410.png',
            dn: 'CaptivateItem410',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [385, 242, 544, 324],
            vb: [385, 242, 544, 324]
        },
        Slide7956: {
            lb: '',
            id: 7956,
            from: 10154,
            to: 10357,
            mmot: false,
            mdi: 'Slide7956c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem407',
                t: 14
            }, {
                n: 'CaptivateItem408',
                t: 13,
                d: {
                    hc: 'CaptivateItem410',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem412',
                t: 19
            }, {
                n: 'CaptivateItem409',
                t: 22
            }, {
                n: 'CaptivateItem410',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem408ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide7956c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2565.png',
            dn: 'Slide7956',
            visible: '1'
        },
        StAd70: {
            from: 10388,
            to: 10434,
            src: 'ar/3018.mp3',
            du: 1593
        },
        CaptivateItem413: {
            type: 14,
            from: 10358,
            to: 10447,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem413c',
            immo: false,
            apsn: 'Slide8005',
            trin: 15,
            trout: 0
        },
        CaptivateItem413c: {
            b: [395, 221, 424, 241],
            uid: 8025,
            sr: cp.fd,
            dn: 'CaptivateItem413',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [394, 220, 425, 242],
            vb: [394, 220, 425, 242]
        },
        CaptivateItem414: {
            type: 13,
            from: 10358,
            to: 10447,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem414c',
            immo: false,
            apsn: 'Slide8005',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem415',
            ofct: 1,
            dep: ['CaptivateItem416'],
            pa: 10446,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem414ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem414c: {
            b: [396, 221, 424, 241],
            uid: 8029,
            sr: cp.fd,
            dn: 'CaptivateItem414',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [396, 221, 424, 241],
            vb: [396, 221, 424, 241]
        },
        CaptivateItem414ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem418: {
            type: 19,
            from: 10358,
            to: 10447,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem418c',
            immo: false,
            apsn: 'Slide8005',
            trin: 0,
            trout: 0
        },
        CaptivateItem418c: {
            b: [465, 191, 617, 253],
            uid: 8050,
            sr: cp.fd,
            ip: 'dr/CaptivateItem418.png',
            dn: 'CaptivateItem418',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Select a sort key.  Click the Search icon. ',
            traccstr: '',
            ti: -1,
            vbwr: [465, 191, 617, 253],
            vb: [465, 191, 617, 253]
        },
        CaptivateItem415: {
            type: 22,
            from: 10358,
            to: 10426,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem415c',
            immo: false,
            apsn: 'Slide8005',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem415c: {
            b: [287, 152, 439, 214],
            uid: 8041,
            sr: cp.fd,
            ip: 'dr/CaptivateItem415.png',
            dn: 'CaptivateItem415',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [287, 152, 439, 214],
            vb: [287, 152, 439, 214]
        },
        CaptivateItem416: {
            type: 23,
            from: 10358,
            to: 10426,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem416c',
            immo: false,
            apsn: 'Slide8005',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem416c: {
            b: [404, 243, 563, 325],
            uid: 8045,
            sr: cp.fd,
            ip: 'dr/CaptivateItem416.png',
            dn: 'CaptivateItem416',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [404, 243, 563, 325],
            vb: [404, 243, 563, 325]
        },
        Slide8005: {
            lb: '',
            id: 8005,
            from: 10358,
            to: 10447,
            mmot: false,
            mdi: 'Slide8005c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem413',
                t: 14
            }, {
                n: 'CaptivateItem414',
                t: 13,
                d: {
                    hc: 'CaptivateItem416',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem418',
                t: 19
            }, {
                n: 'CaptivateItem415',
                t: 22
            }, {
                n: 'CaptivateItem416',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem414ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide8005c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2569.png',
            dn: 'Slide8005',
            visible: '1'
        },
        StAd71: {
            from: 10478,
            to: 10658,
            src: 'ar/3021.mp3',
            du: 6061
        },
        CaptivateItem419: {
            type: 14,
            from: 10448,
            to: 10660,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem419c',
            immo: false,
            apsn: 'Slide8054',
            trin: 15,
            trout: 0
        },
        CaptivateItem419c: {
            b: [256, 172, 378, 192],
            uid: 8074,
            sr: cp.fd,
            dn: 'CaptivateItem419',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [255, 171, 379, 193],
            vb: [255, 171, 379, 193]
        },
        CaptivateItem420: {
            type: 13,
            from: 10448,
            to: 10660,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem420c',
            immo: false,
            apsn: 'Slide8054',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem421',
            ofct: 1,
            dep: ['CaptivateItem422'],
            pa: 10659,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem420ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem420c: {
            b: [257, 172, 378, 192],
            uid: 8078,
            sr: cp.fd,
            dn: 'CaptivateItem420',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [257, 172, 378, 192],
            vb: [257, 172, 378, 192]
        },
        CaptivateItem420ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem424: {
            type: 19,
            from: 10448,
            to: 10660,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem424c',
            immo: false,
            apsn: 'Slide8054',
            trin: 0,
            trout: 0
        },
        CaptivateItem424c: {
            b: [464, 140, 736, 216],
            uid: 8099,
            sr: cp.fd,
            ip: 'dr/CaptivateItem424.png',
            dn: 'CaptivateItem424',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Let’s select 001 - Posting date. This will sort all line items by posting date by default.  Click 001 - Posting date. ',
            traccstr: '',
            ti: -1,
            vbwr: [464, 140, 736, 216],
            vb: [464, 140, 736, 216]
        },
        CaptivateItem421: {
            type: 22,
            from: 10448,
            to: 10516,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem421c',
            immo: false,
            apsn: 'Slide8054',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem421c: {
            b: [94, 150, 246, 212],
            uid: 8090,
            sr: cp.fd,
            ip: 'dr/CaptivateItem421.png',
            dn: 'CaptivateItem421',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [94, 150, 246, 212],
            vb: [94, 150, 246, 212]
        },
        CaptivateItem422: {
            type: 23,
            from: 10448,
            to: 10516,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem422c',
            immo: false,
            apsn: 'Slide8054',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem422c: {
            b: [290, 192, 449, 274],
            uid: 8094,
            sr: cp.fd,
            ip: 'dr/CaptivateItem422.png',
            dn: 'CaptivateItem422',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [290, 192, 449, 274],
            vb: [290, 192, 449, 274]
        },
        Slide8054: {
            lb: '',
            id: 8054,
            from: 10448,
            to: 10660,
            mmot: false,
            mdi: 'Slide8054c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem419',
                t: 14
            }, {
                n: 'CaptivateItem420',
                t: 13,
                d: {
                    hc: 'CaptivateItem422',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem424',
                t: 19
            }, {
                n: 'CaptivateItem421',
                t: 22
            }, {
                n: 'CaptivateItem422',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem420ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide8054c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2573.png',
            dn: 'Slide8054',
            visible: '1'
        },
        sf_2581: {
            from: 10745,
            to: 10750,
            mdi: 'sf_2581c'
        },
        sf_2581c: {
            id: 'sf_2581c',
            b: [0, 447, 790, 22],
            l: 0,
            t: 108,
            dn: 'sf_2581',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        StAd72: {
            from: 10691,
            to: 10740,
            src: 'ar/3024.mp3',
            du: 1672
        },
        CaptivateItem425: {
            type: 14,
            from: 10661,
            to: 10750,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem425c',
            immo: false,
            apsn: 'Slide8103',
            trin: 15,
            trout: 0
        },
        CaptivateItem425c: {
            b: [254, 107, 282, 131],
            uid: 8127,
            sr: cp.fd,
            dn: 'CaptivateItem425',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [253, 106, 283, 132],
            vb: [253, 106, 283, 132]
        },
        CaptivateItem426: {
            type: 13,
            from: 10661,
            to: 10750,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem426c',
            immo: false,
            apsn: 'Slide8103',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem427',
            ofct: 1,
            dep: ['CaptivateItem428'],
            pa: 10749,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem426ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem426c: {
            b: [254, 107, 282, 131],
            uid: 8131,
            sr: cp.fd,
            dn: 'CaptivateItem426',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [254, 107, 282, 131],
            vb: [254, 107, 282, 131]
        },
        CaptivateItem426ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem430: {
            type: 19,
            from: 10661,
            to: 10750,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem430c',
            immo: false,
            apsn: 'Slide8103',
            trin: 0,
            trout: 0
        },
        CaptivateItem430c: {
            b: [507, 85, 664, 147],
            uid: 8152,
            sr: cp.fd,
            ip: 'dr/CaptivateItem430.png',
            dn: 'CaptivateItem430',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click the Continue icon. ',
            traccstr: '',
            ti: -1,
            vbwr: [507, 85, 664, 147],
            vb: [507, 85, 664, 147]
        },
        CaptivateItem427: {
            type: 22,
            from: 10661,
            to: 10750,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem427c',
            immo: false,
            apsn: 'Slide8103',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem427c: {
            b: [94, 64, 246, 126],
            uid: 8143,
            sr: cp.fd,
            ip: 'dr/CaptivateItem427.png',
            dn: 'CaptivateItem427',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [94, 64, 246, 126],
            vb: [94, 64, 246, 126]
        },
        CaptivateItem428: {
            type: 23,
            from: 10661,
            to: 10750,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem428c',
            immo: false,
            apsn: 'Slide8103',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem428c: {
            b: [118, 131, 270, 210],
            uid: 8147,
            sr: cp.fd,
            ip: 'dr/CaptivateItem428.png',
            dn: 'CaptivateItem428',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [118, 131, 270, 210],
            vb: [118, 131, 270, 210]
        },
        Slide8103: {
            lb: '',
            id: 8103,
            from: 10661,
            to: 10750,
            mmot: false,
            mdi: 'Slide8103c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'sf_2581',
                t: 64
            }, {
                n: 'CaptivateItem425',
                t: 14
            }, {
                n: 'CaptivateItem426',
                t: 13,
                d: {
                    hc: 'CaptivateItem428',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem430',
                t: 19
            }, {
                n: 'CaptivateItem427',
                t: 22
            }, {
                n: 'CaptivateItem428',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem426ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide8103c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2577.png',
            dn: 'Slide8103',
            visible: '1'
        },
        sf_2588: {
            from: 10832,
            to: 10837,
            mdi: 'sf_2588c'
        },
        sf_2588c: {
            id: 'sf_2588c',
            b: [0, 469, 790, 11],
            l: 0,
            t: 530,
            dn: 'sf_2588',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        sf_2591: {
            from: 10832,
            to: 10837,
            mdi: 'sf_2591c'
        },
        sf_2591c: {
            id: 'sf_2591c',
            b: [0, 480, 790, 19],
            l: 0,
            t: 223,
            dn: 'sf_2591',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        sf_2594: {
            from: 10832,
            to: 10837,
            mdi: 'sf_2594c'
        },
        sf_2594c: {
            id: 'sf_2594c',
            b: [0, 499, 790, 21],
            l: 0,
            t: 102,
            dn: 'sf_2594',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        StAd73: {
            from: 10781,
            to: 10823,
            src: 'ar/3027.mp3',
            du: 1463
        },
        CaptivateItem431: {
            type: 14,
            from: 10751,
            to: 10837,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem431c',
            immo: false,
            apsn: 'Slide8156',
            trin: 15,
            trout: 0
        },
        CaptivateItem431c: {
            b: [36, 100, 60, 125],
            uid: 8185,
            sr: cp.fd,
            dn: 'CaptivateItem431',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [35, 99, 61, 126],
            vb: [35, 99, 61, 126]
        },
        CaptivateItem432: {
            type: 13,
            from: 10751,
            to: 10837,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem432c',
            immo: false,
            apsn: 'Slide8156',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem433',
            ofct: 1,
            dep: ['CaptivateItem434'],
            pa: 10836,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem432ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem432c: {
            b: [37, 102, 59, 125],
            uid: 8189,
            sr: cp.fd,
            dn: 'CaptivateItem432',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [37, 102, 59, 125],
            vb: [37, 102, 59, 125]
        },
        CaptivateItem432ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem436: {
            type: 19,
            from: 10751,
            to: 10837,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem436c',
            immo: false,
            apsn: 'Slide8156',
            trin: 0,
            trout: 0
        },
        CaptivateItem436c: {
            b: [513, 106, 689, 168],
            uid: 8210,
            sr: cp.fd,
            ip: 'dr/CaptivateItem436.png',
            dn: 'CaptivateItem436',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Let’s go to the next screen.  Click the Next screen icon. ',
            traccstr: '',
            ti: -1,
            vbwr: [513, 106, 689, 168],
            vb: [513, 106, 689, 168]
        },
        CaptivateItem433: {
            type: 22,
            from: 10751,
            to: 10837,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem433c',
            immo: false,
            apsn: 'Slide8156',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem433c: {
            b: [92, 56, 244, 118],
            uid: 8201,
            sr: cp.fd,
            ip: 'dr/CaptivateItem433.png',
            dn: 'CaptivateItem433',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [92, 56, 244, 118],
            vb: [92, 56, 244, 118]
        },
        CaptivateItem434: {
            type: 23,
            from: 10751,
            to: 10837,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem434c',
            immo: false,
            apsn: 'Slide8156',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem434c: {
            b: [46, 121, 205, 203],
            uid: 8205,
            sr: cp.fd,
            ip: 'dr/CaptivateItem434.png',
            dn: 'CaptivateItem434',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [46, 121, 205, 203],
            vb: [46, 121, 205, 203]
        },
        Slide8156: {
            lb: '',
            id: 8156,
            from: 10751,
            to: 10837,
            mmot: false,
            mdi: 'Slide8156c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'sf_2588',
                t: 64
            }, {
                n: 'sf_2591',
                t: 64
            }, {
                n: 'sf_2594',
                t: 64
            }, {
                n: 'CaptivateItem431',
                t: 14
            }, {
                n: 'CaptivateItem432',
                t: 13,
                d: {
                    hc: 'CaptivateItem434',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem436',
                t: 19
            }, {
                n: 'CaptivateItem433',
                t: 22
            }, {
                n: 'CaptivateItem434',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem432ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide8156c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2584.png',
            dn: 'Slide8156',
            visible: '1'
        },
        StAd74: {
            from: 10868,
            to: 10972,
            src: 'ar/3030.mp3',
            du: 3501
        },
        CaptivateItem437: {
            type: 14,
            from: 10838,
            to: 10990,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem437c',
            immo: false,
            apsn: 'Slide8214',
            trin: 15,
            trout: 0
        },
        CaptivateItem437c: {
            b: [156, 222, 181, 242],
            uid: 8234,
            sr: cp.fd,
            dn: 'CaptivateItem437',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [155, 221, 182, 243],
            vb: [155, 221, 182, 243]
        },
        CaptivateItem438: {
            type: 13,
            from: 10838,
            to: 10990,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem438c',
            immo: false,
            apsn: 'Slide8214',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem439',
            ofct: 1,
            dep: ['CaptivateItem440'],
            pa: 10989,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem438ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem438c: {
            b: [156, 223, 181, 243],
            uid: 8238,
            sr: cp.fd,
            dn: 'CaptivateItem438',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [156, 223, 181, 243],
            vb: [156, 223, 181, 243]
        },
        CaptivateItem438ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem442: {
            type: 19,
            from: 10838,
            to: 10990,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem442c',
            immo: false,
            apsn: 'Slide8214',
            trin: 0,
            trout: 0
        },
        CaptivateItem442c: {
            b: [317, 115, 745, 177],
            uid: 8259,
            sr: cp.fd,
            ip: 'dr/CaptivateItem442.png',
            dn: 'CaptivateItem442',
            visible: 1,
            JSONEffectData: false,
            accstr: 'On this screen, we need to specify the payment terms for this vendor.   Click the Search icon to select the correct payment terms. ',
            traccstr: '',
            ti: -1,
            vbwr: [317, 115, 745, 177],
            vb: [317, 115, 745, 177]
        },
        CaptivateItem439: {
            type: 22,
            from: 10838,
            to: 10906,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem439c',
            immo: false,
            apsn: 'Slide8214',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem439c: {
            b: [172, 269, 324, 331],
            uid: 8250,
            sr: cp.fd,
            ip: 'dr/CaptivateItem439.png',
            dn: 'CaptivateItem439',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [172, 269, 324, 331],
            vb: [172, 269, 324, 331]
        },
        CaptivateItem440: {
            type: 23,
            from: 10838,
            to: 10906,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem440c',
            immo: false,
            apsn: 'Slide8214',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem440c: {
            b: [165, 243, 324, 325],
            uid: 8254,
            sr: cp.fd,
            ip: 'dr/CaptivateItem440.png',
            dn: 'CaptivateItem440',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [165, 243, 324, 325],
            vb: [165, 243, 324, 325]
        },
        Slide8214: {
            lb: '',
            id: 8214,
            from: 10838,
            to: 10990,
            mmot: false,
            mdi: 'Slide8214c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem437',
                t: 14
            }, {
                n: 'CaptivateItem438',
                t: 13,
                d: {
                    hc: 'CaptivateItem440',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem442',
                t: 19
            }, {
                n: 'CaptivateItem439',
                t: 22
            }, {
                n: 'CaptivateItem440',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem438ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide8214c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2597.png',
            dn: 'Slide8214',
            visible: '1'
        },
        StAd75: {
            from: 11021,
            to: 11192,
            src: 'ar/2832.mp3',
            du: 5747
        },
        CaptivateItem444: {
            type: 19,
            from: 10991,
            to: 11194,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem444c',
            immo: false,
            apsn: 'Slide8263',
            trin: 0,
            trout: 0
        },
        CaptivateItem444c: {
            b: [391, 26, 638, 109],
            uid: 8283,
            sr: cp.fd,
            ip: 'dr/CaptivateItem444.png',
            dn: 'CaptivateItem444',
            visible: 1,
            JSONEffectData: false,
            accstr: 'SAP displays a list of all payment terms that are set up in the system.   Scroll down. ',
            traccstr: '',
            ti: -1,
            vbwr: [391, 26, 638, 109],
            vb: [391, 26, 638, 109]
        },
        CaptivateItem445: {
            type: 13,
            from: 10991,
            to: 11194,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem445c',
            immo: false,
            apsn: 'Slide8263',
            JSONTT_4: [],
            cpa: false,
            oca: 'cpCmndResume = 1;',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem447',
            ofct: 1,
            dep: ['CaptivateItem448'],
            pa: 11193,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem445ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem445c: {
            b: [558, 182, 581, 433],
            uid: 8287,
            sr: cp.fd,
            dn: 'CaptivateItem445',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [558, 182, 581, 433],
            vb: [558, 182, 581, 433]
        },
        CaptivateItem445ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem446: {
            type: 14,
            from: 10991,
            to: 11194,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem446c',
            immo: false,
            apsn: 'Slide8263',
            trin: 15,
            trout: 0
        },
        CaptivateItem446c: {
            b: [555, 182, 582, 428],
            uid: 8299,
            sr: cp.fd,
            dn: 'CaptivateItem446',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [554, 181, 583, 429],
            vb: [554, 181, 583, 429]
        },
        CaptivateItem447: {
            type: 22,
            from: 10991,
            to: 11080,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem447c',
            immo: false,
            apsn: 'Slide8263',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem447c: {
            b: [391, 373, 543, 435],
            uid: 8303,
            sr: cp.fd,
            ip: 'dr/CaptivateItem447.png',
            dn: 'CaptivateItem447',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [391, 373, 543, 435],
            vb: [391, 373, 543, 435]
        },
        CaptivateItem448: {
            type: 23,
            from: 10991,
            to: 11080,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem448c',
            immo: false,
            apsn: 'Slide8263',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem448c: {
            b: [399, 295, 554, 374],
            uid: 8307,
            sr: cp.fd,
            ip: 'dr/CaptivateItem448.png',
            dn: 'CaptivateItem448',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Scroll down. ',
            traccstr: '',
            ti: -1,
            vbwr: [399, 295, 554, 374],
            vb: [399, 295, 554, 374]
        },
        Slide8263: {
            lb: '',
            id: 8263,
            from: 10991,
            to: 11194,
            mmot: false,
            mdi: 'Slide8263c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem444',
                t: 19
            }, {
                n: 'CaptivateItem445',
                t: 13,
                d: {
                    hc: 'CaptivateItem448',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem446',
                t: 14
            }, {
                n: 'CaptivateItem447',
                t: 22
            }, {
                n: 'CaptivateItem448',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem445ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide8263c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2601.png',
            dn: 'Slide8263',
            visible: '1'
        },
        StAd76: {
            from: 11225,
            to: 11297,
            src: 'ar/3033.mp3',
            du: 2456
        },
        CaptivateItem449: {
            type: 14,
            from: 11195,
            to: 11305,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem449c',
            immo: false,
            apsn: 'Slide8311',
            trin: 15,
            trout: 0
        },
        CaptivateItem449c: {
            b: [3, 342, 103, 362],
            uid: 8331,
            sr: cp.fd,
            dn: 'CaptivateItem449',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [2, 341, 104, 363],
            vb: [2, 341, 104, 363]
        },
        CaptivateItem450: {
            type: 13,
            from: 11195,
            to: 11305,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem450c',
            immo: false,
            apsn: 'Slide8311',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem451',
            ofct: 1,
            dep: ['CaptivateItem452'],
            pa: 11304,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem450ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem450c: {
            b: [3, 342, 103, 362],
            uid: 8335,
            sr: cp.fd,
            dn: 'CaptivateItem450',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [3, 342, 103, 362],
            vb: [3, 342, 103, 362]
        },
        CaptivateItem450ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem454: {
            type: 19,
            from: 11195,
            to: 11305,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem454c',
            immo: false,
            apsn: 'Slide8311',
            trin: 0,
            trout: 0
        },
        CaptivateItem454c: {
            b: [348, 193, 588, 255],
            uid: 8356,
            sr: cp.fd,
            ip: 'dr/CaptivateItem454.png',
            dn: 'CaptivateItem454',
            visible: 1,
            JSONEffectData: false,
            accstr: 'This vendor has terms of 30 days net.   Select NT30 - Net 30. ',
            traccstr: '',
            ti: -1,
            vbwr: [348, 193, 588, 255],
            vb: [348, 193, 588, 255]
        },
        CaptivateItem451: {
            type: 22,
            from: 11195,
            to: 11263,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem451c',
            immo: false,
            apsn: 'Slide8311',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem451c: {
            b: [148, 298, 300, 360],
            uid: 8347,
            sr: cp.fd,
            ip: 'dr/CaptivateItem451.png',
            dn: 'CaptivateItem451',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [148, 298, 300, 360],
            vb: [148, 298, 300, 360]
        },
        CaptivateItem452: {
            type: 23,
            from: 11195,
            to: 11263,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem452c',
            immo: false,
            apsn: 'Slide8311',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem452c: {
            b: [58, 362, 217, 444],
            uid: 8351,
            sr: cp.fd,
            ip: 'dr/CaptivateItem452.png',
            dn: 'CaptivateItem452',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [58, 362, 217, 444],
            vb: [58, 362, 217, 444]
        },
        Slide8311: {
            lb: '',
            id: 8311,
            from: 11195,
            to: 11305,
            mmot: false,
            mdi: 'Slide8311c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem449',
                t: 14
            }, {
                n: 'CaptivateItem450',
                t: 13,
                d: {
                    hc: 'CaptivateItem452',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem454',
                t: 19
            }, {
                n: 'CaptivateItem451',
                t: 22
            }, {
                n: 'CaptivateItem452',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem450ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide8311c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2605.png',
            dn: 'Slide8311',
            visible: '1'
        },
        sf_2613: {
            from: 11390,
            to: 11395,
            mdi: 'sf_2613c'
        },
        sf_2613c: {
            id: 'sf_2613c',
            b: [0, 520, 790, 22],
            l: 0,
            t: 68,
            dn: 'sf_2613',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        StAd77: {
            from: 11336,
            to: 11385,
            src: 'ar/3036.mp3',
            du: 1672
        },
        CaptivateItem455: {
            type: 14,
            from: 11306,
            to: 11395,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem455c',
            immo: false,
            apsn: 'Slide8360',
            trin: 15,
            trout: 0
        },
        CaptivateItem455c: {
            b: [3, 67, 31, 91],
            uid: 8384,
            sr: cp.fd,
            dn: 'CaptivateItem455',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [2, 66, 32, 92],
            vb: [2, 66, 32, 92]
        },
        CaptivateItem456: {
            type: 19,
            from: 11306,
            to: 11395,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem456c',
            immo: false,
            apsn: 'Slide8360',
            trin: 0,
            trout: 0
        },
        CaptivateItem456c: {
            b: [358, 74, 528, 136],
            uid: 8388,
            sr: cp.fd,
            ip: 'dr/CaptivateItem456.png',
            dn: 'CaptivateItem456',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click the Continue icon. ',
            traccstr: '',
            ti: -1,
            vbwr: [358, 74, 528, 136],
            vb: [358, 74, 528, 136]
        },
        CaptivateItem457: {
            type: 13,
            from: 11306,
            to: 11395,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem457c',
            immo: false,
            apsn: 'Slide8360',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem458',
            ofct: 1,
            dep: ['CaptivateItem459'],
            pa: 11394,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem457ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem457c: {
            b: [3, 67, 31, 91],
            uid: 8392,
            sr: cp.fd,
            dn: 'CaptivateItem457',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [3, 67, 31, 91],
            vb: [3, 67, 31, 91]
        },
        CaptivateItem457ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem458: {
            type: 22,
            from: 11306,
            to: 11395,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem458c',
            immo: false,
            apsn: 'Slide8360',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem458c: {
            b: [31, 129, 183, 191],
            uid: 8404,
            sr: cp.fd,
            ip: 'dr/CaptivateItem458.png',
            dn: 'CaptivateItem458',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [31, 129, 183, 191],
            vb: [31, 129, 183, 191]
        },
        CaptivateItem459: {
            type: 23,
            from: 11306,
            to: 11395,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem459c',
            immo: false,
            apsn: 'Slide8360',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem459c: {
            b: [17, 91, 176, 173],
            uid: 8408,
            sr: cp.fd,
            ip: 'dr/CaptivateItem459.png',
            dn: 'CaptivateItem459',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [17, 91, 176, 173],
            vb: [17, 91, 176, 173]
        },
        Slide8360: {
            lb: '',
            id: 8360,
            from: 11306,
            to: 11395,
            mmot: false,
            mdi: 'Slide8360c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'sf_2613',
                t: 64
            }, {
                n: 'CaptivateItem455',
                t: 14
            }, {
                n: 'CaptivateItem456',
                t: 19
            }, {
                n: 'CaptivateItem457',
                t: 13,
                d: {
                    hc: 'CaptivateItem459',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem458',
                t: 22
            }, {
                n: 'CaptivateItem459',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem457ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide8360c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2609.png',
            dn: 'Slide8360',
            visible: '1'
        },
        StAd78: {
            from: 11426,
            to: 11672,
            src: 'ar/3039.mp3',
            du: 8255
        },
        CaptivateItem461: {
            type: 14,
            from: 11396,
            to: 11674,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem461c',
            immo: false,
            apsn: 'Slide8413',
            trin: 15,
            trout: 0
        },
        CaptivateItem461c: {
            b: [372, 244, 395, 264],
            uid: 8433,
            sr: cp.fd,
            dn: 'CaptivateItem461',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [371, 243, 396, 265],
            vb: [371, 243, 396, 265]
        },
        CaptivateItem462: {
            type: 13,
            from: 11396,
            to: 11674,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem462c',
            immo: false,
            apsn: 'Slide8413',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem463',
            ofct: 1,
            dep: ['CaptivateItem464'],
            pa: 11673,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem462ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem462c: {
            b: [373, 244, 394, 264],
            uid: 8437,
            sr: cp.fd,
            dn: 'CaptivateItem462',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [373, 244, 394, 264],
            vb: [373, 244, 394, 264]
        },
        CaptivateItem462ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem466: {
            type: 19,
            from: 11396,
            to: 11674,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem466c',
            immo: false,
            apsn: 'Slide8413',
            trin: 0,
            trout: 0
        },
        CaptivateItem466c: {
            b: [286, 35, 770, 134],
            uid: 8458,
            sr: cp.fd,
            ip: 'dr/CaptivateItem466.png',
            dn: 'CaptivateItem466',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Now, select the Check double invoice (Chk double inv.) option. When this option is selected, SAP will alert you in case you are posting a similar invoice twice.   This is a great option that can be used to avoid accidental double posting.  Click the Chk double inv. checkbox to select it. ',
            traccstr: '',
            ti: -1,
            vbwr: [286, 35, 770, 134],
            vb: [286, 35, 770, 134]
        },
        CaptivateItem463: {
            type: 22,
            from: 11396,
            to: 11464,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem463c',
            immo: false,
            apsn: 'Slide8413',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem463c: {
            b: [436, 203, 588, 265],
            uid: 8449,
            sr: cp.fd,
            ip: 'dr/CaptivateItem463.png',
            dn: 'CaptivateItem463',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [436, 203, 588, 265],
            vb: [436, 203, 588, 265]
        },
        CaptivateItem464: {
            type: 23,
            from: 11396,
            to: 11464,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem464c',
            immo: false,
            apsn: 'Slide8413',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem464c: {
            b: [381, 265, 540, 347],
            uid: 8453,
            sr: cp.fd,
            ip: 'dr/CaptivateItem464.png',
            dn: 'CaptivateItem464',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [381, 265, 540, 347],
            vb: [381, 265, 540, 347]
        },
        Slide8413: {
            lb: '',
            id: 8413,
            from: 11396,
            to: 11674,
            mmot: false,
            mdi: 'Slide8413c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem461',
                t: 14
            }, {
                n: 'CaptivateItem462',
                t: 13,
                d: {
                    hc: 'CaptivateItem464',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem466',
                t: 19
            }, {
                n: 'CaptivateItem463',
                t: 22
            }, {
                n: 'CaptivateItem464',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem462ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide8413c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2616.png',
            dn: 'Slide8413',
            visible: '1'
        },
        StAd79: {
            from: 11705,
            to: 11783,
            src: 'ar/3042.mp3',
            du: 2638
        },
        CaptivateItem467: {
            type: 14,
            from: 11675,
            to: 11794,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem467c',
            immo: false,
            apsn: 'Slide8462',
            trin: 15,
            trout: 0
        },
        CaptivateItem467c: {
            b: [125, 329, 203, 347],
            uid: 8482,
            sr: cp.fd,
            dn: 'CaptivateItem467',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [124, 328, 204, 348],
            vb: [124, 328, 204, 348]
        },
        CaptivateItem468: {
            type: 13,
            from: 11675,
            to: 11794,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem468c',
            immo: false,
            apsn: 'Slide8462',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem469',
            ofct: 1,
            dep: ['CaptivateItem470'],
            pa: 11793,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem468ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem468c: {
            b: [126, 329, 202, 349],
            uid: 8486,
            sr: cp.fd,
            dn: 'CaptivateItem468',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [126, 329, 202, 349],
            vb: [126, 329, 202, 349]
        },
        CaptivateItem468ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem472: {
            type: 19,
            from: 11675,
            to: 11794,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem472c',
            immo: false,
            apsn: 'Slide8462',
            trin: 0,
            trout: 0
        },
        CaptivateItem472c: {
            b: [430, 177, 707, 239],
            uid: 8507,
            sr: cp.fd,
            ip: 'dr/CaptivateItem472.png',
            dn: 'CaptivateItem472',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Select the payment methods for this vendor.   Click in the Payment methods field. ',
            traccstr: '',
            ti: -1,
            vbwr: [430, 177, 707, 239],
            vb: [430, 177, 707, 239]
        },
        CaptivateItem469: {
            type: 22,
            from: 11675,
            to: 11743,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem469c',
            immo: false,
            apsn: 'Slide8462',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem469c: {
            b: [170, 377, 322, 439],
            uid: 8498,
            sr: cp.fd,
            ip: 'dr/CaptivateItem469.png',
            dn: 'CaptivateItem469',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [170, 377, 322, 439],
            vb: [170, 377, 322, 439]
        },
        CaptivateItem470: {
            type: 23,
            from: 11675,
            to: 11743,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem470c',
            immo: false,
            apsn: 'Slide8462',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem470c: {
            b: [159, 349, 318, 431],
            uid: 8502,
            sr: cp.fd,
            ip: 'dr/CaptivateItem470.png',
            dn: 'CaptivateItem470',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [159, 349, 318, 431],
            vb: [159, 349, 318, 431]
        },
        Slide8462: {
            lb: '',
            id: 8462,
            from: 11675,
            to: 11794,
            mmot: false,
            mdi: 'Slide8462c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem467',
                t: 14
            }, {
                n: 'CaptivateItem468',
                t: 13,
                d: {
                    hc: 'CaptivateItem470',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem472',
                t: 19
            }, {
                n: 'CaptivateItem469',
                t: 22
            }, {
                n: 'CaptivateItem470',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem468ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide8462c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2620.png',
            dn: 'Slide8462',
            visible: '1'
        },
        StAd80: {
            from: 11825,
            to: 11874,
            src: 'ar/3045.mp3',
            du: 1698
        },
        CaptivateItem473: {
            type: 14,
            from: 11795,
            to: 11884,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem473c',
            immo: false,
            apsn: 'Slide8511',
            trin: 15,
            trout: 0
        },
        CaptivateItem473c: {
            b: [198, 326, 224, 346],
            uid: 8531,
            sr: cp.fd,
            dn: 'CaptivateItem473',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [197, 325, 225, 347],
            vb: [197, 325, 225, 347]
        },
        CaptivateItem474: {
            type: 13,
            from: 11795,
            to: 11884,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem474c',
            immo: false,
            apsn: 'Slide8511',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem475',
            ofct: 1,
            dep: ['CaptivateItem476'],
            pa: 11883,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem474ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem474c: {
            b: [198, 326, 224, 346],
            uid: 8535,
            sr: cp.fd,
            dn: 'CaptivateItem474',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [198, 326, 224, 346],
            vb: [198, 326, 224, 346]
        },
        CaptivateItem474ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem478: {
            type: 19,
            from: 11795,
            to: 11884,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem478c',
            immo: false,
            apsn: 'Slide8511',
            trin: 0,
            trout: 0
        },
        CaptivateItem478c: {
            b: [526, 298, 678, 360],
            uid: 8556,
            sr: cp.fd,
            ip: 'dr/CaptivateItem478.png',
            dn: 'CaptivateItem478',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click the Search icon. ',
            traccstr: '',
            ti: -1,
            vbwr: [526, 298, 678, 360],
            vb: [526, 298, 678, 360]
        },
        CaptivateItem475: {
            type: 22,
            from: 11795,
            to: 11863,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem475c',
            immo: false,
            apsn: 'Slide8511',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem475c: {
            b: [219, 376, 371, 438],
            uid: 8547,
            sr: cp.fd,
            ip: 'dr/CaptivateItem475.png',
            dn: 'CaptivateItem475',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [219, 376, 371, 438],
            vb: [219, 376, 371, 438]
        },
        CaptivateItem476: {
            type: 23,
            from: 11795,
            to: 11863,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem476c',
            immo: false,
            apsn: 'Slide8511',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem476c: {
            b: [208, 346, 367, 428],
            uid: 8551,
            sr: cp.fd,
            ip: 'dr/CaptivateItem476.png',
            dn: 'CaptivateItem476',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [208, 346, 367, 428],
            vb: [208, 346, 367, 428]
        },
        Slide8511: {
            lb: '',
            id: 8511,
            from: 11795,
            to: 11884,
            mmot: false,
            mdi: 'Slide8511c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem473',
                t: 14
            }, {
                n: 'CaptivateItem474',
                t: 13,
                d: {
                    hc: 'CaptivateItem476',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem478',
                t: 19
            }, {
                n: 'CaptivateItem475',
                t: 22
            }, {
                n: 'CaptivateItem476',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem474ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide8511c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2624.png',
            dn: 'Slide8511',
            visible: '1'
        },
        StAd81: {
            from: 11915,
            to: 12193,
            src: 'ar/2835.mp3',
            du: 9326
        },
        CaptivateItem479: {
            type: 14,
            from: 11885,
            to: 12195,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem479c',
            immo: false,
            apsn: 'Slide8560',
            trin: 15,
            trout: 0
        },
        CaptivateItem479c: {
            b: [130, 132, 154, 152],
            uid: 8580,
            sr: cp.fd,
            dn: 'CaptivateItem479',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [129, 131, 155, 153],
            vb: [129, 131, 155, 153]
        },
        CaptivateItem480: {
            type: 13,
            from: 11885,
            to: 12195,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem480c',
            immo: false,
            apsn: 'Slide8560',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem481',
            ofct: 1,
            dep: ['CaptivateItem482'],
            pa: 12193,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem480ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem480c: {
            b: [131, 131, 153, 151],
            uid: 8584,
            sr: cp.fd,
            dn: 'CaptivateItem480',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [131, 131, 153, 151],
            vb: [131, 131, 153, 151]
        },
        CaptivateItem480ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem484: {
            type: 19,
            from: 11885,
            to: 12195,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem484c',
            immo: false,
            apsn: 'Slide8560',
            trin: 0,
            trout: 0
        },
        CaptivateItem484c: {
            b: [164, 341, 620, 457],
            uid: 8605,
            sr: cp.fd,
            ip: 'dr/CaptivateItem484.png',
            dn: 'CaptivateItem484',
            visible: 1,
            JSONEffectData: false,
            accstr: 'SAP displays all payment methods that are set up in the system. On the left, you see methods for outgoing payments, while the right lists methods for incoming payments.   We want to pay this vendor via check.  Click the Check checkbox in the list of outgoing payment options to select it. ',
            traccstr: '',
            ti: -1,
            vbwr: [164, 341, 620, 457],
            vb: [164, 341, 620, 457]
        },
        CaptivateItem481: {
            type: 22,
            from: 11885,
            to: 11953,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem481c',
            immo: false,
            apsn: 'Slide8560',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem481c: {
            b: [154, 184, 306, 246],
            uid: 8596,
            sr: cp.fd,
            ip: 'dr/CaptivateItem481.png',
            dn: 'CaptivateItem481',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [154, 184, 306, 246],
            vb: [154, 184, 306, 246]
        },
        CaptivateItem482: {
            type: 23,
            from: 11885,
            to: 11953,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem482c',
            immo: false,
            apsn: 'Slide8560',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem482c: {
            b: [141, 152, 300, 234],
            uid: 8600,
            sr: cp.fd,
            ip: 'dr/CaptivateItem482.png',
            dn: 'CaptivateItem482',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [141, 152, 300, 234],
            vb: [141, 152, 300, 234]
        },
        Slide8560: {
            lb: '',
            id: 8560,
            from: 11885,
            to: 12195,
            mmot: false,
            mdi: 'Slide8560c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem479',
                t: 14
            }, {
                n: 'CaptivateItem480',
                t: 13,
                d: {
                    hc: 'CaptivateItem482',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem484',
                t: 19
            }, {
                n: 'CaptivateItem481',
                t: 22
            }, {
                n: 'CaptivateItem482',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem480ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide8560c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2628.png',
            dn: 'Slide8560',
            visible: '1'
        },
        StAd82: {
            from: 12226,
            to: 12388,
            src: 'ar/3048.mp3',
            du: 5460
        },
        CaptivateItem485: {
            type: 14,
            from: 12196,
            to: 12390,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem485c',
            immo: false,
            apsn: 'Slide8609',
            trin: 15,
            trout: 0
        },
        CaptivateItem485c: {
            b: [385, 110, 404, 130],
            uid: 8629,
            sr: cp.fd,
            dn: 'CaptivateItem485',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [384, 109, 405, 131],
            vb: [384, 109, 405, 131]
        },
        CaptivateItem486: {
            type: 13,
            from: 12196,
            to: 12390,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem486c',
            immo: false,
            apsn: 'Slide8609',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem487',
            ofct: 1,
            dep: ['CaptivateItem488'],
            pa: 12389,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem486ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem486c: {
            b: [385, 111, 403, 131],
            uid: 8633,
            sr: cp.fd,
            dn: 'CaptivateItem486',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [385, 111, 403, 131],
            vb: [385, 111, 403, 131]
        },
        CaptivateItem486ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem490: {
            type: 19,
            from: 12196,
            to: 12390,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem490c',
            immo: false,
            apsn: 'Slide8609',
            trin: 0,
            trout: 0
        },
        CaptivateItem490c: {
            b: [211, 336, 591, 419],
            uid: 8654,
            sr: cp.fd,
            ip: 'dr/CaptivateItem490.png',
            dn: 'CaptivateItem490',
            visible: 1,
            JSONEffectData: false,
            accstr: 'In addition, we want to be able to receive payments from this vendor (i.e. credits/refunds) via ACH direct deposit.  Click the ACH checkbox in the list of incoming payment options to select it. ',
            traccstr: '',
            ti: -1,
            vbwr: [211, 336, 591, 419],
            vb: [211, 336, 591, 419]
        },
        CaptivateItem487: {
            type: 22,
            from: 12196,
            to: 12264,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem487c',
            immo: false,
            apsn: 'Slide8609',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem487c: {
            b: [403, 166, 555, 228],
            uid: 8645,
            sr: cp.fd,
            ip: 'dr/CaptivateItem487.png',
            dn: 'CaptivateItem487',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [403, 166, 555, 228],
            vb: [403, 166, 555, 228]
        },
        CaptivateItem488: {
            type: 23,
            from: 12196,
            to: 12264,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem488c',
            immo: false,
            apsn: 'Slide8609',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem488c: {
            b: [393, 130, 552, 212],
            uid: 8649,
            sr: cp.fd,
            ip: 'dr/CaptivateItem488.png',
            dn: 'CaptivateItem488',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [393, 130, 552, 212],
            vb: [393, 130, 552, 212]
        },
        Slide8609: {
            lb: '',
            id: 8609,
            from: 12196,
            to: 12390,
            mmot: false,
            mdi: 'Slide8609c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem485',
                t: 14
            }, {
                n: 'CaptivateItem486',
                t: 13,
                d: {
                    hc: 'CaptivateItem488',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem490',
                t: 19
            }, {
                n: 'CaptivateItem487',
                t: 22
            }, {
                n: 'CaptivateItem488',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem486ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide8609c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2632.png',
            dn: 'Slide8609',
            visible: '1'
        },
        StAd83: {
            from: 12421,
            to: 12499,
            src: 'ar/3051.mp3',
            du: 2638
        },
        CaptivateItem491: {
            type: 14,
            from: 12391,
            to: 12510,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem491c',
            immo: false,
            apsn: 'Slide8658',
            trin: 15,
            trout: 0
        },
        CaptivateItem491c: {
            b: [131, 251, 151, 271],
            uid: 8678,
            sr: cp.fd,
            dn: 'CaptivateItem491',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [130, 250, 152, 272],
            vb: [130, 250, 152, 272]
        },
        CaptivateItem492: {
            type: 13,
            from: 12391,
            to: 12510,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem492c',
            immo: false,
            apsn: 'Slide8658',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem493',
            ofct: 1,
            dep: ['CaptivateItem494'],
            pa: 12509,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem492ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem492c: {
            b: [131, 251, 151, 271],
            uid: 8682,
            sr: cp.fd,
            dn: 'CaptivateItem492',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [131, 251, 151, 271],
            vb: [131, 251, 151, 271]
        },
        CaptivateItem492ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem496: {
            type: 19,
            from: 12391,
            to: 12510,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem496c',
            immo: false,
            apsn: 'Slide8658',
            trin: 0,
            trout: 0
        },
        CaptivateItem496c: {
            b: [376, 226, 740, 297],
            uid: 8703,
            sr: cp.fd,
            ip: 'dr/CaptivateItem496.png',
            dn: 'CaptivateItem496',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Let’s add one more payment method for outgoing payments.   Click the Bank transfers checkbox so that we can pay this vendor with bank transfers in addition to checks. ',
            traccstr: '',
            ti: -1,
            vbwr: [376, 226, 740, 297],
            vb: [376, 226, 740, 297]
        },
        CaptivateItem493: {
            type: 22,
            from: 12391,
            to: 12459,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem493c',
            immo: false,
            apsn: 'Slide8658',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem493c: {
            b: [151, 303, 303, 365],
            uid: 8694,
            sr: cp.fd,
            ip: 'dr/CaptivateItem493.png',
            dn: 'CaptivateItem493',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [151, 303, 303, 365],
            vb: [151, 303, 303, 365]
        },
        CaptivateItem494: {
            type: 23,
            from: 12391,
            to: 12459,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem494c',
            immo: false,
            apsn: 'Slide8658',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem494c: {
            b: [141, 271, 300, 353],
            uid: 8698,
            sr: cp.fd,
            ip: 'dr/CaptivateItem494.png',
            dn: 'CaptivateItem494',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [141, 271, 300, 353],
            vb: [141, 271, 300, 353]
        },
        Slide8658: {
            lb: '',
            id: 8658,
            from: 12391,
            to: 12510,
            mmot: false,
            mdi: 'Slide8658c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem491',
                t: 14
            }, {
                n: 'CaptivateItem492',
                t: 13,
                d: {
                    hc: 'CaptivateItem494',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem496',
                t: 19
            }, {
                n: 'CaptivateItem493',
                t: 22
            }, {
                n: 'CaptivateItem494',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem492ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide8658c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2636.png',
            dn: 'Slide8658',
            visible: '1'
        },
        StAd84: {
            from: 12541,
            to: 12612,
            src: 'ar/3054.mp3',
            du: 2429
        },
        CaptivateItem497: {
            type: 19,
            from: 12511,
            to: 12618,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem497c',
            immo: false,
            apsn: 'Slide8707',
            trin: 0,
            trout: 0
        },
        CaptivateItem497c: {
            b: [411, 259, 647, 321],
            uid: 8727,
            sr: cp.fd,
            ip: 'dr/CaptivateItem497.png',
            dn: 'CaptivateItem497',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Good job!   Now press the Enter key to continue. ',
            traccstr: '',
            ti: -1,
            vbwr: [411, 259, 647, 321],
            vb: [411, 259, 647, 321]
        },
        CaptivateItem499: {
            type: 13,
            from: 12511,
            to: 12618,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem499c',
            immo: false,
            apsn: 'Slide8707',
            JSONTT_4: [],
            cpa: false,
            oca: 'cpCmndResume = 1;',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem500',
            ofct: 1,
            dep: ['CaptivateItem501'],
            pa: 12617,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem499ClkAd',
            kh: cp.cbKH,
            sc: {
                k: 13,
                s: 0,
                c: 0,
                a: 0
            },
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem499c: {
            b: [0, 0, 100, 108],
            uid: 8732,
            sr: cp.fd,
            dn: 'CaptivateItem499',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [0, 0, 100, 108],
            vb: [0, 0, 100, 108]
        },
        CaptivateItem499ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem500: {
            type: 22,
            from: 12511,
            to: 12600,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem500c',
            immo: false,
            apsn: 'Slide8707',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem500c: {
            b: [481, 447, 633, 509],
            uid: 8744,
            sr: cp.fd,
            ip: 'dr/CaptivateItem500.png',
            dn: 'CaptivateItem500',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [481, 447, 633, 509],
            vb: [481, 447, 633, 509]
        },
        CaptivateItem501: {
            type: 23,
            from: 12511,
            to: 12600,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem501c',
            immo: false,
            apsn: 'Slide8707',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem501c: {
            b: [322, 447, 474, 509],
            uid: 8748,
            sr: cp.fd,
            ip: 'dr/CaptivateItem501.png',
            dn: 'CaptivateItem501',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Press the Enter key. ',
            traccstr: '',
            ti: -1,
            vbwr: [322, 447, 474, 509],
            vb: [322, 447, 474, 509]
        },
        Slide8707: {
            lb: '',
            id: 8707,
            from: 12511,
            to: 12618,
            mmot: false,
            mdi: 'Slide8707c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem497',
                t: 19
            }, {
                n: 'CaptivateItem499',
                t: 13,
                d: {
                    hc: 'CaptivateItem501',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem500',
                t: 22
            }, {
                n: 'CaptivateItem501',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem499ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide8707c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2640.png',
            dn: 'Slide8707',
            visible: '1'
        },
        sf_2648: {
            from: 12718,
            to: 12723,
            mdi: 'sf_2648c'
        },
        sf_2648c: {
            id: 'sf_2648c',
            b: [0, 542, 790, 11],
            l: 0,
            t: 530,
            dn: 'sf_2648',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        sf_2651: {
            from: 12718,
            to: 12723,
            mdi: 'sf_2651c'
        },
        sf_2651c: {
            id: 'sf_2651c',
            b: [0, 553, 790, 9],
            l: 0,
            t: 332,
            dn: 'sf_2651',
            visible: '1',
            ip: 'dr/sfs0.png'
        },
        sf_2654: {
            from: 12718,
            to: 12723,
            mdi: 'sf_2654c'
        },
        sf_2654c: {
            id: 'sf_2654c',
            b: [0, 0, 790, 21],
            l: 0,
            t: 102,
            dn: 'sf_2654',
            visible: '1',
            ip: 'dr/sfs1.png'
        },
        sf_2657: {
            from: 12718,
            to: 12723,
            mdi: 'sf_2657c'
        },
        sf_2657c: {
            id: 'sf_2657c',
            b: [0, 21, 790, 49],
            l: 0,
            t: 15,
            dn: 'sf_2657',
            visible: '1',
            ip: 'dr/sfs1.png'
        },
        StAd85: {
            from: 12649,
            to: 12702,
            src: 'ar/3057.mp3',
            du: 1829
        },
        CaptivateItem502: {
            type: 14,
            from: 12619,
            to: 12723,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem502c',
            immo: false,
            apsn: 'Slide8752',
            trin: 15,
            trout: 0
        },
        CaptivateItem502c: {
            b: [36, 101, 60, 125],
            uid: 8783,
            sr: cp.fd,
            dn: 'CaptivateItem502',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [35, 100, 61, 126],
            vb: [35, 100, 61, 126]
        },
        CaptivateItem503: {
            type: 13,
            from: 12619,
            to: 12723,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem503c',
            immo: false,
            apsn: 'Slide8752',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem504',
            ofct: 1,
            dep: ['CaptivateItem505'],
            pa: 12722,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem503ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem503c: {
            b: [37, 102, 59, 125],
            uid: 8787,
            sr: cp.fd,
            dn: 'CaptivateItem503',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [37, 102, 59, 125],
            vb: [37, 102, 59, 125]
        },
        CaptivateItem503ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem507: {
            type: 19,
            from: 12619,
            to: 12723,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem507c',
            immo: false,
            apsn: 'Slide8752',
            trin: 0,
            trout: 0
        },
        CaptivateItem507c: {
            b: [511, 118, 733, 180],
            uid: 8808,
            sr: cp.fd,
            ip: 'dr/CaptivateItem507.png',
            dn: 'CaptivateItem507',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Let’s move on to the next screen.  Click the Next screen icon. ',
            traccstr: '',
            ti: -1,
            vbwr: [511, 118, 733, 180],
            vb: [511, 118, 733, 180]
        },
        CaptivateItem504: {
            type: 22,
            from: 12619,
            to: 12708,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem504c',
            immo: false,
            apsn: 'Slide8752',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem504c: {
            b: [59, 160, 211, 222],
            uid: 8799,
            sr: cp.fd,
            ip: 'dr/CaptivateItem504.png',
            dn: 'CaptivateItem504',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [59, 160, 211, 222],
            vb: [59, 160, 211, 222]
        },
        CaptivateItem505: {
            type: 23,
            from: 12619,
            to: 12708,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem505c',
            immo: false,
            apsn: 'Slide8752',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem505c: {
            b: [48, 127, 207, 209],
            uid: 8803,
            sr: cp.fd,
            ip: 'dr/CaptivateItem505.png',
            dn: 'CaptivateItem505',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [48, 127, 207, 209],
            vb: [48, 127, 207, 209]
        },
        Slide8752: {
            lb: '',
            id: 8752,
            from: 12619,
            to: 12723,
            mmot: false,
            mdi: 'Slide8752c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'sf_2648',
                t: 64
            }, {
                n: 'sf_2651',
                t: 64
            }, {
                n: 'sf_2654',
                t: 64
            }, {
                n: 'sf_2657',
                t: 64
            }, {
                n: 'CaptivateItem502',
                t: 14
            }, {
                n: 'CaptivateItem503',
                t: 13,
                d: {
                    hc: 'CaptivateItem505',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem507',
                t: 19
            }, {
                n: 'CaptivateItem504',
                t: 22
            }, {
                n: 'CaptivateItem505',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem503ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide8752c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2644.png',
            dn: 'Slide8752',
            visible: '1'
        },
        StAd86: {
            from: 12754,
            to: 12850,
            src: 'ar/2838.mp3',
            du: 3239
        },
        CaptivateItem509: {
            type: 14,
            from: 12724,
            to: 12851,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem509c',
            immo: false,
            apsn: 'Slide8812',
            trin: 15,
            trout: 0
        },
        CaptivateItem509c: {
            b: [37, 101, 59, 124],
            uid: 8833,
            sr: cp.fd,
            dn: 'CaptivateItem509',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [36, 100, 60, 125],
            vb: [36, 100, 60, 125]
        },
        CaptivateItem510: {
            type: 13,
            from: 12724,
            to: 12851,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem510c',
            immo: false,
            apsn: 'Slide8812',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem511',
            ofct: 1,
            dep: ['CaptivateItem512'],
            pa: 12849,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem510ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem510c: {
            b: [37, 101, 59, 124],
            uid: 8837,
            sr: cp.fd,
            dn: 'CaptivateItem510',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [37, 101, 59, 124],
            vb: [37, 101, 59, 124]
        },
        CaptivateItem510ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem513: {
            type: 19,
            from: 12724,
            to: 12851,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem513c',
            immo: false,
            apsn: 'Slide8812',
            trin: 0,
            trout: 0
        },
        CaptivateItem513c: {
            b: [306, 38, 746, 203],
            uid: 8857,
            sr: cp.fd,
            ip: 'dr/CaptivateItem513.png',
            dn: 'CaptivateItem513',
            visible: 1,
            JSONEffectData: false,
            accstr: 'On this screen, you can assign a vendor to a Dunning Procedure.   This is typically done for customers since they would be most likely to owe us money.   Vendors may also owe credits or refunds. When they are overdue on these items, you can have them included in the automatic dunning run.  For now, though, we will continue without assigning this vendor to a Dunning Procedure. Click the Next screen icon. ',
            traccstr: '',
            ti: -1,
            vbwr: [306, 38, 746, 203],
            vb: [306, 38, 746, 203]
        },
        CaptivateItem511: {
            type: 22,
            from: 12724,
            to: 12813,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem511c',
            immo: false,
            apsn: 'Slide8812',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem511c: {
            b: [54, 144, 206, 206],
            uid: 8849,
            sr: cp.fd,
            ip: 'dr/CaptivateItem511.png',
            dn: 'CaptivateItem511',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [54, 144, 206, 206],
            vb: [54, 144, 206, 206]
        },
        CaptivateItem512: {
            type: 23,
            from: 12724,
            to: 12813,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem512c',
            immo: false,
            apsn: 'Slide8812',
            du: 90,
            trin: 15,
            trout: 15
        },
        CaptivateItem512c: {
            b: [47, 124, 206, 206],
            uid: 8853,
            sr: cp.fd,
            ip: 'dr/CaptivateItem512.png',
            dn: 'CaptivateItem512',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [47, 124, 206, 206],
            vb: [47, 124, 206, 206]
        },
        Slide8812: {
            lb: '',
            id: 8812,
            from: 12724,
            to: 12851,
            mmot: false,
            mdi: 'Slide8812c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem509',
                t: 14
            }, {
                n: 'CaptivateItem510',
                t: 13,
                d: {
                    hc: 'CaptivateItem512',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem513',
                t: 19
            }, {
                n: 'CaptivateItem511',
                t: 22
            }, {
                n: 'CaptivateItem512',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem510ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide8812c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2661.png',
            dn: 'Slide8812',
            visible: '1'
        },
        StAd87: {
            from: 12882,
            to: 12960,
            src: 'ar/3060.mp3',
            du: 2665
        },
        CaptivateItem514: {
            type: 14,
            from: 12852,
            to: 12974,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem514c',
            immo: false,
            apsn: 'Slide8861',
            trin: 15,
            trout: 0
        },
        CaptivateItem514c: {
            b: [221, 376, 305, 396],
            uid: 8881,
            sr: cp.fd,
            dn: 'CaptivateItem514',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [220, 375, 306, 397],
            vb: [220, 375, 306, 397]
        },
        CaptivateItem515: {
            type: 13,
            from: 12852,
            to: 12974,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem515c',
            immo: false,
            apsn: 'Slide8861',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem516',
            ofct: 1,
            dep: ['CaptivateItem517'],
            pa: 12973,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem515ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem515c: {
            b: [220, 377, 306, 397],
            uid: 8885,
            sr: cp.fd,
            dn: 'CaptivateItem515',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [220, 377, 306, 397],
            vb: [220, 377, 306, 397]
        },
        CaptivateItem515ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem519: {
            type: 19,
            from: 12852,
            to: 12974,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem519c',
            immo: false,
            apsn: 'Slide8861',
            trin: 0,
            trout: 0
        },
        CaptivateItem519c: {
            b: [380, 110, 721, 172],
            uid: 8906,
            sr: cp.fd,
            ip: 'dr/CaptivateItem519.png',
            dn: 'CaptivateItem519',
            visible: 1,
            JSONEffectData: false,
            accstr: 'This is the end of the vendor creation transaction.   Click the Yes button to save your vendor master record. ',
            traccstr: '',
            ti: -1,
            vbwr: [380, 110, 721, 172],
            vb: [380, 110, 721, 172]
        },
        CaptivateItem516: {
            type: 22,
            from: 12852,
            to: 12920,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem516c',
            immo: false,
            apsn: 'Slide8861',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem516c: {
            b: [110, 413, 262, 475],
            uid: 8897,
            sr: cp.fd,
            ip: 'dr/CaptivateItem516.png',
            dn: 'CaptivateItem516',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [110, 413, 262, 475],
            vb: [110, 413, 262, 475]
        },
        CaptivateItem517: {
            type: 23,
            from: 12852,
            to: 12920,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem517c',
            immo: false,
            apsn: 'Slide8861',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem517c: {
            b: [267, 396, 426, 478],
            uid: 8901,
            sr: cp.fd,
            ip: 'dr/CaptivateItem517.png',
            dn: 'CaptivateItem517',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [267, 396, 426, 478],
            vb: [267, 396, 426, 478]
        },
        Slide8861: {
            lb: '',
            id: 8861,
            from: 12852,
            to: 12974,
            mmot: false,
            mdi: 'Slide8861c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem514',
                t: 14
            }, {
                n: 'CaptivateItem515',
                t: 13,
                d: {
                    hc: 'CaptivateItem517',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem519',
                t: 19
            }, {
                n: 'CaptivateItem516',
                t: 22
            }, {
                n: 'CaptivateItem517',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem515ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide8861c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2665.png',
            dn: 'Slide8861',
            visible: '1'
        },
        StAd88: {
            from: 13008,
            to: 13166,
            src: 'ar/3063.mp3',
            du: 5329
        },
        CaptivateItem520: {
            type: 14,
            from: 12975,
            to: 13259,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem520c',
            immo: false,
            apsn: 'Slide8910',
            trin: 15,
            trout: 0
        },
        CaptivateItem520c: {
            b: [258, 36, 287, 64],
            uid: 8931,
            sr: cp.fd,
            dn: 'CaptivateItem520',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [257, 35, 288, 65],
            vb: [257, 35, 288, 65]
        },
        CaptivateItem521: {
            type: 13,
            from: 12975,
            to: 13259,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem521c',
            immo: false,
            apsn: 'Slide8910',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: 'CaptivateItem522',
            ofct: 1,
            dep: ['CaptivateItem523'],
            pa: 13258,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            rclk: false,
            amc: true,
            ca: 'CaptivateItem521ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            trin: 15,
            trout: 15
        },
        CaptivateItem521c: {
            b: [257, 35, 288, 63],
            uid: 8935,
            sr: cp.fd,
            dn: 'CaptivateItem521',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Click Box ',
            traccstr: '',
            ti: -1,
            vbwr: [257, 35, 288, 63],
            vb: [257, 35, 288, 63]
        },
        CaptivateItem521ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        CaptivateItem525: {
            type: 19,
            from: 12975,
            to: 13259,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem525c',
            immo: false,
            apsn: 'Slide8910',
            trin: 0,
            trout: 0
        },
        CaptivateItem525c: {
            b: [377, 151, 692, 224],
            uid: 8956,
            sr: cp.fd,
            ip: 'dr/CaptivateItem525.png',
            dn: 'CaptivateItem525',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Good job! Notice the message at the bottom of the screen - you have created Vendor 73.  Click the Back icon to return to the main SAP menu. ',
            traccstr: '',
            ti: -1,
            vbwr: [377, 151, 692, 224],
            vb: [377, 151, 692, 224]
        },
        THighlightBoxItem76: {
            type: 14,
            from: 12975,
            to: 13259,
            rp: 0,
            rpa: 0,
            mdi: 'THighlightBoxItem76c',
            immo: false,
            apsn: 'Slide8910',
            trin: 15,
            trout: 0
        },
        THighlightBoxItem76c: {
            b: [12, 526, 356, 545],
            uid: 8960,
            sr: cp.fd,
            dn: 'THighlightBoxItem76',
            visible: 1,
            JSONEffectData: false,
            fc: '#ff6600',
            sc: '#ff6600',
            sw: 1,
            fo: 20,
            foa: 0,
            vbwr: [11, 525, 357, 546],
            vb: [11, 525, 357, 546]
        },
        CaptivateItem522: {
            type: 22,
            from: 12975,
            to: 13043,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem522c',
            immo: false,
            apsn: 'Slide8910',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem522c: {
            b: [304, 36, 456, 98],
            uid: 8947,
            sr: cp.fd,
            ip: 'dr/CaptivateItem522.png',
            dn: 'CaptivateItem522',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect,  please try again. ',
            traccstr: '',
            ti: -1,
            vbwr: [304, 36, 456, 98],
            vb: [304, 36, 456, 98]
        },
        CaptivateItem523: {
            type: 23,
            from: 12975,
            to: 13043,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem523c',
            immo: false,
            apsn: 'Slide8910',
            du: 69,
            trin: 15,
            trout: 15
        },
        CaptivateItem523c: {
            b: [287, 52, 446, 134],
            uid: 8951,
            sr: cp.fd,
            ip: 'dr/CaptivateItem523.png',
            dn: 'CaptivateItem523',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Click here! ',
            traccstr: '',
            ti: -1,
            vbwr: [287, 52, 446, 134],
            vb: [287, 52, 446, 134]
        },
        Slide8910: {
            lb: '',
            id: 8910,
            from: 12975,
            to: 13259,
            mmot: false,
            mdi: 'Slide8910c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem520',
                t: 14
            }, {
                n: 'CaptivateItem521',
                t: 13,
                d: {
                    hc: 'CaptivateItem523',
                    cur: 1
                }
            }, {
                n: 'CaptivateItem525',
                t: 19
            }, {
                n: 'THighlightBoxItem76',
                t: 14
            }, {
                n: 'CaptivateItem522',
                t: 22
            }, {
                n: 'CaptivateItem523',
                t: 23
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem521ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide8910c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/11380.png',
            dn: 'Slide8910',
            visible: '1'
        },
        StAd89: {
            from: 13290,
            to: 13399,
            src: 'ar/3066.mp3',
            du: 3683
        },
        CaptivateItem527: {
            type: 19,
            from: 13260,
            to: 13400,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem527c',
            immo: false,
            apsn: 'Slide8964',
            trin: 0,
            trout: 0
        },
        CaptivateItem527c: {
            b: [335, 187, 641, 269],
            uid: 8984,
            sr: cp.fd,
            ip: 'dr/CaptivateItem527.png',
            dn: 'CaptivateItem527',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Well done! You have just learned how to create a vendor master record.  ',
            traccstr: '',
            ti: -1,
            vbwr: [335, 187, 641, 269],
            vb: [335, 187, 641, 269]
        },
        CaptivateItem528: {
            type: 177,
            from: 13260,
            to: 13400,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem528c',
            immo: false,
            apsn: 'Slide8964',
            JSONTT_4: [],
            cpa: false,
            oca: 'cpCmndResume = 1;',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: '',
            ofct: 0,
            pa: 13392,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            amc: true,
            ca: 'CaptivateItem528ClkAd',
            kh: cp.cbKH,
            sc: {
                k: 13,
                s: 0,
                c: 0,
                a: 0
            },
            eh: cp.cbKH,
            siq: false,
            sat: true,
            subt: 0,
            itr: false,
            trin: 0,
            trout: 0
        },
        CaptivateItem528c: {
            b: [528, 233, 637, 263],
            uid: 8988,
            sr: cp.fd,
            ip: 'dr/CaptivateItem528.png',
            dn: 'CaptivateItem528',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Continue ',
            traccstr: ' Trigger this button to continue',
            ti: 2500,
            hImg: 'dr/CaptivateItem528o.png',
            pImg: 'dr/CaptivateItem528d.png',
            vbwr: [527, 232, 638, 264],
            vb: [527, 232, 638, 264]
        },
        CaptivateItem528ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        Slide8964: {
            lb: '',
            id: 8964,
            from: 13260,
            to: 13401,
            mmot: false,
            mdi: 'Slide8964c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem527',
                t: 19
            }, {
                n: 'CaptivateItem528',
                t: 177
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem528ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide8964c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2673.png',
            dn: 'Slide8964',
            visible: '1'
        },
        StAd90: {
            from: 13432,
            to: 13586,
            src: 'ar/2798.mp3',
            du: 5198
        },
        CaptivateItem530: {
            type: 19,
            from: 13402,
            to: 13587,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem530c',
            immo: false,
            apsn: 'Slide9008',
            trin: 0,
            trout: 0
        },
        CaptivateItem530c: {
            b: [259, 179, 672, 330],
            uid: 9028,
            sr: cp.fd,
            ip: 'dr/CaptivateItem530.png',
            dn: 'CaptivateItem530',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Quiz Questions!  Let’s see if you remembered everything you have learned in this lesson. Just answer the questions as best as you can - if you can’t remember certain things just go back or simply take the lesson again!  Good luck!   ',
            traccstr: '',
            ti: -1,
            vbwr: [259, 179, 672, 330],
            vb: [259, 179, 672, 330]
        },
        CaptivateItem531: {
            type: 177,
            from: 13402,
            to: 13587,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem531c',
            immo: false,
            apsn: 'Slide9008',
            JSONTT_4: [],
            cpa: false,
            oca: 'cpCmndResume = 1;',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: '',
            ofct: 0,
            pa: 13582,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            amc: true,
            ca: 'CaptivateItem531ClkAd',
            kh: cp.cbKH,
            sc: {
                k: 13,
                s: 0,
                c: 0,
                a: 0
            },
            eh: cp.cbKH,
            siq: false,
            sat: true,
            subt: 0,
            itr: false,
            trin: 0,
            trout: 0
        },
        CaptivateItem531c: {
            b: [556, 291, 666, 322],
            uid: 9032,
            sr: cp.fd,
            ip: 'dr/CaptivateItem531.png',
            dn: 'CaptivateItem531',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Continue ',
            traccstr: ' Trigger this button to continue',
            ti: 2500,
            hImg: 'dr/CaptivateItem531o.png',
            pImg: 'dr/CaptivateItem531d.png',
            vbwr: [555, 290, 667, 323],
            vb: [555, 290, 667, 323]
        },
        CaptivateItem531ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        Slide9008: {
            lb: '',
            id: 9008,
            from: 13402,
            to: 13588,
            mmot: false,
            mdi: 'Slide9008c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'CaptivateItem530',
                t: 19
            }, {
                n: 'CaptivateItem531',
                t: 177
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'CaptivateItem531ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide9008c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/2167.png',
            dn: 'Slide9008',
            visible: '1'
        },
        si9162: {
            type: 92,
            from: 13589,
            to: 13679,
            rp: 0,
            rpa: 0,
            mdi: 'si9162c',
            immo: false,
            apsn: 'Slide9052',
            trin: 0,
            trout: 0
        },
        si9162c: {
            b: [20, 495, 139, 525],
            uid: 9162,
            dn: 'si9162',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Question %d of %d ',
            traccstr: '',
            ti: -1,
            ta: 'left',
            B: true,
            c: '#000000',
            f: 'Open Sans Light',
            i: true,
            sz: 16,
            u: false,
            rqs: 'Slide9052',
            text: 'Question %d of %d',
            vbwr: [20, 495, 139, 525],
            vb: [20, 495, 139, 525]
        },
        si9071: {
            type: 86,
            from: 13589,
            to: 13679,
            rp: 0,
            rpa: 0,
            mdi: 'si9071c',
            immo: false,
            apsn: 'Slide9052',
            trin: 0,
            trout: 0
        },
        si9071c: {
            b: [270, 35, 521, 69],
            uid: 9071,
            sr: cp.fd,
            ip: 'dr/si9071.png',
            dn: 'si9071',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Multiple Choice ',
            traccstr: '',
            ti: -1,
            t: 86,
            vbwr: [269, 34, 521, 69],
            vb: [269, 34, 521, 69]
        },
        si9078: {
            type: 79,
            from: 13589,
            to: 13679,
            rp: 0,
            rpa: 0,
            mdi: 'si9078c',
            immo: false,
            apsn: 'Slide9052',
            trin: 0,
            trout: 0
        },
        si9078c: {
            b: [27, 120, 755, 147],
            uid: 9078,
            sr: cp.fd,
            ip: 'dr/si9078.png',
            dn: 'si9078',
            visible: 1,
            JSONEffectData: false,
            accstr: 'What is a vendor? ',
            traccstr: '',
            ti: -1,
            t: 79,
            vbwr: [26, 119, 755, 147],
            vb: [26, 119, 755, 147]
        },
        si9166: {
            type: 94,
            from: 13589,
            to: 13679,
            rp: 0,
            rpa: 0,
            mdi: 'si9166c',
            immo: false,
            apsn: 'Slide9052',
            trin: 0,
            trout: 0
        },
        si9166c: {
            b: [20, 406, 310, 483],
            uid: 9166,
            dn: 'si9166',
            visible: 0,
            JSONEffectData: false,
            accstr: ' ',
            traccstr: '',
            ti: -1,
            ta: 'center',
            B: true,
            c: '#000000',
            f: 'Open Sans Light',
            i: true,
            sz: 13,
            u: false,
            icf: 'You did not answer this question completely',
            cf: 'You answered this correctly!',
            pcf: 'You answered this partially correct!',
            idc: 'Your answer:',
            ict: 'The correct answer is:',
            rqs: 'Slide9052',
            vbwr: [20, 406, 310, 483],
            vb: [20, 406, 310, 483]
        },
        si9170: {
            type: 91,
            from: 13589,
            to: 13679,
            rp: 0,
            rpa: 0,
            mdi: 'si9170c',
            immo: false,
            apsn: 'Slide9052',
            chfn: cp.qsbch,
            enabled: 1,
            amc: true,
            isDD: false,
            subt: 0,
            itr: false,
            sn: 'Slide9052',
            iqb: true,
            qbt: 'submit',
            pa: 13619,
            ma: 1,
            oca: 'continue',
            eh: cp.qbKH,
            trin: 0,
            trout: 0
        },
        si9170c: {
            b: [694, 493, 776, 522],
            uid: 9170,
            sr: cp.fd,
            ip: 'dr/si9170.png',
            dn: 'si9170',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Submit ',
            traccstr: '',
            ti: 2500,
            hImg: 'dr/si9170o.png',
            pImg: 'dr/si9170d.png',
            vbwr: [693, 492, 777, 523],
            vb: [693, 492, 777, 523]
        },
        si9088: {
            type: 10088,
            from: 13589,
            to: 13679,
            rp: 0,
            rpa: 0,
            mdi: 'si9088c',
            immo: false,
            apsn: 'Slide9052',
            trin: 0,
            trout: 0
        },
        si9088c: {
            b: [64, 157, 78, 176],
            uid: 9088,
            sr: cp.fd,
            ip: 'dr/si9088.png',
            dn: 'si9088',
            visible: 1,
            JSONEffectData: false,
            accstr: 'A) ',
            traccstr: '',
            ti: -1,
            vbwr: [64, 157, 78, 176],
            vb: [64, 157, 78, 176]
        },
        si9092: {
            type: 80,
            from: 13589,
            to: 13679,
            rp: 0,
            rpa: 0,
            mdi: 'si9092c',
            immo: false,
            apsn: 'Slide9052',
            qdi: 'si9092r',
            ta: 0,
            txtl: 0,
            trin: 0,
            trout: 0
        },
        si9092c: {
            b: [83, 157, 499, 181],
            uid: 9092,
            sr: cp.fd,
            ip: 'dr/si9092.png',
            dn: 'si9092',
            visible: 1,
            JSONEffectData: false,
            accstr: ' A business partner that we provide goods or services to ',
            traccstr: '',
            ti: -1,
            aid: 'A',
            at: 10082,
            atxtlms: ' A business partner that we provide goods or services to',
            ti: 0,
            ad: '',
            ic: false,
            ap: 0,
            vbwr: [83, 157, 499, 181],
            vb: [83, 157, 499, 181]
        },
        si9092r: {
            b: [35, 157, 55, 181],
            type: 'radio',
            visible: 1,
            ahn: 'si9088_a',
            cn: 'si9088c',
            actid: 'si9092',
            aan: 'si9977',
            aid: 'A',
            rqs: 'Slide9052',
            ic: false,
            ahl: 83,
            aht: 157,
            accstr: '',
            vbwr: [35, 157, 55, 181],
            vb: [35, 157, 55, 181]
        },
        si9099: {
            type: 10088,
            from: 13589,
            to: 13679,
            rp: 0,
            rpa: 0,
            mdi: 'si9099c',
            immo: false,
            apsn: 'Slide9052',
            trin: 0,
            trout: 0
        },
        si9099c: {
            b: [64, 196, 79, 215],
            uid: 9099,
            sr: cp.fd,
            ip: 'dr/si9099.png',
            dn: 'si9099',
            visible: 1,
            JSONEffectData: false,
            accstr: 'B) ',
            traccstr: '',
            ti: -1,
            vbwr: [64, 196, 79, 215],
            vb: [64, 196, 79, 215]
        },
        si9103: {
            type: 80,
            from: 13589,
            to: 13679,
            rp: 0,
            rpa: 0,
            mdi: 'si9103c',
            immo: false,
            apsn: 'Slide9052',
            qdi: 'si9103r',
            ta: 0,
            txtl: 0,
            trin: 0,
            trout: 0
        },
        si9103c: {
            b: [84, 196, 402, 220],
            uid: 9103,
            sr: cp.fd,
            ip: 'dr/si9103.png',
            dn: 'si9103',
            visible: 1,
            JSONEffectData: false,
            accstr: ' A master record in SAP for businesses ',
            traccstr: '',
            ti: -1,
            aid: 'B',
            at: 10082,
            atxtlms: ' A master record in SAP for businesses',
            ti: 0,
            ad: '',
            ic: false,
            ap: 0,
            vbwr: [84, 196, 402, 220],
            vb: [84, 196, 402, 220]
        },
        si9103r: {
            b: [35, 196, 55, 220],
            type: 'radio',
            visible: 1,
            ahn: 'si9099_a',
            cn: 'si9099c',
            actid: 'si9103',
            aan: 'si9977',
            aid: 'B',
            rqs: 'Slide9052',
            ic: false,
            ahl: 84,
            aht: 196,
            accstr: '',
            vbwr: [35, 196, 55, 220],
            vb: [35, 196, 55, 220]
        },
        si9110: {
            type: 10088,
            from: 13589,
            to: 13679,
            rp: 0,
            rpa: 0,
            mdi: 'si9110c',
            immo: false,
            apsn: 'Slide9052',
            trin: 0,
            trout: 0
        },
        si9110c: {
            b: [64, 235, 79, 254],
            uid: 9110,
            sr: cp.fd,
            ip: 'dr/si9110.png',
            dn: 'si9110',
            visible: 1,
            JSONEffectData: false,
            accstr: 'C) ',
            traccstr: '',
            ti: -1,
            vbwr: [64, 235, 79, 254],
            vb: [64, 235, 79, 254]
        },
        si9114: {
            type: 80,
            from: 13589,
            to: 13679,
            rp: 0,
            rpa: 0,
            mdi: 'si9114c',
            immo: false,
            apsn: 'Slide9052',
            qdi: 'si9114r',
            ta: 0,
            txtl: 0,
            trin: 0,
            trout: 0
        },
        si9114c: {
            b: [84, 235, 487, 259],
            uid: 9114,
            sr: cp.fd,
            ip: 'dr/si9114.png',
            dn: 'si9114',
            visible: 1,
            JSONEffectData: false,
            accstr: ' A business partner that provides goods or services to us ',
            traccstr: '',
            ti: -1,
            aid: 'C',
            at: 10082,
            atxtlms: ' A business partner that provides goods or services to us',
            ti: 0,
            ad: '',
            ic: true,
            ap: 1,
            vbwr: [84, 235, 487, 259],
            vb: [84, 235, 487, 259]
        },
        si9114r: {
            b: [35, 235, 55, 259],
            type: 'radio',
            visible: 1,
            ahn: 'si9110_a',
            cn: 'si9110c',
            actid: 'si9114',
            aan: 'si9977',
            aid: 'C',
            rqs: 'Slide9052',
            ic: true,
            ahl: 84,
            aht: 235,
            accstr: '',
            vbwr: [35, 235, 55, 259],
            vb: [35, 235, 55, 259]
        },
        si9129: {
            type: 10086,
            from: 13589,
            to: 13678,
            rp: 0,
            rpa: 0,
            mdi: 'si9129c',
            immo: false,
            apsn: 'Slide9052',
            sc: {
                k: 89,
                s: 0,
                c: 0,
                a: 0
            }
        },
        si9129c: {
            b: [35, 279, 284, 397],
            uid: 9129,
            sr: cp.fd,
            ip: 'dr/si9129.png',
            dn: 'si9129',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Correct - C. Vendors in SAP include all business partners that provide your company with goods or services. Each vendor must have a master record created in SAP in order to do business with it. Click anywhere to continue. ',
            traccstr: '',
            ti: -1,
            vbwr: [35, 279, 284, 397],
            vb: [35, 279, 284, 397]
        },
        si9140: {
            type: 10087,
            from: 13589,
            to: 13678,
            rp: 0,
            rpa: 0,
            mdi: 'si9140c',
            immo: false,
            apsn: 'Slide9052',
            sc: {
                k: 89,
                s: 0,
                c: 0,
                a: 0
            }
        },
        si9140c: {
            b: [339, 305, 772, 471],
            uid: 9140,
            sr: cp.fd,
            ip: 'dr/si9140.png',
            dn: 'si9140',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect - C. A) Incorrect: Customers, not vendors, are business partners to who we provide goods and services. They also require a master record in SAP, just like vendors. B) Incorrect: Businesses do not require a master record in SAP. Instead, each specific type of business partner requires its own master record. C) Correct: Vendors in SAP include all business partners that provide your company with goods or services. Each vendor must have a master record created in SAP in order to do business with it. Click anywhere to continue. ',
            traccstr: '',
            ti: -1,
            vbwr: [339, 305, 772, 471],
            vb: [339, 305, 772, 471]
        },
        si9151: {
            type: 97,
            from: 13589,
            to: 13678,
            rp: 0,
            rpa: 0,
            mdi: 'si9151c',
            immo: false,
            apsn: 'Slide9052',
            sc: {
                k: 89,
                s: 0,
                c: 0,
                a: 0
            }
        },
        si9151c: {
            b: [621, 14, 773, 76],
            uid: 9151,
            sr: cp.fd,
            ip: 'dr/si9151.png',
            dn: 'si9151',
            visible: 0,
            JSONEffectData: false,
            accstr: 'You must answer the question before continuing. ',
            traccstr: '',
            ti: -1,
            vbwr: [621, 14, 773, 76],
            vb: [621, 14, 773, 76]
        },
        Slide9052: {
            lb: '',
            id: 9052,
            from: 13589,
            to: 13678,
            mmot: false,
            mdi: 'Slide9052c',
            st: 'Question Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'si9162',
                t: 92
            }, {
                n: 'si9071',
                t: 86
            }, {
                n: 'si9078',
                t: 79
            }, {
                n: 'si9166',
                t: 94
            }, {
                n: 'si9170',
                t: 91
            }, {
                n: 'si9088',
                t: 10088
            }, {
                n: 'si9092',
                t: 80
            }, {
                n: 'si9099',
                t: 10088
            }, {
                n: 'si9103',
                t: 80
            }, {
                n: 'si9110',
                t: 10088
            }, {
                n: 'si9114',
                t: 80
            }, {
                n: 'si9129',
                t: 10086
            }, {
                n: 'si9140',
                t: 10087
            }, {
                n: 'si9151',
                t: 97
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: 'Slide9052q0',
            qnq: 0,
            pa: 13632
        },
        Slide9052c: {
            b: [0, 0, 789, 555],
            sr: cp.fd,
            ip: 'dr/12352.png',
            dn: 'Slide9052',
            visible: '1'
        },
        Slide9052q0: {
            noa: 1,
            qt: 'What is a vendor?',
            it: true,
            is: false,
            ipq: false,
            ish: false,
            ips: false,
            qnq: 0,
            sn: 'Slide9052',
            oid: 'Quiz10030',
            iid: 'Interaction2604988',
            sra: true,
            w: 1,
            nw: 0,
            itp: 'choice',
            cal: ['C'],
            qtp: 'MCQ',
            gn: 'Slide9052_ag',
            tl: 0,
            sfrc: false,
            frc: '',
            ifc: ['si9140'],
            ofct: true,
            ao: ['si9092c:0', 'si9103c:1', 'si9114c:2'],
            qtc: 'si9078c',
            JSONTT_4: [],
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cp.jumpToNextSlide();',
            oic: 'si9151',
            sic: true,
            osc: 'si9129',
            osct: true
        },
        si9278: {
            type: 92,
            from: 13679,
            to: 13769,
            rp: 0,
            rpa: 0,
            mdi: 'si9278c',
            immo: false,
            apsn: 'Slide9189',
            trin: 0,
            trout: 0
        },
        si9278c: {
            b: [20, 495, 139, 525],
            uid: 9278,
            dn: 'si9278',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Question %d of %d ',
            traccstr: '',
            ti: -1,
            ta: 'left',
            B: true,
            c: '#000000',
            f: 'Open Sans Light',
            i: true,
            sz: 16,
            u: false,
            rqs: 'Slide9189',
            text: 'Question %d of %d',
            vbwr: [20, 495, 139, 525],
            vb: [20, 495, 139, 525]
        },
        si9208: {
            type: 86,
            from: 13679,
            to: 13769,
            rp: 0,
            rpa: 0,
            mdi: 'si9208c',
            immo: false,
            apsn: 'Slide9189',
            trin: 0,
            trout: 0
        },
        si9208c: {
            b: [270, 35, 521, 69],
            uid: 9208,
            sr: cp.fd,
            ip: 'dr/si9208.png',
            dn: 'si9208',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Multiple Choice ',
            traccstr: '',
            ti: -1,
            t: 86,
            vbwr: [269, 34, 521, 69],
            vb: [269, 34, 521, 69]
        },
        si9215: {
            type: 79,
            from: 13679,
            to: 13769,
            rp: 0,
            rpa: 0,
            mdi: 'si9215c',
            immo: false,
            apsn: 'Slide9189',
            trin: 0,
            trout: 0
        },
        si9215c: {
            b: [27, 120, 616, 173],
            uid: 9215,
            sr: cp.fd,
            ip: 'dr/si9215.png',
            dn: 'si9215',
            visible: 1,
            JSONEffectData: false,
            accstr: 'In what application component do you create a vendor master record? ',
            traccstr: '',
            ti: -1,
            t: 79,
            vbwr: [26, 119, 616, 173],
            vb: [26, 119, 616, 173]
        },
        si9282: {
            type: 94,
            from: 13679,
            to: 13769,
            rp: 0,
            rpa: 0,
            mdi: 'si9282c',
            immo: false,
            apsn: 'Slide9189',
            trin: 0,
            trout: 0
        },
        si9282c: {
            b: [20, 406, 310, 483],
            uid: 9282,
            dn: 'si9282',
            visible: 0,
            JSONEffectData: false,
            accstr: ' ',
            traccstr: '',
            ti: -1,
            ta: 'center',
            B: true,
            c: '#000000',
            f: 'Open Sans Light',
            i: true,
            sz: 13,
            u: false,
            icf: 'You did not answer this question completely',
            cf: 'You answered this correctly!',
            pcf: 'You answered this partially correct!',
            idc: 'Your answer:',
            ict: 'The correct answer is:',
            rqs: 'Slide9189',
            vbwr: [20, 406, 310, 483],
            vb: [20, 406, 310, 483]
        },
        si9286: {
            type: 91,
            from: 13679,
            to: 13769,
            rp: 0,
            rpa: 0,
            mdi: 'si9286c',
            immo: false,
            apsn: 'Slide9189',
            chfn: cp.qsbch,
            enabled: 1,
            amc: true,
            isDD: false,
            subt: 0,
            itr: false,
            sn: 'Slide9189',
            iqb: true,
            qbt: 'submit',
            pa: 13709,
            ma: 1,
            oca: 'continue',
            eh: cp.qbKH,
            trin: 0,
            trout: 0
        },
        si9286c: {
            b: [694, 493, 776, 522],
            uid: 9286,
            sr: cp.fd,
            ip: 'dr/si9286.png',
            dn: 'si9286',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Submit ',
            traccstr: '',
            ti: 2500,
            hImg: 'dr/si9286o.png',
            pImg: 'dr/si9286d.png',
            vbwr: [693, 492, 777, 523],
            vb: [693, 492, 777, 523]
        },
        si9225: {
            type: 10088,
            from: 13679,
            to: 13769,
            rp: 0,
            rpa: 0,
            mdi: 'si9225c',
            immo: false,
            apsn: 'Slide9189',
            trin: 0,
            trout: 0
        },
        si9225c: {
            b: [61, 185, 75, 204],
            uid: 9225,
            sr: cp.fd,
            ip: 'dr/si9225.png',
            dn: 'si9225',
            visible: 1,
            JSONEffectData: false,
            accstr: 'A) ',
            traccstr: '',
            ti: -1,
            vbwr: [61, 185, 75, 204],
            vb: [61, 185, 75, 204]
        },
        si9229: {
            type: 80,
            from: 13679,
            to: 13769,
            rp: 0,
            rpa: 0,
            mdi: 'si9229c',
            immo: false,
            apsn: 'Slide9189',
            qdi: 'si9229r',
            ta: 0,
            txtl: 0,
            trin: 0,
            trout: 0
        },
        si9229c: {
            b: [80, 185, 273, 209],
            uid: 9229,
            sr: cp.fd,
            ip: 'dr/si9229.png',
            dn: 'si9229',
            visible: 1,
            JSONEffectData: false,
            accstr: ' General Ledger ',
            traccstr: '',
            ti: -1,
            aid: 'A',
            at: 10082,
            atxtlms: ' General Ledger',
            ti: 0,
            ad: '',
            ic: false,
            ap: 0,
            vbwr: [80, 185, 273, 209],
            vb: [80, 185, 273, 209]
        },
        si9229r: {
            b: [32, 185, 52, 209],
            type: 'radio',
            visible: 1,
            ahn: 'si9225_a',
            cn: 'si9225c',
            actid: 'si9229',
            aan: 'si9982',
            aid: 'A',
            rqs: 'Slide9189',
            ic: false,
            ahl: 80,
            aht: 185,
            accstr: '',
            vbwr: [32, 185, 52, 209],
            vb: [32, 185, 52, 209]
        },
        si9236: {
            type: 10088,
            from: 13679,
            to: 13769,
            rp: 0,
            rpa: 0,
            mdi: 'si9236c',
            immo: false,
            apsn: 'Slide9189',
            trin: 0,
            trout: 0
        },
        si9236c: {
            b: [61, 223, 76, 242],
            uid: 9236,
            sr: cp.fd,
            ip: 'dr/si9236.png',
            dn: 'si9236',
            visible: 1,
            JSONEffectData: false,
            accstr: 'B) ',
            traccstr: '',
            ti: -1,
            vbwr: [61, 223, 76, 242],
            vb: [61, 223, 76, 242]
        },
        si9240: {
            type: 80,
            from: 13679,
            to: 13769,
            rp: 0,
            rpa: 0,
            mdi: 'si9240c',
            immo: false,
            apsn: 'Slide9189',
            qdi: 'si9240r',
            ta: 0,
            txtl: 0,
            trin: 0,
            trout: 0
        },
        si9240c: {
            b: [81, 223, 289, 247],
            uid: 9240,
            sr: cp.fd,
            ip: 'dr/si9240.png',
            dn: 'si9240',
            visible: 1,
            JSONEffectData: false,
            accstr: ' Accounts Payable ',
            traccstr: '',
            ti: -1,
            aid: 'B',
            at: 10082,
            atxtlms: ' Accounts Payable',
            ti: 0,
            ad: '',
            ic: true,
            ap: 0,
            vbwr: [81, 223, 289, 247],
            vb: [81, 223, 289, 247]
        },
        si9240r: {
            b: [32, 223, 52, 247],
            type: 'radio',
            visible: 1,
            ahn: 'si9236_a',
            cn: 'si9236c',
            actid: 'si9240',
            aan: 'si9982',
            aid: 'B',
            rqs: 'Slide9189',
            ic: true,
            ahl: 81,
            aht: 223,
            accstr: '',
            vbwr: [32, 223, 52, 247],
            vb: [32, 223, 52, 247]
        },
        si9247: {
            type: 10088,
            from: 13679,
            to: 13769,
            rp: 0,
            rpa: 0,
            mdi: 'si9247c',
            immo: false,
            apsn: 'Slide9189',
            trin: 0,
            trout: 0
        },
        si9247c: {
            b: [61, 261, 76, 280],
            uid: 9247,
            sr: cp.fd,
            ip: 'dr/si9247.png',
            dn: 'si9247',
            visible: 1,
            JSONEffectData: false,
            accstr: 'C) ',
            traccstr: '',
            ti: -1,
            vbwr: [61, 261, 76, 280],
            vb: [61, 261, 76, 280]
        },
        si9251: {
            type: 80,
            from: 13679,
            to: 13769,
            rp: 0,
            rpa: 0,
            mdi: 'si9251c',
            immo: false,
            apsn: 'Slide9189',
            qdi: 'si9251r',
            ta: 0,
            txtl: 0,
            trin: 0,
            trout: 0
        },
        si9251c: {
            b: [81, 261, 311, 285],
            uid: 9251,
            sr: cp.fd,
            ip: 'dr/si9251.png',
            dn: 'si9251',
            visible: 1,
            JSONEffectData: false,
            accstr: ' Accounts Receivable ',
            traccstr: '',
            ti: -1,
            aid: 'C',
            at: 10082,
            atxtlms: ' Accounts Receivable',
            ti: 0,
            ad: '',
            ic: false,
            ap: 0,
            vbwr: [81, 261, 311, 285],
            vb: [81, 261, 311, 285]
        },
        si9251r: {
            b: [32, 261, 52, 285],
            type: 'radio',
            visible: 1,
            ahn: 'si9247_a',
            cn: 'si9247c',
            actid: 'si9251',
            aan: 'si9982',
            aid: 'C',
            rqs: 'Slide9189',
            ic: false,
            ahl: 81,
            aht: 261,
            accstr: '',
            vbwr: [32, 261, 52, 285],
            vb: [32, 261, 52, 285]
        },
        si9258: {
            type: 10088,
            from: 13679,
            to: 13769,
            rp: 0,
            rpa: 0,
            mdi: 'si9258c',
            immo: false,
            apsn: 'Slide9189',
            trin: 0,
            trout: 0
        },
        si9258c: {
            b: [61, 299, 77, 318],
            uid: 9258,
            sr: cp.fd,
            ip: 'dr/si9258.png',
            dn: 'si9258',
            visible: 1,
            JSONEffectData: false,
            accstr: 'D) ',
            traccstr: '',
            ti: -1,
            vbwr: [61, 299, 77, 318],
            vb: [61, 299, 77, 318]
        },
        si9262: {
            type: 80,
            from: 13679,
            to: 13769,
            rp: 0,
            rpa: 0,
            mdi: 'si9262c',
            immo: false,
            apsn: 'Slide9189',
            qdi: 'si9262r',
            ta: 0,
            txtl: 0,
            trin: 0,
            trout: 0
        },
        si9262c: {
            b: [82, 299, 286, 323],
            uid: 9262,
            sr: cp.fd,
            ip: 'dr/si9262.png',
            dn: 'si9262',
            visible: 1,
            JSONEffectData: false,
            accstr: ' Asset Accounting ',
            traccstr: '',
            ti: -1,
            aid: 'D',
            at: 10082,
            atxtlms: ' Asset Accounting',
            ti: 0,
            ad: '',
            ic: false,
            ap: 0,
            vbwr: [82, 299, 286, 323],
            vb: [82, 299, 286, 323]
        },
        si9262r: {
            b: [32, 299, 52, 323],
            type: 'radio',
            visible: 1,
            ahn: 'si9258_a',
            cn: 'si9258c',
            actid: 'si9262',
            aan: 'si9982',
            aid: 'D',
            rqs: 'Slide9189',
            ic: false,
            ahl: 82,
            aht: 299,
            accstr: '',
            vbwr: [32, 299, 52, 323],
            vb: [32, 299, 52, 323]
        },
        si9266: {
            type: 10086,
            from: 13679,
            to: 13768,
            rp: 0,
            rpa: 0,
            mdi: 'si9266c',
            immo: false,
            apsn: 'Slide9189',
            sc: {
                k: 89,
                s: 0,
                c: 0,
                a: 0
            }
        },
        si9266c: {
            b: [317, 405, 642, 523],
            uid: 9266,
            sr: cp.fd,
            ip: 'dr/si9266.png',
            dn: 'si9266',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Correct - B. A vendor receives payment from a company, which puts the vendor payment transactions in the Accounts Payable side of company accounting. Therefore, vendor master records are created within the Accounts Payable application component of SAP. Click anywhere to continue. ',
            traccstr: '',
            ti: -1,
            vbwr: [317, 405, 642, 523],
            vb: [317, 405, 642, 523]
        },
        si9270: {
            type: 10087,
            from: 13679,
            to: 13768,
            rp: 0,
            rpa: 0,
            mdi: 'si9270c',
            immo: false,
            apsn: 'Slide9189',
            sc: {
                k: 89,
                s: 0,
                c: 0,
                a: 0
            }
        },
        si9270c: {
            b: [282, 148, 779, 399],
            uid: 9270,
            sr: cp.fd,
            ip: 'dr/si9270.png',
            dn: 'si9270',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect - B. A) Incorrect: The General Ledger does not contain the vendor master record. Business partner master records are maintained within the respective application component where the record is used. B) Correct: A vendor receives payment from a company, which puts the vendor payment transactions in the Accounts Payable side of company accounting. Therefore, vendor master records are created within the Accounts Payable application component of SAP. C) Incorrect: A customer pays a company for products or services, which puts the customer payment transactions in the Accounts Receivable side of company accounting. A customer master record is maintained within the Accounts Receivables component. D) Incorrect: Assets such as production equipment and office workstations are considered part of Asset Accounting. Asset record maintenance occurs in the Asset Accounting component. Click anywhere to continue. ',
            traccstr: '',
            ti: -1,
            vbwr: [282, 148, 779, 399],
            vb: [282, 148, 779, 399]
        },
        si9274: {
            type: 97,
            from: 13679,
            to: 13768,
            rp: 0,
            rpa: 0,
            mdi: 'si9274c',
            immo: false,
            apsn: 'Slide9189',
            sc: {
                k: 89,
                s: 0,
                c: 0,
                a: 0
            }
        },
        si9274c: {
            b: [621, 21, 773, 83],
            uid: 9274,
            sr: cp.fd,
            ip: 'dr/si9274.png',
            dn: 'si9274',
            visible: 0,
            JSONEffectData: false,
            accstr: 'You must answer the question before continuing. ',
            traccstr: '',
            ti: -1,
            vbwr: [621, 21, 773, 83],
            vb: [621, 21, 773, 83]
        },
        Slide9189: {
            lb: '',
            id: 9189,
            from: 13679,
            to: 13768,
            mmot: false,
            mdi: 'Slide9189c',
            st: 'Question Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'si9278',
                t: 92
            }, {
                n: 'si9208',
                t: 86
            }, {
                n: 'si9215',
                t: 79
            }, {
                n: 'si9282',
                t: 94
            }, {
                n: 'si9286',
                t: 91
            }, {
                n: 'si9225',
                t: 10088
            }, {
                n: 'si9229',
                t: 80
            }, {
                n: 'si9236',
                t: 10088
            }, {
                n: 'si9240',
                t: 80
            }, {
                n: 'si9247',
                t: 10088
            }, {
                n: 'si9251',
                t: 80
            }, {
                n: 'si9258',
                t: 10088
            }, {
                n: 'si9262',
                t: 80
            }, {
                n: 'si9266',
                t: 10086
            }, {
                n: 'si9270',
                t: 10087
            }, {
                n: 'si9274',
                t: 97
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: 'Slide9189q1',
            qnq: 1,
            pa: 13722
        },
        Slide9189c: {
            b: [0, 0, 789, 555],
            sr: cp.fd,
            ip: 'dr/12352.png',
            dn: 'Slide9189',
            visible: '1'
        },
        Slide9189q1: {
            noa: 1,
            qt: 'In what application component do you create a vendor master record?',
            it: true,
            is: false,
            ipq: false,
            ish: false,
            ips: false,
            qnq: 1,
            sn: 'Slide9189',
            oid: 'Quiz10030',
            iid: 'Interaction2605203',
            sra: true,
            w: 1,
            nw: 0,
            itp: 'choice',
            cal: ['B'],
            qtp: 'MCQ',
            gn: 'Slide9189_ag',
            tl: 0,
            sfrc: false,
            frc: '',
            ifc: ['si9270'],
            ofct: true,
            ao: ['si9229c:0', 'si9240c:1', 'si9251c:2', 'si9262c:3'],
            qtc: 'si9215c',
            JSONTT_4: [],
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cp.jumpToNextSlide();',
            oic: 'si9274',
            sic: true,
            osc: 'si9266',
            osct: true
        },
        si9499: {
            type: 92,
            from: 13769,
            to: 13859,
            rp: 0,
            rpa: 0,
            mdi: 'si9499c',
            immo: false,
            apsn: 'Slide9399',
            trin: 0,
            trout: 0
        },
        si9499c: {
            b: [20, 495, 139, 525],
            uid: 9499,
            dn: 'si9499',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Question %d of %d ',
            traccstr: '',
            ti: -1,
            ta: 'left',
            B: true,
            c: '#000000',
            f: 'Open Sans Light',
            i: true,
            sz: 16,
            u: false,
            rqs: 'Slide9399',
            text: 'Question %d of %d',
            vbwr: [20, 495, 139, 525],
            vb: [20, 495, 139, 525]
        },
        si9418: {
            type: 86,
            from: 13769,
            to: 13859,
            rp: 0,
            rpa: 0,
            mdi: 'si9418c',
            immo: false,
            apsn: 'Slide9399',
            trin: 0,
            trout: 0
        },
        si9418c: {
            b: [270, 35, 521, 69],
            uid: 9418,
            sr: cp.fd,
            ip: 'dr/si9418.png',
            dn: 'si9418',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Multiple Choice ',
            traccstr: '',
            ti: -1,
            t: 86,
            vbwr: [269, 34, 521, 69],
            vb: [269, 34, 521, 69]
        },
        si9425: {
            type: 79,
            from: 13769,
            to: 13859,
            rp: 0,
            rpa: 0,
            mdi: 'si9425c',
            immo: false,
            apsn: 'Slide9399',
            trin: 0,
            trout: 0
        },
        si9425c: {
            b: [27, 120, 755, 177],
            uid: 9425,
            sr: cp.fd,
            ip: 'dr/si9425.png',
            dn: 'si9425',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Which of the following information is stored in the Vendor master record? (Select all that apply) ',
            traccstr: '',
            ti: -1,
            t: 79,
            vbwr: [26, 119, 755, 177],
            vb: [26, 119, 755, 177]
        },
        si9503: {
            type: 94,
            from: 13769,
            to: 13859,
            rp: 0,
            rpa: 0,
            mdi: 'si9503c',
            immo: false,
            apsn: 'Slide9399',
            trin: 0,
            trout: 0
        },
        si9503c: {
            b: [20, 406, 310, 483],
            uid: 9503,
            dn: 'si9503',
            visible: 0,
            JSONEffectData: false,
            accstr: ' ',
            traccstr: '',
            ti: -1,
            ta: 'center',
            B: true,
            c: '#000000',
            f: 'Open Sans Light',
            i: true,
            sz: 13,
            u: false,
            icf: 'You did not answer this question completely',
            cf: 'You answered this correctly!',
            pcf: 'You answered this partially correct!',
            idc: 'Your answer:',
            ict: 'The correct answer is:',
            rqs: 'Slide9399',
            vbwr: [20, 406, 310, 483],
            vb: [20, 406, 310, 483]
        },
        si9507: {
            type: 91,
            from: 13769,
            to: 13859,
            rp: 0,
            rpa: 0,
            mdi: 'si9507c',
            immo: false,
            apsn: 'Slide9399',
            chfn: cp.qsbch,
            enabled: 1,
            amc: true,
            isDD: false,
            subt: 0,
            itr: false,
            sn: 'Slide9399',
            iqb: true,
            qbt: 'submit',
            pa: 13799,
            ma: 1,
            oca: 'continue',
            eh: cp.qbKH,
            trin: 0,
            trout: 0
        },
        si9507c: {
            b: [694, 493, 776, 522],
            uid: 9507,
            sr: cp.fd,
            ip: 'dr/si9507.png',
            dn: 'si9507',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Submit ',
            traccstr: '',
            ti: 2500,
            hImg: 'dr/si9507o.png',
            pImg: 'dr/si9507d.png',
            vbwr: [693, 492, 777, 523],
            vb: [693, 492, 777, 523]
        },
        si9435: {
            type: 10088,
            from: 13769,
            to: 13859,
            rp: 0,
            rpa: 0,
            mdi: 'si9435c',
            immo: false,
            apsn: 'Slide9399',
            trin: 0,
            trout: 0
        },
        si9435c: {
            b: [61, 185, 75, 204],
            uid: 9435,
            sr: cp.fd,
            ip: 'dr/si9435.png',
            dn: 'si9435',
            visible: 1,
            JSONEffectData: false,
            accstr: 'A) ',
            traccstr: '',
            ti: -1,
            vbwr: [61, 185, 75, 204],
            vb: [61, 185, 75, 204]
        },
        si9439: {
            type: 80,
            from: 13769,
            to: 13859,
            rp: 0,
            rpa: 0,
            mdi: 'si9439c',
            immo: false,
            apsn: 'Slide9399',
            qdi: 'si9439ch',
            ta: 0,
            txtl: 0,
            trin: 0,
            trout: 0
        },
        si9439c: {
            b: [80, 185, 223, 209],
            uid: 9439,
            sr: cp.fd,
            ip: 'dr/si9439.png',
            dn: 'si9439',
            visible: 1,
            JSONEffectData: false,
            accstr: ' Address ',
            traccstr: '',
            ti: -1,
            aid: 'A',
            at: 10081,
            atxtlms: ' Address',
            ti: 0,
            ad: '',
            ic: true,
            ap: 0,
            vbwr: [80, 185, 223, 209],
            vb: [80, 185, 223, 209]
        },
        si9439ch: {
            b: [32, 185, 52, 209],
            type: 'checkbox',
            visible: 1,
            ahn: 'si9435_a',
            cn: 'si9435c',
            actid: 'si9439',
            aan: 'si9992',
            aid: 'A',
            rqs: 'Slide9399',
            ic: true,
            ahl: 80,
            aht: 185,
            vbwr: [32, 185, 52, 209],
            vb: [32, 185, 52, 209]
        },
        si9446: {
            type: 10088,
            from: 13769,
            to: 13859,
            rp: 0,
            rpa: 0,
            mdi: 'si9446c',
            immo: false,
            apsn: 'Slide9399',
            trin: 0,
            trout: 0
        },
        si9446c: {
            b: [61, 221, 76, 240],
            uid: 9446,
            sr: cp.fd,
            ip: 'dr/si9446.png',
            dn: 'si9446',
            visible: 1,
            JSONEffectData: false,
            accstr: 'B) ',
            traccstr: '',
            ti: -1,
            vbwr: [61, 221, 76, 240],
            vb: [61, 221, 76, 240]
        },
        si9450: {
            type: 80,
            from: 13769,
            to: 13859,
            rp: 0,
            rpa: 0,
            mdi: 'si9450c',
            immo: false,
            apsn: 'Slide9399',
            qdi: 'si9450ch',
            ta: 0,
            txtl: 0,
            trin: 0,
            trout: 0
        },
        si9450c: {
            b: [81, 221, 245, 245],
            uid: 9450,
            sr: cp.fd,
            ip: 'dr/si9450.png',
            dn: 'si9450',
            visible: 1,
            JSONEffectData: false,
            accstr: ' Tax information ',
            traccstr: '',
            ti: -1,
            aid: 'B',
            at: 10081,
            atxtlms: ' Tax information',
            ti: 0,
            ad: '',
            ic: true,
            ap: 0,
            vbwr: [81, 221, 245, 245],
            vb: [81, 221, 245, 245]
        },
        si9450ch: {
            b: [32, 221, 52, 245],
            type: 'checkbox',
            visible: 1,
            ahn: 'si9446_a',
            cn: 'si9446c',
            actid: 'si9450',
            aan: 'si9992',
            aid: 'B',
            rqs: 'Slide9399',
            ic: true,
            ahl: 81,
            aht: 221,
            vbwr: [32, 221, 52, 245],
            vb: [32, 221, 52, 245]
        },
        si9457: {
            type: 10088,
            from: 13769,
            to: 13859,
            rp: 0,
            rpa: 0,
            mdi: 'si9457c',
            immo: false,
            apsn: 'Slide9399',
            trin: 0,
            trout: 0
        },
        si9457c: {
            b: [61, 257, 76, 276],
            uid: 9457,
            sr: cp.fd,
            ip: 'dr/si9457.png',
            dn: 'si9457',
            visible: 1,
            JSONEffectData: false,
            accstr: 'C) ',
            traccstr: '',
            ti: -1,
            vbwr: [61, 257, 76, 276],
            vb: [61, 257, 76, 276]
        },
        si9461: {
            type: 80,
            from: 13769,
            to: 13859,
            rp: 0,
            rpa: 0,
            mdi: 'si9461c',
            immo: false,
            apsn: 'Slide9399',
            qdi: 'si9461ch',
            ta: 0,
            txtl: 0,
            trin: 0,
            trout: 0
        },
        si9461c: {
            b: [81, 257, 298, 281],
            uid: 9461,
            sr: cp.fd,
            ip: 'dr/si9461.png',
            dn: 'si9461',
            visible: 1,
            JSONEffectData: false,
            accstr: ' Industry information ',
            traccstr: '',
            ti: -1,
            aid: 'C',
            at: 10081,
            atxtlms: ' Industry information',
            ti: 0,
            ad: '',
            ic: true,
            ap: 0,
            vbwr: [81, 257, 298, 281],
            vb: [81, 257, 298, 281]
        },
        si9461ch: {
            b: [32, 257, 52, 281],
            type: 'checkbox',
            visible: 1,
            ahn: 'si9457_a',
            cn: 'si9457c',
            actid: 'si9461',
            aan: 'si9992',
            aid: 'C',
            rqs: 'Slide9399',
            ic: true,
            ahl: 81,
            aht: 257,
            vbwr: [32, 257, 52, 281],
            vb: [32, 257, 52, 281]
        },
        si9468: {
            type: 10088,
            from: 13769,
            to: 13859,
            rp: 0,
            rpa: 0,
            mdi: 'si9468c',
            immo: false,
            apsn: 'Slide9399',
            trin: 0,
            trout: 0
        },
        si9468c: {
            b: [61, 293, 77, 312],
            uid: 9468,
            sr: cp.fd,
            ip: 'dr/si9468.png',
            dn: 'si9468',
            visible: 1,
            JSONEffectData: false,
            accstr: 'D) ',
            traccstr: '',
            ti: -1,
            vbwr: [61, 293, 77, 312],
            vb: [61, 293, 77, 312]
        },
        si9472: {
            type: 80,
            from: 13769,
            to: 13859,
            rp: 0,
            rpa: 0,
            mdi: 'si9472c',
            immo: false,
            apsn: 'Slide9399',
            qdi: 'si9472ch',
            ta: 0,
            txtl: 0,
            trin: 0,
            trout: 0
        },
        si9472c: {
            b: [82, 293, 251, 317],
            uid: 9472,
            sr: cp.fd,
            ip: 'dr/si9472.png',
            dn: 'si9472',
            visible: 1,
            JSONEffectData: false,
            accstr: ' Bank details ',
            traccstr: '',
            ti: -1,
            aid: 'D',
            at: 10081,
            atxtlms: ' Bank details',
            ti: 0,
            ad: '',
            ic: true,
            ap: 0,
            vbwr: [82, 293, 251, 317],
            vb: [82, 293, 251, 317]
        },
        si9472ch: {
            b: [32, 293, 52, 317],
            type: 'checkbox',
            visible: 1,
            ahn: 'si9468_a',
            cn: 'si9468c',
            actid: 'si9472',
            aan: 'si9992',
            aid: 'D',
            rqs: 'Slide9399',
            ic: true,
            ahl: 82,
            aht: 293,
            vbwr: [32, 293, 52, 317],
            vb: [32, 293, 52, 317]
        },
        si9487: {
            type: 10086,
            from: 13769,
            to: 13858,
            rp: 0,
            rpa: 0,
            mdi: 'si9487c',
            immo: false,
            apsn: 'Slide9399',
            sc: {
                k: 89,
                s: 0,
                c: 0,
                a: 0
            }
        },
        si9487c: {
            b: [334, 419, 647, 523],
            uid: 9487,
            sr: cp.fd,
            ip: 'dr/si9487.png',
            dn: 'si9487',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Correct - A, B, C, D. The vendor master record is a complete record of all information for the vendor. Address, tax information, industry information and bank details can all be stored in a vendor master record. Click anywhere to continue. ',
            traccstr: '',
            ti: -1,
            vbwr: [334, 419, 647, 523],
            vb: [334, 419, 647, 523]
        },
        si9491: {
            type: 10087,
            from: 13769,
            to: 13858,
            rp: 0,
            rpa: 0,
            mdi: 'si9491c',
            immo: false,
            apsn: 'Slide9399',
            sc: {
                k: 89,
                s: 0,
                c: 0,
                a: 0
            }
        },
        si9491c: {
            b: [317, 200, 764, 406],
            uid: 9491,
            sr: cp.fd,
            ip: 'dr/si9491.png',
            dn: 'si9491',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect - A, B, C, D. A) Correct: The vendor master record is a complete record of all information for the vendor. Information like vendor address is stored in it. B) Correct: In order to pay a vendor, you may need to know specific tax information for the vendor. This tax information can be maintained in the vendor master record. C) Correct: Sometimes you may want to search for a vendor who provides materials from a certain industry. This industry information can be maintained in the vendor master record. D) Correct: In order to pay a vendor using a payment option such as a bank transfer, you need to know the bank details for the vendor. This information can be maintained in the vendor master record. Click anywhere to continue. ',
            traccstr: '',
            ti: -1,
            vbwr: [317, 200, 764, 406],
            vb: [317, 200, 764, 406]
        },
        si9495: {
            type: 97,
            from: 13769,
            to: 13858,
            rp: 0,
            rpa: 0,
            mdi: 'si9495c',
            immo: false,
            apsn: 'Slide9399',
            sc: {
                k: 89,
                s: 0,
                c: 0,
                a: 0
            }
        },
        si9495c: {
            b: [621, 21, 773, 83],
            uid: 9495,
            sr: cp.fd,
            ip: 'dr/si9495.png',
            dn: 'si9495',
            visible: 0,
            JSONEffectData: false,
            accstr: 'You must answer the question before continuing. ',
            traccstr: '',
            ti: -1,
            vbwr: [621, 21, 773, 83],
            vb: [621, 21, 773, 83]
        },
        Slide9399: {
            lb: '',
            id: 9399,
            from: 13769,
            to: 13858,
            mmot: false,
            mdi: 'Slide9399c',
            st: 'Question Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'si9499',
                t: 92
            }, {
                n: 'si9418',
                t: 86
            }, {
                n: 'si9425',
                t: 79
            }, {
                n: 'si9503',
                t: 94
            }, {
                n: 'si9507',
                t: 91
            }, {
                n: 'si9435',
                t: 10088
            }, {
                n: 'si9439',
                t: 80
            }, {
                n: 'si9446',
                t: 10088
            }, {
                n: 'si9450',
                t: 80
            }, {
                n: 'si9457',
                t: 10088
            }, {
                n: 'si9461',
                t: 80
            }, {
                n: 'si9468',
                t: 10088
            }, {
                n: 'si9472',
                t: 80
            }, {
                n: 'si9487',
                t: 10086
            }, {
                n: 'si9491',
                t: 10087
            }, {
                n: 'si9495',
                t: 97
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: 'Slide9399q2',
            qnq: 2,
            pa: 13812
        },
        Slide9399c: {
            b: [0, 0, 789, 555],
            sr: cp.fd,
            ip: 'dr/12352.png',
            dn: 'Slide9399',
            visible: '1'
        },
        Slide9399q2: {
            noa: 1,
            qt: 'Which of the following information is stored in the Vendor master record? (Select all that apply)',
            it: true,
            is: false,
            ipq: false,
            ish: false,
            ips: false,
            qnq: 2,
            sn: 'Slide9399',
            oid: 'Quiz10030',
            iid: 'Interaction2605061',
            sra: true,
            w: 1,
            nw: 0,
            itp: 'choice',
            cal: ['A', 'B', 'C', 'D'],
            qtp: 'MCQ',
            gn: 'Slide9399_ag',
            tl: 0,
            sfrc: false,
            frc: '',
            ifc: ['si9491'],
            ofct: true,
            ao: ['si9439c:0', 'si9450c:1', 'si9461c:2', 'si9472c:3'],
            qtc: 'si9425c',
            JSONTT_4: [],
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cp.jumpToNextSlide();',
            oic: 'si9495',
            sic: true,
            osc: 'si9487',
            osct: true
        },
        Image_22: {
            type: 15,
            from: 13859,
            to: 13948,
            rp: 0,
            rpa: 0,
            mdi: 'Image_22c',
            immo: false,
            apsn: 'Slide12592',
            trin: 0,
            trout: 0
        },
        Image_22c: {
            b: [83, 173, 708, 472],
            uid: 12721,
            sr: cp.fd,
            ip: 'dr/12717_625_299.png',
            dn: 'Image_22',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Image ',
            traccstr: '',
            ti: -1,
            vbwr: [83, 173, 708, 472],
            vb: [83, 173, 708, 472]
        },
        si12655: {
            type: 92,
            from: 13859,
            to: 13949,
            rp: 0,
            rpa: 0,
            mdi: 'si12655c',
            immo: false,
            apsn: 'Slide12592',
            trin: 0,
            trout: 0
        },
        si12655c: {
            b: [20, 495, 139, 525],
            uid: 12655,
            dn: 'si12655',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Question %d of %d ',
            traccstr: '',
            ti: -1,
            ta: 'left',
            B: true,
            c: '#000000',
            f: 'Open Sans Light',
            i: true,
            sz: 16,
            u: false,
            rqs: 'Slide12592',
            text: 'Question %d of %d',
            vbwr: [20, 495, 139, 525],
            vb: [20, 495, 139, 525]
        },
        si12611: {
            type: 86,
            from: 13859,
            to: 13949,
            rp: 0,
            rpa: 0,
            mdi: 'si12611c',
            immo: false,
            apsn: 'Slide12592',
            trin: 0,
            trout: 0
        },
        si12611c: {
            b: [1, 36, 789, 72],
            uid: 12611,
            sr: cp.fd,
            ip: 'dr/si12611.png',
            dn: 'si12611',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Hot Spot ',
            traccstr: '',
            ti: -1,
            t: 86,
            vbwr: [0, 35, 789, 72],
            vb: [0, 35, 789, 72]
        },
        si12618: {
            type: 79,
            from: 13859,
            to: 13949,
            rp: 0,
            rpa: 0,
            mdi: 'si12618c',
            immo: false,
            apsn: 'Slide12592',
            trin: 0,
            trout: 0
        },
        si12618c: {
            b: [27, 120, 759, 173],
            uid: 12618,
            sr: cp.fd,
            ip: 'dr/si12618.png',
            dn: 'si12618',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Select the button or icon that will take you to the next available entry screen for creating a new vendor master record. ',
            traccstr: '',
            ti: -1,
            t: 79,
            vbwr: [26, 119, 759, 173],
            vb: [26, 119, 759, 173]
        },
        si12625: {
            type: 131,
            from: 13859,
            to: 13948,
            rp: 0,
            mdi: 'si12625hotspot'
        },
        si12625hotspot: {
            b: [115, 272, 140, 297],
            type: 'hotspot',
            visible: 1,
            aid: '0',
            rqs: 'Slide12592',
            mr: false,
            cur: false,
            ic: true,
            uid: 12625,
            fc: '#000000',
            sc: '#0000ff',
            sw: 0,
            fo: 0,
            dn: 'si12625',
            vbwr: [114, 271, 140, 297],
            vb: [114, 271, 140, 297]
        },
        si12651: {
            type: 94,
            from: 13859,
            to: 13949,
            rp: 0,
            rpa: 0,
            mdi: 'si12651c',
            immo: false,
            apsn: 'Slide12592',
            trin: 0,
            trout: 0
        },
        si12651c: {
            b: [30, 416, 272, 482],
            uid: 12651,
            dn: 'si12651',
            visible: 0,
            JSONEffectData: false,
            accstr: ' ',
            traccstr: '',
            ti: -1,
            ta: 'center',
            B: true,
            c: '#000000',
            f: 'Open Sans Light',
            i: false,
            sz: 13,
            u: false,
            icf: 'You did not answer this question completely',
            cf: 'You answered this correctly!',
            pcf: 'You answered this partially correct!',
            idc: 'Your answer:',
            ict: 'The correct answer is:',
            rqs: 'Slide12592',
            vbwr: [30, 416, 272, 482],
            vb: [30, 416, 272, 482]
        },
        si12659: {
            type: 91,
            from: 13859,
            to: 13949,
            rp: 0,
            rpa: 0,
            mdi: 'si12659c',
            immo: false,
            apsn: 'Slide12592',
            chfn: cp.qsbch,
            enabled: 1,
            amc: true,
            isDD: false,
            subt: 0,
            itr: false,
            sn: 'Slide12592',
            iqb: true,
            qbt: 'submit',
            pa: 13904,
            ma: 1,
            oca: 'continue',
            eh: cp.qbKH,
            trin: 0,
            trout: 0
        },
        si12659c: {
            b: [694, 493, 776, 522],
            uid: 12659,
            sr: cp.fd,
            ip: 'dr/si12659.png',
            dn: 'si12659',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Submit ',
            traccstr: '',
            ti: 2500,
            hImg: 'dr/si12659o.png',
            pImg: 'dr/si12659d.png',
            vbwr: [693, 492, 777, 523],
            vb: [693, 492, 777, 523]
        },
        si12639: {
            type: 10086,
            from: 13859,
            to: 13948,
            rp: 0,
            rpa: 0,
            mdi: 'si12639c',
            immo: false,
            apsn: 'Slide12592',
            sc: {
                k: 89,
                s: 0,
                c: 0,
                a: 0
            }
        },
        si12639c: {
            b: [128, 182, 315, 275],
            uid: 12639,
            sr: cp.fd,
            ip: 'dr/si12639.png',
            dn: 'si12639',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Correct. You can use the Page Next icon to continue paging through the entry screens. Click anywhere to continue. ',
            traccstr: '',
            ti: -1,
            vbwr: [128, 182, 315, 275],
            vb: [128, 182, 315, 275]
        },
        si12643: {
            type: 10087,
            from: 13859,
            to: 13948,
            rp: 0,
            rpa: 0,
            mdi: 'si12643c',
            immo: false,
            apsn: 'Slide12592',
            sc: {
                k: 89,
                s: 0,
                c: 0,
                a: 0
            }
        },
        si12643c: {
            b: [134, 304, 321, 408],
            uid: 12643,
            sr: cp.fd,
            ip: 'dr/si12643.png',
            dn: 'si12643',
            visible: 0,
            JSONEffectData: false,
            accstr: 'Incorrect. The Next Page icon will take you to the next screen to continue Vendor entry. Click anywhere to continue. ',
            traccstr: '',
            ti: -1,
            vbwr: [134, 304, 321, 408],
            vb: [134, 304, 321, 408]
        },
        si12647: {
            type: 97,
            from: 13859,
            to: 13948,
            rp: 0,
            rpa: 0,
            mdi: 'si12647c',
            immo: false,
            apsn: 'Slide12592',
            sc: {
                k: 89,
                s: 0,
                c: 0,
                a: 0
            }
        },
        si12647c: {
            b: [22, 12, 174, 74],
            uid: 12647,
            sr: cp.fd,
            ip: 'dr/si12647.png',
            dn: 'si12647',
            visible: 0,
            JSONEffectData: false,
            accstr: 'You must answer the question before continuing. ',
            traccstr: '',
            ti: -1,
            vbwr: [22, 12, 174, 74],
            vb: [22, 12, 174, 74]
        },
        Slide12592: {
            lb: '',
            id: 12592,
            from: 13859,
            to: 13948,
            mmot: false,
            mdi: 'Slide12592c',
            st: 'Question Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'Image_22',
                t: 15
            }, {
                n: 'si12655',
                t: 92
            }, {
                n: 'si12611',
                t: 86
            }, {
                n: 'si12618',
                t: 79
            }, {
                n: 'si12625',
                t: 131
            }, {
                n: 'si12651',
                t: 94
            }, {
                n: 'si12659',
                t: 91
            }, {
                n: 'si12639',
                t: 10086
            }, {
                n: 'si12643',
                t: 10087
            }, {
                n: 'si12647',
                t: 97
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            v: false,
            bc: '#ffffff',
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: 'Slide12592q3',
            qnq: 3,
            pa: 13902
        },
        Slide12592c: {
            b: [0, 0, 789, 555],
            sr: cp.fd,
            ip: 'dr/12352.png',
            dn: 'Slide12592',
            visible: '1'
        },
        Slide12592q3: {
            noa: 1,
            qt: 'Select the button or icon that will take you to the next available entry screen for creating a new vendor master record.',
            it: true,
            is: false,
            ipq: false,
            ish: false,
            ips: false,
            qnq: 3,
            sn: 'Slide12592',
            oid: 'Quiz10030',
            iid: '12605',
            sra: true,
            w: 1,
            nw: 0,
            itp: 'hotspot',
            cal: ['0'],
            qtp: 'Hotspot',
            gn: 'Slide12592_ag',
            tl: 0,
            sfrc: false,
            frc: '',
            ifc: ['si12643'],
            ofct: true,
            ao: ['si12625hotspot:0'],
            qtc: 'si12618c',
            JSONTT_4: [],
            oca: 'cpCmndResume = 1;',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            oic: 'si12647',
            sic: true,
            osc: 'si12639',
            osct: true,
            ach: false,
            chap: 'assets/htmlimages/hotspot.gif'
        },
        SmartShape_8: {
            type: 612,
            from: 13949,
            to: 14038,
            rp: 0,
            rpa: 0,
            mdi: 'SmartShape_8c',
            immo: false,
            apsn: 'Slide9830',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            trin: 0,
            trout: 0
        },
        SmartShape_8c: {
            b: [0, 153, 788, 290],
            uid: 12102,
            dn: 'SmartShape_8',
            visible: 1,
            JSONEffectData: false,
            accstr: ' ',
            traccstr: '',
            ti: -1,
            sc: '#ffffff',
            sw: 0,
            ss: 0,
            fa: 50,
            bc: '#ffffff',
            p0: [
                [0],
                [1, 0, 153],
                [2, 0, 290.00],
                [2, 788, 290.00],
                [2, 788, 153],
                [2, 0, 153],
                [4]
            ],
            vbwr: [0, 153, 788, 290],
            vb: [0, 153, 788, 290]
        },
        SmartShape_9: {
            type: 612,
            from: 13949,
            to: 14038,
            rp: 0,
            rpa: 0,
            mdi: 'SmartShape_9c',
            immo: false,
            apsn: 'Slide9830',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            trin: 0,
            trout: 0
        },
        SmartShape_9c: {
            b: [-2, 69, 790, 133],
            uid: 12131,
            sr: cp.fd,
            ip: 'dr/SmartShape_9.png',
            dn: 'SmartShape_9',
            visible: 1,
            JSONEffectData: false,
            accstr: ' ',
            traccstr: '',
            ti: -1,
            sc: '#ffffff',
            sw: 0,
            ss: 0,
            fa: 50,
            bc: '#ffffff',
            p0: [
                [0],
                [1, -2, 69],
                [2, -2, 133],
                [2, 790.00, 133],
                [2, 790.00, 69],
                [2, -2, 69],
                [4]
            ],
            vbwr: [-2, 69, 790, 133],
            vb: [-2, 69, 790, 133]
        },
        Text_Caption_182: {
            type: 19,
            from: 13949,
            to: 14038,
            rp: 0,
            rpa: 0,
            mdi: 'Text_Caption_182c',
            immo: false,
            apsn: 'Slide9830',
            trin: 0,
            trout: 0
        },
        Text_Caption_182c: {
            b: [19, 82, 588, 121],
            uid: 12151,
            sr: cp.fd,
            ip: 'dr/Text_Caption_182.png',
            dn: 'Text_Caption_182',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Quiz Results ',
            traccstr: '',
            ti: -1,
            vbwr: [19, 82, 588, 121],
            vb: [19, 82, 588, 121]
        },
        CaptivateItem622: {
            type: 111,
            from: 13949,
            to: 14039,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem622c',
            immo: false,
            apsn: 'Slide9830',
            trin: 0,
            trout: 0
        },
        CaptivateItem622c: {
            b: [395, 170, 570, 200],
            uid: 9859,
            dn: 'CaptivateItem622',
            visible: 1,
            JSONEffectData: false,
            ta: 'left',
            B: true,
            c: '#000000',
            f: 'Open Sans Light',
            i: false,
            sz: 16,
            u: false,
            qp: 'quizInfoTotalCorrectAnswers',
            text: '',
            vbwr: [395, 170, 570, 200],
            vb: [395, 170, 570, 200]
        },
        CaptivateItem624: {
            type: 111,
            from: 13949,
            to: 14039,
            rp: 0,
            rpa: 0,
            mdi: 'CaptivateItem624c',
            immo: false,
            apsn: 'Slide9830',
            trin: 0,
            trout: 0
        },
        CaptivateItem624c: {
            b: [395, 235, 549, 265],
            uid: 9867,
            dn: 'CaptivateItem624',
            visible: 1,
            JSONEffectData: false,
            ta: 'left',
            B: true,
            c: '#000000',
            f: 'Open Sans Light',
            i: false,
            sz: 16,
            u: false,
            qp: 'numQuestionsInQuiz',
            text: '',
            vbwr: [395, 235, 549, 265],
            vb: [395, 235, 549, 265]
        },
        si9855: {
            type: 112,
            from: 13949,
            to: 14039,
            rp: 0,
            rpa: 0,
            mdi: 'si9855c',
            immo: false,
            apsn: 'Slide9830',
            trin: 0,
            trout: 0
        },
        si9855c: {
            b: [60, 170, 225, 196],
            uid: 9855,
            sr: cp.fd,
            ip: 'dr/si9855.png',
            dn: 'si9855',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Questions Correct: ',
            traccstr: '',
            ti: -1,
            vbwr: [60, 170, 225, 196],
            vb: [60, 170, 225, 196]
        },
        si9863: {
            type: 112,
            from: 13949,
            to: 14039,
            rp: 0,
            rpa: 0,
            mdi: 'si9863c',
            immo: false,
            apsn: 'Slide9830',
            trin: 0,
            trout: 0
        },
        si9863c: {
            b: [60, 235, 248, 261],
            uid: 9863,
            sr: cp.fd,
            ip: 'dr/si9863.png',
            dn: 'si9863',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Number of Questions: ',
            traccstr: '',
            ti: -1,
            vbwr: [60, 235, 248, 261],
            vb: [60, 235, 248, 261]
        },
        si9879: {
            type: 111,
            from: 13949,
            to: 14039,
            rp: 0,
            rpa: 0,
            mdi: 'si9879c',
            immo: false,
            apsn: 'Slide9830',
            trin: 0,
            trout: 0
        },
        si9879c: {
            b: [60, 423, 730, 463],
            uid: 9879,
            dn: 'si9879',
            visible: 1,
            JSONEffectData: false,
            ta: 'center',
            B: true,
            c: '#000000',
            f: 'Open Sans Light',
            i: true,
            sz: 16,
            u: false,
            text: '',
            vbwr: [60, 423, 730, 463],
            vb: [60, 423, 730, 463]
        },
        si9883: {
            type: 10119,
            from: 13949,
            to: 14039,
            rp: 0,
            rpa: 0,
            mdi: 'si9883c',
            immo: false,
            apsn: 'Slide9830',
            chfn: cp.qcnch,
            enabled: 1,
            amc: true,
            isDD: false,
            subt: 3,
            itr: false,
            sn: 'Slide9830',
            iqb: true,
            qbt: 'continue',
            pa: 13979,
            ma: -1,
            oca: 'continue',
            eh: cp.qbKH,
            trin: 0,
            trout: 0
        },
        si9883c: {
            b: [20, 500, 139, 538],
            uid: 9883,
            sr: cp.fd,
            ip: 'dr/12066_121_40.png',
            dn: 'si9883',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Continue ',
            traccstr: '',
            ti: 2500,
            hImg: 'dr/12070_121_40.png',
            pImg: 'dr/12068_121_40.png',
            vbwr: [19, 499, 140, 539],
            vb: [19, 499, 140, 539]
        },
        si9902: {
            type: 103,
            from: 13949,
            to: 14039,
            rp: 0,
            rpa: 0,
            mdi: 'si9902c',
            immo: false,
            apsn: 'Slide9830',
            chfn: cp.qrch,
            enabled: 1,
            amc: true,
            isDD: false,
            subt: 3,
            itr: false,
            sn: 'Slide9830',
            iqb: true,
            qbt: 'review',
            pa: 13979,
            ma: -1,
            oca: 'continue',
            eh: cp.qbKH,
            trin: 0,
            trout: 0
        },
        si9902c: {
            b: [147, 500, 266, 538],
            uid: 9902,
            sr: cp.fd,
            ip: 'dr/12162_121_40.png',
            dn: 'si9902',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Review Quiz ',
            traccstr: '',
            ti: 2500,
            hImg: 'dr/12166_121_40.png',
            pImg: 'dr/12164_121_40.png',
            vbwr: [146, 499, 267, 539],
            vb: [146, 499, 267, 539]
        },
        Slide9830: {
            lb: '',
            id: 9830,
            from: 13949,
            to: 14038,
            mmot: false,
            mdi: 'Slide9830c',
            st: 'Question Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'SmartShape_8',
                t: 612
            }, {
                n: 'SmartShape_9',
                t: 612
            }, {
                n: 'Text_Caption_182',
                t: 19
            }, {
                n: 'si9855',
                t: 112
            }, {
                n: 'CaptivateItem622',
                t: 111
            }, {
                n: 'si9863',
                t: 112
            }, {
                n: 'CaptivateItem624',
                t: 111
            }, {
                n: 'si9879',
                t: 111
            }, {
                n: 'si9883',
                t: 10119
            }, {
                n: 'si9902',
                t: 103
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: '',
            pa: 13977
        },
        Slide9830c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/12072.png',
            dn: 'Slide9830',
            visible: '1'
        },
        StAd91: {
            from: 14072,
            to: 14162,
            src: 'ar/12173.mp3',
            du: 3057
        },
        Button_13: {
            type: 177,
            from: 14039,
            to: 14167,
            rp: 0,
            rpa: 0,
            mdi: 'Button_13c',
            immo: false,
            apsn: 'Slide12289',
            JSONTT_4: [],
            cpa: false,
            oca: 'cpCmndResume = 1;',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            chfn: cp.ch,
            osc: '',
            osct: 0,
            ofc: '',
            ofct: 0,
            pa: 14144,
            enabled: 1,
            ma: -1,
            pfc: 1,
            dclk: false,
            amc: true,
            ca: 'Button_13ClkAd',
            eh: cp.cbKH,
            siq: false,
            sat: true,
            subt: 3,
            itr: false,
            trin: 0,
            trout: 0
        },
        Button_13c: {
            b: [20, 500, 139, 538],
            uid: 12204,
            sr: cp.fd,
            ip: 'dr/12188_121_40.png',
            dn: 'Button_13',
            visible: 1,
            JSONEffectData: false,
            accstr: 'End Lesson ',
            traccstr: ' Trigger this button to continue',
            ti: 2500,
            hImg: 'dr/12188_121_40.png',
            pImg: 'dr/12188_121_40.png',
            vbwr: [19, 499, 140, 539],
            vb: [19, 499, 140, 539]
        },
        Button_13ClkAd: {
            src: 'ar/Mouse.mp3',
            du: 182
        },
        SmartShape_10: {
            type: 612,
            from: 14039,
            to: 14167,
            rp: 0,
            rpa: 0,
            mdi: 'SmartShape_10c',
            immo: false,
            apsn: 'Slide12289',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            trin: 0,
            trout: 0
        },
        SmartShape_10c: {
            b: [-2, 69, 792, 133],
            uid: 12231,
            dn: 'SmartShape_10',
            visible: 1,
            JSONEffectData: false,
            accstr: ' ',
            traccstr: '',
            ti: -1,
            sc: '#ffffff',
            sw: 0,
            ss: 0,
            fa: 50,
            bc: '#ffffff',
            p0: [
                [0],
                [1, -2, 69],
                [2, -2, 133],
                [2, 792, 133],
                [2, 792, 69],
                [2, -2, 69],
                [4]
            ],
            vbwr: [-2, 69, 793, 133],
            vb: [-2, 69, 793, 133]
        },
        SmartShape_11: {
            type: 612,
            from: 14039,
            to: 14167,
            rp: 0,
            rpa: 0,
            mdi: 'SmartShape_11c',
            immo: false,
            apsn: 'Slide12289',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            trin: 0,
            trout: 0
        },
        SmartShape_11c: {
            b: [-2, 147, 795, 364],
            uid: 12248,
            dn: 'SmartShape_11',
            visible: 1,
            JSONEffectData: false,
            accstr: ' ',
            traccstr: '',
            ti: -1,
            sc: '#ffffff',
            sw: 0,
            ss: 0,
            fa: 50,
            bc: '#ffffff',
            p0: [
                [0],
                [1, -2, 147],
                [2, -2, 364],
                [2, 795, 364],
                [2, 795, 147],
                [2, -2, 147],
                [4]
            ],
            vbwr: [-2, 147, 795, 364],
            vb: [-2, 147, 795, 364]
        },
        Text_Caption_183: {
            type: 19,
            from: 14039,
            to: 14167,
            rp: 0,
            rpa: 0,
            mdi: 'Text_Caption_183c',
            immo: false,
            apsn: 'Slide12289',
            trin: 0,
            trout: 0
        },
        Text_Caption_183c: {
            b: [23, 83, 786, 137],
            uid: 12268,
            sr: cp.fd,
            ip: 'dr/Text_Caption_183.png',
            dn: 'Text_Caption_183',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Congratulations! ',
            traccstr: '',
            ti: -1,
            vbwr: [23, 83, 786, 137],
            vb: [23, 83, 786, 137]
        },
        Text_Caption_184: {
            type: 19,
            from: 14039,
            to: 14167,
            rp: 0,
            rpa: 0,
            mdi: 'Text_Caption_184c',
            immo: false,
            apsn: 'Slide12289',
            trin: 0,
            trout: 0
        },
        Text_Caption_184c: {
            b: [-2, 147, 783, 361],
            uid: 12272,
            sr: cp.fd,
            ip: 'dr/Text_Caption_184.png',
            dn: 'Text_Caption_184',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Working with Master Records - Create Vendor  You have completed this lesson and learned how to: Identify characteristics of creating a vendor master record Recognize information stored in the vendor master record ',
            traccstr: '',
            ti: -1,
            vbwr: [-2, 147, 783, 361],
            vb: [-2, 147, 783, 361]
        },
        Slide12289: {
            lb: '',
            id: 12289,
            from: 14039,
            to: 14167,
            mmot: false,
            mdi: 'Slide12289c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'Button_13',
                t: 177
            }, {
                n: 'SmartShape_10',
                t: 612
            }, {
                n: 'SmartShape_11',
                t: 612
            }, {
                n: 'Text_Caption_183',
                t: 19
            }, {
                n: 'Text_Caption_184',
                t: 19
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            ea: 'Button_13ClkAd',
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide12289c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/11490.png',
            dn: 'Slide12289',
            visible: '1'
        },
        SmartShape_17: {
            type: 612,
            from: 14168,
            to: 14185,
            rp: 0,
            rpa: 0,
            mdi: 'SmartShape_17c',
            immo: false,
            apsn: 'Slide13203',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            trin: 0,
            trout: 0
        },
        SmartShape_17c: {
            b: [-2, 69, 792, 133],
            uid: 13149,
            dn: 'SmartShape_17',
            visible: 1,
            JSONEffectData: false,
            accstr: ' ',
            traccstr: '',
            ti: -1,
            sc: '#ffffff',
            sw: 0,
            ss: 0,
            fa: 50,
            bc: '#ffffff',
            p0: [
                [0],
                [1, -2, 69],
                [2, -2, 133],
                [2, 792, 133],
                [2, 792, 69],
                [2, -2, 69],
                [4]
            ],
            vbwr: [-2, 69, 793, 133],
            vb: [-2, 69, 793, 133]
        },
        SmartShape_18: {
            type: 612,
            from: 14168,
            to: 14185,
            rp: 0,
            rpa: 0,
            mdi: 'SmartShape_18c',
            immo: false,
            apsn: 'Slide13203',
            JSONTT_4: [],
            cpa: true,
            oca: 'cp.jumpToNextSlide();',
            JSONTT_5: [],
            ofa: 'cpCmndResume = 1;',
            trin: 0,
            trout: 0
        },
        SmartShape_18c: {
            b: [-2, 147, 795, 364],
            uid: 13166,
            dn: 'SmartShape_18',
            visible: 1,
            JSONEffectData: false,
            accstr: ' ',
            traccstr: '',
            ti: -1,
            sc: '#ffffff',
            sw: 0,
            ss: 0,
            fa: 50,
            bc: '#ffffff',
            p0: [
                [0],
                [1, -2, 147],
                [2, -2, 364],
                [2, 795, 364],
                [2, 795, 147],
                [2, -2, 147],
                [4]
            ],
            vbwr: [-2, 147, 795, 364],
            vb: [-2, 147, 795, 364]
        },
        Text_Caption_196: {
            type: 19,
            from: 14168,
            to: 14185,
            rp: 0,
            rpa: 0,
            mdi: 'Text_Caption_196c',
            immo: false,
            apsn: 'Slide13203',
            trin: 0,
            trout: 0
        },
        Text_Caption_196c: {
            b: [23, 83, 786, 137],
            uid: 13186,
            sr: cp.fd,
            ip: 'dr/Text_Caption_196.png',
            dn: 'Text_Caption_196',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Congratulations! ',
            traccstr: '',
            ti: -1,
            vbwr: [23, 83, 786, 137],
            vb: [23, 83, 786, 137]
        },
        Text_Caption_197: {
            type: 19,
            from: 14168,
            to: 14185,
            rp: 0,
            rpa: 0,
            mdi: 'Text_Caption_197c',
            immo: false,
            apsn: 'Slide13203',
            trin: 0,
            trout: 0
        },
        Text_Caption_197c: {
            b: [-2, 147, 783, 361],
            uid: 13190,
            sr: cp.fd,
            ip: 'dr/Text_Caption_197.png',
            dn: 'Text_Caption_197',
            visible: 1,
            JSONEffectData: false,
            accstr: 'Working with Master Records - Create Vendor  You have completed this lesson and learned how to: Identify characteristics of creating a vendor master record Recognize information stored in the vendor master record ',
            traccstr: '',
            ti: -1,
            vbwr: [-2, 147, 783, 361],
            vb: [-2, 147, 783, 361]
        },
        Slide13203: {
            lb: '',
            id: 13203,
            from: 14168,
            to: 14185,
            mmot: false,
            mdi: 'Slide13203c',
            st: 'Normal Slide',
            audCC: [],
            vidCC: [],
            accstr: ' ',
            si: [{
                n: 'SmartShape_17',
                t: 612
            }, {
                n: 'SmartShape_18',
                t: 612
            }, {
                n: 'Text_Caption_196',
                t: 19
            }, {
                n: 'Text_Caption_197',
                t: 19
            }, {
                n: 'Widget_2',
                t: 133
            }],
            iph: [],
            v: false,
            bc: '#ffffff',
            JSONTT_6: [],
            JSONTT_0: [],
            sea: 'cpCmndResume = 1;',
            qs: ''
        },
        Slide13203c: {
            b: [0, 0, 790, 555],
            sr: cp.fd,
            ip: 'dr/11490.png',
            dn: 'Slide13203',
            visible: '1'
        },
        quizzingData: {
            allowBackwardMovement: true,
            allowReviewMode: true,
            isInReviewMode: false,
            allowSkipAnyScoreSlide: true,
            allowSkipFailScoreSlide: true,
            allowSkipPassScoreSlide: true,
            anyGradeAction: '',
            anyGradeActionArg1: '',
            anyGradeActionArg2: '',
            defaultActionType: 'continue',
            defaultActionArg1: '',
            defaultActionArg2: '',
            failedScoreFeedback: 'Sorry, you failed.',
            failingGradeAction: 'cpCmndResume = 1;',
            JSONTT_5: [],
            passedScoreFeedback: 'Congratulations, you passed.',
            passingGradeAction: 'cpCmndResume = 1;',
            JSONTT_4: [],
            pretestAction: '',
            it: true,
            anyScoreSlide: 96,
            firstSlideInQuiz: 92,
            lastSlideInQuiz: 96,
            quizScopeEndSlide: 96,
            maxScore: 4,
            minScore: 0,
            maxPretestScore: 0,
            numQuestionsInQuiz: 4,
            numQuizAttemptsAllowed: 1,
            passingScore: 4,
            quizInfoCurrentAttempt: 0,
            quizInfoPercentScored: 0,
            quizProgress: '',
            questionAdvance: 'optional',
            quizAdvance: 'optional',
            quizID: 450,
            showFinishButton: true,
            showProgress: true,
            questionPoolsInitialized: true,
            quizInfoAnswerChoice: '',
            quizInfoAttempts: 1,
            quizInfoLastSlidePointScored: 0,
            quizInfoMaxAttemptsOnCurrentQuestion: 1,
            quizInfoPassFail: 0,
            quizInfoPointsPerQuestionSlide: 0,
            quizInfoPointsScored: 0,
            quizInfoQuestionSlideTiming: 0,
            quizInfoQuestionSlideType: '',
            quizInfoQuizPassPercent: 80,
            quizInfoQuizPassPoints: 0,
            quizInfoTotalCorrectAnswers: 0,
            quizInfoTotalProjectPoints: 4,
            quizInfoTotalQuestionsPerProject: 4,
            quizInfoTotalQuizPoints: 4,
            quizInfoTotalUnansweredQuestions: 0,
            reportingVariables: 0,
            reportingEnabled: true,
            submitAll: false,
            hidePlaybarInQuiz: true,
            quizBranchAware: false,
            passFailPassingScoreTypeInPrecent: true,
            passFailPassingScoreValue: 80,
            progressIndicatorType: 0,
            rpViDv: 'This slide was viewed in device with different width.',
            progressIndicatorString: 'Question %d of %d    '
        },
        quizReportingData: {
            lWriteDebugInfo: false,
            lmsType: 2,
            sendScoreAsPercent: true,
            trackingLevel: 0,
            slideViewPercentage: 100,
            reportingOption: 1,
            slideViewsForSuccess: 80,
            slideViewsTypeForSuccess: 0,
            slideViewsForCompletion: 80,
            slideViewsTypeForCompletion: 0,
            quizCriteriaForCompletion: 0,
            quizCriteriaForSuccess: 0,
            completionCriteria: 3,
            successCriteria: 3,
            companyName: '',
            departmentName: '',
            courseName: '',
            courseNode: '',
            isTrackedFlag: true,
            trackingUrlEncodeVersionAndSession: 1,
            commitDataOnEverySlide: true,
            trackingSendResumeData: true,
            cmiExitNormalAfterCompletion: false,
            lmsInitializationString: 'cp.movie.playbackController.SetLMSType();cp.movie.playbackController.SetSendScoreAsPercent();cp.movie.playbackController.SetTrackingLevel();cp.movie.playbackController.SetSlideViewPercentage();cp.movie.playbackController.SetReportingOption();cp.movie.playbackController.SetSlideViewsForSuccess();cp.movie.playbackController.SetSlideViewsForCompletion();cp.movie.playbackController.SetQuizCriteriaForCompletion();cp.movie.playbackController.SetQuizCriteriaForSuccess();cp.movie.playbackController.SetCompletionCriteria();cp.movie.playbackController.SetSuccessCriteria();cp.movie.playbackController.SetDirectory();cp.movie.playbackController.SetCourseNode();cp.movie.playbackController.SetIsTrackedFlag();cp.movie.playbackController.SetTrackingUrlEncodeVersionAndSession();cp.movie.playbackController.SetCommitDataOnEverySlide();cp.movie.playbackController.SetTrackingSendResumeData();cp.movie.playbackController.SetCmiExitNormalAfterCompletion();'
        },
        rtDialog: {
            rtbgfc: '#fefefe',
            rtbgsc: '#666666',
            rtbtnfc: '#000000',
            rtbtnsc: '#000000',
            rtsc: '#000000',
            rttc: '#000000',
            rttsc: '#ffffff',
            rtfn: 'MyriadPro-Regular',
            rtt: 'Submit All',
            rtsam: 'You have answered all questions. What do you want to do next?',
            rtiqm: 'One or more questions is incomplete. Answer all questions to continue.',
            rtsiqm: 'You have not answered a few questions yet. Are you sure you want to proceed without answering those questions?',
            rtsanym: 'You have reached the end of the quiz, but you have unanswered questions. What do you want to do?',
            rtmtqm: 'You must answer at least one question to continue.',
            rtokb: 'OK',
            rtcb: 'CANCEL',
            rtyb: 'YES',
            rtnb: 'NO',
            rtsab: 'Submit All Answers',
            rtsanyb: 'Submit Anyway',
            rtrtqb: 'Return to Quiz',
            rtWarningTitle: 'Adobe Captivate',
            rtUnsupportedBowser: 'This browser does not support some of the content in the file you are trying to view. Use one of the following browsers:<ul><li>Internet Explorer 9 or later</li><li>Safari 5.1 or later</li><li>Google Chrome 17 or later</li><li>Firefox @FFVERSION or later</li></ul>'
        },
        sgMgr: {
            ri: 0,
            sg: [
                [0, [
                    [1, [2, 23]]
                ]],
                [1, [
                    [2, [2, 2, 23]]
                ]],
                [2, [
                    [3, [2, 2, 2, 23]]
                ]],
                [3, [
                    [4, [23, 2]]
                ]],
                [4, [
                    [5, [23, 2]]
                ]],
                [5, [
                    [6, [23, 2]]
                ]],
                [6, [
                    [7, [23, 2]]
                ]],
                [7, [
                    [8, [23, 2]]
                ]],
                [8, [
                    [9, [23]]
                ]],
                [9, [
                    [10, [2, 23]]
                ]],
                [10, [
                    [11, [23, 2]]
                ]],
                [11, [
                    [12, [2, 23]]
                ]],
                [12, [
                    [13, [23]]
                ]],
                [13, [
                    [14, [2, 23]]
                ]],
                [14, [
                    [15, [2, 23]]
                ]],
                [15, [
                    [16, [23, 2, 2]]
                ]],
                [16, [
                    [17, [23, 2]]
                ]],
                [17, [
                    [18, [23]]
                ]],
                [18, [
                    [19, [23, 2]]
                ]],
                [19, [
                    [20, [2, 23]]
                ]],
                [20, [
                    [21, [2, 23]]
                ]],
                [21, [
                    [22, [23, 2]]
                ]],
                [22, [
                    [23, [23, 2]]
                ]],
                [23, [
                    [24, [23, 2]]
                ]],
                [24, [
                    [25, [2, 23]]
                ]],
                [25, [
                    [26, [23, 2]]
                ]],
                [26, [
                    [27, [23, 2]]
                ]],
                [27, [
                    [28, [23, 2]]
                ]],
                [28, [
                    [29, [2, 23]]
                ]],
                [29, [
                    [30, [2, 23]]
                ]],
                [30, [
                    [31, [2, 23]]
                ]],
                [31, [
                    [32, [23]]
                ]],
                [32, [
                    [33, [23, 2]]
                ]],
                [33, [
                    [34, [23, 2]]
                ]],
                [34, [
                    [35, [23, 2]]
                ]],
                [35, [
                    [36, [23, 2]]
                ]],
                [36, [
                    [37, [2, 23]]
                ]],
                [37, [
                    [38, [23, 2]]
                ]],
                [38, [
                    [39, [2, 23]]
                ]],
                [39, [
                    [40, [23, 2]]
                ]],
                [40, [
                    [41, [2, 23]]
                ]],
                [41, [
                    [42, [23, 2]]
                ]],
                [42, [
                    [43, [2, 23]]
                ]],
                [43, [
                    [44, [23]]
                ]],
                [44, [
                    [45, [2, 23]]
                ]],
                [45, [
                    [46, [2, 23]]
                ]],
                [46, [
                    [47, [23, 2]]
                ]],
                [47, [
                    [48, [23, 2]]
                ]],
                [48, [
                    [49, [23]]
                ]],
                [49, [
                    [50, [23]]
                ]],
                [50, [
                    [51, [2, 23]]
                ]],
                [51, [
                    [52, [2, 23]]
                ]],
                [52, [
                    [53, [2, 23]]
                ]],
                [53, [
                    [54, [2, 23]]
                ]],
                [54, [
                    [55, [2, 23]]
                ]],
                [55, [
                    [56, [23]]
                ]],
                [56, [
                    [57, [2, 23]]
                ]],
                [57, [
                    [58, [23, 2]]
                ]],
                [58, [
                    [59, [2, 23]]
                ]],
                [59, [
                    [60, [23, 2]]
                ]],
                [60, [
                    [61, [2, 23]]
                ]],
                [61, [
                    [62, [2, 23]]
                ]],
                [62, [
                    [63, [2, 23]]
                ]],
                [63, [
                    [64, [23, 2]]
                ]],
                [64, [
                    [65, [23, 2]]
                ]],
                [65, [
                    [66, [23, 2]]
                ]],
                [66, [
                    [67, [23, 2]]
                ]],
                [67, [
                    [68, [2, 23]]
                ]],
                [68, [
                    [69, [2, 23]]
                ]],
                [69, [
                    [70, [23, 2]]
                ]],
                [70, [
                    [71, [23, 2]]
                ]],
                [71, [
                    [72, [23, 2]]
                ]],
                [72, [
                    [73, [2, 23]]
                ]],
                [73, [
                    [74, [2, 23]]
                ]],
                [74, [
                    [75, [2, 23]]
                ]],
                [75, [
                    [76, [23, 2]]
                ]],
                [76, [
                    [77, [23]]
                ]],
                [77, [
                    [78, [23, 2]]
                ]],
                [78, [
                    [79, [23, 2]]
                ]],
                [79, [
                    [80, [23, 2]]
                ]],
                [80, [
                    [81, [23, 2]]
                ]],
                [81, [
                    [82, [23, 2]]
                ]],
                [82, [
                    [83, [2, 23]]
                ]],
                [83, [
                    [84, [2, 23]]
                ]],
                [84, [
                    [85, [23, 2]]
                ]],
                [85, [
                    [86, [23]]
                ]],
                [86, [
                    [87, [2, 23]]
                ]],
                [87, [
                    [88, [23, 2]]
                ]],
                [88, [
                    [89, [2, 23]]
                ]],
                [89, [
                    [90, [23, 2]]
                ]],
                [90, [
                    [91, [23]]
                ]],
                [91, [
                    [92, [23]]
                ]],
                [92, [
                    [93, [2, 2, 23]]
                ]],
                [93, [
                    [94, [2, 2, 23]]
                ]],
                [94, [
                    [95, [2, 2, 23]]
                ]],
                [95, [
                    [96, [0, 0]]
                ]],
                [96, [
                    [97, [0, 0, 23]]
                ]],
                [97, [
                    [98, [2, 2, 23]]
                ]]
            ]
        },
        project: {
            fps: 30,
            hasTOC: 0,
            w: 790,
            h: 555,
            prjBgColor: '#ffffff',
            pkt: 0,
            htmlBgColor: '#ffffff',
            shc: false,
            pN: 'SAP101_11'
        },
        project_main: {
            from: 1,
            to: 14185,
            currentFrame: 1,
            useResponsive: false,
            currentFrame: 1,
            useWidgetVersion7: false,
            isPublishedFromLacuna: false,
            slideAudios: 'StAd0,StAd1,StAd2,StAd3,StAd4,StAd5,StAd6,StAd7,StAd8,StAd9,StAd10,StAd11,StAd12,StAd13,StAd14,StAd15,StAd16,StAd17,StAd18,StAd19,StAd20,StAd21,StAd22,StAd23,StAd24,StAd25,StAd26,StAd27,StAd28,StAd29,StAd30,StAd31,StAd32,StAd33,StAd34,StAd35,StAd36,StAd37,StAd38,StAd39,StAd40,StAd41,StAd42,StAd43,StAd44,StAd45,StAd46,StAd47,StAd48,StAd49,StAd50,StAd51,StAd52,StAd53,StAd54,StAd55,StAd56,StAd57,StAd58,StAd59,StAd60,StAd61,StAd62,StAd63,StAd64,StAd65,StAd66,StAd67,StAd68,StAd69,StAd70,StAd71,StAd72,StAd73,StAd74,StAd75,StAd76,StAd77,StAd78,StAd79,StAd80,StAd81,StAd82,StAd83,StAd84,StAd85,StAd86,StAd87,StAd88,StAd89,StAd90,StAd91',
            slides: 'Slide12832,Slide11606,Slide11755,Slide4505,Slide4565,Slide4631,Slide4679,Slide4727,Slide4775,Slide4821,Slide4870,Slide4919,Slide4968,Slide5017,Slide5066,Slide5121,Slide5170,Slide5219,Slide5269,Slide5318,Slide5371,Slide5420,Slide5469,Slide5517,Slide5566,Slide5618,Slide5670,Slide5727,Slide5780,Slide5833,Slide5886,Slide5935,Slide5984,Slide6033,Slide6086,Slide6135,Slide6184,Slide6236,Slide6284,Slide6333,Slide6404,Slide6453,Slide6503,Slide6551,Slide6600,Slide6649,Slide6702,Slide6762,Slide6810,Slide6859,Slide6908,Slide6957,Slide7010,Slide7059,Slide7108,Slide7166,Slide7215,Slide7264,Slide7317,Slide7365,Slide7436,Slide7489,Slide7538,Slide7596,Slide7654,Slide7703,Slide7752,Slide7805,Slide7854,Slide7902,Slide7956,Slide8005,Slide8054,Slide8103,Slide8156,Slide8214,Slide8263,Slide8311,Slide8360,Slide8413,Slide8462,Slide8511,Slide8560,Slide8609,Slide8658,Slide8707,Slide8752,Slide8812,Slide8861,Slide8910,Slide8964,Slide9008,Slide9052,Slide9189,Slide9399,Slide12592,Slide9830,Slide12289,Slide13203',
            questions: 'Slide9052q0,Slide9189q1,Slide9399q2,Slide12592q3',
            autoplay: true,
            preloader: true,
            preloaderFileName: 'dr/loading.gif',
            preloaderPercentage: 50,
            preloaderimagel: 380,
            preloaderimaget: 262,
            pprtd: false,
            peon: false,
            fadeInAtStart: 0,
            fadeOutAtEnd: 0,
            endAction: 'cp.stopMovie();'
        },
        borderProperties: {
            hasBorder: false
        },
        playBarProperties: {
            hasPlayBar: true,
            jsfile: 'playbarScript.js',
            cssfile: 'playbarStyle.css',
            position: 3,
            layout: 3,
            showOnHover: false,
            overlay: false,
            tworow: false,
            hasRewind: true,
            hasBackward: true,
            hasPlay: true,
            hasSlider: true,
            hasForward: true,
            hasCC: false,
            hasAudioOn: true,
            hasExit: true,
            hasFastForward: false,
            applyColors: true,
            BkColor: {
                bc: '#e4f2ff',
                alpha: 100
            },
            FaceColor: {
                bc: '#ffffff',
                alpha: 100
            },
            GlowColor: {
                bc: '#ffffff',
                alpha: 100
            },
            IconColor: {
                bc: '#004787',
                alpha: 100
            },
            alpha: 100,
            noToolTips: false,
            locale: 0
        },
        tocProperties: {},
        ccProperties: {
            w: 790,
            h: 57,
            lc: 3,
            c: '#ffffff',
            o: 49,
            f: 'Times New Roman',
            fs: 12,
            tc: '#000000'
        },
        trecs: [{
            link: 12832,
            text: ['Let’s Go!', 'SAP101 Introduction to SAP']
        }, {
            link: 11606,
            text: ['Working with Master Records - Create Vendor',
                'In this lesson you will learn how to: Identify characteristics of creating a vendor master record Recognize information stored in the vendor master record',
                'Continue'
            ]
        }, {
            link: 11755,
            text: ['Business Scenario',
                'Your supervisor has asked you to create a vendor master record. Vendors in SAP include all business partners that provide your company with goods or services. In order to perform this task, you must learn how to create a vendor master record. In knowing how to create this record, you can then store various business objects such as customers, vendors or financial accounts.   ',
                'Continue',
                '“We haven’t talked about how to create a Vendor Master Record yet, and I need to know that process!”',
                '“Great subject Kathryn! Master records are a very important component of SAP.”'
            ]
        }, {
            link: 4505,
            text: ['Continue', 'Working with Master Records (Create Vendor)',
                '“SAP uses master records to store important information about certain business objects such  as customers, vendors or financial accounts.”',
                'All modules in SAP use master records (for example, the Accounts Receivable (FI-AR) module uses customer master records and the Materials Management (MM) module uses material master records, etc.). These master records are a very important component of SAP as they contain information about each individual record (i.e. customers, vendors, materials, etc.).   '
            ]
        }, {
            link: 4565,
            text: ['Begin by going to Accounting. ', 'Click here!', 'Incorrect,  please try again.']
        }, {
            link: 4631,
            text: ['Go to Financial Accounting. ', 'Incorrect,  please try again.', 'Click here!']
        }, {
            link: 4679,
            text: ['Go to Accounts Payable.', 'Incorrect,  please try again.', 'Click here!']
        }, {
            link: 4727,
            text: ['Go to Master Records.', 'Incorrect,  please try again.', 'Click here!']
        }, {
            link: 4775,
            text: ['The transactions in the Master Records folder can be used to Create, Change, Display, Block/Unblock and Delete Vendor Master Records.   In this lesson, you will learn how to create a Vendor Master Record from scratch. Vendors in SAP include all business partners that provide goods or services to the company.',
                'Continue'
            ]
        }, {
            link: 4821,
            text: ['To begin, start transaction FK01 - Create.', 'Incorrect,  please try again.',
                'Double-click here!'
            ]
        }, {
            link: 4870,
            text: ['First, you have to specify the company for which you will create a vendor.   Click in the Company Code field.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 4919,
            text: ['Now click the Search icon to select a company code.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 4968,
            text: ['SAP displays a list of all available company codes.   Now scroll down.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 5017,
            text: ['Select company code 3000.', 'Incorrect,  please try again.', 'Click here!']
        }, {
            link: 5066,
            text: ['Now click the Continue icon.', 'Incorrect,  please try again.', 'Click here!']
        }, {
            link: 5121,
            text: ['“The account group is an important setting for a vendor master record. It determines the number range for the vendor number as well as the data that is relevant for the master record.”',
                'Button',
                'Each vendor master record must be assigned to an account group.  Click in the Account group field.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 5170,
            text: ['Now click the Search icon to select an account group.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 5219,
            text: ['The system displays a list of all available account groups. These groups include settings for regular vendors, one-time vendors, international vendors, etc.    Now scroll down.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 5269,
            text: ['Select LIEF as your account group to create a regular vendor.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 5318,
            text: ['Now click the Continue icon.', 'Incorrect,  please try again.', 'Click here!']
        }, {
            link: 5371,
            text: ['Press the Enter key on your keyboard or click the Enter button to start the creation of the vendor master record.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 5420,
            text: ['First, you need to select a title for the vendor.   Click the drop-down icon for the Title field.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 5469,
            text: ['Since this will be a male vendor, select the Mr. title.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 5517,
            text: ['Next, you need to enter the vendor’s name.   Click in the Name field.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 5566,
            text: ['', 'In the Name field, type John Smith and then press the Enter key.',
                'Incorrect,  please try again.', 'Please type:  John Smith  then press Enter key.'
            ]
        }, {
            link: 5618,
            text: ['',
                'Now, you need to enter a search term for this vendor. The search term makes searching and finding vendors easy.   Type SMITHJ in the Search term 1/2 field and then press the Enter key.',
                'Incorrect,  please try again.', 'Please type:  SMITHJ then press Enter key.'
            ]
        }, {
            link: 5670,
            text: ['',
                'Notice the error message at the bottom of your screen. SAP is reminding you that you have to fill in the address information for this vendor.   Type Main Street in the Street field and then press the Enter key.',
                'Incorrect,  please try again.', 'Please type:  Main Street then press Enter key.'
            ]
        }, {
            link: 5727,
            text: ['', 'Now type 100 in the House number field and then press the Enter key.',
                'Incorrect,  please try again.', 'Please type:  100  then press Enter key.'
            ]
        }, {
            link: 5780,
            text: ['', 'Type 77001 in the Postal Code field and then press the Enter key.',
                'Incorrect,  please try again.', 'Please type:  77001  then press Enter key.'
            ]
        }, {
            link: 5833,
            text: ['', 'Now type Houston in the City field and then press the Enter key.',
                'Incorrect,  please try again.', 'Please type:  Houston then press Enter key.'
            ]
        }, {
            link: 5886,
            text: ['Click the Search icon to find the correct country.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 5935,
            text: ['SAP displays a list of all available countries.   Scroll down.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 5984,
            text: ['Select US - United States.', 'Incorrect,  please try again.', 'Click here!']
        }, {
            link: 6033,
            text: ['Now click the Continue icon.', 'Incorrect,  please try again.', 'Click here!']
        }, {
            link: 6086,
            text: ['Let’s see the remaining fields on this Address screen.  Scroll down.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 6135,
            text: ['Let’s enter the vendor’s phone number.  Click in the Telephone field.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 6184,
            text: ['', 'Type 7135551212 in the Telephone field and then press the Enter key.',
                'Incorrect,  please try again.',
                'Please type:  7135551212  then press the Enter key.'
            ]
        }, {
            link: 6236,
            text: ['Well done!   Now, click the Next icon to go to the next screen.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 6284,
            text: ['This is the Control screen of the vendor master record. We can specify various control parameters and information here.   Click in the Tax Number 1 field to add the vendor’s tax identification number.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 6333,
            text: ['', 'Type 123-44-5678 in the field and then press the Enter key.',
                'Incorrect,  please try again.', 'Please type:  123-44-5678 then press Enter key.'
            ]
        }, {
            link: 6404,
            text: ['Now, scroll down to see the remaining fields on this screen.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 6453,
            text: ['Let’s specify the vendor’s industry code, too. This information can later be used to report on or classify certain vendors together.    Click in the Industry field.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 6503,
            text: ['Click the Search icon to view the available Industry codes.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 6551,
            text: ['SAP displays a list of industry codes.   Scroll down.',
                'Incorrect,  please try again. ', 'Click here!'
            ]
        }, {
            link: 6600,
            text: ['The vendor we are creating is a consultant to our company.  Select the CONS - Consulting Services code.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 6649,
            text: ['Click the Continue icon.', 'Incorrect,  please try again.', 'Click here!']
        }, {
            link: 6702,
            text: ['Now, let’s go to the next screen.   Click the Next screen icon.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 6762,
            text: ['This is the Payment transactions screen for the vendor. Here we can specify various options for paying this vendor. Let’s add the vendor’s bank account information.   Click the Search icon for the Country field.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 6810,
            text: ['SAP displays a list of all available countries.   Scroll down.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 6859,
            text: ['Scroll down again.', 'Incorrect,  please try again.', 'Click here!']
        }, {
            link: 6908,
            text: ['Select US - United States.', 'Incorrect,  please try again.', 'Click here!']
        }, {
            link: 6957,
            text: ['Click the Continue icon.', 'Incorrect,  please try again.', 'Click here!']
        }, {
            link: 7010,
            text: ['Click in the Bank Key field.', 'Incorrect,  please try again.', 'Click here!']
        }, {
            link: 7059,
            text: ['Click the Search icon to select a bank key.', 'Incorrect,  please try again.',
                'Click here!'
            ]
        }, {
            link: 7108,
            text: ['You could use this pop-up box to limit your search for a bank key (for example, by City or Bank Name). We’ll leave all options blank to search for all banks.   Click the Continue icon.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 7166,
            text: ['SAP displays a list of all banks that are available in the system.   Scroll down.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 7215,
            text: ['Select Citibank in New York.', 'Incorrect,  please try again.', 'Click here!']
        }, {
            link: 7264,
            text: ['Click the Continue icon.', 'Incorrect,  please try again.', 'Click here!']
        }, {
            link: 7317,
            text: ['Enter the vendor’s account number at the Citibank branch.   Click in the Bank Account field.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 7365,
            text: ['', 'Type 100020003000 in the Bank Account field and then press the Enter key.  ',
                'Incorrect,  please try again.', 'Please type:  100020003000  then press Enter key.'
            ]
        }, {
            link: 7436,
            text: ['',
                'Enter in the account holder’s name.  Type John Smith in the field and then press the Enter key.',
                'Incorrect,  please try again.', 'Please type:  John Smith  then press Enter key.'
            ]
        }, {
            link: 7489,
            text: ['Before we move on, let’s make sure that we have selected the correct bank.   Click the Bank Data button.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 7538,
            text: ['SAP displays the bank details in this window. It looks good!   Click the Continue icon.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 7596,
            text: ['Let’s move on to the next screen.   Click the Next screen icon.',
                'Incorrect,  please try again.', 'Click the Next screen icon.'
            ]
        }, {
            link: 7654,
            text: ['One of the most important accounting aspects for a vendor in SAP is the reconciliation account number.  A reconciliation account is a General Ledger account to which transactions from a sub-ledger (such as Accounts Payable or Receivable) are posted automatically.  Every time you post a transaction to a vendor in the sub-ledger, SAP will automatically post the transaction to this reconciliation account, too. That way the sub-ledger will always be in sync with the General Ledger.  Click the Search icon for the Recon. account field to select an account. ',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 7703,
            text: ['Select account 160000 - Trade Payables.', 'Incorrect,  please try again.',
                'Click here!'
            ]
        }, {
            link: 7752,
            text: ['Click the Continue icon.', 'Incorrect,  please try again.', 'Click here!']
        }, {
            link: 7805,
            text: ['Click in the Cash management group (Cash mgmnt group) field.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 7854,
            text: ['A cash management group is a group of accounts that can be transferred to a cash management system.   Let’s select a group for this vendor.  Click the Search icon. ',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 7902,
            text: ['We’ll select the first option: A1 - Domestic payments since this vendor is located in the US.  Click the Continue icon.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 7956,
            text: ['Now, specify a sort key. This key will determine how line items for a vendor are sorted in lists.   Click in the Sort key field.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 8005,
            text: ['Select a sort key.  Click the Search icon.', 'Incorrect,  please try again.',
                'Click here!'
            ]
        }, {
            link: 8054,
            text: ['Let’s select 001 - Posting date. This will sort all line items by posting date by default.  Click 001 - Posting date.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 8103,
            text: ['Click the Continue icon.', 'Incorrect,  please try again.', 'Click here!']
        }, {
            link: 8156,
            text: ['Let’s go to the next screen.  Click the Next screen icon.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 8214,
            text: ['On this screen, we need to specify the payment terms for this vendor.   Click the Search icon to select the correct payment terms.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 8263,
            text: ['SAP displays a list of all payment terms that are set up in the system.   Scroll down.',
                'Incorrect,  please try again.', 'Scroll down.'
            ]
        }, {
            link: 8311,
            text: ['This vendor has terms of 30 days net.   Select NT30 - Net 30.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 8360,
            text: ['Click the Continue icon.', 'Incorrect,  please try again.', 'Click here!']
        }, {
            link: 8413,
            text: ['Now, select the Check double invoice (Chk double inv.) option. When this option is selected, SAP will alert you in case you are posting a similar invoice twice.   This is a great option that can be used to avoid accidental double posting.  Click the Chk double inv. checkbox to select it.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 8462,
            text: ['Select the payment methods for this vendor.   Click in the Payment methods field.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 8511,
            text: ['Click the Search icon.', 'Incorrect,  please try again.', 'Click here!']
        }, {
            link: 8560,
            text: ['SAP displays all payment methods that are set up in the system. On the left, you see methods for outgoing payments, while the right lists methods for incoming payments.   We want to pay this vendor via check.  Click the Check checkbox in the list of outgoing payment options to select it.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 8609,
            text: ['In addition, we want to be able to receive payments from this vendor (i.e. credits/refunds) via ACH direct deposit.  Click the ACH checkbox in the list of incoming payment options to select it.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 8658,
            text: ['Let’s add one more payment method for outgoing payments.   Click the Bank transfers checkbox so that we can pay this vendor with bank transfers in addition to checks.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 8707,
            text: ['Good job!   Now press the Enter key to continue.', 'Incorrect,  please try again.',
                'Press the Enter key.'
            ]
        }, {
            link: 8752,
            text: ['Let’s move on to the next screen.  Click the Next screen icon.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 8812,
            text: ['On this screen, you can assign a vendor to a Dunning Procedure.   This is typically done for customers since they would be most likely to owe us money.   Vendors may also owe credits or refunds. When they are overdue on these items, you can have them included in the automatic dunning run.  For now, though, we will continue without assigning this vendor to a Dunning Procedure. Click the Next screen icon.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 8861,
            text: ['This is the end of the vendor creation transaction.   Click the Yes button to save your vendor master record.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 8910,
            text: ['Good job! Notice the message at the bottom of the screen - you have created Vendor 73.  Click the Back icon to return to the main SAP menu.',
                'Incorrect,  please try again.', 'Click here!'
            ]
        }, {
            link: 8964,
            text: ['Well done! You have just learned how to create a vendor master record. ',
                'Continue']
        }, {
            link: 9008,
            text: ['Quiz Questions!  Let’s see if you remembered everything you have learned in this lesson. Just answer the questions as best as you can - if you can’t remember certain things just go back or simply take the lesson again!  Good luck!  ',
                'Continue'
            ]
        }, {
            link: 9052,
            text: ['Question 1 of 4', 'Multiple Choice', 'What is a vendor?', 'Review Area       ',
                'Submit', 'A)', ' A business partner that we provide goods or services to', 'B)',
                ' A master record in SAP for businesses', 'C)',
                ' A business partner that provides goods or services to us',
                'Correct - C. Vendors in SAP include all business partners that provide your company with goods or services. Each vendor must have a master record created in SAP in order to do business with it. Click anywhere to continue.',
                'Incorrect - C. A) Incorrect: Customers, not vendors, are business partners to who we provide goods and services. They also require a master record in SAP, just like vendors. B) Incorrect: Businesses do not require a master record in SAP. Instead, each specific type of business partner requires its own master record. C) Correct: Vendors in SAP include all business partners that provide your company with goods or services. Each vendor must have a master record created in SAP in order to do business with it. Click anywhere to continue.',
                'You must answer the question before continuing.'
            ]
        }, {
            link: 9189,
            text: ['Question 2 of 4', 'Multiple Choice',
                'In what application component do you create a vendor master record?',
                'Review Area       ', 'Submit', 'A)', ' General Ledger', 'B)', ' Accounts Payable',
                'C)', ' Accounts Receivable', 'D)', ' Asset Accounting',
                'Correct - B. A vendor receives payment from a company, which puts the vendor payment transactions in the Accounts Payable side of company accounting. Therefore, vendor master records are created within the Accounts Payable application component of SAP. Click anywhere to continue.',
                'Incorrect - B. A) Incorrect: The General Ledger does not contain the vendor master record. Business partner master records are maintained within the respective application component where the record is used. B) Correct: A vendor receives payment from a company, which puts the vendor payment transactions in the Accounts Payable side of company accounting. Therefore, vendor master records are created within the Accounts Payable application component of SAP. C) Incorrect: A customer pays a company for products or services, which puts the customer payment transactions in the Accounts Receivable side of company accounting. A customer master record is maintained within the Accounts Receivables component. D) Incorrect: Assets such as production equipment and office workstations are considered part of Asset Accounting. Asset record maintenance occurs in the Asset Accounting component. Click anywhere to continue.',
                'You must answer the question before continuing.'
            ]
        }, {
            link: 9399,
            text: ['Question 3 of 4', 'Multiple Choice',
                'Which of the following information is stored in the Vendor master record? (Select all that apply)',
                'Review Area      ', 'Submit', 'A)', ' Address', 'B)', ' Tax information', 'C)',
                ' Industry information', 'D)', ' Bank details',
                'Correct - A, B, C, D. The vendor master record is a complete record of all information for the vendor. Address, tax information, industry information and bank details can all be stored in a vendor master record. Click anywhere to continue.',
                'Incorrect - A, B, C, D. A) Correct: The vendor master record is a complete record of all information for the vendor. Information like vendor address is stored in it. B) Correct: In order to pay a vendor, you may need to know specific tax information for the vendor. This tax information can be maintained in the vendor master record. C) Correct: Sometimes you may want to search for a vendor who provides materials from a certain industry. This industry information can be maintained in the vendor master record. D) Correct: In order to pay a vendor using a payment option such as a bank transfer, you need to know the bank details for the vendor. This information can be maintained in the vendor master record. Click anywhere to continue.',
                'You must answer the question before continuing.'
            ]
        }, {
            link: 12592,
            text: ['Question 4 of 4', 'Hot Spot',
                'Select the button or icon that will take you to the next available entry screen for creating a new vendor master record.',
                '', 'Review Area ', 'Submit',
                'Correct. You can use the Page Next icon to continue paging through the entry screens. Click anywhere to continue.',
                'Incorrect. The Next Page icon will take you to the next screen to continue Vendor entry. Click anywhere to continue.',
                'You must answer the question before continuing.'
            ]
        }, {
            link: 12289,
            text: ['End Lesson', 'Congratulations!',
                'Working with Master Records - Create Vendor  You have completed this lesson and learned how to: Identify characteristics of creating a vendor master record Recognize information stored in the vendor master record'
            ]
        }, {
            link: 13203,
            text: ['Congratulations!',
                'Working with Master Records - Create Vendor  You have completed this lesson and learned how to: Identify characteristics of creating a vendor master record Recognize information stored in the vendor master record'
            ]
        }]
    };
    cp.model.projectImages = ['assets/htmlimages/checkBox_disabled.png', 'assets/htmlimages/checkBox_normal.png',
        'assets/htmlimages/checkBox_selected.png', 'assets/htmlimages/checkBox_selectedDisabled.png',
        'assets/htmlimages/correct_answer_normal.png', 'assets/htmlimages/correct_answer_small.png',
        'assets/htmlimages/correct_question_normal.png', 'assets/htmlimages/correct_question_small.png',
        'assets/htmlimages/hotspot.gif', 'assets/htmlimages/hotspot_correct_answer_normal.png',
        'assets/htmlimages/hotspot_incorrect_answer_normal.png', 'assets/htmlimages/img_trans.gif',
        'assets/htmlimages/incorrect_answer_normal.png', 'assets/htmlimages/incorrect_answer_small.png',
        'assets/htmlimages/incorrect_question_normal.png', 'assets/htmlimages/incorrect_question_small.png',
        'assets/htmlimages/partial_correct_question_normal.png',
        'assets/htmlimages/partial_correct_question_small.png', 'assets/htmlimages/placeholder.png',
        'assets/htmlimages/radioButton_disabled.png', 'assets/htmlimages/radioButton_normal.png',
        'assets/htmlimages/radioButton_selected.png', 'assets/htmlimages/radioButton_selectedDisabled.png',
        'assets/htmlimages/skip_answer_normal.png', 'assets/htmlimages/skip_answer_small.png',
        'assets/htmlimages/skip_question_normal.png', 'assets/htmlimages/skip_question_small.png'
    ];
    cp.model.images = ['dr/11110.png', 'dr/11118.png', 'dr/11380.png', 'dr/11426_120_39.png', 'dr/11490.png',
        'dr/11577_120_39.png', 'dr/11980_150_150.png', 'dr/11998.png', 'dr/12002_150_150.png',
        'dr/12037_283_200.png', 'dr/12066_121_40.png', 'dr/12068_121_40.png', 'dr/12070_121_40.png',
        'dr/12072.png', 'dr/12162_121_40.png', 'dr/12164_121_40.png', 'dr/12166_121_40.png',
        'dr/12188_121_40.png', 'dr/12352.png', 'dr/12717_625_299.png', 'dr/12726_150_150.png',
        'dr/12977_227_299.png', 'dr/13020_52_46.png', 'dr/13022_52_46.png', 'dr/13024_52_46.png',
        'dr/13080_151_388.png', 'dr/2167.png', 'dr/2234.png', 'dr/2238.png', 'dr/2242.png', 'dr/2246.png',
        'dr/2254.png', 'dr/2258.png', 'dr/2262.png', 'dr/2266.png', 'dr/2270.png', 'dr/2274.png', 'dr/2284.png',
        'dr/2288.png', 'dr/2292.png', 'dr/2296.png', 'dr/2300.png', 'dr/2311.png', 'dr/2315.png', 'dr/2319.png',
        'dr/2323.png', 'dr/2327.png', 'dr/2331.png', 'dr/2335.png', 'dr/2339.png', 'dr/2343.png', 'dr/2347.png',
        'dr/2351.png', 'dr/2355.png', 'dr/2359.png', 'dr/2366.png', 'dr/2370.png', 'dr/2374.png', 'dr/2378.png',
        'dr/2382.png', 'dr/2386.png', 'dr/2390.png', 'dr/2394.png', 'dr/2398.png', 'dr/2402.png', 'dr/2406.png',
        'dr/2410.png', 'dr/2417.png', 'dr/2434.png', 'dr/2438.png', 'dr/2442.png', 'dr/2446.png', 'dr/2450.png',
        'dr/2457.png', 'dr/2461.png', 'dr/2465.png', 'dr/2478.png', 'dr/2482.png', 'dr/2486.png', 'dr/2493.png',
        'dr/2497.png', 'dr/2501.png', 'dr/2509.png', 'dr/2522.png', 'dr/2535.png', 'dr/2539.png', 'dr/2543.png',
        'dr/2550.png', 'dr/2554.png', 'dr/2558.png', 'dr/2565.png', 'dr/2569.png', 'dr/2573.png', 'dr/2577.png',
        'dr/2584.png', 'dr/2597.png', 'dr/2601.png', 'dr/2605.png', 'dr/2609.png', 'dr/2616.png', 'dr/2620.png',
        'dr/2624.png', 'dr/2628.png', 'dr/2632.png', 'dr/2636.png', 'dr/2640.png', 'dr/2644.png', 'dr/2661.png',
        'dr/2665.png', 'dr/2673.png', 'dr/CaptivateItem100.png', 'dr/CaptivateItem101.png',
        'dr/CaptivateItem104.png', 'dr/CaptivateItem105.png', 'dr/CaptivateItem107.png',
        'dr/CaptivateItem110.png', 'dr/CaptivateItem111.png', 'dr/CaptivateItem113.png',
        'dr/CaptivateItem116.png', 'dr/CaptivateItem117.png', 'dr/CaptivateItem119.png',
        'dr/CaptivateItem122.png', 'dr/CaptivateItem123.png', 'dr/CaptivateItem125.png',
        'dr/CaptivateItem128.png', 'dr/CaptivateItem129.png', 'dr/CaptivateItem131.png',
        'dr/CaptivateItem134.png', 'dr/CaptivateItem135.png', 'dr/CaptivateItem137.png',
        'dr/CaptivateItem140.png', 'dr/CaptivateItem141.png', 'dr/CaptivateItem142.png',
        'dr/CaptivateItem145.png', 'dr/CaptivateItem146.png', 'dr/CaptivateItem147.png',
        'dr/CaptivateItem150.png', 'dr/CaptivateItem151.png', 'dr/CaptivateItem152.png',
        'dr/CaptivateItem156.png', 'dr/CaptivateItem157.png', 'dr/CaptivateItem158.png',
        'dr/CaptivateItem161.png', 'dr/CaptivateItem162.png', 'dr/CaptivateItem163.png',
        'dr/CaptivateItem166.png', 'dr/CaptivateItem167.png', 'dr/CaptivateItem168.png',
        'dr/CaptivateItem171.png', 'dr/CaptivateItem172.png', 'dr/CaptivateItem174.png',
        'dr/CaptivateItem176.png', 'dr/CaptivateItem178.png', 'dr/CaptivateItem18.png',
        'dr/CaptivateItem180.png', 'dr/CaptivateItem183.png', 'dr/CaptivateItem184.png',
        'dr/CaptivateItem186.png', 'dr/CaptivateItem189.png', 'dr/CaptivateItem190.png',
        'dr/CaptivateItem192.png', 'dr/CaptivateItem195.png', 'dr/CaptivateItem196.png',
        'dr/CaptivateItem198.png', 'dr/CaptivateItem20.png', 'dr/CaptivateItem201.png',
        'dr/CaptivateItem202.png', 'dr/CaptivateItem204.png', 'dr/CaptivateItem207.png',
        'dr/CaptivateItem208.png', 'dr/CaptivateItem209.png', 'dr/CaptivateItem213.png',
        'dr/CaptivateItem214.png', 'dr/CaptivateItem215.png', 'dr/CaptivateItem218.png',
        'dr/CaptivateItem219.png', 'dr/CaptivateItem221.png', 'dr/CaptivateItem225.png',
        'dr/CaptivateItem226.png', 'dr/CaptivateItem227.png', 'dr/CaptivateItem230.png',
        'dr/CaptivateItem231.png', 'dr/CaptivateItem233.png', 'dr/CaptivateItem236.png',
        'dr/CaptivateItem237.png', 'dr/CaptivateItem239.png', 'dr/CaptivateItem24.png',
        'dr/CaptivateItem242.png', 'dr/CaptivateItem243.png', 'dr/CaptivateItem245.png',
        'dr/CaptivateItem247.png', 'dr/CaptivateItem25.png', 'dr/CaptivateItem250.png',
        'dr/CaptivateItem251.png', 'dr/CaptivateItem254.png', 'dr/CaptivateItem255.png',
        'dr/CaptivateItem257.png', 'dr/CaptivateItem26.png', 'dr/CaptivateItem260.png',
        'dr/CaptivateItem261.png', 'dr/CaptivateItem263.png', 'dr/CaptivateItem266.png',
        'dr/CaptivateItem267.png', 'dr/CaptivateItem269.png', 'dr/CaptivateItem272.png',
        'dr/CaptivateItem273.png', 'dr/CaptivateItem275.png', 'dr/CaptivateItem277.png',
        'dr/CaptivateItem280.png', 'dr/CaptivateItem281.png', 'dr/CaptivateItem283.png',
        'dr/CaptivateItem286.png', 'dr/CaptivateItem287.png', 'dr/CaptivateItem29.png',
        'dr/CaptivateItem290.png', 'dr/CaptivateItem291.png', 'dr/CaptivateItem293.png',
        'dr/CaptivateItem296.png', 'dr/CaptivateItem297.png', 'dr/CaptivateItem299.png',
        'dr/CaptivateItem30.png', 'dr/CaptivateItem302.png', 'dr/CaptivateItem303.png',
        'dr/CaptivateItem305.png', 'dr/CaptivateItem308.png', 'dr/CaptivateItem309.png',
        'dr/CaptivateItem311.png', 'dr/CaptivateItem314.png', 'dr/CaptivateItem315.png',
        'dr/CaptivateItem317.png', 'dr/CaptivateItem319.png', 'dr/CaptivateItem32.png',
        'dr/CaptivateItem322.png', 'dr/CaptivateItem323.png', 'dr/CaptivateItem326.png',
        'dr/CaptivateItem327.png', 'dr/CaptivateItem329.png', 'dr/CaptivateItem332.png',
        'dr/CaptivateItem333.png', 'dr/CaptivateItem335.png', 'dr/CaptivateItem338.png',
        'dr/CaptivateItem339.png', 'dr/CaptivateItem341.png', 'dr/CaptivateItem345.png',
        'dr/CaptivateItem346.png', 'dr/CaptivateItem347.png', 'dr/CaptivateItem35.png',
        'dr/CaptivateItem350.png', 'dr/CaptivateItem351.png', 'dr/CaptivateItem352.png',
        'dr/CaptivateItem355.png', 'dr/CaptivateItem356.png', 'dr/CaptivateItem358.png',
        'dr/CaptivateItem36.png', 'dr/CaptivateItem361.png', 'dr/CaptivateItem362.png',
        'dr/CaptivateItem364.png', 'dr/CaptivateItem367.png', 'dr/CaptivateItem368.png',
        'dr/CaptivateItem370.png', 'dr/CaptivateItem373.png', 'dr/CaptivateItem374.png',
        'dr/CaptivateItem376.png', 'dr/CaptivateItem379.png', 'dr/CaptivateItem38.png',
        'dr/CaptivateItem380.png', 'dr/CaptivateItem382.png', 'dr/CaptivateItem385.png',
        'dr/CaptivateItem386.png', 'dr/CaptivateItem388.png', 'dr/CaptivateItem391.png',
        'dr/CaptivateItem392.png', 'dr/CaptivateItem394.png', 'dr/CaptivateItem397.png',
        'dr/CaptivateItem398.png', 'dr/CaptivateItem400.png', 'dr/CaptivateItem403.png',
        'dr/CaptivateItem404.png', 'dr/CaptivateItem406.png', 'dr/CaptivateItem409.png',
        'dr/CaptivateItem41.png', 'dr/CaptivateItem410.png', 'dr/CaptivateItem412.png',
        'dr/CaptivateItem415.png', 'dr/CaptivateItem416.png', 'dr/CaptivateItem418.png',
        'dr/CaptivateItem42.png', 'dr/CaptivateItem421.png', 'dr/CaptivateItem422.png',
        'dr/CaptivateItem424.png', 'dr/CaptivateItem427.png', 'dr/CaptivateItem428.png',
        'dr/CaptivateItem430.png', 'dr/CaptivateItem433.png', 'dr/CaptivateItem434.png',
        'dr/CaptivateItem436.png', 'dr/CaptivateItem439.png', 'dr/CaptivateItem44.png',
        'dr/CaptivateItem440.png', 'dr/CaptivateItem442.png', 'dr/CaptivateItem444.png',
        'dr/CaptivateItem447.png', 'dr/CaptivateItem448.png', 'dr/CaptivateItem451.png',
        'dr/CaptivateItem452.png', 'dr/CaptivateItem454.png', 'dr/CaptivateItem456.png',
        'dr/CaptivateItem458.png', 'dr/CaptivateItem459.png', 'dr/CaptivateItem46.png',
        'dr/CaptivateItem463.png', 'dr/CaptivateItem464.png', 'dr/CaptivateItem466.png',
        'dr/CaptivateItem469.png', 'dr/CaptivateItem47.png', 'dr/CaptivateItem470.png',
        'dr/CaptivateItem472.png', 'dr/CaptivateItem475.png', 'dr/CaptivateItem476.png',
        'dr/CaptivateItem478.png', 'dr/CaptivateItem47d.png', 'dr/CaptivateItem47o.png',
        'dr/CaptivateItem481.png', 'dr/CaptivateItem482.png', 'dr/CaptivateItem484.png',
        'dr/CaptivateItem487.png', 'dr/CaptivateItem488.png', 'dr/CaptivateItem490.png',
        'dr/CaptivateItem493.png', 'dr/CaptivateItem494.png', 'dr/CaptivateItem496.png',
        'dr/CaptivateItem497.png', 'dr/CaptivateItem50.png', 'dr/CaptivateItem500.png',
        'dr/CaptivateItem501.png', 'dr/CaptivateItem504.png', 'dr/CaptivateItem505.png',
        'dr/CaptivateItem507.png', 'dr/CaptivateItem51.png', 'dr/CaptivateItem511.png',
        'dr/CaptivateItem512.png', 'dr/CaptivateItem513.png', 'dr/CaptivateItem516.png',
        'dr/CaptivateItem517.png', 'dr/CaptivateItem519.png', 'dr/CaptivateItem522.png',
        'dr/CaptivateItem523.png', 'dr/CaptivateItem525.png', 'dr/CaptivateItem527.png',
        'dr/CaptivateItem528.png', 'dr/CaptivateItem528d.png', 'dr/CaptivateItem528o.png',
        'dr/CaptivateItem53.png', 'dr/CaptivateItem530.png', 'dr/CaptivateItem531.png',
        'dr/CaptivateItem531d.png', 'dr/CaptivateItem531o.png', 'dr/CaptivateItem56.png',
        'dr/CaptivateItem57.png', 'dr/CaptivateItem59.png', 'dr/CaptivateItem62.png', 'dr/CaptivateItem63.png',
        'dr/CaptivateItem65.png', 'dr/CaptivateItem67.png', 'dr/CaptivateItem70.png', 'dr/CaptivateItem71.png',
        'dr/CaptivateItem74.png', 'dr/CaptivateItem75.png', 'dr/CaptivateItem77.png', 'dr/CaptivateItem80.png',
        'dr/CaptivateItem81.png', 'dr/CaptivateItem83.png', 'dr/CaptivateItem86.png', 'dr/CaptivateItem87.png',
        'dr/CaptivateItem89.png', 'dr/CaptivateItem92.png', 'dr/CaptivateItem93.png', 'dr/CaptivateItem95.png',
        'dr/CaptivateItem97.png', 'dr/SmartShape_16.png', 'dr/SmartShape_5.png', 'dr/SmartShape_6.png',
        'dr/SmartShape_7.png', 'dr/SmartShape_9.png', 'dr/Text_Caption_171.png', 'dr/Text_Caption_172.png',
        'dr/Text_Caption_174.png', 'dr/Text_Caption_175.png', 'dr/Text_Caption_182.png',
        'dr/Text_Caption_183.png', 'dr/Text_Caption_184.png', 'dr/Text_Caption_195.png',
        'dr/Text_Caption_196.png', 'dr/Text_Caption_197.png', 'dr/sfs0.png', 'dr/sfs1.png', 'dr/si12611.png',
        'dr/si12618.png', 'dr/si12639.png', 'dr/si12643.png', 'dr/si12647.png', 'dr/si12659.png',
        'dr/si12659d.png', 'dr/si12659o.png', 'dr/si9071.png', 'dr/si9078.png', 'dr/si9088.png',
        'dr/si9092.png', 'dr/si9099.png', 'dr/si9103.png', 'dr/si9110.png', 'dr/si9114.png', 'dr/si9129.png',
        'dr/si9140.png', 'dr/si9151.png', 'dr/si9170.png', 'dr/si9170d.png', 'dr/si9170o.png', 'dr/si9208.png',
        'dr/si9215.png', 'dr/si9225.png', 'dr/si9229.png', 'dr/si9236.png', 'dr/si9240.png', 'dr/si9247.png',
        'dr/si9251.png', 'dr/si9258.png', 'dr/si9262.png', 'dr/si9266.png', 'dr/si9270.png', 'dr/si9274.png',
        'dr/si9286.png', 'dr/si9286d.png', 'dr/si9286o.png', 'dr/si9418.png', 'dr/si9425.png', 'dr/si9435.png',
        'dr/si9439.png', 'dr/si9446.png', 'dr/si9450.png', 'dr/si9457.png', 'dr/si9461.png', 'dr/si9468.png',
        'dr/si9472.png', 'dr/si9487.png', 'dr/si9491.png', 'dr/si9495.png', 'dr/si9507.png', 'dr/si9507d.png',
        'dr/si9507o.png', 'dr/si9855.png', 'dr/si9863.png'
    ];
    cp.model.videos = ['vr/Vi2.mp4'];
    cp.model.slideVideos = [];
    cp.model.tocVideos = [];
    cp.model.audios = ['ar/12735.mp3', 'ar/Mouse.mp3', 'ar/11493.mp3', 'ar/12497.mp3', 'ar/2795.mp3', 'ar/2841.mp3',
        'ar/2844.mp3', 'ar/2847.mp3', 'ar/2850.mp3', 'ar/2804.mp3', 'ar/2853.mp3', 'ar/dblmouse.mp3',
        'ar/2856.mp3', 'ar/2859.mp3', 'ar/2862.mp3', 'ar/2865.mp3', 'ar/2868.mp3', 'ar/2871.mp3', 'ar/2874.mp3',
        'ar/2877.mp3', 'ar/2880.mp3', 'ar/2883.mp3', 'ar/2886.mp3', 'ar/2889.mp3', 'ar/2892.mp3', 'ar/2895.mp3',
        'ar/2812.mp3', 'ar/2898.mp3', 'ar/2901.mp3', 'ar/2904.mp3', 'ar/2907.mp3', 'ar/2910.mp3', 'ar/2913.mp3',
        'ar/2916.mp3', 'ar/2919.mp3', 'ar/2922.mp3', 'ar/2925.mp3', 'ar/2928.mp3', 'ar/2815.mp3', 'ar/2931.mp3',
        'ar/2934.mp3', 'ar/2937.mp3', 'ar/2940.mp3', 'ar/2943.mp3', 'ar/2946.mp3', 'ar/2949.mp3', 'ar/2952.mp3',
        'ar/2955.mp3', 'ar/2818.mp3', 'ar/2958.mp3', 'ar/2961.mp3', 'ar/2964.mp3', 'ar/2967.mp3', 'ar/2970.mp3',
        'ar/2973.mp3', 'ar/2976.mp3', 'ar/2979.mp3', 'ar/2982.mp3', 'ar/2985.mp3', 'ar/2821.mp3', 'ar/2988.mp3',
        'ar/2991.mp3', 'ar/2994.mp3', 'ar/2997.mp3', 'ar/3000.mp3', 'ar/2824.mp3', 'ar/3003.mp3', 'ar/3006.mp3',
        'ar/3009.mp3', 'ar/2827.mp3', 'ar/3012.mp3', 'ar/3015.mp3', 'ar/3018.mp3', 'ar/3021.mp3', 'ar/3024.mp3',
        'ar/3027.mp3', 'ar/3030.mp3', 'ar/2832.mp3', 'ar/3033.mp3', 'ar/3036.mp3', 'ar/3039.mp3', 'ar/3042.mp3',
        'ar/3045.mp3', 'ar/2835.mp3', 'ar/3048.mp3', 'ar/3051.mp3', 'ar/3054.mp3', 'ar/3057.mp3', 'ar/2838.mp3',
        'ar/3060.mp3', 'ar/3063.mp3', 'ar/3066.mp3', 'ar/2798.mp3', 'ar/12173.mp3'
    ];
    cp.initVariables = function() {
        cp.cv('CaptivateVersion', '8.0.0', 1, 1000);
        cp.cv('cpCmndCC', 0, 1, 15);
        cp.cv('cpCmndExit', 0, 1, 15);
        cp.cv('cpCmndInfo', 0, 1, 15);
        cp.cv('cpCmndMute', 0, 1, 15);
        cp.cv('cpCmndPause', 0, 1, 15);
        cp.cv('cpCmndPlaybarMoved', 0, 1, 15);
        cp.cv('cpCmndPrevious', 0, 1, 15);
        cp.cv('cpCmndResume', 0, 1, 15);
        cp.cv('cpCmndShowPlaybar', 1, 1, 15);
        cp.cv('cpCmndTOCVisible', 0, 1, 15);
        cp.cv('cpCmndVolume', 50, 1, 15);
        cp.cv('cpInQuizScope', 0, 1, 15);
        cp.cv('cpInReviewMode', 0, 1, 1000);
        cp.cv('cpInfoAuthor', '', 1, 15);
        cp.cv('cpInfoCompany', 'Michael Management Corporation', 1, 15);
        cp.cv('cpInfoCopyright', '2010 Michael Management Corp. All Rights Reserved', 1, 15);
        cp.cv('cpInfoCourseID', -1, 1, 15);
        cp.cv('cpInfoCourseName', 'Course Name', 1, 15);
        cp.cv('cpInfoCurrentDate', 'dd', 1, 15);
        cp.cv('cpInfoCurrentDateString', 'mm/dd/yyyy', 1, 15);
        cp.cv('cpInfoCurrentDateStringDDMMYYYY', 'dd/mm/yyyy', 1, 1000);
        cp.cv('cpInfoCurrentDay', 1, 1, 15);
        cp.cv('cpInfoCurrentFrame', 1, 1, 15);
        cp.cv('cpInfoCurrentHour', 'hh', 1, 15);
        cp.cv('cpInfoCurrentLocaleDateString', '', 1, 1000);
        cp.cv('cpInfoCurrentMinutes', 'mm', 1, 15);
        cp.cv('cpInfoCurrentMonth', 'mm', 1, 15);
        cp.cv('cpInfoCurrentSlide', 1, 1, 15);
        cp.cv('cpInfoCurrentSlideLabel', 'slide', 1, 15);
        cp.cv('cpInfoCurrentSlideType', 'Normal', 1, 15);
        cp.cv('cpInfoCurrentTime', 'hh:mm:ss', 1, 15);
        cp.cv('cpInfoCurrentYear', 'yyyy', 1, 15);
        cp.cv('cpInfoDescription', '', 1, 15);
        cp.cv('cpInfoElapsedTimeMS', 0, 1, 15);
        cp.cv('cpInfoEmail', 'info@michaelmanagement.com', 1, 15);
        cp.cv('cpInfoEpochMS', 0, 1, 15);
        cp.cv('cpInfoFPS', 30, 1, 15);
        cp.cv('cpInfoFrameCount', 584, 1, 15);
        cp.cv('cpInfoGeoLocation', '', 1, 15);
        cp.cv('cpInfoHasPlaybar', 1, 1, 1000);
        cp.cv('cpInfoIsStandalone', 0, 1, 15);
        cp.cv('cpInfoLastVisitedSlide', 0, 1, 15);
        cp.cv('cpInfoMobileOS', 0, 1, 15);
        cp.cv('cpInfoPercentage', 0, 1, 15);
        cp.cv('cpInfoPrevSlide', -1, 1, 15);
        cp.cv('cpInfoProjectName', 'Introduction to SAP', 1, 15);
        cp.cv('cpInfoSlideCount', 5, 1, 15);
        cp.cv('cpInfoSlidesInProject', 102, 1, 1000);
        cp.cv('cpInfoWebsite', window.location.hostname, 1, 15);
        cp.cv('cpLockTOC', 0, 1, 1000);
        cp.cv('cpQuizInfoAnswerChoice', '', 1, 15);
        cp.cv('cpQuizInfoAttempts', 1, 1, 15);
        cp.cv('cpQuizInfoLastSlidePointScored', 0, 1, 15);
        cp.cv('cpQuizInfoMaxAttemptsOnCurrentQuestion', 0, 1, 15);
        cp.cv('cpQuizInfoNegativePointsOnCurrentQuestionSlide', 0, 1, 15);
        cp.cv('cpQuizInfoNoQuestionsPerQuiz', 0, 1, 15);
        cp.cv('cpQuizInfoPassFail', 0, 1, 15);
        cp.cv('cpQuizInfoPointsPerQuestionSlide', 0, 1, 15);
        cp.cv('cpQuizInfoPointsscored', 0, 1, 15);
        cp.cv('cpQuizInfoPreTestMaxScore', 0, 1, 1000);
        cp.cv('cpQuizInfoPreTestTotalCorrectAnswers', 0, 1, 1000);
        cp.cv('cpQuizInfoPreTestTotalQuestions', 0, 1, 1000);
        cp.cv('cpQuizInfoPretestPointsscored', 0, 1, 15);
        cp.cv('cpQuizInfoPretestScorePercentage', 0, 1, 15);
        cp.cv('cpQuizInfoQuestionPartialScoreOn', 0, 1, 15);
        cp.cv('cpQuizInfoQuestionSlideTiming', 0, 1, 15);
        cp.cv('cpQuizInfoQuestionSlideType', 'choice', 1, 15);
        cp.cv('cpQuizInfoQuizPassPercent', 80, 1, 1000);
        cp.cv('cpQuizInfoQuizPassPoints', 4, 1, 1000);
        cp.cv('cpQuizInfoTotalCorrectAnswers', 0, 1, 15);
        cp.cv('cpQuizInfoTotalProjectPoints', 0, 1, 15);
        cp.cv('cpQuizInfoTotalQuestionsPerProject', 0, 1, 15);
        cp.cv('cpQuizInfoTotalQuizPoints', 4, 1, 1000);
        cp.cv('cpQuizInfoTotalUnansweredQuestions', 0, 1, 15);
        cp.cv('cpInfoPrevFrame', 0, 1, 15);
        cp.cv('TTextEntryItemVar1', '', 0, 15);
        cp.cv('TTextEntryItemVar10', '', 0, 15);
        cp.cv('TTextEntryItemVar2', '', 0, 15);
        cp.cv('TTextEntryItemVar3', '', 0, 15);
        cp.cv('TTextEntryItemVar4', '', 0, 15);
        cp.cv('TTextEntryItemVar5', '', 0, 15);
        cp.cv('TTextEntryItemVar6', '', 0, 15);
        cp.cv('TTextEntryItemVar7', '', 0, 15);
        cp.cv('TTextEntryItemVar8', '', 0, 15);
        cp.cv('TTextEntryItemVar9', '', 0, 15);
        cp.cv('cpQuizInfoStudentID', '', 0, 1000);
        cp.cv('cpQuizInfoStudentName', '', 0, 1000);
        cp.cv('showtext', 'False', 0, 50);
    };
    cp.ReportingVariables =
        "TTextEntryItemVar1,TTextEntryItemVar10,TTextEntryItemVar2,TTextEntryItemVar3,TTextEntryItemVar4,TTextEntryItemVar5,TTextEntryItemVar6,TTextEntryItemVar7,TTextEntryItemVar8,TTextEntryItemVar9,showtext,";
};
cp.sbw = 0;
cp.useg = 0;
cp.geo = 0;
cp.pg = 0;
cp.win8 = 0;
cp.autoGrow = 1;
cp.fluidFont = 1;;
var RuntimeBrowserDetect = {
    init: function(a, c, e) {
        this.BrowserEnum || (this.BrowserEnum = {}, this.BrowserEnum.UNKNOWN = 0, this.BrowserEnum.MSIE = 1,
            this.BrowserEnum.FIREFOX = 2, this.BrowserEnum.CHROME = 3, this.BrowserEnum.SAFARI = 4, this
            .BrowserEnum.NETSCAPE = 5, this.BrowserEnum.OPERA = 6, this.BrowserEnum.CAMINO = 7, this
            .BrowserEnum.FIREBIRD = 8, this.BrowserEnum.MSIE_MIN_SUPPORTED_VERSION = 9, this.BrowserEnum
            .CHROME_MIN_SUPPORTED_VERSION = 17, this.BrowserEnum.SAFARI_MIN_SUPPORTED_VERSION = 5.1, this
            .BrowserEnum.FF_MIN_SUPPORTED_VERSION_WIN =
            35, this.BrowserEnum.FF_MIN_SUPPORTED_VERSION_MAC = 35, this.BrowserEnum
            .FF_MIN_SUPPORTED_VERSION_FFOS = 15, this.BrowserEnum.FF_MIN_SUPPORTED_VERSION_ANDROID = 39);
        this.DeviceEnum || (this.DeviceEnum = {}, this.DeviceEnum.DESKTOP = 0, this.DeviceEnum.IDEVICE = 1, this
            .DeviceEnum.ANDROID = 2);
        this.browserVersion = this.browser = this.BrowserEnum.UNKNOWN;
        this.device = this.DeviceEnum.DESKTOP;
        navigator.userAgent.match(/(iPhone|iPad|iPod)/i) ? this.device = this.DeviceEnum.IDEVICE : navigator
            .userAgent.match(/android/i) && (this.device =
                this.DeviceEnum.ANDROID);
        navigator.userAgent.match(/MSIE/i) ? (this.browser = this.BrowserEnum.MSIE, this.browserVersion = this
                .getCurrentBrowserVersion(navigator.userAgent, "MSIE") || this.getCurrentBrowserVersion(
                    navigator.appVersion, "MSIE") || this.BrowserEnum.UNKNOWN) : navigator.userAgent.match(
                /Firefox/i) ? (this.browser = this.BrowserEnum.FIREFOX, this.browserVersion = this
                .getCurrentBrowserVersion(navigator.userAgent, "Firefox") || this.getCurrentBrowserVersion(
                    navigator.appVersion, "Firefox") || this.BrowserEnum.UNKNOWN) :
            navigator.userAgent.match(/Chrome/i) ? (this.browser = this.BrowserEnum.CHROME, this
                .browserVersion = this.getCurrentBrowserVersion(navigator.userAgent, "Chrome") || this
                .getCurrentBrowserVersion(navigator.appVersion, "Chrome") || this.BrowserEnum.UNKNOWN) :
            navigator.userAgent.match(/Safari/i) ? (this.browser = this.BrowserEnum.SAFARI, this
                .browserVersion = this.getCurrentBrowserVersion(navigator.userAgent, "Version") || this
                .getCurrentBrowserVersion(navigator.appVersion, "Version") || this.BrowserEnum.UNKNOWN) :
            navigator.userAgent.match(/Netscape/i) ?
            (this.browser = this.BrowserEnum.NETSCAPE, this.browserVersion = this.getCurrentBrowserVersion(
                navigator.userAgent, "Netscape") || this.getCurrentBrowserVersion(navigator.appVersion,
                "Netscape") || this.BrowserEnum.UNKNOWN) : navigator.userAgent.match(/Opera/i) ? (this.browser =
                this.BrowserEnum.OPERA, this.browserVersion = this.getCurrentBrowserVersion(navigator.userAgent,
                    "Version") || this.getCurrentBrowserVersion(navigator.appVersion, "Version") || this
                .BrowserEnum.UNKNOWN) : navigator.userAgent.match(/Camino/i) ? (this.browser =
                this.BrowserEnum.CAMINO, this.browserVersion = this.getCurrentBrowserVersion(navigator
                    .userAgent, "Camino") || this.getCurrentBrowserVersion(navigator.appVersion, "Camino") ||
                this.BrowserEnum.UNKNOWN) : navigator.userAgent.match(/Firebird/i) ? this.browser = this
            .BrowserEnum.FIREBIRD : navigator.userAgent.match(/Trident/i) && "netscape" == navigator.appName
            .toLowerCase() && (this.browser = this.BrowserEnum.MSIE, this.browserVersion = this
                .getCurrentBrowserVersion(navigator.userAgent, "rv") || this.BrowserEnum.UNKNOWN);
        this.getIsBrowserSupported() ||
            this.showRuntimeWarning(a, c, e)
    },
    getCurrentBrowserVersion: function(a, c) {
        var e = a.indexOf(c);
        return -1 == e ? this.BrowserEnum.UNKNOWN : parseFloat(a.substring(e + c.length + 1))
    },
    getIsBrowserSupported: function() {
        var a = !1;
        if (this.browser == this.BrowserEnum.MSIE && this.browserVersion >= this.BrowserEnum
            .MSIE_MIN_SUPPORTED_VERSION) a = !0;
        else if (this.browser == this.BrowserEnum.CHROME && this.browserVersion >= this.BrowserEnum
            .CHROME_MIN_SUPPORTED_VERSION) a = !0;
        else if (this.browser == this.BrowserEnum.SAFARI && this.browserVersion >=
            this.BrowserEnum.SAFARI_MIN_SUPPORTED_VERSION) a = !0;
        else if (this.browser == this.BrowserEnum.FIREFOX && (cp.OS == cp.MACOS && this.browserVersion >= this
                .BrowserEnum.FF_MIN_SUPPORTED_VERSION_MAC || cp.OS == cp.WINDOWS && this.browserVersion >= this
                .BrowserEnum.FF_MIN_SUPPORTED_VERSION_WIN)) a = !0;
        return a
    },
    getPanelElement: function(a, c, e, d, f) {
        var b = document.createElement("div");
        b.style.left = a;
        b.style.top = c;
        b.style.width = e;
        b.style.height = d;
        b.style.backgroundColor = f;
        b.style.border = "1px solid #666666";
        b.style.borderRadius =
            "14px";
        return b
    },
    getTextElement: function(a, c, e, d, f) {
        var b = document.createElement("div");
        b.style.color = e;
        b.style.fontFamily = d;
        b.style.fontSize = "14px";
        b.style.textAlign = "left";
        b.style.left = a;
        b.style.top = c;
        b.style.position = "relative";
        b.style.opacity = 1;
        b.innerHTML = f;
        return b
    },
    showRuntimeWarning: function(a, c, e) {
        if (document.body) {
            var d = document.createElement("div");
            d.id = "CPUnSupportedBrowserWarning_ID";
            var f = this.getPanelElement("0px", "0px", "455px", "220px", "#CCCCCC");
            f.style.margin = "100px auto";
            "boxShadow" in
            f.style && (f.style.boxShadow = "1px 1px 1px #000000");
            d.appendChild(f);
            var b = this.getPanelElement("2px", "2px", "450px", "215px", "#FEFEFE");
            b.style.position = "relative";
            f.appendChild(b);
            c = this.getTextElement("10px", "10px", "#000000", "Tahoma", c);
            b.appendChild(c);
            c = document.createElement("div");
            c.style.height = "2px";
            c.style.backgroundColor = "#000000";
            c.style.opacity = 0.5;
            c.style.position = "relative";
            c.style.marginLeft = "10px";
            c.style.marginRight = "10px";
            c.style.top = "20px";
            b.appendChild(c);
            a = this.getTextElement("10px",
                "30px", "#000000", "Tahoma", a);
            a.style.marginRight = "10px";
            b.appendChild(a);
            a = this.getPanelElement("0px", "auto", "100px", "33px", "#CCCCCC");
            a.style.bottom = "10px";
            a.style.opacity = 0.7;
            a.style.position = "absolute";
            a.style.cursor = "pointer";
            cp.registerGestureEvent(a, cp.GESTURE_EVENT_TYPES.TAP, function() {
                var a = document.getElementById("CPUnSupportedBrowserWarning_ID");
                a != void 0 && document.body.removeChild(a)
            });
            "boxShadow" in a.style && (a.style.boxShadow = "1px 1px 1px #000000");
            e = this.getTextElement("0px", "5px", "#000000",
                "Tahoma", e);
            e.style.textAlign = "center";
            a.appendChild(e);
            b.appendChild(a);
            document.body.appendChild(d);
            d.style.visibility = "visible";
            d.style.position = "absolute";
            d.style.left = "0px";
            d.style.top = "0px";
            d.style.width = "100%";
            d.style.height = "100%";
            d.style.textAlign = "center";
            d.style.zIndex = "1000";
            d.style.backgroundColor = "CCCCCC";
            a.style.left = (b.clientWidth - a.clientWidth) / 2 + "px"
        }
    }
};
cp.rtInherits = function(a, b) {
    function c() {}
    c.prototype = b.prototype;
    a.prototype = new c;
    a.prototype.constructor = a;
    a.baseConstructor = b;
    a.superClass = b.prototype
};
cp.HexToRGBA = function(a, b) {
    if (void 0 == a) return a;
    var c = a;
    "#" == c.charAt(0) && (c = c.substring(1));
    if (6 > c.length) return a;
    var d = parseInt(c.substring(0, 2), 16),
        e = parseInt(c.substring(2, 4), 16),
        c = parseInt(c.substring(4, 6), 16);
    return "rgba(" + d + "," + e + "," + c + "," + b + ")"
};
cp.RuntimeDialogSeparator = function(a, b, c) {
    this.m_parent = a;
    this.m_XPos = b;
    this.m_YPos = c;
    this.m_color = "#000000";
    this.m_alpha = 0.5;
    this.m_size = 10;
    this.m_strokeWidth = 2;
    this.m_shadowColor = "#FFFFFF";
    this.m_shadowAlpha = 0.65;
    this.m_shadowAngle = 270;
    this.m_shadowBlur = 2;
    this.m_shadowDistance = 1
};
cp.RuntimeDialogSeparator.prototype = {
    setColor: function(a) {
        this.m_color = a
    },
    setAlpha: function(a) {
        this.m_alpha = a
    },
    setSize: function(a) {
        this.m_size = a
    },
    setShadowColor: function(a) {
        this.m_shadowColor = a
    },
    getComponentDiv: function() {
        var a = document.createElement("div");
        a.style.height = this.m_strokeWidth + "px";
        a.style.backgroundColor = this.m_color;
        a.style.opacity = this.m_alpha;
        a.style.position = "relative";
        a.style.marginLeft = this.m_XPos + "px";
        a.style.marginRight = this.m_XPos + "px";
        a.style.top = this.m_YPos + "px";
        "webkitBoxShadow" in
        a.style ? a.style.webkitBoxShadow = this.m_shadowDistance + "px " + this.m_shadowDistance + "px " + this
            .m_shadowBlur + "px " + this.m_shadowColor : "MozBoxShadow" in a.style ? a.style.MozBoxShadow = this
            .m_shadowDistance + "px " + this.m_shadowDistance + "px " + this.m_shadowBlur + "px " + this
            .m_shadowColor : a.style.boxShadow = this.m_shadowDistance + "px " + this.m_shadowDistance + "px " +
            this.m_shadowBlur + "px " + this.m_shadowColor;
        return a
    }
};
cp.RuntimeDialogText = function(a, b, c) {
    this.m_parent = a;
    this.m_fontName = "Myriad Pro";
    this.m_XPos = b;
    this.m_YPos = c;
    this.m_fontSize = 14;
    this.m_fontColor = "#ff0000";
    this.m_text = "Sample Text";
    this.m_multiline = !1;
    this.m_maxWidth = 400;
    this.m_maxHeight = 80;
    this.m_shadowColor = "#FFFFFF";
    this.m_shadowAlpha = 0.35;
    this.m_shadowAngle = 270;
    this.m_shadowBlur = 2;
    this.m_shadowDistance = 1
};
cp.RuntimeDialogText.prototype = {
    setFontName: function(a) {
        this.m_fontName = a
    },
    setFontSize: function(a) {
        this.m_fontSize = a
    },
    setFontColor: function(a) {
        this.m_fontColor = a
    },
    setText: function(a) {
        this.m_text = a
    },
    setMultiline: function(a) {
        this.m_multiline = a
    },
    setMaxWidth: function(a) {
        this.m_maxWidth = a
    },
    setShadowColor: function(a) {
        this.m_shadowColor = a
    },
    getTruncatedText: function(a) {
        if (void 0 == a) return this.m_text;
        var b = this.getMaxPossibleWidth(this.m_text);
        if (b <= a) return this.m_text;
        for (var c = this.m_text, d = c + "...", b =
                this.getMaxPossibleWidth(d); 0 < d.length && b > a;) c = c.substring(0, c.length - 1), d = c +
            "...", b = this.getMaxPossibleWidth(d);
        return d
    },
    getMaxPossibleWidth: function(a) {
        var b = document.createElement("div");
        b.style.color = this.m_fontColor;
        b.style.fontFamily = this.m_fontName;
        b.style.fontSize = this.m_fontSize + "px";
        b.style.width = "auto";
        b.style.height = "auto";
        b.style.position = "absolute";
        b.style.visibilty = "hidden";
        b.innerHTML = a;
        document.body.appendChild(b);
        a = b.clientWidth + 4;
        document.body.removeChild(b);
        return a
    },
    getComponentDiv: function() {
        var a =
            document.createElement("div");
        a.style.color = this.m_fontColor;
        a.style.fontFamily = this.m_fontName;
        a.style.fontSize = this.m_fontSize + "px";
        a.style.textAlign = "left";
        a.style.left = this.m_XPos + "px";
        a.style.top = this.m_YPos + "px";
        a.style.position = "relative";
        a.style.opacity = 1;
        var b = cp.HexToRGBA(this.m_shadowColor, this.m_shadowAlpha);
        a.style.textShadow = this.m_shadowDistance + "px " + this.m_shadowDistance + "px " + this.m_shadowBlur +
            "px " + b;
        a.innerHTML = this.m_text;
        return a
    }
};
cp.RuntimeDialogTextInput = function(a, b, c) {
    this.m_parent = a;
    this.m_fontName = "Myriad Pro";
    this.m_XPos = b;
    this.m_YPos = c;
    this.m_fontSize = 14;
    this.m_fontColor = "#ff0000";
    this.m_maxWidth = 400;
    this.m_maxHeight = 80;
    this.m_label = "Text Input :";
    this.m_textInput = void 0
};
cp.RuntimeDialogTextInput.prototype = {
    setFontName: function(a) {
        this.m_fontName = a
    },
    setFontSize: function(a) {
        this.m_fontSize = a
    },
    setFontColor: function(a) {
        this.m_fontColor = a
    },
    setText: function(a) {
        this.m_text = a
    },
    setLabel: function(a) {
        this.m_label = a
    },
    setMaxWidth: function(a) {
        this.m_maxWidth = a
    },
    getValue: function() {
        return this.m_textInput.value
    },
    getComponentDiv: function() {
        var a = document.createElement("div");
        a.style.left = this.m_XPos + "px";
        a.style.top = this.m_YPos + "px";
        a.style.width = this.m_maxWidth + "px";
        var b = document.createElement("table");
        b.style.width = "100%";
        b.style.height = "100%";
        a.appendChild(b);
        var c = document.createElement("tr");
        c.style.width = "100%";
        c.style.height = "50%";
        b.appendChild(c);
        var d = document.createElement("td");
        d.style.width = "100%";
        d.style.height = "100%";
        d.style.paddingBottom = "0em";
        c.appendChild(d);
        c = new cp.RuntimeDialogText(d, this.MESSAGE_DEFAULT_LEFT_OFFSET, 0);
        c.setText(this.m_label);
        c.setFontColor(this.m_fontColor);
        c.setFontName(this.m_fontName);
        c.setFontSize(14);
        c.setMultiline(!0);
        c = c.getComponentDiv();
        c.style.width =
            "100%";
        d.appendChild(c);
        d = document.createElement("tr");
        d.style.width = "100%";
        d.style.height = "50%";
        b.appendChild(d);
        b = document.createElement("td");
        b.style.width = "100%";
        b.style.height = "100%";
        d.appendChild(b);
        d = document.createElement("input");
        d.type = "text";
        d.value = this.m_text;
        d.style.color = "#000000";
        d.style.fontFamily = this.m_fontName;
        d.style.fontSize = this.m_fontSize + "px";
        d.style.width = "100%";
        d.style.opacity = 1;
        this.m_textInput = d;
        b.appendChild(d);
        a.style.position = "relative";
        return a
    }
};
cp.RuntimeDialogPanel = function(a, b, c, d, e) {
    this.m_parent = a;
    this.m_fillColor = "#CCCCCC";
    this.m_alpha = 0.5;
    this.m_strokeColor = "#666666";
    this.m_XPos = b;
    this.m_YPos = c;
    this.m_strokeWidth = 1;
    this.m_width = d;
    this.m_height = e;
    this.m_roundness = 20;
    this.m_minHeight = this.m_minWidth = 100;
    this.m_maxWidth = 493;
    this.m_maxHeight = 219;
    this.m_showShadow = !1;
    this.m_shadowColor = "#000000";
    this.m_shadowAlpha = 0.65;
    this.m_shadowAngle = 270;
    this.m_shadowDistance = this.m_shadowBlur = 2
};
cp.RuntimeDialogPanel.prototype = {
    setFillColor: function(a) {
        this.m_fillColor = a
    },
    setAlpha: function(a) {
        this.m_alpha = a
    },
    setStrokeColor: function(a) {
        this.m_strokeColor = a
    },
    setStrokeWidth: function(a) {
        this.m_strokeWidth = a
    },
    setWidth: function(a) {
        this.m_width = a
    },
    getWidth: function() {
        var a = this.m_width;
        a < this.m_minWidth && (a = this.m_minWidth);
        a > this.m_maxWidth && (a = this.m_maxWidth);
        return a
    },
    setHeight: function(a) {
        this.m_height = a
    },
    setMinWidth: function(a) {
        a < this.m_maxWidth && (this.m_minWidth = a)
    },
    setMinHeight: function(a) {
        a <
            this.m_maxHeight && (this.m_minHeight = a)
    },
    setMaxWidth: function(a) {
        a > this.m_minWidth && (this.m_maxWidth = a)
    },
    setMaxHeight: function(a) {
        a > this.m_minHeight && (this.m_maxHeight = a)
    },
    setRoundness: function(a) {
        this.m_roundness = a
    },
    showShadow: function(a) {
        this.m_showShadow = a
    },
    setShadowColor: function(a) {
        this.m_shadowColor = a
    },
    getComponentDiv: function() {
        var a = this.m_width,
            b = this.m_height;
        a < this.m_minWidth && (a = this.m_minWidth);
        a > this.m_maxWidth && (a = this.m_maxWidth);
        b < this.m_minHeight && (b = this.m_minHeight);
        b > this.m_maxHeight &&
            (b = this.m_maxHeight);
        var c = document.createElement("div");
        c.style.width = a + "px";
        c.style.height = b + "px";
        c.style.background = cp.HexToRGBA(this.m_fillColor, this.m_alpha);
        c.style.border = this.m_strokeWidth + "px solid " + this.m_strokeColor;
        c.style.borderRadius = this.m_roundness + "px";
        c.style.left = this.m_XPos + "px";
        c.style.top = this.m_YPos + "px";
        this.m_showShadow && ("webkitBoxShadow" in c.style ? c.style.webkitBoxShadow = this.m_shadowDistance +
            "px " + this.m_shadowDistance + "px " + this.m_shadowBlur + "px " + this.m_shadowColor :
            "MozBoxShadow" in c.style ? c.style.MozBoxShadow = this.m_shadowDistance + "px " + this
            .m_shadowDistance + "px " + this.m_shadowBlur + "px " + this.m_shadowColor : c.style.boxShadow =
            this.m_shadowDistance + "px " + this.m_shadowDistance + "px " + this.m_shadowBlur + "px " + this
            .m_shadowColor);
        return c
    }
};
cp.RuntimeDialogButton = function(a, b, c, d, e) {
    cp.RuntimeDialogButton.baseConstructor.call(this, a, b, c, d, e);
    this.m_label = void 0;
    this.m_labelText = "OK";
    this.m_labelFontName = "Myriad Pro";
    this.m_labelFontSize = 16;
    this.m_labelFontColor = "#000000";
    this.m_labelShadowColor = "#FFFFFF";
    this.BUTTON_LABEL_TOP_PADDING = this.BUTTON_LABEL_LEFT_PADDING = 5;
    this.m_fillColor = "#CDCDCD";
    this.m_alpha = 0.3;
    this.m_strokeColor = "#000000";
    this.m_strokeWidth = 1;
    this.m_maxWidth = 230;
    this.m_minWidth = 40;
    this.m_minHeight = m_maxHeight = 25;
    this.m_roundness =
        10
};
cp.rtInherits(cp.RuntimeDialogButton, cp.RuntimeDialogPanel);
cp.RuntimeDialogButton.prototype.setButtonLabel = function(a) {
    this.m_labelText = a
};
cp.RuntimeDialogButton.prototype.setButtonLabelFontName = function(a) {
    this.m_labelFontName = a
};
cp.RuntimeDialogButton.prototype.setButtonLabelFontSize = function(a) {
    this.m_labelFontSize = a
};
cp.RuntimeDialogButton.prototype.setButtonLabelFontColor = function(a) {
    this.m_labelFontColor = a
};
cp.RuntimeDialogButton.prototype.setButtonLabelShadowColor = function(a) {
    this.m_labelShadowColor = a
};
cp.RuntimeDialogButton.prototype.setHandler = function(a) {
    this.m_handler = a
};
cp.RuntimeDialogButton.prototype.getComponentDiv = function() {
    var a = cp.RuntimeDialogButton.superClass.getComponentDiv.call(this);
    a.style.position = "absolute";
    a.style.cursor = "pointer";
    var b = this.m_fillColor,
        c = this.m_alpha;
    a.onmouseover = function() {
        a.style.background = cp.HexToRGBA(b, 0.1)
    };
    a.onmouseout = function() {
        a.style.background = cp.HexToRGBA(b, c)
    };
    cp.registerGestureEvent(a, cp.GESTURE_EVENT_TYPES.TAP, this.m_handler);
    a.onkeypress = this.m_handler;
    var d = new cp.RuntimeDialogText(a, 0, 5);
    d.setText(this.m_labelText);
    d.setFontName(this.m_labelFontName);
    d.setFontColor(this.m_labelFontColor);
    d.setFontSize(this.m_labelFontSize);
    d.setShadowColor(this.m_labelShadowColor);
    d.setMaxWidth(this.m_maxWidth - 2 * this.BUTTON_LABEL_LEFT_PADDING);
    var e = d.getComponentDiv();
    e.style.textAlign = "center";
    e.style.top = "0px";
    var f = d.getMaxPossibleWidth(this.m_labelText);
    f > this.m_width && (f > this.m_maxWidth && (f = this.m_maxWidth, e.innerHTML = d.getTruncatedText(this
        .m_maxWidth)), a.style.width = f + "px");
    a.appendChild(e);
    return a
};
cp.RuntimeMessageBox = function(a, b, c, d, e, f, g, h, i, j) {
    this.m_parent = a;
    this.m_MessageBoxElement = void 0;
    this.m_id = "CPRuntimeMsgBox_ID";
    this.m_titleText = "Adobe Captivate";
    this.m_messageText = "This is Adobe Captivate Run Time Message Dialog";
    this.m_firstButtonText = "OK";
    this.m_secondButtonText = "CANCEL";
    this.m_ChkBoxText = "Don't ask me again";
    this.m_numberOfButtons = b;
    this.m_secondButtonHandler = this.m_firstButtonHandler = void 0;
    this.m_DontAskMe = !1;
    this.m_foregroundFillColor = c;
    this.m_foregroundStrokeColor = d;
    this.m_buttonFillColor =
        e;
    this.m_buttonStrokeColor = f;
    this.m_separatorColor = g;
    this.m_textColor = h;
    this.m_textShadowColor = i;
    this.m_textFontName = j;
    this.TITLE_DEFAULT_TOP_OFFSET = this.MESSAGE_DEFAULT_LEFT_OFFSET = this.SEPARATOR_DEFAULT_LEFT_OFFSET = this
        .TITLE_DEFAULT_LEFT_OFFSET = 10;
    this.SEPARATOR_DEFAULT_TOP_OFFSET = 20;
    this.MESSAGE_DEFAULT_TOP_OFFSET = 30;
    this.BUTTON_BOTTOM_OFFSET = 10;
    this.BG_DEFAULT_WIDTH = 493;
    this.BG_DEFAULT_HEIGHT = 219;
    this.FG_DEFAULT_WIDTH = 478;
    this.FG_DEFAULT_HEIGHT = 198;
    this.BUTTON_DEFAULT_WIDTH = 100;
    this.BUTTON_DEFAULT_HEIGHT =
        33;
    this.INTER_BUTTON_OFFSET = 15
};
cp.RuntimeMessageBox.prototype = {
    getDontAskMeInput: function() {
        if (this.m_DontAskMe) {
            var a = document.getElementById("dont_ask_me_chk");
            if (a) return a.checked
        }
        return !1
    },
    setDontAskMe: function(a) {
        this.m_DontAskMe = a
    },
    setDontAskMeText: function(a) {
        this.m_ChkBoxText = a
    },
    setTitleText: function(a) {
        this.m_titleText = a
    },
    setCheckBoxText: function(a) {
        this.m_ChkBoxText = a
    },
    setMessageText: function(a) {
        this.m_messageText = a
    },
    setFirstButtonText: function(a) {
        this.m_firstButtonText = a
    },
    setSecondButtonText: function(a) {
        this.m_secondButtonText = a
    },
    registerFirstButtonHandler: function(a) {
        void 0 != a && (this.m_firstButtonHandler = a)
    },
    registerSecondButtonHandler: function(a) {
        void 0 != a && (this.m_secondButtonHandler = a)
    },
    isVisible: function() {
        var a = !1;
        void 0 != this.m_MessageBoxElement && "visible" == this.m_MessageBoxElement.style.visibility && (a = !
        0);
        return a
    },
    hide: function() {
        var a = this.m_parent ? this.m_parent : document.getElementById("cpDocument"),
            b = document.getElementById("CPRuntimeMsgBox_ID");
        void 0 != b && a.removeChild(b)
    },
    show: function() {
        this.hide();
        this.m_MessageBoxElement =
            document.createElement("div");
        this.m_MessageBoxElement.id = this.m_id;
        var a = new cp.RuntimeDialogPanel(this.m_parent, 0, 0, this.BG_DEFAULT_WIDTH, this.BG_DEFAULT_HEIGHT);
        a.showShadow(!0);
        var b = a.getComponentDiv();
        b.id = "bgPanelDiv";
        b.style.margin = "100px auto";
        this.m_MessageBoxElement.appendChild(b);
        a = new cp.RuntimeDialogPanel(b, (this.BG_DEFAULT_WIDTH - this.FG_DEFAULT_WIDTH) / 2, (this
                .BG_DEFAULT_HEIGHT - this.FG_DEFAULT_HEIGHT) / 2, this.FG_DEFAULT_WIDTH, this
            .FG_DEFAULT_HEIGHT);
        a.setFillColor(this.m_foregroundFillColor);
        a.setAlpha(1);
        a.setStrokeColor(this.m_foregroundStrokeColor);
        a = a.getComponentDiv();
        b.id = "fgPanelDiv";
        a.style.position = "relative";
        b.appendChild(a);
        b = new cp.RuntimeDialogText(a, this.TITLE_DEFAULT_LEFT_OFFSET, this.TITLE_DEFAULT_TOP_OFFSET);
        b.setText(this.m_titleText);
        b.setFontSize(18);
        b.setFontColor(this.m_textColor);
        b.setFontName(this.m_textFontName);
        b.setShadowColor(this.m_textShadowColor);
        b = b.getComponentDiv();
        a.appendChild(b);
        b = new cp.RuntimeDialogSeparator(a, this.SEPARATOR_DEFAULT_LEFT_OFFSET, this
            .SEPARATOR_DEFAULT_TOP_OFFSET);
        b.setColor(this.m_separatorColor);
        b = b.getComponentDiv();
        a.appendChild(b);
        b = new cp.RuntimeDialogText(a, this.MESSAGE_DEFAULT_LEFT_OFFSET, this.MESSAGE_DEFAULT_TOP_OFFSET);
        b.setText(this.m_messageText);
        b.setFontColor(this.m_textColor);
        b.setFontName(this.m_textFontName);
        b.setShadowColor(this.m_textShadowColor);
        b.setFontSize(14);
        b.setMultiline(!0);
        b = b.getComponentDiv();
        a.appendChild(b);
        this.m_DontAskMe && (b = new cp.RuntimeDialogText(a, this.MESSAGE_DEFAULT_LEFT_OFFSET, this
                .MESSAGE_DEFAULT_TOP_OFFSET), b.setText(this.m_ChkBoxText),
            b.setFontColor(this.m_textColor), b.setFontName(this.m_textFontName), b.setShadowColor(this
                .m_textShadowColor), b.setFontSize(14), b.setMultiline(!1), b = b.getComponentDiv(), a
            .innerHTML +=
            '<input type="checkbox" id="dont_ask_me_chk" style="-webkit-appearance: checkbox;left:10px; bottom: 70px;width:20px; height:20px;position:absolute">',
            a.appendChild(b), b.style.position = "absolute", b.style.top = "", b.style.bottom = "75px", b
            .style.left = "40px");
        b = new cp.RuntimeDialogButton(a, 0, 0, this.BUTTON_DEFAULT_WIDTH, this.BUTTON_DEFAULT_HEIGHT);
        b.setFillColor(this.m_buttonFillColor);
        b.setStrokeColor(this.m_buttonStrokeColor);
        b.setButtonLabel(this.m_firstButtonText);
        b.setButtonLabelFontSize(16);
        b.setButtonLabelFontColor(this.m_textColor);
        b.setButtonLabelFontName(this.m_textFontName);
        b.setButtonLabelShadowColor(this.m_textShadowColor);
        b.setHandler(this.m_firstButtonHandler);
        b = b.getComponentDiv();
        b.style.top = "auto";
        b.tabIndex = 0;
        b.style.bottom = this.BUTTON_BOTTOM_OFFSET + "px";
        a.appendChild(b);
        var c = void 0;
        2 == this.m_numberOfButtons && (lSecondButton =
            new cp.RuntimeDialogButton(a, 0, 0, this.BUTTON_DEFAULT_WIDTH, this.BUTTON_DEFAULT_HEIGHT),
            lSecondButton.setFillColor(this.m_buttonFillColor), lSecondButton.setStrokeColor(this
                .m_buttonStrokeColor), lSecondButton.setButtonLabel(this.m_secondButtonText), lSecondButton
            .setButtonLabelFontSize(16), lSecondButton.setButtonLabelFontColor(this.m_textColor),
            lSecondButton.setButtonLabelFontName(this.m_textFontName), lSecondButton
            .setButtonLabelShadowColor(this.m_textShadowColor), lSecondButton.setHandler(this
                .m_secondButtonHandler),
            c = lSecondButton.getComponentDiv(), c.tabIndex = 0, c.style.top = "auto", c.style.bottom = this
            .BUTTON_BOTTOM_OFFSET + "px", a.appendChild(c));
        this.m_parent.appendChild(this.m_MessageBoxElement);
        this.m_MessageBoxElement.style.visibility = "visible";
        this.m_MessageBoxElement.style.position = "absolute";
        this.m_MessageBoxElement.style.left = "0px";
        this.m_MessageBoxElement.style.top = "0px";
        this.m_MessageBoxElement.style.width = "100%";
        this.m_MessageBoxElement.style.height = "100%";
        this.m_MessageBoxElement.style.textAlign = "center";
        this.m_MessageBoxElement.style.zIndex = "1000";
        this.m_MessageBoxElement.style.background = "rgba(240,240,240,0.2)";
        this.m_MessageBoxElement.style.zIndex = 10020;
        a = a.clientWidth - b.clientWidth;
        c && (a = a - this.INTER_BUTTON_OFFSET - c.clientWidth);
        a /= 2;
        b.style.left = a + "px";
        c && (c.style.left = a + b.clientWidth + this.INTER_BUTTON_OFFSET + "px");
        setTimeout(function() {
            var a = document.getElementById("dont_ask_me_chk");
            a && a.focus()
        }, 500)
    },
    close: function() {
        var a = document.getElementById("cpDocument"),
            b = document.getElementById("CPRuntimeMsgBox_ID");
        a.removeChild(b)
    }
};
cp.RuntimeMessageBoxDefault = function(a, b) {
    var c = cp.D.rtDialog;
    cp.RuntimeMessageBoxDefault.baseConstructor.call(this, a, b, c.rtbgfc, c.rtbgsc, c.rtbtnfc, c.rtbtnsc, c.rtsc, c
        .rttc, c.rttsc, c.rtfn)
};
cp.rtInherits(cp.RuntimeMessageBoxDefault, cp.RuntimeMessageBox);
cp.PostResultsMessageBox = function(a) {
    this.m_StudentNameTextInputLabel = "";
    this.m_StringsMap = a;
    a = document.getElementById("div_Slide");
    cp.PostResultsMessageBox.baseConstructor.call(this, a, 2)
};
cp.rtInherits(cp.PostResultsMessageBox, cp.RuntimeMessageBoxDefault);
cp.PostResultsMessageBox.prototype.getLearnerName = function() {
    return this.m_studentNameTextInput.getValue()
};
cp.PostResultsMessageBox.prototype.getLearnerID = function() {
    return this.m_studentIDTextInput.getValue()
};
cp.PostResultsMessageBox.prototype.hide = function() {
    var a = document.getElementById("CPRuntimeMsgBox_ID");
    void 0 != a && this.m_parent.removeChild(a)
};
cp.PostResultsMessageBox.prototype.show = function() {
    this.setTitleText(this.m_StringsMap.ISRPostResultStr);
    this.setMessageText(this.m_StringsMap.ISRResultCalculatedStr);
    this.m_numberOfButtons = 2;
    this.setFirstButtonText("Cancel");
    this.setSecondButtonText(this.m_StringsMap.ISRSendStr);
    this.hide();
    this.m_MessageBoxElement = document.createElement("div");
    this.m_MessageBoxElement.id = this.m_id;
    var a = new cp.RuntimeDialogPanel(this.m_parent, 0, 0, 350, 230);
    a.showShadow(!0);
    var b = a.getComponentDiv();
    b.id = "bgPanelDiv";
    b.style.margin = "100px auto";
    this.m_MessageBoxElement.appendChild(b);
    a = new cp.RuntimeDialogPanel(b, 0, 0, 350, 230);
    a.setFillColor(this.m_foregroundFillColor);
    a.setAlpha(1);
    a.setStrokeColor(this.m_foregroundStrokeColor);
    a = a.getComponentDiv();
    a.id = "fgPanelDiv";
    a.style.position = "relative";
    b.appendChild(a);
    b = new cp.RuntimeDialogText(a, 0, 0);
    b.setText(this.m_titleText);
    b.setFontSize(18);
    b.setFontColor("#ffffff");
    b.setFontName(this.m_textFontName);
    b.setShadowColor(this.m_textShadowColor);
    b = b.getComponentDiv();
    b.style.backgroundColor = "#000000";
    b.style["border-top-left-radius"] = "20px";
    b.style["border-top-right-radius"] = "20px";
    b.style["text-align"] = "center";
    a.appendChild(b);
    b = new cp.RuntimeDialogText(a, this.MESSAGE_DEFAULT_LEFT_OFFSET, 10);
    b.setText(this.m_messageText);
    b.setFontColor(this.m_textColor);
    b.setFontName(this.m_textFontName);
    b.setShadowColor(this.m_textShadowColor);
    b.setFontSize(14);
    b.setMultiline(!0);
    b = b.getComponentDiv();
    b.style.left = "20px";
    b.style.width = "300px";
    b.style.wordWrap = "break-word";
    a.appendChild(b);
    b = new cp.RuntimeDialogTextInput(a, 10, 10);
    b.setLabel(this.m_StringsMap.ISREnterNameStr);
    b.setText("");
    b.setFontColor(this.m_textColor);
    b.setFontName(this.m_textFontName);
    b.setFontSize(14);
    this.m_studentNameTextInput = b;
    b = b.getComponentDiv();
    b.id = "studentNameTextInput";
    b.style.left = "20px";
    b.style.width = "300px";
    a.appendChild(b);
    b = new cp.RuntimeDialogTextInput(a, 10, 0);
    b.setLabel(this.m_StringsMap.ISREmailIDStr);
    b.setText("");
    b.setFontColor(this.m_textColor);
    b.setFontName(this.m_textFontName);
    b.setFontSize(14);
    this.m_studentIDTextInput = b;
    b = b.getComponentDiv();
    b.id = "studentNameTextInput";
    b.style.left = "20px";
    b.style.width = "300px";
    a.appendChild(b);
    b = new cp.RuntimeDialogButton(a, 0, 0, this.BUTTON_DEFAULT_WIDTH, 20);
    b.setFillColor(this.m_buttonFillColor);
    b.setStrokeColor(this.m_buttonStrokeColor);
    b.setButtonLabel(this.m_firstButtonText);
    b.setButtonLabelFontSize(16);
    b.setButtonLabelFontColor(this.m_textColor);
    b.setButtonLabelFontName(this.m_textFontName);
    b.setButtonLabelShadowColor(this.m_textShadowColor);
    b.setHandler(this.m_firstButtonHandler);
    b = b.getComponentDiv();
    b.style.top = "auto";
    b.style.bottom = this.BUTTON_BOTTOM_OFFSET + "px";
    b.style.width = parseFloat(b.style.width) + 20 + "px";
    a.appendChild(b);
    var c = void 0;
    2 == this.m_numberOfButtons && (lSecondButton = new cp.RuntimeDialogButton(a, 0, 0, this.BUTTON_DEFAULT_WIDTH,
            20), lSecondButton.setFillColor(this.m_buttonFillColor), lSecondButton.setStrokeColor(this
            .m_buttonStrokeColor), lSecondButton.setButtonLabel(this.m_secondButtonText), lSecondButton
        .setButtonLabelFontSize(16),
        lSecondButton.setButtonLabelFontColor(this.m_textColor), lSecondButton.setButtonLabelFontName(this
            .m_textFontName), lSecondButton.setButtonLabelShadowColor(this.m_textShadowColor), lSecondButton
        .setHandler(this.m_secondButtonHandler), c = lSecondButton.getComponentDiv(), c.style.top = "auto", c
        .style.bottom = this.BUTTON_BOTTOM_OFFSET + "px", c.style.width = parseFloat(c.style.width) + 20 + "px",
        a.appendChild(c));
    this.m_parent.appendChild(this.m_MessageBoxElement);
    this.m_MessageBoxElement.style.visibility = "visible";
    this.m_MessageBoxElement.style.position =
        "absolute";
    this.m_MessageBoxElement.style.left = "0px";
    this.m_MessageBoxElement.style.top = "0px";
    this.m_MessageBoxElement.style.width = "100%";
    this.m_MessageBoxElement.style.height = "100%";
    this.m_MessageBoxElement.style.textAlign = "center";
    this.m_MessageBoxElement.style.zIndex = "1000";
    this.m_MessageBoxElement.style.background = "rgba(240,240,240,0.5)";
    a = a.clientWidth - b.clientWidth;
    c && (a = a - this.INTER_BUTTON_OFFSET - c.clientWidth);
    a /= 2;
    b.style.left = a + "px";
    c && (c.style.left = a + b.clientWidth + this.INTER_BUTTON_OFFSET +
        "px")
};
if ("undefined" === typeof console || "undefined" === typeof console.log) console = {
    log: function() {}
};
window.Node || (window.Node = {}, Node.ELEMENT_NODE = 1, Node.ATTRIBUTE_NODE = 2, Node.TEXT_NODE = 3, Node
    .CDATA_SECTION_NODE = 4, Node.ENTITY_REFERENCE_NODE = 5, Node.ENTITY_NODE = 6, Node
    .PROCESSING_INSTRUCTION_NODE = 7, Node.COMMENT_NODE = 8, Node.DOCUMENT_NODE = 9, Node.DOCUMENT_TYPE_NODE = 10,
    Node.DOCUMENT_FRAGMENT_NODE = 11, Node.NOTATION_NODE = 12);
Array.indexOf || (Array.prototype.indexOf = function(M) {
    for (var Y = 0; Y < this.length; ++Y)
        if (this[Y] == M) return Y;
    return -1
});
(function() {
    function M(a, c) {
        var d = [],
            e = cp.movie.stage;
        if (!(e && a > e.slides.length - 1)) {
            var e = cp.D[e.slides[a]],
                f = cp.D[e.mdi],
                g = f.ip;
            if (!g && (cp.device == cp.IDEVICE || cp.device == cp.ANDROID)) g = f.aip;
            g && d.push(g);
            e.imgf && (e.imgf.img && e.imgf.img.ip && e.imgf.img.ip.length > 0) && d.push(e.imgf.img.ip);
            e = e.si;
            for (f = 0; f < e.length; ++f)
                if (g = cp.D[cp.D[e[f].n].mdi]) {
                    var k = g.ip;
                    if (k)
                        if (typeof k === "object")
                            for (var m in k) d.push(k[m]);
                        else d.push(k);
                    (k = g.uImg) && d.push(k);
                    (k = g.hImg) && d.push(k);
                    (k = g.pImg) && d.push(k);
                    (k = g.imgf) &&
                    (k.img && k.img.ip && k.img.ip.length > 0) && d.push(k.img.ip);
                    (k = g.asbos) && (k.imgf && k.imgf.img && k.imgf.img.ip && k.imgf.img.ip.length > 0) && d.push(k
                        .imgf.img.ip);
                    (k = g.asbds) && (k.imgf && k.imgf.img && k.imgf.img.ip && k.imgf.img.ip.length > 0) && d.push(k
                        .imgf.img.ip);
                    if (g = g[cp.kPPTXSlideImagesStr])
                        for (k = 0; k < g.length; ++k) g[k].ip.length > 0 && d.push(cp.kPPTXSlideImagesDir + g[k]
                            .ip)
                } cp.movie.im.loadImages(a, d, c)
        }
    }

    function Y(a, c, d) {
        if (cp.responsive) {
            a: {
                var e = 0,
                    f = 0,
                    g = 0,
                    k = 0,
                    m = 0,
                    l = "",
                    n = "",
                    o = false,
                    q = null,
                    p = void 0,
                    u = void 0,
                    s = void 0,
                    v = void 0,
                    x = false;c && (x = true);
                if (a.id) {
                    var w = cp.D[a.id];
                    if (w) {
                        var y = w.mdi,
                            B = c = null;
                        if (y) {
                            c = cp.D[y];
                            B = cp(y)
                        }
                        var z = cp.isCaptionItem(w.type) && cp.D[w.mdi] && cp.D[w.mdi].ip,
                            A = cp.kCPOTAutoShape == w.type || cp.kCPOTStageCorrectFeedbackShape == w.type || cp
                            .kCPOTSuccessShapeItem == w.type || cp.kCPOTStageIncorrectFeedbackShape == w.type || cp
                            .kCPOTFailureShapeItem == w.type || cp.kCPOTHintShapeItem == w.type || cp
                            .kCPOTStagePartialCorrectFeedbackShape == w.type || cp.kCPOTRetryFeedbackShape == w
                            .type || cp.kCPOTIncompleteFeedbackShape ==
                            w.type || cp.kCPOTTimeoutFeedbackShape == w.type || cp.kCPOTAnswerFeedbackShape == w
                            .type,
                            n = cp.kCPOTStageAnswerLabel == w.type || cp.kCPOTStageAnswerItem == w.type || cp
                            .kCPOTStageMatchingAnswerEntry == w.type || cp.kCPOTStageMatchingQuestion == w.type;
                        if ((cp.kCPOTScorableButtonItem == w.type || cp.kCPOTRetakeButton == w.type || cp
                                .kCPOTStageQuestionNextButton == w.type || cp.kCPOTStageQuestionClearButton == w
                                .type || cp.kCPOTStageQuestionBackButton == w.type || cp
                                .kCPOTStageQuestionSubmitButton == w.type || cp.kCPOTScoringReviewButton == w
                                .type ||
                                cp.kCPOTScoringContinueButton == w.type || cp.kCPOTSubmitAllButton == w.type || cp
                                .kCPOTResetButton == w.type || cp.kCPOTUndoButton == w.type || cp
                                .kCPOTDDSubmitButton == w.type || cp.kCPOTTextEntryButtonItem == w.type) && w
                            .subt != void 0 && w.subt == cp.kTextButton) {
                            a = void 0;
                            break a
                        }
                        u = cp(a.id + "_vTxtHolder");
                        s = cp(a.id + "_vTxtHandlerHolder");
                        if (n) {
                            u = a.drawingBoard;
                            s = a
                        }
                        var F = w.vt,
                            q = w.rpvt;
                        if (!q) {
                            a = void 0;
                            break a
                        }
                        var J = [0, 0, 0, 0],
                            C = marginT = marginR = marginB = 0;
                        w.autoGrow = cp.autoGrow && !n;
                        C = w.rplm ? w.rplm[cp.ResponsiveProjWidth] : 0;
                        marginT =
                            w.rptm ? w.rptm[cp.ResponsiveProjWidth] : 0;
                        marginR = w.rprm ? w.rprm[cp.ResponsiveProjWidth] : 0;
                        marginB = w.rpbm ? w.rpbm[cp.ResponsiveProjWidth] : 0;
                        var Y = w.rptl ? w.rptl[cp.ResponsiveProjWidth] : cp.TextLayoutEnum.kTLCenter,
                            ca = w.rpta ? w.rpta[cp.ResponsiveProjWidth] : cp.TextAlignmentEnum.kTACenter,
                            F = q[cp.ResponsiveProjWidth].vt,
                            da = "";
                        if (F && a.drawingBoard && u) {
                            var P = rrm = rtm = rbm = 0;
                            c.sw && (P = rtm = rbm = rrm = c.sw / 2);
                            var K = w.type == cp.kCPOTFillBlankCaption;
                            if (K && !d) {
                                a = void 0;
                                break a
                            }
                            var aa = c.hl;
                            if (c && c.b && u) {
                                var D = null,
                                    E = null,
                                    n = y + "-vtext",
                                    D = cp(n),
                                    E = cp(n + "_Handler"),
                                    q = cp.movie.stage.getFrameset(a.id);
                                if (u && !D && !E) {
                                    c && (q && q.isStarted && 1 == c.visible && u.style.visible == "visible") && (
                                        o = true);
                                    D = cp.newElem("div");
                                    D.className = "cp-vtxt";
                                    D.setAttribute("aria-hidden", "true");
                                    D.id = n;
                                    if (B) D.style.left = B.style.left;
                                    D.style.cssText =
                                        "word-wrap:break-word;white-space:pre-wrap;overflow:hidden;line-height:90%;";
                                    D.style.cssText = D.style.cssText + "";
                                    if (!o) D.style.visibility = "hidden";
                                    q && q.htmlDependents.push(D);
                                    cp.movie.stage.addToParentChildMap(a.id,
                                        u.id);
                                    cp.movie.stage.addToParentChildMap(a.id, n);
                                    u.appendChild(D);
                                    if (aa || K) {
                                        E = cp.newElem("div");
                                        E.className = "cp-vtxt";
                                        E.id = n + "_Handler";
                                        E.style.cssText =
                                            "word-wrap:break-word;white-space:pre-wrap;overflow:hidden;line-height:90%;";
                                        E.style.cssText = E.style.cssText + "";
                                        if (!o) E.style.visibility = "hidden";
                                        cp.movie.stage.addToParentChildMap(a.id, s.id);
                                        cp.movie.stage.addToParentChildMap(a.id, E.id);
                                        s.appendChild(E);
                                        if (K) {
                                            cp(a.id)
                                                .style.overflow = "visible";
                                            E.style.overflow = "visible"
                                        }
                                        if (B) E.style.left = B.style.left
                                    }
                                } else {
                                    if (!q ||
                                        !q.isStarted) {
                                        a = void 0;
                                        break a
                                    }
                                    p = G[y];
                                    if (!p) {
                                        v = G[w.qdi];
                                        p = v.answertextCanvasShape
                                    }
                                    K || (D = cp(n));
                                    if (D && x && c && 1 == c.visible && p && p.isDrawn) D.style.visibility =
                                        "visible";
                                    if (aa || K) {
                                        if ((E = document.getElementById(n + "_Handler")) && x && c && 1 == c
                                            .visible) {
                                            E.style.visibility = "visible";
                                            if (aa) {
                                                E.style.backgroundColor = "#ffffff";
                                                E.style.opacity = 0
                                            }
                                        }
                                        if (B) E.style.left = B.style.left
                                    }
                                    if (D) {
                                        if (B) D.style.left = B.style.left;
                                        D.style.width = "";
                                        D.style.height = ""
                                    }
                                    if (E) {
                                        E.style.width = "";
                                        E.style.height = ""
                                    }
                                    p.actualParent.offsetHeight = p.actualParent.offsetHeight;
                                    if (A) {
                                        o = [C + P, marginT + rtm, marginR + rrm, marginB + rbm];
                                        D && cp.updateTextBounds(D, p.actualParent, c.tb, o);
                                        E && cp.updateTextBounds(E, p.actualParent, c.tb, o)
                                    }
                                    if (J && !A) {
                                        if (D) {
                                            D.style.left = J[0] + C + P + "px";
                                            D.style.top = J[1] + marginT + rtm + "px";
                                            D.style.right = J[2] + marginR + rrm + "px";
                                            D.style.bottom = J[3] + marginB + rbm + "px"
                                        }
                                        if (E) {
                                            E.style.left = J[0] + C + P + "px";
                                            E.style.top = J[1] + marginT + rtm + "px";
                                            E.style.right = J[2] + marginR + rrm + "px";
                                            E.style.bottom = J[3] + marginB + rbm + "px"
                                        }
                                    }
                                }
                            }
                            try {
                                if (void 0 != w.vars && void 0 != w.varLens && void 0 != w.texts) {
                                    for (var X =
                                            cp.ResponsiveProjWidth, ma = w.vars[X], Qa = w.varLens[X], na = w.texts[
                                                X], g = ma.length, k = na.length;;) {
                                        da = da + na[f++];
                                        if (e < g) {
                                            l = window[ma[e]];
                                            void 0 == l && (l = "");
                                            m = Qa[e];
                                            l.length > m && (l = l.substr(0, m));
                                            ++e;
                                            da = da + l
                                        }
                                        if (f >= k) break
                                    }
                                    if (D && !K) D.innerHTML = da;
                                    if (aa || K) {
                                        aa && (F = da);
                                        if (E.innerHTML == "" || aa && E.innerHTML != F) E.innerHTML = F;
                                        var V = {
                                            captionName: a.id,
                                            reason: "updateResponsiveVarText",
                                            callbackFn: function() {
                                                E.innerHTML = F
                                            }
                                        };
                                        cp.em.fireEvent("CPInputControlReplacedEvent", V)
                                    }
                                } else {
                                    if (D && D.innerHTML != F && !K) D.innerHTML = F;
                                    if (aa ||
                                        K) {
                                        if (E.innerHTML == "" || aa && E.innerHTML != F) E.innerHTML = F;
                                        V = {
                                            captionName: a.id,
                                            reason: "updateResponsiveVarText",
                                            callbackFn: function() {
                                                E.innerHTML = F
                                            }
                                        };
                                        cp.em.fireEvent("CPInputControlReplacedEvent", V)
                                    }
                                }
                                d && cp.movie.stage.addHyperLinks({
                                    n: a.id,
                                    t: w.type
                                }, cp(a.id));
                                if (c.sh) {
                                    d = !z;
                                    c.fa != void 0 && (d = c.fa == 0);
                                    var H;
                                    if (D) H = D.firstChild;
                                    var R;
                                    if (E) R = E.firstChild;
                                    H && H.firstChild && cp.applyShadow(H.firstChild, c.sh, d);
                                    R && R.firstChild && cp.applyShadow(R.firstChild, c.sh, d)
                                }
                                H = function(a) {
                                    var c = a.clientWidth;
                                    if (K) c = a.parentElement.clientWidth;
                                    return cp.createTempTextElemAndGetBoundingRect(c, w, a.innerHTML)
                                };
                                var Q = D ? D : E,
                                    S = H(Q);
                                if (p) {
                                    w.variableText = Q.innerHTML;
                                    parseFloat(Q.style.left);
                                    parseFloat(Q.style.top);
                                    parseFloat(Q.style.right);
                                    parseFloat(Q.style.bottom);
                                    var Z = K || p && p.currentCSS && p.currentCSS.h && p.currentCSS.h.indexOf(
                                        "H%") == -1 && p.currentCSS.h.indexOf("auto") == -1;
                                    w.autoGrow = w.autoGrow && !Z && !w.isPartOfInteraction;
                                    if (w.autoGrow) {
                                        Z = false;
                                        if (Q && Q.clientHeight < S.height) {
                                            if (!w.breakevenWidth) w.breakevenWidth = {};
                                            var T = w.breakevenWidth[cp.ResponsiveProjWidth],
                                                L = p.actualParent.clientWidth - Q.clientWidth,
                                                ba = p.actualParent.clientHeight - Q.clientHeight;
                                            if (!T) {
                                                var M = cp.getMaxWHBpt(p.responsiveCSS[cp.ResponsiveProjWidth], cp
                                                        .ResponsiveProjWidth)
                                                    .w - L,
                                                    U = cp.createTempTextElemAndGetBoundingRect(M, w, Q.innerHTML),
                                                    ea = U.width + L,
                                                    O = U.height + ba,
                                                    N = cp.getExpectedWindowWidthToFitText(p.currentCSS, ea, O),
                                                    N = cp.getExpectedWindowWidthToFitText(p.currentCSS, ea, O),
                                                    T = {
                                                        winW: N,
                                                        expw: U.width,
                                                        hOffsets: L,
                                                        vOffsets: ba
                                                    };
                                                w.breakevenWidth[cp.ResponsiveProjWidth] = T
                                            }
                                            w.minItemHeight = S.height + ba;
                                            if (cp.fluidFont) {
                                                D && cp.adjustFontSizesForVariableText(D, T, D.clientWidth);
                                                if (E) {
                                                    var ha = E.clientWidth;
                                                    if (D) ha = D.clientWidth;
                                                    cp.adjustFontSizesForVariableText(E, T, ha)
                                                }
                                            }
                                            S = H(Q);
                                            if (Q.clientHeight < S.height) {
                                                var W = S.height;
                                                w.minItemHeight = W + ba;
                                                var I = cp.getMinMaxHeight(p.currentCSS);
                                                if (!isNaN(I.maxH) && w.minItemHeight > I.maxH) {
                                                    w.minItemHeight = I.maxH;
                                                    W = w.minItemHeight - ba
                                                }
                                                Z = true;
                                                if (D) D.style.height = W + "px";
                                                if (E) E.style.height = W + "px"
                                            }
                                        }
                                        Z && (v ? v.drawForResponsive(true, cp.ReasonForDrawing.kTextGrow) : p
                                            .drawForResponsive(true,
                                                cp.ReasonForDrawing.kTextGrow))
                                    }
                                }
                                T = function(a) {
                                    if (a) {
                                        a.style.width = S.width + "px";
                                        a.style.height = S.height + "px";
                                        a.style.position = "absolute";
                                        switch (ca) {
                                            case cp.TextAlignmentEnum.kTARightJustify:
                                                a.style["text-align"] = "right";
                                                break;
                                            case cp.TextAlignmentEnum.kTACenter:
                                                a.style["text-align"] = "center";
                                                break;
                                            default:
                                                a.style["text-align"] = "left"
                                        }
                                        switch (Y) {
                                            case cp.TextLayoutEnum.kTLBottom:
                                                var c = D.clientHeight - S.height;
                                                K && (c = Q.parentElement.clientHeight - S.height);
                                                a.style.top = (c < 0 ? 0 : c) + "px";
                                                break;
                                            case cp.TextLayoutEnum.kTLCenter:
                                                c =
                                                    (D.clientHeight - S.height) / 2;
                                                K && (c = (Q.parentElement.clientHeight - S.height) / 2);
                                                if (c > 0) {
                                                    a.style.bottom = "";
                                                    a.style.top = c + "px"
                                                }
                                                break;
                                            default:
                                                a.style.top = "0px"
                                        }
                                    }
                                };
                                D && T(D.firstChild);
                                if (E) {
                                    T(E.firstChild);
                                    if (K) {
                                        V = {
                                            captionName: a.id,
                                            reason: "updateResponsiveVarText:textadjust"
                                        };
                                        cp.em.fireEvent("CPInputControlReplacedEvent", V)
                                    }
                                }
                            } catch (fa) {
                                cp.log(fa)
                            }
                        }
                    }
                }
                a = void 0
            }
            return a
        }
        M = ba = L = T = V = 0;
        ea = U = "";
        O = false;
        R = null;
        R = false;
        c && (R = true);
        if (a.id)
            if (N = cp.D[a.id]) {
                ha = N.vt;
                W = "";
                if (ha && a.drawingBoard) {
                    d = N.mdi;
                    I = null;
                    d && (I = cp.D[d]);
                    Z = a.drawingBoard;
                    if (I && I.b && Z) {
                        H = null;
                        ea = d + "-vtext";
                        if (Z.children.length < 2) {
                            if (void 0 != N.lm) {
                                k = N.lm;
                                g = N.tm;
                                m = N.rm;
                                l = N.bm
                            }
                            H = cp.newElem("div");
                            H.className = "cp-vtxt";
                            H.id = ea;
                            R = cp.movie.stage.getFrameset(a.id);
                            I && (R && R.isStarted && 1 == I.visible) && (O = true);
                            H.style.cssText = "word-wrap:break-word;white-space:pre-wrap; width: " + (I.b[2] - I.b[
                                    0] - (k + m) + "px") + ";height:" + (I.b[3] - I.b[1] - (g + l) + "px") +
                                ";line-height:90%;overflow:hidden;";
                            d = "" + ("margin-left:" + (I.b[0] + k - I.vb[0]) + "px;");
                            d = d + ("margin-top:" + (I.b[1] + g - I.vb[1]) +
                                "px;");
                            H.style.cssText = H.style.cssText + d;
                            if (!O) H.style.visibility = "hidden";
                            I.tr && cp.applyTransform(H, I.tr);
                            I.sh && cp.applyShadow(H, I.sh);
                            R && R.htmlDependents.push(H);
                            cp.movie.stage.addToParentChildMap(a.id, ea);
                            Z.appendChild(H)
                        } else {
                            a = G[d];
                            if ((H = Z.children[1]) && R && I && 1 == I.visible && a && a.isDrawn) H.style
                                .visibility = "visible"
                        }
                        try {
                            if (void 0 != N.vars && void 0 != N.varLens && void 0 != N.texts) {
                                p = cp.D.project.w;
                                v = N.vars[p];
                                e = N.varLens[p];
                                f = N.texts[p];
                                L = v.length;
                                for (ba = f.length;;) {
                                    W = W + f[T++];
                                    if (V < L) {
                                        U = window[v[V]];
                                        void 0 == U && (U = "");
                                        M = e[V];
                                        U.length > M && (U = U.substr(0, M));
                                        ++V;
                                        W = W + U
                                    }
                                    if (T >= ba) break
                                }
                                H.innerHTML = W
                            } else H.innerHTML = ha
                        } catch (ga) {
                            cp.log(ga)
                        }
                    }
                }
            }
    }

    function Ra(a) {
        a.element && cp.updateVarText(a.element, true);
        if (a.pa) cp.movie.stage.noSkipFrames[a.pa] = a.pa;
        if (a.psv) cp.movie.stage.noSkipFrames[a.psv] = a.psv
    }

    function Sa(a) {
        if (a.cpName == "CPVariableValueChangedEvent") {
            var c = y[cp.VARIABLE_CHANGED_EVENT];
            C(a, c);
            for (c = 0; c < a.cpData.notify.length; ++c)
                for (var d = a.cpData.notify[c], e = y[cp.SPECIFIC_VARIABLE_CHANGED_EVENT],
                        f = 0; f < e.length; ++f)
                    if (e[f].n == d) {
                        var g = e[f].l;
                        if (e[f].r) a.reciever = e[f].r;
                        var k = a;
                        try {
                            g.id ? cp.updateVarText(g) : g(k)
                        } catch (m) {}
                    }
        } else if (a.cpName == "CPVariableCreatedEvent") {
            c = y[cp.VARIABLE_CREATED_EVENT];
            C(a, c)
        } else if (a.cpName == "CPTime_Update") {
            c = y[cp.TIMEUPDATEEVENT];
            C(a, c)
        } else if (a.cpName == "CPSet_ResumeData") {
            c = y[cp.SET_RESUMEDATA];
            C(a, c)
        } else if (a.cpName == "CPPlaybarStateChanged") {
            c = y[cp.PLAYBARSTATECHANGED];
            C(a, c)
        } else if (a.cpName == "CPTocStateChanged") {
            c = y[cp.TOCSTATECHANGED];
            C(a, c)
        } else if (a.cpName ==
            "CPSlideEnter") {
            c = y[cp.SLIDEENTEREVENT];
            C(a, c)
        } else if (a.cpName == "CPSlideExit") {
            c = y[cp.SLIDEEXITEVENT];
            C(a, c)
        } else if (a.cpName == "CPInteractiveItemSubmit") {
            c = y[cp.INTERACTIVEITEMSUBMITEVENT];
            C(a, c)
        } else if (a.cpName == "CPMoviePause") {
            c = y[cp.MOVIEPAUSEEVENT];
            C(a, c)
        } else if (a.cpName == "CPMovieResume") {
            c = y[cp.MOVIERESUMEEVENT];
            C(a, c)
        } else if (a.cpName == "CPMovieStart") {
            c = y[cp.MOVIESTARTEVENT];
            C(a, c)
        } else if (a.cpName == "CPMovieStop") {
            c = y[cp.MOVIESTOPEVENT];
            C(a, c)
        } else if (a.cpName == "CPMovieExit") {
            c = y[cp.MOVIEEXITEVENT];
            C(a, c)
        } else if (a.cpName == "CPQuestionSkip") {
            c = y[cp.QUESTIONSKIPEVENT];
            C(a, c)
        } else if (a.cpName == "CPQuestionSubmit") {
            c = y[cp.QUESTIONSUBMITEVENT];
            C(a, c)
        } else if (a.cpName == "CPStartPlaybarScrubbing") {
            c = y[cp.STARTPLAYBARSCRUBBINGEVENT];
            C(a, c)
        } else if (a.cpName == "CPEndPlaybarScrubbing") {
            c = y[cp.ENDPLAYBARSCRUBBINGEVENT];
            C(a, c)
        } else if (a.cpName == "CPMovieFocusIn") {
            c = y[cp.MOVIEFOCUSINEVENT];
            C(a, c)
        } else if (a.cpName == "CPMovieFocusLost") {
            c = y[cp.MOVIEFOCUSLOSTEVENT];
            C(a, c)
        } else if (a.cpName == "CPMovieAudioMute") {
            c =
                y[cp.MOVIEAUDIOMUTEEVENT];
            C(a, c)
        } else if (a.cpName == "CPInputControlReplacedEvent") {
            c = y[cp.INPUTCONTROLREPLACEDEVENT];
            C(a, c)
        } else if (a.cpName == "CPWindowResized") {
            c = y[cp.WINDOWRESIZEDEVENT];
            C(a, c)
        } else if (a.cpName == "CPWindowResizeCompleted") {
            c = y[cp.WINDOWRESIZECOMPLETEDEVENT];
            C(a, c)
        } else if (a.cpName == "CPOrientationChanged") {
            c = y[cp.ORIENTATIONCHANGEDEVENT];
            C(a, c)
        } else if (a.cpName == "CPOrientationChangeCompleted") {
            c = y[cp.ORIENTATIONCHANGECOMPLETEDEVENT];
            C(a, c)
        } else if (a.cpName == "CPItemDrawingCompleteEvent") {
            c =
                y[cp.ITEMDRAWINGCOMPLETEEVENT];
            C(a, c)
        }
    }

    function C(a, c) {
        for (var d = 0; d < c.length; ++d) {
            var e = c[d];
            if (e.r) a.reciever = e.r;
            var e = e.l,
                f = a;
            try {
                e.id ? cp.updateVarText(e) : e(f)
            } catch (g) {}
        }
    }

    function Ta() {
        for (var a = cp.device != cp.DESKTOP, c = ["blackberry", "symbian", "smartphone", "windows ce",
                "windows phone", "webos"
            ], d = navigator.userAgent.toLowerCase(), e = "other", f = 0; f < c.length; ++f)
            if (d.indexOf(c[f]) != -1) {
                a = true;
                e = c[f];
                e = e.split(" ")
                    .join("_")
            } if (a) switch (cp.device) {
            case cp.IDEVICE:
                return 1;
            case cp.ANDROID:
                return 2;
            default:
                return e
        } else return 0
    }

    function ca() {
        return vh._CaptivateVersion ? vh._CaptivateVersion : ""
    }

    function Ua() {
        return vh._cpCmndVolume
    }

    function Va(a) {
        var c = a / 100;
        c < 0 && (c = 0);
        c > 1 && (c = 1);
        cp.movie.am.setVolume(c);
        cp.movie.vdm.setVolume(c);
        svvi("cpCmndVolume", a, ["cpCmndVolume"])
    }

    function oa(a) {
        cp.movie.am.mute(a);
        cp.movie.vdm.mute(a);
        cp.em.fireEvent("CPMovieAudioMute", cp.movie.am.muted);
        svvi("cpCmndMute", a, ["cpCmndMute", "rdcmndMute"])
    }

    function pa() {
        return vh._cpCmndMute
    }

    function qa() {
        return vh._cpCmndPlaybarMoved
    }

    function ra(a) {
        svvi("cpCmndPlaybarMoved",
            a, ["cpCmndPlaybarMoved", "rdcmndPlaybarMoved"])
    }

    function Wa() {
        return vh._cpCmndShowPlaybar
    }

    function Xa(a) {
        var c = void 0;
        cp.movie && cp.movie.playbackController && (c = cp.movie.playbackController.GetQuizController());
        if (c) c.m_showPlaybar = a;
        c = document.getElementById("playbar");
        if (c != void 0) {
            var d = document.getElementById("playbarBkGrnd");
            if (d)
                if (a) {
                    c.style.display = "block";
                    d.style.visibility = "visible"
                } else {
                    c.style.display = "none";
                    d.style.visibility = "hidden"
                } cp.adjustSkins()
        }
        svvi("cpCmndShowPlaybar", a, ["cpCmndShowPlaybar"]);
        cp.em.fireEvent("CPPlaybarStateChanged", {
            visible: !!a,
            locked: false
        })
    }

    function sa() {
        return vh._cpCmndCC
    }

    function Ya(a) {
        if (a) {
            cp.movie.cc.style.visibility = "";
            if (cp.movie.cc.style.pointerEvents != "auto") cp.movie.cc.style.pointerEvents = "auto"
        } else cp.movie.cc.style.visibility = "hidden";
        svvi("cpCmndCC", a, ["cpCmndCC", "rdcmndCC"])
    }

    function ta() {
        return vh._cpCmndRewindAndPlay
    }

    function ua(a) {
        a && cp.movie.rewind();
        svvi("cpCmndRewindAndPlay", a, ["cpCmndRewindAndPlay", "rdcmndRewindAndPlay"])
    }

    function va() {
        return vh._cpCmndRewindAndStop
    }

    function wa(a) {
        if (a) {
            cp.movie.jumpToFrame(1);
            cp.movie.pause(cp.ReasonForPause.MOVIE_REWIND_STOP)
        }
        svvi("cpCmndRewindAndStop", a, ["cpCmndRewindAndStop", "rdcmndRewindAndStop"])
    }

    function fa() {
        return vh._cpCmndPreviousSlide
    }

    function ga(a) {
        a && cp.jumpToPreviousSlide();
        svvi("cpCmndPreviousSlide", a, ["cpCmndPreviousSlide", "cpCmndPrevious", "rdcmndPreviousSlide",
            "rdcmndPrevious"
        ])
    }

    function Za(a) {
        if (a && cp.movie) {
            var c = -1,
                d = false;
            if (cp.movie.playbackController) {
                var e = cp.movie.playbackController.GetQuizController();
                (d = e && e.GetIsInReviewMode()) && (c = e.GetPreviousQuestionSlideNumber())
            }
            d && c >= 0 ? cpCmndGotoSlideAndResume = c : cpCmndPreviousSlide = a
        }
    }

    function xa() {
        return !cp.movie.paused
    }

    function ya(a) {
        a && cp.movie.play();
        svvi("cpCmndResume", a, ["cpCmndResume", "rdcmndResume"])
    }

    function $a(a) {
        if (a && cp.movie) {
            var c = -1,
                d = false;
            if (cp.movie.playbackController) {
                var e = cp.movie.playbackController.GetQuizController();
                (d = e && e.GetIsInReviewMode()) && (c = e.GetNextQuestionSlideNumber())
            }
            d && c >= 0 ? cpCmndGotoSlideAndResume = c : cpCmndNextSlide =
                a
        }
    }

    function za(a) {
        var c = !cp.movie.paused;
        cp.movie.pause(cp.ReasonForPause.CPCMNDGOTOFRAME);
        cp.movie.jumpToFrame(a) ? svvi("", a, ["cpCmndGotoFrame", "rdcmndGotoFrame"]) : c && cp.movie.play()
    }

    function Aa(a) {
        cp.movie.jumpToFrame(a);
        cp.movie.play();
        svvi("", a, ["cpCmndGotoFrameAndResume", "rdcmndGotoFrameAndResume"])
    }

    function Ba(a) {
        if (a < 0 || a >= cp.movie.stage.slides.length) cpCmndResume = true;
        else {
            var c = cp.D[cp.movie.stage.slides[a]];
            c && cp.movie.jumpToFrame(c.from);
            svvi("", a, ["cpCmndGotoSlide", "rdcmndGotoSlide"])
        }
    }

    function ab(a) {
        var c = cp.movie.speed;
        switch (cp.movie.speed) {
            case 1:
            case 2:
                cp.movie.speed = cp.movie.speed * 2;
                break;
            default:
                cp.movie.speed = 1
        }
        if (c != cp.movie.speed) {
            cp.movie.resetFPS();
            if (1 == cp.movie.speed) {
                cp.movie.am.seekTo(cpInfoCurrentFrame);
                cp.movie.vdm.seekTo(cpInfoCurrentFrame, false)
            } else cp.movie.am.pause(cp.ReasonForPause.PLAYBAR_ACTION);
            if (X != 0) {
                if (0 != X) {
                    clearInterval(X);
                    X = 0
                }
                Ca()
            }
            svvi("", cpInfoFPS, ["cpInfoFPS", "rdinfoFPS"]);
            svvi("cpCmndFastForward", a, ["cpCmndFastForward"])
        }
    }

    function bb(a) {
        svvi("cpLockTOC",
            a, ["cpLockTOC"]);
        cp.em.fireEvent("CPTocStateChanged", {
            visible: !!cpCmndTOCVisible,
            locked: !!a
        })
    }

    function cb() {
        return vh._cpLockTOC
    }

    function db(a) {
        var c = document.getElementById("toc");
        if (c != void 0 && cp.D.tocProperties.overlay) {
            c.animator && (a ? c.animator.showTOC() : c.animator.hideTOC());
            svvi("cpCmndTOCVisible", a, ["cpCmndTOCVisible"]);
            cp.em.fireEvent("CPTocStateChanged", {
                visible: !!a,
                locked: !!cpLockTOC
            })
        }
    }

    function eb() {
        var a = document.getElementById("toc");
        return a != void 0 && a.animator ? a.animator.isVisible() :
            false
    }

    function fb(a) {
        if (a < 0 || a >= cp.movie.stage.slides.length) cpCmndResume = true;
        else {
            var c = cp.D[cp.movie.stage.slides[a]];
            if (c) {
                cp.movie.jumpToFrame(c.from);
                cp.movie.play()
            }
            svvi("", a, ["cpCmndGotoSlideAndResume"])
        }
    }

    function gb(a) {
        var c = cp.D["Slide" + a];
        if (c) {
            cp.movie.jumpToFrame(c.from);
            cp.movie.play();
            svvi("", a, ["cpCmndGotoSlideByUIDAndResume"])
        }
    }

    function Da() {
        return vh._cpCmndExit
    }

    function Ea(a) {
        svvi("cpCmndExit", a, ["cpCmndExit", "rdcmndExit"]);
        DoCPExit && DoCPExit()
    }

    function ia(a) {
        a && cp.jumpToNextSlide();
        svvi("cpCmndNextSlide", a, ["cpCmndNextSlide", "cpCmndNext", "rdcmndNextSlide", "rdcmndNext"])
    }

    function Fa(a) {
        a && cp.movie.pause(cp.ReasonForPause.CPCMNDPAUSE);
        svvi("cpCmndPause", a, ["cpCmndPause", "rdcmndPause"])
    }

    function Ga() {
        return cp.movie.paused
    }

    function Ha(a) {
        svvi("cpCmndInfo", a, ["cpCmndInfo", "rdcmndInfo"])
    }

    function Ia() {
        return vh._cpCmndInfo
    }

    function hb() {
        return vh._cpInfoAuthor
    }

    function ib() {
        return vh._cpInfoDescription
    }

    function jb() {
        return vh._cpQuizInfoLastSlidePointScored
    }

    function kb(a) {
        svvi("cpQuizInfoLastSlidePointScored",
            a, ["cpQuizInfoLastSlidePointScored"])
    }

    function lb() {
        return vh._cpQuizInfoPointsPerQuestionSlide
    }

    function mb(a) {
        svvi("cpQuizInfoPointsPerQuestionSlide", a, ["cpQuizInfoPointsPerQuestionSlide"])
    }

    function nb() {
        return vh._cpQuizInfoNegativePointsOnCurrentQuestionSlide
    }

    function ob(a) {
        svvi("cpQuizInfoNegativePointsOnCurrentQuestionSlide", a, [
            "cpQuizInfoNegativePointsOnCurrentQuestionSlide"])
    }

    function pb() {
        return !!vh._cpQuizInfoQuestionPartialScoreOn
    }

    function qb(a) {
        svvi("cpQuizInfoQuestionPartialScoreOn", a,
            ["cpQuizInfoQuestionPartialScoreOn"])
    }

    function rb() {
        return vh._cpInfoCurrentSlideLabel
    }

    function sb() {
        return vh._cpQuizInfoQuizPassPercent
    }

    function tb(a) {
        svvi("cpQuizInfoQuizPassPercent", a, ["cpQuizInfoQuizPassPercent"])
    }

    function ub() {
        return vh._cpQuizInfoTotalProjectPoints
    }

    function vb(a) {
        svvi("cpQuizInfoTotalProjectPoints", a, ["cpQuizInfoTotalProjectPoints"])
    }

    function wb() {
        return vh._cpInfoPrevSlide
    }

    function xb() {
        if (!cp.movie) return 0;
        if (cp.movie.playbackController) {
            var a = cp.movie.playbackController.GetQuizController();
            if (a) return a.GetTotalCorrectQuestions()
        }
        return 0
    }

    function yb(a) {
        svvi("cpQuizInfoTotalCorrectAnswers", a, ["cpQuizInfoTotalCorrectAnswers"])
    }

    function zb() {
        if (!cp.movie) return 0;
        if (cp.movie.playbackController) {
            var a = cp.movie.playbackController.GetQuizController();
            if (a) return a.GetTotalPretestCorrectQuestions()
        }
        return 0
    }

    function Ab(a) {
        svvi("cpQuizInfoPreTestTotalQuestions", a, ["cpQuizInfoPreTestTotalQuestions"])
    }

    function Bb() {
        return vh._cpQuizInfoPreTestTotalQuestions
    }

    function Cb(a) {
        svvi("cpQuizInfoPreTestTotalCorrectAnswers",
            a, ["cpQuizInfoPreTestTotalCorrectAnswers"])
    }

    function Db() {
        if (!cp.movie) return 0;
        if (cp.movie.playbackController) {
            var a = cp.movie.playbackController.GetQuizController();
            if (a) {
                var c = a.GetScore(),
                    a = a.GetMaxScore();
                if (a != 0) return Math.round(c * 100 / a)
            }
        }
        return 0
    }

    function Eb(a) {
        svvi("cpInfoPercentage", a, ["cpInfoPercentage"])
    }

    function Fb() {
        return vh._cpQuizInfoTotalQuestionsPerProject
    }

    function Gb(a) {
        svvi("cpQuizInfoTotalQuestionsPerProject", a, ["cpQuizInfoTotalQuestionsPerProject"])
    }

    function Hb() {
        return vh._cpQuizInfoQuizPassPoints
    }

    function Ib(a) {
        svvi("cpQuizInfoQuizPassPoints", a, ["cpQuizInfoQuizPassPoints"])
    }

    function Jb() {
        return vh._cpQuizInfoQuestionSlideType
    }

    function Kb(a) {
        svvi("cpQuizInfoQuestionSlideType", a, ["cpQuizInfoQuestionSlideType"])
    }

    function Lb() {
        return !cp.movie || !cp.movie.playbackController ? 0 : cp.movie.playbackController
            .GetTotalUnansweredQuestions()
    }

    function Mb(a) {
        svvi("cpQuizInfoTotalUnansweredQuestions", a, ["cpQuizInfoTotalUnansweredQuestions"])
    }

    function Nb() {
        return vh._cpInfoLastVisitedSlide
    }

    function Ob() {
        return vh._cpQuizInfoMaxAttemptsOnCurrentQuestion
    }

    function Pb(a) {
        svvi("cpQuizInfoMaxAttemptsOnCurrentQuestion", a, ["cpQuizInfoMaxAttemptsOnCurrentQuestion"])
    }

    function Qb() {
        return vh._cpQuizInfoQuestionSlideTiming
    }

    function Rb(a) {
        svvi("cpQuizInfoQuestionSlideTiming", a, ["cpQuizInfoQuestionSlideTiming"])
    }

    function Sb() {
        return vh._cpInfoCompany
    }

    function Tb() {
        return vh._cpQuizInfoAnswerChoice
    }

    function Ub(a) {
        svvi("cpQuizInfoAnswerChoice", a, ["cpQuizInfoAnswerChoice"])
    }

    function Vb() {
        return vh._cpQuizInfoNoQuestionsPerQuiz
    }

    function Wb(a) {
        svvi("cpQuizInfoNoQuestionsPerQuiz",
            a, ["cpQuizInfoNoQuestionsPerQuiz"])
    }

    function Xb() {
        if (!cp.movie) return 0;
        if (cp.movie.playbackController) {
            var a = cp.movie.playbackController.GetQuizController();
            if (a) return a.GetScore()
        }
        return 0
    }

    function Yb(a) {
        svvi("cpQuizInfoPointsscored", a, ["cpQuizInfoPointsscored"])
    }

    function Zb() {
        return vh._cpInfoCopyright
    }

    function $b() {
        return vh._cpInfoWebsite
    }

    function ac() {
        return vh._cpInfoProjectName
    }

    function bc() {
        return vh._cpInfoEmail
    }

    function cc() {
        return false
    }

    function dc() {
        return vh._cpInfoHasPlaybar
    }

    function ec() {
        return vh._cpQuizInfoAttempts
    }

    function fc(a) {
        svvi("cpQuizInfoAttempts", a, ["cpQuizInfoAttempts"])
    }

    function gc() {
        return cp.D.project_main.to
    }

    function hc() {
        return vh._cpQuizInfoTotalQuizPoints
    }

    function ic(a) {
        svvi("cpQuizInfoTotalQuizPoints", a, ["cpQuizInfoTotalQuizPoints"])
    }

    function Ja(a) {
        var c = "" + a;
        a >= 0 && a < 10 && (c = "0" + c);
        return c
    }

    function Ka() {
        var a = new Date;
        vh._cpInfoEpochMS != a.getTime() && svvi("cpInfoEpochMS", a.getTime(), ["cpInfoEpochMS"]);
        vh._cpInfoElapsedTimeMS != cpInfoEpochMS - cp.movie.startTime && svvi("cpInfoElapsedTimeMS", cpInfoEpochMS -
            cp.movie.startTime, ["cpInfoElapsedTimeMS"]);
        vh._cpInfoCurrentMinutes != a.getMinutes() && svvi("cpInfoCurrentMinutes", a.getMinutes(), [
            "cpInfoCurrentMinutes"
        ]);
        vh._cpInfoCurrentHour != a.getHours() && svvi("cpInfoCurrentHour", a.getHours(), ["cpInfoCurrentHour"]);
        var c = a.getHours() + ":" + a.getMinutes() + ":" + a.getSeconds();
        vh._cpInfoCurrentTime != c && svvi("cpInfoCurrentTime", c, ["cpInfoCurrentTime"]);
        vh._cpInfoCurrentDay != a.getDay() + 1 && svvi("cpInfoCurrentDay", a.getDay() + 1, ["cpInfoCurrentDay"]);
        vh._cpInfoCurrentYear !=
            a.getFullYear() && svvi("cpInfoCurrentYear", a.getFullYear(), ["cpInfoCurrentYear"]);
        vh._cpInfoCurrentMonth != a.getMonth() + 1 && svvi("cpInfoCurrentMonth", Ja(a.getMonth() + 1), [
            "cpInfoCurrentMonth"
        ]);
        vh._cpInfoCurrentDate != a.getDate() && svvi("cpInfoCurrentDate", Ja(a.getDate()), ["cpInfoCurrentDate"]);
        c = a.getMonth() + 1 + "/" + a.getDate() + "/" + a.getFullYear();
        vh._cpInfoCurrentDateString != c && svvi("cpInfoCurrentDateString", c, ["cpInfoCurrentDateString"]);
        c = a.getDate() + "/" + (a.getMonth() + 1) + "/" + a.getFullYear();
        vh._cpInfoCurrentDateStringDDMMYYYY !=
            c && svvi("cpInfoCurrentDateStringDDMMYYYY", c, ["cpInfoCurrentDateStringDDMMYYYY"]);
        a = a.toLocaleDateString();
        vh._cpInfoCurrentLocaleDateString != a && svvi("cpInfoCurrentLocaleDateString", a, [
            "cpInfoCurrentLocaleDateString"
        ])
    }

    function Ca() {
        if (0 == X) {
            Ka();
            X = setInterval(Ka, 1E3 / cpInfoFPS)
        }
    }

    function jc() {
        return vh._cpInfoCurrentDateString
    }

    function kc() {
        return vh._cpInfoCurrentDateStringDDMMYYYY
    }

    function lc() {
        return vh._cpInfoCurrentLocaleDateString
    }

    function mc() {
        return vh._cpInfoCurrentDate
    }

    function nc() {
        return vh._cpInfoCurrentMonth
    }

    function oc() {
        return vh._cpInfoCurrentYear
    }

    function pc() {
        return vh._cpInfoCurrentDay
    }

    function qc() {
        return vh._cpInfoCurrentTime
    }

    function rc() {
        return vh._cpInfoCurrentHour
    }

    function sc() {
        return vh._cpInfoCurrentMinutes
    }

    function tc() {
        return vh._cpInfoEpochMS
    }

    function uc() {
        return vh._cpInfoElapsedTimeMS
    }

    function vc() {
        var a = cp.movie.stage.currentSlide;
        return a ? a.st : ""
    }

    function wc() {
        if (!cp.movie) return false;
        if (cp.movie.playbackController) {
            var a = cp.movie.playbackController.GetQuizController();
            if (a) return a.GetIsPassed()
        }
        return false
    }

    function La() {
        return 0
    }

    function xc() {
        return vh._cpInfoPrevFrame
    }

    function la() {
        return vh._cpInfoCurrentFrame
    }

    function L(a, c) {
        var d = la();
        svvi("cpInfoPrevFrame", d, []);
        svvi("cpInfoCurrentFrame", a, ["cpInfoCurrentFrame", "rdinfoCurrentFrame"]);
        c || cp.movie.resetMovieElapsedTime()
    }

    function Ma() {
        return cpInfoCurrentSlide - 1
    }

    function yc() {
        return vh._cpInfoCurrentSlide
    }

    function Na() {
        return cp.movie.stage.slides.length
    }

    function Oa() {
        return cp.movie.fps * cp.movie.speed
    }

    function zc() {
        return vh._cpQuizScopeSlide
    }

    function Pa(a) {
        svvi("cpQuizScopeSlide",
            a, ["cpQuizScopeSlide"])
    }

    function Ac() {
        return vh._cpInQuizScope
    }

    function Bc(a) {
        if (cpInfoHasPlaybar && cp.movie && cp.movie.playbackController) {
            var c = cp.movie.playbackController.GetQuizController();
            c && c.GetHidePlaybarInQuiz() && (cpCmndShowPlaybar = a && !c.GetIsInReviewMode() ? 0 : 1)
        }
        svvi("cpInQuizScope", a, ["cpInQuizScope"])
    }

    function Cc() {
        if (!cp.movie || !cp.movie.playbackController) return 0;
        var a = cp.movie.playbackController.GetQuizController();
        return a ? a.GetPretestScore() : 0
    }

    function Dc() {
        if (!cp.movie || !cp.movie.playbackController) return false;
        return (lQuizController = cp.movie.playbackController.GetQuizController()) ? !!lQuizController
            .GetIsInReviewMode() : false
    }

    function Ec() {
        if (!cp.movie || !cp.movie.playbackController) return 0;
        var a = cp.movie.playbackController.GetQuizController();
        return a ? a.GetMaxPretestScore() : 0
    }

    function Fc() {
        if (!cp.movie || !cp.movie.playbackController) return 0;
        var a = cp.movie.playbackController.GetQuizController();
        if (a) {
            var c = a.GetMaxPretestScore(),
                a = a.GetPretestScore();
            return c == void 0 || c <= 0 || a == void 0 || a <= 0 ? 0 : Math.round(a *
                100 / c)
        }
        return 0
    }

    function Gc(a) {
        if (cp.movie && cp.movie.playbackController) {
            var c = cp.movie.playbackController.GetQuizController();
            c && c.GotoQuizScopeSlide(a)
        }
    }

    function Hc() {
        return vh._cpInfoCourseID
    }

    function Ic() {
        return vh._cpInfoCourseName
    }

    function Jc() {}

    function Kc() {
        return null
    }

    function Lc() {
        eval(
            'function handlePasswordProtected(){if(cp.D.secret){var a=lMainModelData.pwd,b=lMainModelData.pwdRetryMsg,c=function(){var d=document.getElementById("k333"),c=!0;d&&d.value!=a&&(c=!1);if(c)HideEverything();else if(cp.verbose&&cp.log("incorrect pwd"),d=document.getElementById("a5__px"))d.innerHTML=b};cp.passwordDiv.innerHTML="<table id=\'a5__px\' style=\'position:absolute;background-color:#FFFFFF;left:0px;top:0px;width:100%;height:100%\'><tr style=\'width:100%;height:100%;text-align:center;vertical-align:middle\'><td><table style=\'width:100%;text-align:center;vertical-align:middle\'><tr style=\'text-align:center;vertical-align:middle\'><td id=\'a5__px\'>"+lMainModelData.pwdMsg+"</td></tr><tr style=\'text-align:center;vertical-align:middle\'><td><input id=\'k333\' type=\'password\' style=\'width:"+lMainModelData.pwdTxtBoxW+"px;height:"+lMainModelData.pwdTxtBoxH+"px;\'/></td></tr><tr style=\'text-align:center;vertical-align:middle\'><td><button id=\'checkPwdButton\'>Continue</button></td></tr></table></td></tr>";cp.registerGestureEvent(document.getElementById("checkPwdButton"),cp.GESTURE_EVENT_TYPES.TAP,c);document.getElementById(lPwdTxtBoxVarName).onkeyup=function(){c()};ShowEverything()}}function handleExpiry(){if(cp.D.expiryDate){var a=new Date;a.setFullYear(lMainModelData.prjExpY,lMainModelData.prjExpM-1,lMainModelData.prjExpD-1);(new Date).getTime()<=a.getTime()||(a=lMainModelData.prjExpMsg,cp("__z_21").style.visibility="hidden",cp("a5__px").style.visibility="hidden",cp("md5").style.visibility="hidden",cp.expiryDiv.innerHTML="<div id=\'md5\' style=\'width:380px;height:54px;left:"+(cp.D.project.w-380)/2+"px;top:"+(cp.D.project.h-54)/2+"px;position:absolute\'><div id=\'expImg\' style=\'width:100%;height:100%;background-image:url(assets/htmlimages/movieexpire.png);background-repeat:no-repeat;\'></div><div id=\'a5__px\' style=\'color:#ffffff; width:300px;left:65px; position:absolute; height:15px; top:20px; font-size:12px; text-align:left; text-overflow: clip;overflow: hidden\'/>"+a+"</div></div>")}else cp.expiryDiv.style.display="none",cp.expiryDiv.style.visibility="hidden"}function handleAutoplay(){var a=cp.D[cp.movie.main.id].autoplay;document.getElementById("playImage");a?cp.device==cp.DESKTOP?cp("autoplayDiv").style.display="none":(cp.autoplayImage.style.display="none",cp.autoplayImage.style.visibility="hidden"):(cp.movie.autoplayimagew=0,cp.movie.autoplayimageh=0,a=cp.D[cp.movie.main.id].autoplayFileName,void 0!=a?(cp.autoplayImage.src=a,cp.autoplayImage.style.opacity=0.7,cp.movie.autoplayimagew=cp.D[cp.movie.main.id].autoplayimagew,cp.movie.autoplayimageh=cp.D[cp.movie.main.id].autoplayimageh):(cp.autoplayImage.style.display="none",cp.autoplayImage.style.visibility="hidden"));a=function(a){if(!a.target||!(a.target.tagName.toUpperCase()=="INPUT"||a.target.tagName.toUpperCase()=="SELECT"||a.target.tagName.toUpperCase()=="TEXTAREA")){(cp.isTextInputInFocus()||document.activeElement.tagName.toUpperCase()=="SELECT")&&document.activeElement.blur();a.preventDefault()}};if(cp.D[cp.movie.main.id].pprtd){var b=cp.D[cp.movie.main.id],c=b.ps,d=function(a){if(a){cp("project").style.visibility="visible";cp("playbar").style.visibility="visible";cp("toc").style.visibility="visible";cp.pwdv.parentNode.removeChild(cp.pwdv)}else{cp("project").style.visibility="hidden";cp("playbar").style.visibility="hidden";cp("toc").style.visibility="hidden"}},g=function(){var a=document.getElementById("pwdt"),e=true;if(a){a=(new cp.sha1).HashUTF16Str(a.value);if(c.length==a.length)for(var f=0;f<a.length&&e;++f)c[f]!=a[f]&&(e=false);else e=false}if(e){d(true);cp.passwordAccepted=true;window.scrollTo(0,0);cp.complete()}else if(e=document.getElementById("promptMsg"))e.innerHTML=b.prm};cp.pwdv.innerHTML="<table id=\'pwdTable\' style=\'position:absolute;background-color:#FFFFFF;left:0px;top:0px;width:100%;height:100%\'><tr style=\'width:100%;height:100%;text-align:center;vertical-align:middle\'><td><table style=\'width:100%;text-align:center;vertical-align:middle\'><tr style=\'text-align:center;vertical-align:middle\'><td id=\'promptMsg\'>"+b.pm+"</td></tr><tr style=\'text-align:center;vertical-align:middle\'><td><input id=\'pwdt\' type=\'password\' style=\'width:"+b.ptw+"px;height:"+b.pth+"px;\'/></td></tr><tr style=\'text-align:center;vertical-align:middle\'><td><button id=\'checkPwdButton\'>Continue</button></td></tr></table></td></tr>";cp.useg&&Hammer&&Hammer(cp.pwdv,{no_mouseevents:!0,transform_min_scale:1,drag_block_horizontal:!0,drag_block_vertical:!0,drag_min_distance:0});cp.registerGestureEvent(cp.pwdv,"touchstart",a);cp.registerGestureEvent(cp.pwdv,"touchmove",a);cp.registerGestureEvent(cp.pwdv,"touchend",a);cp.registerGestureEvent(cp.pwdv,"touchcancel",a);cp.registerGestureEvent(document.getElementById("checkPwdButton"),cp.GESTURE_EVENT_TYPES.TAP,g);a=document.getElementById("pwdt");a.focus();a.onkeyup=function(a){a.keyCode==13&&g()};d(!1)}else cp.pwdv.style.display="none",cp.pwdv.style.visibility="hidden",cp.passwordAccepted=!0,cp.complete()}function handlePreloader(){var a=cp.D[cp.movie.main.id].preloader,b=cp.D[cp.movie.main.id].preloaderFileName;void 0!=b&&""!=b&&a?(cp.preloaderImage.src=b,-1!=b.indexOf("loading.gif")?cp.preloaderImage.defaultImage=!0:cp("loadingString").style.display="none"):cp.preloaderImage.style.display="none";cp.movie.preloadProjectAssets();cp.isExpired=!0;cp.D[cp.movie.main.id].peon?(a=cp.D[cp.movie.main.id],b=new Date,b.setFullYear(a.pey,a.pem-1,a.ped-1),(new Date).getTime()<=b.getTime()?(cp.exdv&&cp.exdv.parentNode.removeChild(cp.exdv),cp.isExpired=!1):(cp("project").style.visibility="hidden",cp("playbar").style.visibility="hidden",cp("toc").style.visibility="hidden",a="<div id=\'pems\' style=\'width:380px;height:54px;left:0px;top:0px;right:0px;bottom:0px;margin:auto;position:absolute\'><div id=\'pemi\' style=\'width:100%;height:100%;background-image:url(assets/htmlimages/movieexpire.png);background-repeat:no-repeat;\'></div><div id=\'pet\' style=\'color:#ffffff; width:300px;left:65px; position:absolute; height:15px; top:20px; font-size:12px; text-align:left; text-overflow: clip;overflow: hidden\'/>"+a.pems+"</div></div>",cp.exdv.style.backgroundColor=cp.D[cp.movie.element.id].prjBgColor,cp.exdv.innerHTML=a)):(cp.exdv.style.display="none",cp.exdv.style.visibility="hidden",cp.isExpired=!1)}function _handleProjOptions(){handleAutoplay();handlePreloader()};_handleProjOptions();')
    }
    window.getPageX = function(a) {
        var c = 0;
        cp.m_gestureHandler && (c = cp.m_gestureHandler.getEventPageX(a));
        return c
    };
    window.getPageY = function(a) {
        var c = 0;
        cp.m_gestureHandler && (c = cp.m_gestureHandler.getEventPageY(a));
        return c
    };
    cp.inherits = function(a, c) {
        function d() {}
        d.prototype = c.prototype;
        a.prototype = new d;
        a.prototype.constructor = a;
        a.baseConstructor = c;
        a.superClass = c.prototype
    };
    cp.getParameterByName = function(a) {
        a = a.replace(/[\[]/, "\\[")
            .replace(/[\]]/, "\\]");
        a = RegExp("[\\?&]" + a + "=([^&#]*)")
            .exec(window.location.search);
        return a == null ? "" : decodeURIComponent(a[1].replace(/\+/g, " "))
    };
    cp.getCorrectMediaPath = function(a) {
        var c = a;
        cp.pg && (window.device && window.device.platform === "Android") && (c = cp.Phonegap.getResourcePath(
        a));
        return c
    };
    cp.UNKNOWN = 0;
    cp.WINDOWS = 1;
    cp.MACOS = 2;
    cp.DESKTOP = 1;
    cp.IDEVICE = 2;
    cp.ANDROID = 3;
    cp.KINDLE = 4;
    cp.IPAD2 = 1;
    cp.IPAD3 = 2;
    cp.IPHONE = 3;
    cp.IOS1 = 1;
    cp.IOS2 = 2;
    cp.IOS3 = 3;
    cp.IOS4 = 4;
    cp.IOS5 = 5;
    cp.IOS6 = 6;
    cp.IOS7 = 7;
    cp.IOS8 = 8;
    cp.MSIE = 1;
    cp.FIREFOX = 2;
    cp.CHROME = 3;
    cp.SAFARI = 4;
    cp.NETSCAPE = 5;
    cp.OPERA = 6;
    cp.CAMINO = 7;
    cp.FIREBIRD =
        8;
    cp.MSIE_MIN_SUPPORTED_VERSION = 9;
    cp.CHROME_MIN_SUPPORTED_VERSION = 17;
    cp.SAFARI_MIN_SUPPORTED_VERSION = 5.1;
    cp.FF_MIN_SUPPORTED_VERSION_WIN = 35;
    cp.FF_MIN_SUPPORTED_VERSION_MAC = 35;
    cp.FF_MIN_SUPPORTED_VERSION_FFOS = 15;
    cp.FF_MIN_SUPPORTED_VERSION_ANDROID = 39;
    cp.FF_MIN_SUPPORTED_VERSION = void 0;
    cp.HAVE_NOTHING = 0;
    cp.HAVE_METADATA = 1;
    cp.HAVE_CURRENT_DATA = 2;
    cp.HAVE_FUTURE_DATA = 3;
    cp.HAVE_ENOUGH_DATA = 4;
    cp.disablePaceMaker = false;
    cp.verbose = false;
    cp.poolVerbose = false;
    cp.exceptionalLogs = true;
    cp.consolidateLogs = false;
    cp.dynamicLogControl = false;
    cp.projectContainer = null;
    cp.project = null;
    cp.playImage = null;
    cp.autoplayImage = null;
    cp.autoplayDiv = null;
    cp.pwdv = null;
    cp.exdv = null;
    cp.preloaderImage = null;
    cp.log = function(a) {
        cp.customConsole ? cp.customConsole.value = cp.customConsole.value + a : cp.consolidateLogs && cp
            .logArray ? cp.logArray.push(a) : console.log(a)
    };
    cp.logObject = function(a, c) {
        c || (c = "");
        var d = "object " + c + " : {",
            e;
        for (e in a) d = d + (e + ":" + a[e] + "; ");
        cp.log(d + "}")
    };
    cp.verbose && cp.log("navigator.userAgent = " + navigator.userAgent);
    cp.OS = cp.UNKNOWN;
    cp.device = cp.DESKTOP;
    cp.deviceFlavor = cp.UNKNOWN;
    cp.IOSMajor = cp.UNKNOWN;
    cp.IOSMinor = cp.UNKNOWN;
    cp.IOSBuild = cp.UNKNOWN;
    cp.browser = cp.UNKNOWN;
    cp.browserVersion = cp.UNKNOWN;
    cp.browser_supports_svg = true;
    cp.kTextButton = 0;
    cp.kTransparentButton = 2;
    cp.kImageButton = 3;
    cp.kCPRolloverCaptionItem = 25;
    cp.kCPRolloverImageItem = 26;
    cp.kCPOTRolloverAutoShape = 617;
    cp.kCPRolloverAreaItem = 27;
    cp.kCPOTAnimationItem = 28;
    cp.kCPOTCaptionItem = 19;
    cp.kCPHighlight = 14;
    cp.kCPOTImageBoxItem = 15;
    cp.kCPMouse = 12;
    cp.kCPMouseClick =
        15728652;
    cp.kCPOTStageAnswerItem = 80;
    cp.kCPOTIncompleteFeedbackItem = 97;
    cp.kCPZoomSource = 99;
    cp.kCPOTStageCorrectFeedback = 10086;
    cp.kCPOTStageIncorrectFeedback = 10087;
    cp.kCPOTStagePartialCorrectFeedback = 10139;
    cp.kCPOTTimeoutFeedbackItem = 174;
    cp.kCPOTRetryFeedbackItem = 81;
    cp.kCPOTStageSingleChoiceMultipleAnswer = 10082;
    cp.kCPOTStageMultipleChoiceMultipleAnswer = 10081;
    cp.kCPOTStageLikertQuestion = 10112;
    cp.kCPOTStageSequenceAnswer = 10096;
    cp.kCPOTStageMatchingAnswer = 10097;
    cp.kCPOTStageMatchingAnswerEntry = 10098;
    cp.kCPOTStageMatchingQuestion =
        10110;
    cp.kCPOTQuestionColumn = 87;
    cp.kCPOTQuestionFillBlank = 10011;
    cp.kCPOTStageShortAnswer = 10094;
    cp.kCPOTItemHotSpot = 131;
    cp.kCPOTFillBlankCaption = 10106;
    cp.kCPOTReviewArea = 94;
    cp.kCPOTProgressIndicator = 92;
    cp.kCPOTScoringResult = 111;
    cp.kCPOTClickBoxItem = 13;
    cp.kCPOTScorableButtonItem = 177;
    cp.kCPTypingText = 64;
    cp.kCPFullMotion = 270;
    cp.kCPOTFLVItem = 98;
    cp.kCPOTVideo = 365;
    cp.kCPOTVideoResource = 359;
    cp.kCPOTSuccessCaptionItem = 21;
    cp.kCPOTFailureCaptionItem = 22;
    cp.kCPOTHintCaptionItem = 23;
    cp.kCPOTTextEntryBoxItem = 24;
    cp.kCPOTTextEntryButtonItem = 75;
    cp.kCPOTRetakeButton = 175;
    cp.kCPOTLineItem = 142;
    cp.kCPOTOvalItem = 167;
    cp.kCPOTRectangleItem = 168;
    cp.kCPOTPolygon = 209;
    cp.kCPOTAnswerArea = 10142;
    cp.kCPOTMatchingQuestionArea = 10143;
    cp.kCPOTMatchingAnswerArea = 10144;
    cp.kCPOTLikertHeaderArea = 10146;
    cp.kCPOTLikertQuestionArea = 10147;
    cp.kCPOTLikertTotalGroupArea = 10148;
    cp.kCPOTStageQuestionText = 79;
    cp.kCPOTStageQuestionTitle = 86;
    cp.kCPOTTitleAutoShape = 589;
    cp.kCPOTSubTitleAutoShape = 590;
    cp.kCPOTAutoShape = 612;
    cp.kCPOTWidgetItem = 133;
    cp.kCPOTWebObject =
        652;
    cp.kCPOTTAItem = 76;
    cp.kCPOTStageAnswerLabel = 10088;
    cp.kCPOTStageQuestionNextButton = 83;
    cp.kCPOTStageQuestionClearButton = 84;
    cp.kCPOTStageQuestionBackButton = 85;
    cp.kCPOTStageQuestionSubmitButton = 91;
    cp.kCPOTScoringResultItem = 112;
    cp.kCPOTScoringReviewButton = 103;
    cp.kCPOTScoringContinueButton = 10119;
    cp.kCPOTSubmitAllButton = 10149;
    cp.kCPOTResetButton = 640;
    cp.kCPOTUndoButton = 639;
    cp.kCPOTDDSubmitButton = 641;
    cp.kCPOTStageCorrectFeedbackShape = 10166;
    cp.kCPOTStageIncorrectFeedbackShape = 10168;
    cp.kCPOTStagePartialCorrectFeedbackShape =
        10170;
    cp.kCPOTRetryFeedbackShape = 10172;
    cp.kCPOTIncompleteFeedbackShape = 10174;
    cp.kCPOTAnswerFeedbackShape = 10176;
    cp.kCPOTTimeoutFeedbackShape = 10178;
    cp.kCPOTSuccessShapeItem = 661;
    cp.kCPOTFailureShapeItem = 663;
    cp.kCPOTHintShapeItem = 665;
    cp.rCSSProps = ["position", "left", "top", "right", "bottom", "width", "height"];
    cp.rCPProps = ["p", "l", "t", "r", "b", "w", "h", "apr", "cr", "rpmm", "sh"];
    cp.rCPLinkProps = ["lhEID", "lhV", "lhID", "lvEID", "lvV", "lvID"];
    cp.rLinkEdges = ["", "left", "top", "right", "bottom"];
    cp.rLinkEdge = {};
    cp.rLinkEdge.UNKNOWN =
        0;
    cp.rLinkEdge.LEFT = 1;
    cp.rLinkEdge.TOP = 2;
    cp.rLinkEdge.RIGHT = 3;
    cp.rLinkEdge.BOTTOM = 4;
    cp.ReasonForDrawing = {};
    cp.ReasonForDrawing.kRegularDraw = 0;
    cp.ReasonForDrawing.kOrientationChangeOrResize = 1;
    cp.ReasonForDrawing.kTextGrow = 2;
    cp.ReasonForDrawing.kMouseEvent = 3;
    cp.ReasonForDrawing.kMoviePaused = 4;
    cp.ReasonForDrawing.kSlideChanged = 5;
    cp.ReasonForDrawing.kLinkedToItemAppeared = 6;
    cp.TextAlignmentEnum = {};
    cp.TextAlignmentEnum.kTALeftJustify = 0;
    cp.TextAlignmentEnum.kTARightJustify = 1;
    cp.TextAlignmentEnum.kTACenter =
        2;
    cp.TextAlignmentEnum.kTAJustified = 3;
    cp.TextLayoutEnum = {};
    cp.TextLayoutEnum.kTLTop = 0;
    cp.TextLayoutEnum.kTLCenter = 1;
    cp.TextLayoutEnum.kTLBottom = 2;
    cp.ReportingOptionsEnum = {};
    cp.ReportingOptionsEnum.breeze = 0;
    cp.ReportingOptionsEnum.quiz_only = 1;
    cp.ReportingOptionsEnum.quiz_and_views = 2;
    cp.ReportingOptionsEnum.views_only = 3;
    cp.ReportingOptionsEnum.access = 4;
    cp.ReportingOptionsEnum.completion_success = 5;
    cp.ReportingOptionsEnum.incompleteToPassedOrFailed = 6;
    cp.ReportingOptionsEnum.completion_only = 7;
    cp.SlideViewsTypeEnum = {};
    cp.SlideViewsTypeEnum.percent = 0;
    cp.SlideViewsTypeEnum.number = 1;
    cp.QuizCriteriaEnum = {};
    cp.QuizCriteriaEnum.QuizIsPassed = 0;
    cp.QuizCriteriaEnum.QuizIsAttempted = 1;
    cp.QuizCriteriaEnum.QuizIsPassedOrAttempLimitReached = 2;
    cp.kBeginPath = 0;
    cp.kMoveTo = 1;
    cp.kLineTo = 2;
    cp.kBezierTo = 3;
    cp.kClosePath = 4;
    cp.kNotClosed = 5;
    cp.kNoStroke = 6;
    cp.accOutlineStyleStr = "";
    cp.kPPTXSlideImagesStr = "pxi";
    cp.kPPTXSlideImagesDir = "dr/pptxIm/";
    cp.kTTNone = -1;
    cp.kTTOnEnter = 0;
    cp.kTTOnClick = 1;
    cp.kTTOnTextEntry = 2;
    cp.kTTOnRollover = 3;
    cp.kTTOnSuccess =
        4;
    cp.kTTOnFailure = 5;
    cp.kTTOnSlideExit = 6;
    cp.kTTOnHyperlink = 7;
    cp.kTTOnDropOfType = 8;
    cp.QuestionStatusEnum = {};
    cp.QuestionStatusEnum.INCOMPLETE = 0;
    cp.QuestionStatusEnum.INCORRECT = 1;
    cp.QuestionStatusEnum.CORRECT = 2;
    cp.QuestionStatusEnum.PARTIAL_CORRECT = 3;
    cp.lastTouch = (new Date)
        .getTime();
    cp.IsValidObj = function(a) {
        return void 0 != a && null != a
    };
    cp.getCurrentBrowserVersion = function(a, c) {
        var d = a.indexOf(c);
        return d == -1 ? cp.UNKNOWN : parseFloat(a.substring(d + c.length + 1))
    };
    if (navigator.appVersion.indexOf("Win") != -1) cp.OS =
        cp.WINDOWS;
    else if (navigator.appVersion.indexOf("Mac") != -1) cp.OS = cp.MACOS;
    cp.multiAudioTrack = true;
    cp.waitForAudio = false;
    if (navigator.userAgent.match(/(iPhone|iPad)/i)) {
        cp.device = cp.IDEVICE;
        cp.browser_supports_svg = false;
        cp.accOutlineStyleStr = "outline-style:none";
        var Mc = window.devicePixelRatio ? window.devicePixelRatio : 1;
        if (navigator.userAgent.indexOf("iPhone") != -1) cp.deviceFlavor = cp.IPHONE;
        else if (navigator.userAgent.indexOf("iPad") != -1) {
            cp.deviceFlavor = cp.IPAD2;
            if (Mc >= 2) cp.deviceFlavor = cp.IPAD3
        }
        var O =
            navigator.userAgent.match(/OS [1-9][0-9]*_[0-9][0-9]*_[0-9][0-9]*/);
        O || (O = navigator.userAgent.match(/OS [1-9][0-9]*_[0-9][0-9]*/));
        if (O && O[0]) {
            var ja = O[0].split("_");
            cp.IOSMajor = parseInt(ja[0].substr(2), 10);
            cp.IOSMinor = parseInt(ja[1], 10);
            if (ja.length >= 3) cp.IOSBuild = parseInt(ja[2], 10)
        }
        if (cp.IOSMajor >= cp.IOS5) cp.waitForAudio = true
    } else if (navigator.userAgent.match(/android/i)) {
        cp.device = cp.ANDROID;
        cp.waitForAudio = true;
        cp.accOutlineStyleStr = "outline-style:none"
    } else if (navigator.userAgent.match(/Silk/i)) cp.device =
        cp.KINDLE;
    if (navigator.userAgent.match(/MSIE/i)) {
        cp.browser = cp.MSIE;
        cp.browserVersion = cp.getCurrentBrowserVersion(navigator.userAgent, "MSIE") || cp.getCurrentBrowserVersion(
            navigator.appVersion, "MSIE") || cp.UNKNOWN
    } else if (navigator.userAgent.match(/Firefox/i)) {
        cp.accOutlineStyleStr = "outline-style:none";
        cp.browser = cp.FIREFOX;
        if (cp.OS == cp.WINDOWS) cp.FF_MIN_SUPPORTED_VERSION = cp.FF_MIN_SUPPORTED_VERSION_WIN;
        else if (cp.OS == cp.MACOS) cp.FF_MIN_SUPPORTED_VERSION = cp.FF_MIN_SUPPORTED_VERSION_MAC;
        else if (cp.OS ==
            cp.ANDROID) cp.FF_MIN_SUPPORTED_VERSION = cp.FF_MIN_SUPPORTED_VERSION_ANDROID;
        cp.browserVersion = cp.getCurrentBrowserVersion(navigator.userAgent, "Firefox") || cp
            .getCurrentBrowserVersion(navigator.appVersion, "Firefox") || cp.UNKNOWN
    } else if (navigator.userAgent.match(/Chrome/i)) {
        cp.browser = cp.CHROME;
        cp.accOutlineStyleStr = "outline-style:none";
        cp.browserVersion = cp.getCurrentBrowserVersion(navigator.userAgent, "Chrome") || cp
            .getCurrentBrowserVersion(navigator.appVersion, "Chrome") || cp.UNKNOWN
    } else if (navigator.userAgent.match(/Safari/i)) {
        cp.browser =
            cp.SAFARI;
        cp.browser_supports_svg = false;
        cp.accOutlineStyleStr = "outline-style:none";
        cp.browserVersion = cp.getCurrentBrowserVersion(navigator.userAgent, "Version") || cp
            .getCurrentBrowserVersion(navigator.appVersion, "Version") || cp.UNKNOWN
    } else if (navigator.userAgent.match(/Netscape/i)) {
        cp.browser = cp.NETSCAPE;
        cp.browserVersion = cp.getCurrentBrowserVersion(navigator.userAgent, "Netscape") || cp
            .getCurrentBrowserVersion(navigator.appVersion, "Netscape") || cp.UNKNOWN
    } else if (navigator.userAgent.match(/Opera/i)) {
        cp.browser =
            cp.OPERA;
        cp.browserVersion = cp.getCurrentBrowserVersion(navigator.userAgent, "Version") || cp
            .getCurrentBrowserVersion(navigator.appVersion, "Version") || cp.UNKNOWN
    } else if (navigator.userAgent.match(/Camino/i)) {
        cp.browser = cp.CAMINO;
        cp.browserVersion = cp.getCurrentBrowserVersion(navigator.userAgent, "Camino") || cp
            .getCurrentBrowserVersion(navigator.appVersion, "Camino") || cp.UNKNOWN
    } else if (navigator.userAgent.match(/Firebird/i)) cp.browser = cp.FIREBIRD;
    if (cp.verbose) {
        cp.log("browser = " + cp.browser);
        cp.log("browserVersion = " +
            cp.browserVersion);
        cp.log("device = " + cp.device);
        if (cp.device == cp.IDEVICE) {
            cp.log("device flavor = " + cp.deviceFlavor);
            cp.log("IOS Version = " + cp.IOSMajor + "_" + cp.IOSMinor + "_" + cp.IOSBuild)
        }
        cp.log("browser_supports_svg = " + cp.browser_supports_svg)
    }
    cp.showColoredNonModalWarning = function(a) {
        var c = cp.newElem("div");
        c.style.position = "fixed";
        c.style.right = "10px";
        c.style.bottom = "10px";
        c.style.backgroundColor = "#7f7f7f";
        c.style.border = "10px solid #FF0000";
        c.style.padding = "10px";
        c.style.fontSize = "22px";
        c.style.zIndex =
            "10000";
        c.innerHTML = a;
        cp.parentWindow.document.body.appendChild(c);
        setTimeout(function() {
            cp.parentWindow.document.body.removeChild(c)
        }, 1E3)
    };
    cp.getRoundedValue = function(a, c) {
        c == void 0 && (c = 2);
        var d = Math.pow(10, c);
        return a = Math.round(a * d) / d
    };
    cp.getDisplayObjByCP_UID = function(a) {
        return G[cp.cpIDMap[a]]
    };
    cp.getDisplayObjByKey = function(a) {
        return G[a]
    };
    cp.scaleItem = function(a, c, d) {
        cp.applyTransform(a, "scaleX(" + c + ") scaleY(" + d + ")")
    };
    cp.getCorrectBreakpoint = function(a) {
        if (cp.responsiveWidths && !(cp.responsiveWidths.length <=
                0)) {
            var c = cp.responsiveWidths.length;
            if (a <= cp.responsiveWidths[0]) return cp.responsiveWidths[0];
            if (a >= cp.responsiveWidths[cp.responsiveWidths.length - 1]) return cp.responsiveWidths[cp
                .responsiveWidths.length - 1];
            for (var d = 0; d <= c - 1; ++d)
                if (a <= cp.responsiveWidths[d]) return cp.responsiveWidths[d]
        }
    };
    cp.getResponsiveCSS = function(a) {
        if (a && cp.responsiveWidths && !(cp.responsiveWidths.length <= 0)) {
            if (cp.ResponsiveProjWidth) return a[cp.ResponsiveProjWidth];
            var c = cp.responsiveWidths.length,
                d = window.innerWidth;
            if (d <=
                cp.responsiveWidths[0]) return a[cp.responsiveWidths[0]];
            if (d >= cp.responsiveWidths[cp.responsiveWidths.length - 1]) return a[cp.responsiveWidths[cp
                .responsiveWidths.length - 1]];
            for (var e = 0; e <= c - 1; ++e)
                if (d <= cp.responsiveWidths[e]) return a[cp.responsiveWidths[e]]
        }
    };
    cp.getMaxWHBpt = function(a, c) {
        var d = cp("cpTempElemForMaxWidth_123456"),
            e = cp("cpTempInnerElemForMaxWidth_123456");
        if (!d) {
            d = cp.newElem("div");
            d.id = "cpTempElemForMaxWidth_123456";
            d.style.display = "block";
            d.style.zIndex = "-1";
            d.tabIndex = -1;
            document.body.insertBefore(d,
                document.body.firstChild)
        }
        d.style.display = "block";
        d.style.position = "absolute";
        d.style.left = "0px";
        d.style.top = "0px";
        d.style.width = c + "px";
        d.style.height = cp.getCurrentSlideResponsiveHeight(c) + "px";
        if (!e) {
            e = cp.newElem("cpTempInnerElemForMaxWidth_123456");
            e.id = "cpTempInnerElemForMaxWidth_123456";
            d.appendChild(e)
        }
        cp.applyResponsiveStyles(e, a);
        e = {
            w: e.clientWidth,
            h: e.clientHeight
        };
        d.style.display = "none";
        return e
    };
    cp.getAccessibilityString = function(a) {
        if (!a || !a.accstr) return "";
        var c = a.accstr;
        if (c == void 0) return "";
        a = a.traccstr;
        typeof c != "string" && (c = c[cp.ResponsiveProjWidth]);
        a && (c = c + (" " + a));
        return c
    };
    cp.createTempElemAndGetBoundingRect = function(a, c, d) {
        var e = cp.newElem("div");
        c || (c = cp("div_Slide"));
        c.appendChild(e);
        cp.applyResponsiveStyles(e, a, d);
        a = e.getBoundingClientRect();
        c.removeChild(e);
        return a
    };
    cp.createTempTextElemAndGetBoundingRect = function(a, c, d) {
        if (d == "" || d == void 0) d = c.rpvt[cp.ResponsiveProjWidth].vt;
        c = cp("cpTempTextElem_123456");
        if (!c) {
            c = cp.newElem("div");
            c.id = "cpTempTextElem_123456";
            c.style.overflow =
                "hidden";
            c.style["word-wrap"] = "break-word";
            c.style["white-space"] = "pre-wrap";
            c.style["line-height"] = "90%";
            c.style.left = "-1999px";
            c.style.tabIndex = "-1";
            document.body.insertBefore(c, document.body.firstChild)
        }
        c.style.width = "";
        c.style.display = "block";
        c.style.width = a + "px";
        c.setAttribute("aria-hidden", "true");
        c.innerHTML = d;
        c.offsetHeight = c.offsetHeight;
        a = c.getBoundingClientRect();
        c.innerHTML = "";
        c.style.display = "none";
        return a
    };
    cp.getExpectedWindowWidthToFitText = function(a, c, d) {
        var e = d;
        if (a.h.indexOf("%") !=
            -1 || a.h.indexOf("px") != -1) e = a.w.indexOf("%") != -1 ? Math.floor(c * 100 / parseFloat(a.w)) :
            window.innerWidth;
        else if (a.h.indexOf("H%") != -1) {
            a = a.h.split("H%")[0];
            e = Math.floor(d * 100 / parseFloat(a))
        } else if (a.h.indexOf("auto") != -1) {
            parseFloat(a.apr);
            e = a.w.indexOf("%") != -1 ? Math.floor(c * 100 / parseFloat(a.w)) : window.innerWidth
        }
        return e
    };
    cp.getInterpolatedFontSize = function(a, c, d) {
        return window.innerWidth > a.winW ? c : c * d / a.expw
    };
    cp.applyResponsiveStylesWRTItem = function(a, c, d) {
        if (c)
            for (var e = cp.rCSSProps.length, f = 0; f <
                e; ++f) {
                var g = cp.rCPProps[f],
                    k = c[g];
                if (k) {
                    if (g == "h")
                        if (k.indexOf("auto") != -1) {
                            k = c.w;
                            k = k.indexOf("%") != -1 ? parseFloat(k) * d.clientWidth / 100 : parseFloat(k);
                            k = cp.getRoundedValue(k / parseFloat(c.apr)) + "px"
                        } else if (k.indexOf("H%") != -1) {
                        k = k.split("H%")[0];
                        k = cp.getRoundedValue(k * d.clientWidth / 100) + "px"
                    } else {
                        if (k.indexOf("%") != -1) {
                            k = k.split("%")[0];
                            k = cp.getRoundedValue(k * d.clientHeight / 100) + "px"
                        }
                    } else if (g == "w")
                        if (k.indexOf("auto") != -1) {
                            k = c.h;
                            k = k.indexOf("%") != -1 ? parseFloat(k) * d.clientHeight / 100 : parseFloat(k);
                            k = cp.getRoundedValue(k * parseFloat(c.apr)) + "px"
                        } else if (k.indexOf("%") != -1) {
                        k = k.split("%")[0];
                        k = cp.getRoundedValue(k * d.clientWidth / 100) + "px"
                    }
                    var m = d.getBoundingClientRect(),
                        l = cp.movie.stage.mainSlideDiv.getBoundingClientRect();
                    if (k != "auto") {
                        if (g == "t" || g == "b")
                            if (k.indexOf("H%") != -1) {
                                k = k.split("H%")[0];
                                k = cp.getRoundedValue(k * d.clientWidth / 100)
                            } else if (k.indexOf("%") != -1) {
                            k = k.split("%")[0];
                            k = cp.getRoundedValue(k * d.clientHeight / 100)
                        } else k = parseFloat(k);
                        if (g == "l" || g == "r")
                            if (k.indexOf("%") != -1) {
                                k = k.split("%")[0];
                                k = cp.getRoundedValue(k * d.clientWidth / 100)
                            } else k = parseFloat(k);
                        g == "l" && (k = k + m.left + "px");
                        g == "r" && (k = k + l.right - m.right + "px");
                        g == "t" && (k = k + m.top + "px");
                        g == "b" && (k = k + l.bottom - m.bottom + "px")
                    }
                    if (c.rpmm)
                        if (cp.rCSSProps[f] == "width") {
                            m = c.rpmm.mw;
                            l = c.rpmm.Mw;
                            g = k;
                            m.indexOf("%") != -1 && (m = parseFloat(m) * d.clientWidth / 100);
                            l.indexOf("%") != -1 && (l = parseFloat(l) * d.clientWidth / 100);
                            g.indexOf("%") != -1 && (g = parseFloat(g) * d.clientWidth / 100);
                            m = parseFloat(m);
                            l = parseFloat(l);
                            g = parseFloat(g);
                            !isNaN(m) && g < m ? k = k.indexOf("%") !=
                                -1 ? m * 100 / d.clientWidth + "%" : m + "px" : !isNaN(l) && g > l && (k = k
                                    .indexOf("%") != -1 ? l * 100 / d.clientWidth + "%" : l + "px")
                        } else if (cp.rCSSProps[f] == "height") {
                        m = c.rpmm.mh;
                        l = c.rpmm.Mh;
                        g = k;
                        m.indexOf("%") != -1 && (m = parseFloat(m) * d.clientHeight / 100);
                        l.indexOf("%") != -1 && (l = parseFloat(l) * d.clientHeight / 100);
                        g.indexOf("%") != -1 && (g = parseFloat(g) * d.clientHeight / 100);
                        m = parseFloat(m);
                        l = parseFloat(l);
                        g = parseFloat(g);
                        !isNaN(m) && g < m ? k = k.indexOf("%") != -1 ? m * 100 / d.clientHeight + "%" : m +
                            "px" : !isNaN(l) && g > l && (k = k.indexOf("%") != -1 ? l * 100 / d.clientHeight +
                                "%" : l + "px")
                    }
                    a.style[cp.rCSSProps[f]] = k
                }
            }
    };
    cp.resetStyles = function(a) {
        if (a)
            for (var c = cp.rCSSProps.length, d = 0; d < c; ++d) a.style[cp.rCSSProps[d]] = ""
    };
    cp.getMinMaxHeight = function(a) {
        if (cp.responsive) {
            var c = {},
                d = cp("project")
                .clientHeight;
            a.sh && (d = parseFloat(a.sh));
            var e = a.rpmm.mh,
                a = a.rpmm.Mh;
            e.indexOf("%") != -1 && (e = parseFloat(e) * d / 100);
            a.indexOf("%") != -1 && (a = parseFloat(a) * d / 100);
            c.minH = parseFloat(e);
            c.maxH = parseFloat(a);
            return c
        }
    };
    cp.applyResponsiveStyles = function(a, c, d, e, f) {
        if (c) {
            if (!c.ipiv) {
                c.w = "0.000%";
                c.h = "0.000%";
                c.rpmm = {
                    mw: "0px",
                    mh: "0px",
                    Mw: "",
                    Mh: ""
                }
            }
            var e = cp.rCSSProps.length,
                g = false,
                k = g ? cp.RespDefaultBptW : cp("project")
                .clientWidth,
                m = g ? cp.RespDefaultBptH : cp("project")
                .clientHeight;
            if (c.sh) {
                m = parseFloat(c.sh);
                g = true
            }
            var l = cp("div_Slide")
                .getBoundingClientRect(),
                n = false,
                o = false,
                q = void 0,
                p = void 0;
            if (d && (c.lhID || c.lvID)) {
                q = cp.getDisplayObjByCP_UID(c.lhID);
                p = c.lhID == c.lvID ? q : cp.getDisplayObjByCP_UID(c.lvID);
                q && (n = q.isStarted && q.isDrawnComplete);
                p && (o = p.isStarted && p.isDrawnComplete)
            }
            for (d = 0; d < e; ++d) {
                a.style[cp.rCSSProps[d]] =
                    "";
                var u = cp.rCPProps[d],
                    s = c[u];
                if (s) {
                    if (!f)
                        if (u == "h")
                            if (s.indexOf("auto") != -1) {
                                s = c.w;
                                s = s.indexOf("%") != -1 ? parseFloat(s) * k / 100 : parseFloat(s);
                                s = cp.getRoundedValue(s / parseFloat(c.apr)) + "px"
                            } else if (s.indexOf("H%") != -1) {
                        s = s.split("H%")[0];
                        s = cp.getRoundedValue(s * k / 100) + "px"
                    } else {
                        if (g && s.indexOf("%") != -1) {
                            s = s.split("%")[0];
                            s = cp.getRoundedValue(s * m / 100) + "px"
                        }
                    } else if (u == "w")
                        if (s.indexOf("auto") != -1) {
                            s = c.h;
                            s = s.indexOf("%") != -1 ? parseFloat(s) * m / 100 : parseFloat(s);
                            s = cp.getRoundedValue(s * parseFloat(c.apr)) + "px"
                        } else if (g &&
                        s.indexOf("%") != -1) {
                        s = s.split("%")[0];
                        s = cp.getRoundedValue(s * k / 100) + "px"
                    }
                    if (u == "l" || u == "r") {
                        if (g && s.indexOf("%") != -1) {
                            s = s.split("%")[0];
                            s = cp.getRoundedValue(s * k / 100) + "px"
                        }
                        if (s != "auto" && n && c.lhID != -1) {
                            var v = q.actualParent;
                            if (v) {
                                var x = v.getBoundingClientRect();
                                if (v.tr) {
                                    var w = q.actualParent.style.transform || q.actualParent.style
                                        .msTransform || q.actualParent.style.MozTransform || q.actualParent
                                        .style.WebkitTransform || q.actualParent.style.OTransform;
                                    cp.applyTransform(q.actualParent, "");
                                    q.actualParent.offsetHeight =
                                        q.actualParent.offsetHeight;
                                    x = v.getBoundingClientRect();
                                    cp.applyTransform(q.actualParent, w)
                                }
                                if (x) {
                                    s = c.lhV;
                                    if (s.indexOf("%") != -1) {
                                        s = s.split("%")[0];
                                        s = cp.getRoundedValue(s * k / 100) + "px"
                                    }
                                    x = x[cp.rLinkEdges[c.lhEID]];
                                    x = u == "r" ? l.right - x : x - l.left;
                                    s = x + parseFloat(s) + "px"
                                }
                            }
                        }
                    }
                    if (u == "t" || u == "b") {
                        if (s.indexOf("H%") != -1) {
                            s = s.split("H%")[0];
                            s = cp.getRoundedValue(s * k / 100) + "px"
                        } else if (g && s.indexOf("%") != -1) {
                            s = s.split("%")[0];
                            s = cp.getRoundedValue(s * m / 100) + "px"
                        }
                        if (s != "auto" && o && c.lvID != -1)
                            if (v = p.actualParent) {
                                x = v.getBoundingClientRect();
                                if (v.tr) {
                                    w = p.actualParent.style.transform || p.actualParent.style.msTransform || p
                                        .actualParent.style.MozTransform || p.actualParent.style
                                        .WebkitTransform || p.actualParent.style.OTransform;
                                    cp.applyTransform(p.actualParent, "");
                                    p.actualParent.offsetHeight = p.actualParent.offsetHeight;
                                    x = v.getBoundingClientRect();
                                    cp.applyTransform(p.actualParent, w)
                                }
                                if (x) {
                                    s = c.lvV;
                                    if (s.indexOf("H%") != -1) {
                                        s = s.split("H%")[0];
                                        s = cp.getRoundedValue(s * k / 100) + "px"
                                    } else if (s.indexOf("%") != -1) {
                                        s = s.split("%")[0];
                                        s = cp.getRoundedValue(s * m /
                                            100) + "px"
                                    }
                                    x = x[cp.rLinkEdges[c.lvEID]];
                                    x = u == "b" ? l.bottom - x : x - l.top;
                                    s = x + parseFloat(s) + "px"
                                }
                            }
                    }
                    if (c.rpmm)
                        if (cp.rCSSProps[d] == "width") {
                            x = c.rpmm.mw;
                            v = c.rpmm.Mw;
                            u = s;
                            x.indexOf("%") != -1 && (x = parseFloat(x) * k / 100);
                            v.indexOf("%") != -1 && (v = parseFloat(v) * k / 100);
                            u.indexOf("%") != -1 && (u = parseFloat(u) * k / 100);
                            x = parseFloat(x);
                            v = parseFloat(v);
                            u = parseFloat(u);
                            !isNaN(x) && u < x ? s = s.indexOf("%") != -1 ? x * 100 / k + "%" : x + "px" : !
                                isNaN(v) && u > v && (s = s.indexOf("%") != -1 ? v * 100 / k + "%" : v + "px")
                        } else if (cp.rCSSProps[d] == "height") {
                        x = c.rpmm.mh;
                        v = c.rpmm.Mh;
                        u = s;
                        x.indexOf("%") != -1 && (x = parseFloat(x) * m / 100);
                        v.indexOf("%") != -1 && (v = parseFloat(v) * m / 100);
                        u.indexOf("%") != -1 && (u = parseFloat(u) * m / 100);
                        x = parseFloat(x);
                        v = parseFloat(v);
                        u = parseFloat(u);
                        !isNaN(x) && u < x ? s = s.indexOf("%") != -1 ? x * 100 / m + "%" : x + "px" : !isNaN(
                            v) && u > v && (s = s.indexOf("%") != -1 ? v * 100 / m + "%" : v + "px")
                    }
                    a.style[cp.rCSSProps[d]] = s
                }
            }
        }
    };
    cp.createResponsiveStyleObj = function(a, c, d, e, f, g, k, m, l) {
        for (var n = {}, o = 0; o < arguments.length; ++o) a ? a[cp.rCPProps[o]] && (n[cp.rCPProps[o]] =
            arguments[o + 1]) : n[cp.rCPProps[o]] = arguments[o +
            1];
        for (var o = cp.rCPLinkProps.length, q = 0; q < o; ++q) a && a[cp.rCPLinkProps[q]] && (n[cp
            .rCPLinkProps[q]] = a[cp.rCPLinkProps[q]]);
        if (a) n.ipiv = a.ipiv;
        return n
    };
    cp.getCenterForRotation = function(a) {
        var c = {
            x: 0,
            y: 0
        };
        if (!a) return 0;
        var d = cp("div_Slide")
            .getBoundingClientRect(),
            a = a.getBoundingClientRect(),
            e = a.top - d.top + a.height / 2;
        c.X = a.left - d.left + a.width / 2;
        c.Y = e;
        return c
    };
    cp.RotatePoint = function(a, c, d, e, f) {
        var f = f * Math.PI / 180,
            a = a - d,
            g = c - e,
            c = Math.atan2(g, a),
            a = Math.sqrt(a * a + g * g),
            c = c + f,
            f = Math.cos(c) * a,
            a = Math.sin(c) *
            a;
        return {
            x: f + d,
            y: a + e
        }
    };
    cp.getBoundsForRotatedItem = function(a, c, d, e, f) {
        var g = {};
        if (e == void 0) return g;
        var e = Math.PI * -e / 180,
            k = -a / 2,
            m = a / 2,
            l = a / 2,
            a = -a / 2,
            n = -c / 2,
            o = -c / 2,
            q = c / 2,
            p = c / 2,
            c = k * Math.cos(e) + n * Math.sin(e),
            k = -k * Math.sin(e) + n * Math.cos(e),
            n = m * Math.cos(e) + o * Math.sin(e),
            m = -m * Math.sin(e) + o * Math.cos(e),
            o = l * Math.cos(e) + q * Math.sin(e),
            l = -l * Math.sin(e) + q * Math.cos(e),
            q = a * Math.cos(e) + p * Math.sin(e),
            e = -a * Math.sin(e) + p * Math.cos(e),
            a = Math.min(c, n, o, q),
            p = Math.max(c, n, o, q),
            c = Math.min(k, m, l, e);
        y_max = Math.max(k, m, l, e);
        f || (f = 0);
        e = Math.round(100 * (p - a + 2 * f)) / 100;
        f = Math.round(100 * (y_max - c + 2 * f)) / 100;
        c = cp("div_Slide")
            .getBoundingClientRect();
        g.l = Math.round((d.X - e / 2) * 100) / 100 + "px";
        g.r = c.width - Math.round((d.X + e / 2) * 100) / 100 + "px";
        g.t = Math.round((d.Y - f / 2) * 100) / 100 + "px";
        g.b = c.height - Math.round((d.Y + f / 2) * 100) / 100 + "px";
        g.w = e + "px";
        g.h = f + "px";
        return g
    };
    cp.getBoundsForRotatedItem1 = function(a, c, d, e, f, g, k) {
        var m = {};
        if (g == void 0) return m;
        var l = {
                x: a,
                y: c
            },
            n = {
                x: a + d,
                y: c
            },
            d = {
                x: a + d,
                y: c + e
            },
            e = {
                x: a,
                y: c + e
            },
            l = cp.RotatePoint(l.x, l.y, f.X, f.Y, g),
            n = cp.RotatePoint(n.x, n.y, f.X, f.Y, g),
            d = cp.RotatePoint(d.x, d.y, f.X, f.Y, g),
            e = cp.RotatePoint(e.x, e.y, f.X, f.Y, g),
            f = cp("div_Slide")
            .getBoundingClientRect(),
            g = Math.min(l.x, n.x, d.x, e.x),
            a = Math.max(l.x, n.x, d.x, e.x),
            c = Math.min(l.y, n.y, d.y, e.y);
        y_max = Math.max(l.y, n.y, d.y, e.y);
        k || (k = 0);
        d = Math.round(100 * (a - g + 2 * k)) / 100;
        e = Math.round(100 * (y_max - c + 2 * k)) / 100;
        m.l = g + "px";
        m.r = f.width - a + "px";
        m.t = c + "px";
        m.b = f.height - y_max + "px";
        m.w = d + "px";
        m.h = e + "px";
        return m
    };
    cp.isCaptionItem = function(a) {
        return a == cp.kCPOTCaptionItem || a ==
            cp.kCPOTSuccessCaptionItem || a == cp.kCPOTFailureCaptionItem || a == cp.kCPRolloverCaptionItem ||
            a == cp.kCPOTStageCorrectFeedback || a == cp.kCPOTStageIncorrectFeedback || a == cp
            .kCPOTStagePartialCorrectFeedback || a == cp.kCPOTTimeoutFeedbackItem || a == cp
            .kCPOTRetryFeedbackItem || a == cp.kCPOTHintCaptionItem
    };
    cp.isSupportedWebkitBasedBrowser = function() {
        var a = 0,
            c = /( AppleWebKit\/)([^ ]+)/.exec(navigator.userAgent);
        if (!c || c.length < 3) return false;
        var d = c[2],
            e = /[^\\.0-9]/.exec(d);
        e && (d = d.slice(0, e.index));
        c && (a = parseFloat(d));
        cp.verbose && cp.log("Webkit version : " + a);
        return a >= 534
    };
    cp.canUseWebkitAnimations = function() {
        var a = cp.isSupportedWebkitBasedBrowser();
        return !a ? false : a && cp.device == cp.IDEVICE
    };
    cp.getIsBrowserSupported = function() {
        var a = false;
        cp.browser == cp.MSIE && cp.browserVersion >= cp.MSIE_MIN_SUPPORTED_VERSION ? a = true : cp.browser ==
            cp.CHROME && cp.browserVersion >= cp.CHROME_MIN_SUPPORTED_VERSION ? a = true : cp.browser == cp
            .SAFARI && cp.browserVersion >= cp.SAFARI_MIN_SUPPORTED_VERSION ? a = true : cp.browser == cp
            .FIREFOX && cp.browserVersion >=
            cp.FF_MIN_SUPPORTED_VERSION && (a = true);
        return a
    };
    cp.ShowWarning = function(a, c, d, e) {
        var f = cp.D.rtDialog,
            g = f.rtbgfc,
            k = f.rtbgsc,
            m = f.rtbtnfc,
            l = f.rtbtnsc,
            n = f.rtsc,
            o = f.rttc,
            q = f.rttsc,
            p = f.rtfn,
            u = f.rtokb,
            f = f.rtcb,
            s = 1;
        e && ++s;
        e = new cp.RuntimeMessageBox(document.getElementById("cpDocument"), s, g, k, m, l, n, o, q, p);
        e.setTitleText(c);
        e.setMessageText(a);
        e.setFirstButtonText(u);
        e.registerFirstButtonHandler(e.hide);
        e.setSecondButtonText(f);
        d || e.show();
        return e
    };
    cp.alert = function(a, c) {
        c || (c = "Adobe Captivate");
        a || (a = "");
        cp.ShowWarning(a, c)
    };
    window.alert = cp.alert;
    cp.WidgetCallLaterData = function() {
        this.m_Function = void 0;
        this.m_Args = []
    };
    cp.modifyAlternativeAccessibleText = function(a, c) {
        if (c != "" && a && a != "undefined")
            if (cp.SAFARI === cp.browser) a.setAttribute("aria-label", c);
            else {
                if (cp.D.pref.acc === 0 || c === "") c = " ";
                var d = a.firstChild;
                if (d) {
                    if (d.tagName !== "DIV" || d.className != "cp-accessibility") d = d.nextSibling;
                    if (d)
                        if (d = d.firstChild) d.innerHTML = c
                }
            }
    };
    cp.removeAccessibilityOutline = function(a) {
        if (a) {
            switch (cp.browser) {
                case cp.CHROME:
                case cp.SAFARI:
                case cp.FIREFOX:
                    a.style.outlineStyle =
                        "none"
            }
            switch (cp.device) {
                case cp.IDEVICE:
                case cp.ANDROID:
                    a.style.outlineStyle = "none"
            }
        }
    };
    cp.complete = function() {
        if (cp.initiated && (!cp.loadedModules.playbar || cp.PB.playbarCreated))
            if (!cp.loadedModules.toc || cp.toc.tocCreated)
                if (!cp.loadedModules.border || cp.borderCreated) {
                    var a = cp("initialLoading");
                    a && a.parentElement.removeChild(a);
                    cp.unblockFromLMS();
                    if (cp.passwordAccepted) {
                        cp.completed = true;
                        cp.responsive && cp.adjustResponsiveItems(cp.ReasonForDrawing.kRegularDraw);
                        cp.fireModuleReadyEvent(cp.currentWindow);
                        cp.device == cp.DESKTOP && cp.D.project_main.autoplay && (cp.currentWindow
                            .cpAPIInterface && cp.currentWindow.cpAPIInterface.canPlay()) && cp.movie.play()
                    }
                }
    };
    cp.newElem = function(a) {
        a = document.createElement(a);
        cp.shouldScale && cp.fixWebkitScaling(a);
        return a
    };
    cp.fixWebkitScaling = function(a) {
        if (cp.shouldScale && a && a.style) {
            var c = a.style.WebkitTransform;
            c && c.toString()
                .indexOf("translate3d") != -1 || (a.style.WebkitTransform = a.style.WebkitTransform +
                    "translate3d(0px, 0px, 0px)")
        }
    };
    cp.addDCHDiv = function(a, c) {
        var d = document.createElement("div");
        d.style.width = a.style.width;
        d.style.height = a.style.height;
        d.style.display = "block";
        d.style.position = "absolute";
        d.style.left = "0px";
        d.style.top = "0px";
        d.style.backgroundColor = "#ffffff";
        d.style.opacity = 0;
        cp.registerGestureEvent(d, cp.GESTURE_EVENT_TYPES.TAP, c);
        a.appendChild(d);
        return d
    };
    cp.clearCanvasProperly = function(a) {
        a.element.width = a.element.width
    };
    cp.cloneObject = function(a) {
        if (null == a || "object" != typeof a) return a;
        var c = a.constructor(),
            d;
        for (d in a) a.hasOwnProperty(d) && (c[d] = cp.cloneObject(a[d]));
        return c
    };
    cp.enable = function(a) {
        if (a = cp.D[a]) {
            a.enabled = 1;
            if (a.mdi) {
                if (a.type == cp.kCPOTTextEntryBoxItem) {
                    var c = cp(a.mdi);
                    if (c)
                        if ((c = c.firstChild) && (c.tagName == "INPUT" || c.tagName == "TEXTAREA")) c
                            .disabled = false
                }
                if (c = G[a.mdi]) c.enabled = 1;
                a.type == cp.kCPOTAutoShape && a.canvasPainterObject && a.canvasPainterObject.addMouseHandlers()
            }
        }
    };
    cp.markTOCEntryComplete = function(a) {
        (a = cp.D[cp.movie.stage.slides[a]]) && a.tocEntry && a.tocEntry.setVisited()
    };
    cp.animateItem = function(a, c, d, e, f) {
        d = G[e];
        e = cp.D[e];
        if (e != void 0) {
            e.qtp !=
                void 0 && (d = G[e.sn]);
            if (d != void 0) {
                d.m_triggerTimelineIds = e["JSONTT_" + f];
                PPTXLib.processTriggerForObject(d, a + "_" + c)
            }
        }
    };
    cp.disable = function(a) {
        if (a = cp.D[a]) {
            a.enabled = 0;
            if (a.mdi) {
                if (a.type == cp.kCPOTTextEntryBoxItem) {
                    var c = cp(a.mdi);
                    if (c)
                        if ((c = c.firstChild) && (c.tagName == "INPUT" || c.tagName == "TEXTAREA")) c
                            .disabled = true
                }
                if (c = G[a.mdi]) c.enabled = 0;
                a.type == cp.kCPOTAutoShape && a.canvasPainterObject && a.canvasPainterObject
                    .removeMouseHandlers()
            }
        }
    };
    cp.showHint = function(a, c) {
        c.hintFeedback = new cp.Feedback(a, null,
            false, cp.FeedbackType.HINT);
        c.hintFeedback.onRollover()
    };
    cp.hideHint = function(a, c) {
        if (c && c.hintFeedback) c.hintFeedback.onRollout()
    };
    cp.addRewrapObjectAsPerRestOfProjectItem = function(a) {
        if (a) {
            var c = cp.movie.stage.getSlideDiv()
                .firstChild;
            if (c) {
                var d = cp.movie.stage.m_lowestRewrapElementThatIsRestOfProjectAndOnTop;
                d ? c.insertBefore(a, d) : c.appendChild(a)
            }
        }
    };
    cp.addDivObjectAsPerRestOfProjectItem = function(a) {
        if (a) {
            var c = cp.movie.stage.getSlideDiv();
            if (c) {
                var d = cp.movie.stage.m_lowestElementThatIsRestOfProjectAndOnTop;
                d ? c.insertBefore(a, d) : c.appendChild(a)
            }
        }
    };
    cp.moveRewrapElemToTop = function(a) {
        if (a) {
            a.parentNode.removeChild(a);
            cp.addRewrapObjectAsPerRestOfProjectItem(a)
        }
    };
    cp.moveDivElemToTop = function(a) {
        if (a) {
            a.parentNode.removeChild(a);
            cp.addDivObjectAsPerRestOfProjectItem(a)
        }
    };
    cp.redrawVideo = function(a) {
        cp.DESKTOP == cp.device && cp.SAFARI === cp.browser && cp.browserVersion >= 7 && setTimeout(function() {
            a.controls = false
        }, 40)
    };
    cp.redrawItem = function(a) {
        var c = cp(a);
        if (c && !cp("dummyStyle")) {
            var d = c.style.display,
                e = document.createElement("style");
            e.id = "dummyStyle";
            document.body.appendChild(e);
            setTimeout(function() {
                document.body.removeChild(e);
                c.style.display = d
            }, 50)
        }
    };
    cp.contains = function(a, c) {
        typeof a == "string" || a instanceof String || (a = "" + a + "");
        typeof c == "string" || c instanceof String || (c = "" + c + "");
        return a.indexOf(c) != -1
    };
    cp.show = function(a) {
        var c = 0,
            d = [],
            e, f = null;
        d.push(a);
        var g = G[a];
        cp.movie.stage.getChildrenForParent(a, d);
        for (var k = cpInfoCurrentFrame > cp.movie.stage.lastFrame ? cp.movie.stage.lastFrame :
                cpInfoCurrentFrame, m = false, c = 0; c < d.length; ++c) {
            a =
                d[c];
            if (e = cp.D[a]) {
                e.visible = 1;
                if (e.mdi) {
                    if (f = cp.D[e.mdi]) f.visible = 1;
                    if (f = G[e.mdi]) {
                        f.visible = 1;
                        if (f.type == cp.kCPOTVideo && f.nativeVideo) {
                            m = true;
                            f.nativeVideo.style.display = "block"
                        }
                        if (f.element) {
                            var l = f.element.firstElementChild;
                            if (l && l.tagName == "VIDEO") {
                                m = true;
                                f.nativeVideo.style.display = "block";
                                f.seekTo(f.from);
                                if (f.showControls && cp.kCPOTFLVItem == f.type)
                                    if (cp.IDEVICE != cp.device || cp.IOSMajor >= cp.IOS8) {
                                        if (cp.movie.stage.NativeVideoElement) cp.movie.stage.NativeVideoElement
                                            .style.backgroundColor = "#000000";
                                        cp.addVideoSkin(f.actualParent, f, f.autoPlay)
                                    } else f.nativeVideo.controls = true;
                                if (f.autoPlay) f.play();
                                else {
                                    f.nativeVideo.style.position = "static";
                                    f.nativeVideo.style.left = "0px"
                                }
                            }
                        }
                    }
                }
                if (f = cp(a)) {
                    if (m || g && g.isInRange(k)) {
                        f.style.visibility = "visible";
                        f.style.display = "block"
                    }
                    if (e.type == cp.kCPOTWebObject)
                        if (f = f.getElementsByTagName("iframe")[0]) {
                            f.style.visibility = "visible";
                            f.style.display = "block"
                        }
                }
                e.ia && cp.movie.am.showHideObjectAudio(e.ia, true);
                e.iea && cp.movie.am.playPauseEventAudio(e.iea, true)
            } else if ((f =
                    cp(a)) && (m || g && g.isInRange(k))) {
                f.style.visibility = "visible";
                e = a.indexOf("-vtext_Handler");
                if (cp.responsive && e != -1) {
                    e = a.substr(0, e);
                    if ((e = cp.D[e]) && e.hl) {
                        f.style.backgroundColor = "#ffffff";
                        f.style.opacity = 0
                    }
                }
            }
            cp.redrawItem(a)
        }
    };
    cp.hide = function(a) {
        var c = 0,
            d = [],
            e;
        d.push(a);
        cp.movie.stage.getChildrenForParent(a, d);
        for (c = 0; c < d.length; ++c) {
            e = d[c];
            if (a = cp.D[e]) {
                a.visible = 0;
                if (a.mdi) {
                    if (canvasDataItem = cp.D[a.mdi]) canvasDataItem.visible = 0;
                    var f = G[a.mdi];
                    if (f) {
                        f.visible = 0;
                        var g = false;
                        if (f.type == cp.kCPOTVideo) g =
                            true;
                        else if (f.element) {
                            var k = f.element.firstElementChild;
                            k && k.tagName == "VIDEO" && (g = true)
                        }
                        if (g) {
                            if (f.nativeVideo) f.nativeVideo.style.display = "none";
                            f.pause && f.pause()
                        }
                    }
                }
                if (e = cp(e)) {
                    e.style.visibility = "hidden";
                    if (a.type == cp.kCPOTWebObject)
                        if (e = e.getElementsByTagName("iframe")[0]) {
                            e.style.visibility = "hidden";
                            e.style.display = "none"
                        }
                }
                a.ia && cp.movie.am.showHideObjectAudio(a.ia, false);
                a.iea && cp.movie.am.playPauseEventAudio(a.iea, false)
            } else if (e = cp(e)) e.style.visibility = "hidden"
        }
    };
    cp.jumpToPreviousSlide =
        function() {
            var a = cp.movie.stage.previousSlideStartFrame;
            a <= 0 && (a = 1);
            cp.movie.jumpToFrame(a) && cp.movie.play()
        };
    cp.jumpToNextSlide = function() {
        var a = cp.movie.stage.nextSlideStartFrame;
        a != -1 ? cp.movie.jumpToFrame(a) && cp.movie.play() : !cp.movie.virgin && cp.movie.stage.slides
            .length - 1 == cpInfoCurrentSlideIndex && cp.movie.play()
    };
    cp.jumpToLastVisitedSlide = function() {
        cp.movie.jumpToFrame("cpInfoLastVisitedSlide");
        cp.movie.play()
    };
    cp.openURL = function(a, c) {
        var d = a;
        cp.MSIE != cp.browser && (d = encodeURI(a));
        if (cp.m_isPreview) cp.parentWindow.open(d,
            c);
        else {
            var e;
            if (e = cp.IsRunningInACAP)
                if (e = c == "_self" || c == "_parent") {
                    e = d;
                    e = e.search("http:") != -1 || e.search("https:") != -1 || e.search("www.") != -1 ? true :
                        false
                } e ? cp.parentWindow.open(d, "_blank") : cp.currentWindow.open(d, c)
        }
    };
    cp.openMovie = function(a, c) {
        return cp.openURL(a, c)
    };
    cp.sendEmail = function(a) {
        (a = cp.m_isPreview ? cp.parentWindow.open("mailto:" + a, "_blank") : cp.currentWindow.open("mailto:" +
            a, "_blank")) && a.close()
    };
    cp.showMessage = function(a) {
        cp.alert(a)
    };
    cp.runJavascript = function(a, c) {
        cp.verbose && cp.log("runJavascript [" +
            a + "]");
        try {
            var d = window;
            switch (c) {
                case "_self":
                    d = window;
                    break;
                case "_blank":
                    d = window.open("");
                    break;
                case "_parent":
                    d = window.parent;
                    break;
                case "_top":
                    d = window.top
            }
            d.execScript ? d.execScript(a) : d.eval.call(d, a)
        } catch (e) {
            cp.log(e)
        }
    };
    cp.stopMovie = function() {};
    cp.loopMovie = function() {
        cpCmndGotoSlideAndResume = 0
    };
    cp.closeMovie = function() {
        DoCPExit && DoCPExit()
    };
    cp.pauseWidgetAudio = function(a) {
        var c = cp.movie.am;
        if (!c || c.widgetAudios == void 0) return false;
        a = c.widgetAudios[a];
        if (a == void 0) return false;
        a.pause();
        return true
    };
    cp.stopWidgetAudio = function(a) {
        var c = cp.movie.am;
        if (!c || c.widgetAudios == void 0) return false;
        a = c.widgetAudios[a];
        if (a == void 0) return false;
        a.pause();
        try {
            if (a.nativeAudio) a.nativeAudio.currentTime = 0
        } catch (d) {
            cp.verbose && cp.log("Could not stop the audio.");
            return false
        }
        return true
    };
    cp.playWidgetAudio = function(a) {
        var c = cp.movie.am;
        if (!c) return false;
        if (c.widgetAudios == void 0) c.widgetAudios = {};
        var d = c.widgetAudios[a];
        if (d == void 0) {
            d = new cp.AudioObject(c, a, a, -1, -1);
            c.widgetAudios[a] = d
        }
        d.play();
        return true
    };
    cp.playAudio2 = function(a) {
        return cp.playAudio(a, false)
    };
    cp.playAudio = function(a, c) {
        var d = cp.movie.am;
        if (cp.lastMediaPlayReqTime && (new Date)
            .getTime() - cp.lastMediaPlayReqTime.getTime() < 50) {
            d.verbose && cp.log("crowded request postponed " + a);
            setTimeout(function() {
                cp.playAudio(a, c)
            }, 50)
        } else if (!(d.muted || 1 != cp.movie.speed)) {
            d.verbose && cp.log("cp.playAudio " + a + ", " + c);
            if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID)
                if (!cp.multiAudioTrack && (d.audioPlaying || cp.movie.stage.VideoPlaying)) {
                    d.verbose &&
                        cp.log("audioPlaying " + d.audioPlaying + " videoPlaying " + cp.movie.stage
                            .VideoPlaying);
                    return
                } var e = cp.D["PA" + a].src;
            void 0 == c && (c = true);
            d = d.singletonPlayAudio;
            d.pause();
            if (d.nativeAudio != null) {
                d.nativeAudio.cpAudio = null;
                d.nativeAudio = null
            }
            d.onEndAutoPlayMovie = c;
            d.setSrc(e);
            d.resetAndPlay()
        }
    };
    cp.stopAudio = function() {
        cp.movie.am.singletonPlayAudio.pause()
    };
    cp.cv = function(a, c, d, e) {
        return cp.vm.createVariable(a, c, d == 1 ? true : false, e)
    };
    cp.ho = function(a) {
        if (typeof a == "string") {
            var c;
            try {
                isNaN(Number(a)) && (c =
                    window[a])
            } catch (d) {}
            if (void 0 != c) return c;
            try {
                isNaN(Number(a)) || (c = eval(a))
            } catch (e) {}
            if (void 0 != c) {
                if (typeof c == "string") {
                    var f;
                    try {
                        f = eval(c)
                    } catch (g) {}
                    if (void 0 != f) return f
                }
                return c
            }
        }
        return a
    };
    cp.g_clickTimer = 0;
    cp.isClickTimerRunning = function() {
        return 0 != cp.g_clickTimer
    };
    cp.startClickTimer = function(a, c) {
        if (!cp.isClickTimerRunning()) cp.g_clickTimer = setInterval(c, a)
    };
    cp.stopClickTimer = function() {
        if (cp.isClickTimerRunning()) {
            clearInterval(cp.g_clickTimer);
            cp.g_clickTimer = 0
        }
    };
    cp.HandleInteractiveWidget =
        function(a, c) {
            if (void 0 != c) {
                var d = G[c];
                d && d.HandleClickEvent && d.HandleClickEvent(a)
            }
        };
    cp.clickSuccessHandler = function(a) {
        if (a) {
            if (a.cpa == false) a.clickedOnce = true;
            a.ssc && cp.movie.am.pauseCurrentSlideAudioForInteractiveClick();
            var c = a.ca;
            c && cp.movie.am.playPauseEventAudio(c, true);
            var c = a.osct,
                d = a.osc,
                e = a.oca,
                f = null,
                g = true;
            d == void 0 && (g = false);
            d != void 0 && d.length < 2 && (g = false);
            c && g && (f = e);
            var k = a.pfc == 1 && c;
            a.handled && (k = false);
            var m = null;
            g && (m = new cp.Feedback(d, f, k, cp.FeedbackType.SUCCESS, a));
            (!c || !g) &&
            cp.movie.executeAction(e);
            g && m.show();
            return true
        }
        return false
    };
    cp.clickFailureHandler = function(a, c, d) {
        var e = false;
        if (a) {
            if (a.handled && "cpCmndResume = 1;" == a.oca) return true;
            var f = a.ofct,
                e = a.ofc,
                g = a.ofa;
            if (!e || e.length < 2) d = false;
            var k = null;
            f && (c && d) && (k = g);
            var m = null;
            d && (m = new cp.Feedback(e, k, false, cp.FeedbackType.FAILURE, a));
            e = true;
            if ((!f || !d) && c) {
                if (a.cpa == false) a.clickedOnce = true;
                cp.movie.executeAction(g)
            } else e = false;
            d ? m.show() : e = false
        }
        return e
    };
    cp.cbKH = function(a, c, d) {
        if (!a || (!a || !a.enabled ||
                !c || !c.visible) || a.actionInProgress) return false;
        var e, f = 0,
            g = false,
            g = a.currentAttempt;
        g != void 0 && (f = g);
        if (c != void 0) e = c.dn;
        if (d) {
            e && cp.SubmitInteractions(e, cp.QuestionStatusEnum.CORRECT, f);
            g = cp.clickSuccessHandler(a);
            a.handled = true;
            return g
        }
        c = a.ma;
        f = f + 1;
        a.currentAttempt = f;
        d = c != -1 && f == c;
        g = c == -1 || f <= c;
        e && cp.SubmitInteractions(e, cp.QuestionStatusEnum.INCORRECT, f - 1);
        g = cp.clickFailureHandler(a, d, g);
        if (!a.handled) a.handled = c != -1 && f >= c;
        return g
    };
    cp.qbKH = function(a, c, d) {
        if (!a || !c || !a.enabled || !c.visible) return false;
        a = a.qbt;
        if (!a || !d) return false;
        c = c.dn;
        if (!c) return false;
        c = document.getElementById(c);
        if (!c) return false;
        d = false;
        switch (a) {
            case "clear":
                cp.quizClearButtonClickHandler(c);
                d = true;
                break;
            case "back":
                cp.quizBackButtonClickHandler(c);
                d = true;
                break;
            case "skip":
                cp.quizSkipButtonClickHandler(c);
                d = true;
                break;
            case "submit":
                cp.quizSubmitButtonClickHandler(c);
                d = true;
                break;
            case "submitAll":
                cp.quizSubmitAllButtonClickHandler(c);
                d = true;
                break;
            case "continue":
                cp.quizContinueButtonClickHandler(c);
                d = true;
                break;
            case "review":
                cp.quizReviewButtonClickHandler(c);
                d = true;
                break;
            case "retake":
                cp.quizRetakeButtonClickHandler(c);
                d = true
        }
        return d
    };
    cp.isTEBValueCorrect = function(a, c) {
        if (!c.vuin) return true;
        var d = document.getElementById(a + "_inputField");
        if (!d) return false;
        var d = d.value,
            e = c.exp || [],
            f = c.cs,
            g = e.length,
            k = false;
        if (0 == g && "" == d) return true;
        for (var m = 0; m < g && !k; ++m) k = f ? d == e[m] : d.toLowerCase() == e[m].toLowerCase();
        return k
    };
    cp.tebKH = function(a, c, d) {
        var e = false,
            f = 0,
            e = 1E3,
            g = false,
            k;
        if (!a) return false;
        if (c && c.keyHandledOnce) return c.keyHandledOnce = false;
        if (!d || a &&
            a.handled || !a || !a.enabled || !c || !c.visible) return false;
        d = a.currentAttempt;
        d != void 0 && (f = d);
        if (c != void 0) k = c.dn;
        if (e = cp.isTEBValueCorrect(a.id, a)) {
            a.handled = true;
            k && cp.SubmitInteractions(k, cp.QuestionStatusEnum.CORRECT, f);
            return cp.clickSuccessHandler(a)
        }
        e = a.ma;
        f = f + 1;
        a.currentAttempt = f;
        g = e != -1 && f == e;
        c = e == -1 || f <= e;
        if (!a.handled) a.handled = e != -1 && f >= e;
        k && cp.SubmitInteractions(k, cp.QuestionStatusEnum.INCORRECT, f - 1);
        return cp.clickFailureHandler(a, g, c)
    };
    cp.ClickData = function(a, c, d) {
        this.m_obj = a;
        this.m_objc =
            c;
        this.m_htmlElem = d;
        this.m_from = a.from;
        this.m_to = a.to
    };
    cp.ClickData.prototype.isValid = function() {
        return void 0 != this.m_obj && void 0 != this.m_objc && void 0 != this.m_htmlElem && this.m_to >= this
            .m_from
    };
    cp.ClickData.prototype.isClickable = function(a) {
        return !this.m_obj || !this.m_obj.enabled || !this.m_objc || !this.m_objc.visible ? false : this
            .m_from <= a && a <= this.m_to
    };
    cp.preventEventDefault = function(a) {
        if (a) a.preventDefault ? a.preventDefault() : a.returnValue = false
    };
    cp.getHitTestingRect = function(a) {
        var c = {
            minX: 0,
            minY: 0,
            maxX: 0,
            maxY: 0
        };
        if (!a) return c;
        var d = a.getBoundingClientRect(),
            a = cp.getScaledPosition(d.left, d.top),
            d = cp.getScaledPosition(d.right, d.bottom);
        c.minX = a.X;
        c.minY = a.Y;
        c.maxX = d.X;
        c.maxY = d.Y;
        c.width = c.maxX - c.minX;
        c.height = c.maxY - c.minY;
        return c
    };
    cp.IsPointWithElem = function(a, c, d, e, f, g, k) {
        var m = 0,
            l = 0,
            n = 0;
        if (a.rotateAngle) m = a.rotateAngle;
        a = c - (e + g) / 2;
        d = d - (f + k) / 2;
        l = a * Math.cos(Math.PI * -m / 180) - d * Math.sin(Math.PI * -m / 180);
        n = a * Math.sin(Math.PI * -m / 180) + d * Math.cos(Math.PI * -m / 180);
        l = l + (e + g) / 2;
        n = n + (f + k) / 2;
        return l >=
            e && l <= g && n >= f && n <= k ? true : false
    };
    cp.handleDblClick = function(a) {
        var c = null,
            d = null,
            c = null,
            c = cp.getScaledPosition(getPageX(a), getPageY(a)),
            a = c.X,
            e = c.Y,
            f = null,
            g = 0,
            c = cp.movie.stage.getClickManager(),
            d = c.getDoubleClickArr(cpInfoCurrentFrame);
        if (!(null == d || 0 == d.length)) {
            cp.stopClickTimer();
            for (g = 0; g < d.length; ++g)
                if (c = d[g]) {
                    f = c.m_htmlElem;
                    if (!c.m_obj || !c.m_obj.actionInProgress) {
                        var k = cp.getHitTestingRect(f);
                        if (c.m_obj && cp.IsPointWithElem(f, a, e, k.minX, k.minY, k.maxX, k.maxY)) {
                            var a = 0,
                                m, l, e = c.m_obj.currentAttempt;
                            e != void 0 && (a = e);
                            c.m_obj.mdi && (l = cp.D[c.m_obj.mdi]);
                            if (l != void 0) m = l.dn;
                            m && cp.SubmitInteractions(m, cp.QuestionStatusEnum.CORRECT, a);
                            cp.clickSuccessHandler(c.m_obj);
                            c.m_obj.handled = true;
                            return
                        }
                    }
                } if ((c = d[0]) && c.m_obj && !c.m_obj.actionInProgress) {
                a = cp.D[c.m_obj.mdi].visible;
                d = 0;
                e = c.m_obj.currentAttempt;
                e != void 0 && (d = e);
                d = d + 1;
                c.m_obj.currentAttempt = d;
                e = c.m_obj.ma;
                f = e != -1 && d == e && a;
                g = (e == -1 || d <= e) && a;
                c.m_obj.mdi && (l = cp.D[c.m_obj.mdi]);
                if (l != void 0) m = l.dn;
                m && cp.SubmitInteractions(m, cp.QuestionStatusEnum.INCORRECT,
                    d - 1);
                cp.clickFailureHandler(c.m_obj, f, g);
                if (!c.m_obj.handled) c.m_obj.handled = e != -1 && d >= e && a
            }
        }
    };
    cp.handleRightClick = function(a) {
        var c = null,
            d = null,
            c = null,
            c = cp.getScaledPosition(getPageX(a), getPageY(a)),
            e = c.X,
            f = c.Y,
            g = null,
            d = false,
            k = 0,
            c = cp.movie.stage.getClickManager(),
            d = c.getRightClickArr(cpInfoCurrentFrame);
        if (!(null == d || 0 == d.length)) {
            cp.stopClickTimer();
            for (k = 0; k < d.length; ++k)
                if ((c = d[k]) && (!c.m_obj || !c.m_obj.actionInProgress)) {
                    var g = c.m_htmlElem,
                        m = cp.getHitTestingRect(g);
                    if (c.m_obj && cp.IsPointWithElem(g,
                            e, f, m.minX, m.minY, m.maxX, m.maxY)) {
                        var e = 0,
                            l, n, f = c.m_obj.currentAttempt;
                        f != void 0 && (e = f);
                        c.m_obj.mdi && (n = cp.D[c.m_obj.mdi]);
                        if (n != void 0) l = n.dn;
                        l && cp.SubmitInteractions(l, cp.QuestionStatusEnum.CORRECT, e);
                        d = cp.clickSuccessHandler(c.m_obj);
                        c.m_obj.handled = true;
                        d && cp.preventEventDefault(a);
                        return
                    }
                } if ((c = d[0]) && c.m_obj && !c.m_obj.actionInProgress) {
                a = cp.D[c.m_obj.mdi].visible;
                e = 0;
                f = c.m_obj.currentAttempt;
                f != void 0 && (e = f);
                e = e + 1;
                c.m_obj.currentAttempt = e;
                f = c.m_obj.ma;
                d = f != -1 && e == f && a;
                g = (f == -1 || e <= f) && a;
                c.m_obj.mdi &&
                    (n = cp.D[c.m_obj.mdi]);
                if (n != void 0) l = n.dn;
                l && cp.SubmitInteractions(l, cp.QuestionStatusEnum.INCORRECT, e - 1);
                cp.clickFailureHandler(c.m_obj, d, g);
                if (!c.m_obj.handled) c.m_obj.handled = f != -1 && e >= f && a
            }
        }
    };
    cp.handleMouseOut = function() {
        if (cp.device == cp.DESKTOP) {
            var a = cp.movie.stage.getSlideDiv();
            if (a) {
                a.touchstartX = null;
                a.isMoving = false
            }
        }
    };
    cp.handleMouseMove = function(a) {
        a = a.pageX + "," + a.pageY;
        if (cp.LastMousePosition != a) {
            cp.LastMousePosition = a;
            a = document.getElementById("playbar");
            a != void 0 && a.animator && a.animator.showPlaybar(cpInfoCurrentFrame >=
                cp.movie.stage.lastFrame ? true : false)
        }
    };
    cp.handleMouseOver = function() {
        var a = document.getElementById("playbar");
        a != void 0 && a.animator && a.animator.showPlaybar(cpInfoCurrentFrame >= cp.movie.stage.lastFrame ?
            true : false)
    };
    cp.ClickManager = function() {
        this.m_rightClickArr = [];
        this.m_doubleClickArr = []
    };
    cp.ClickManager.prototype.addRightClick = function(a, c, d) {
        a = new cp.ClickData(a, c, d);
        this.m_rightClickArr.push(a)
    };
    cp.ClickManager.prototype.addDoubleClick = function(a, c, d) {
        a = new cp.ClickData(a, c, d);
        this.m_doubleClickArr.push(a)
    };
    cp.ClickManager.prototype.removeRightClick = function(a) {
        for (var c = 0, c = 0; c < this.m_rightClickArr.length; ++c)
            if (this.m_rightClickArr[c].m_obj == a) {
                this.m_rightClickArr.splice(c, 1);
                break
            }
    };
    cp.ClickManager.prototype.removeDoubleClick = function(a) {
        for (var c = 0, c = 0; c < this.m_doubleClickArr.length; ++c)
            if (this.m_doubleClickArr[c].m_obj == a) {
                this.m_doubleClickArr.splice(c, 1);
                break
            }
    };
    cp.ClickManager.prototype.clearClicks = function() {
        this.m_rightClickArr = [];
        this.m_doubleClickArr = []
    };
    cp.ClickManager.prototype.getRightClickArr =
        function(a) {
            for (var c = [], d = 0, d = this.m_rightClickArr.length - 1; d >= 0; --d) this.m_rightClickArr[d]
                .isClickable(a) && c.push(this.m_rightClickArr[d]);
            return c
        };
    cp.ClickManager.prototype.getDoubleClickArr = function(a) {
        for (var c = [], d = 0, d = this.m_doubleClickArr.length - 1; d >= 0; --d) this.m_doubleClickArr[d]
            .isClickable(a) && c.push(this.m_doubleClickArr[d]);
        return c
    };
    cp.Shortcut = function(a, c, d, e) {
        this.m_keyCode = void 0 != a ? a : null;
        this.m_isCtrl = void 0 != c && c ? c : false;
        this.m_isShift = void 0 != d && d ? d : false;
        this.m_isAlt = void 0 !=
            e && e ? e : false
    };
    cp.Shortcut.prototype.isValid = function() {
        return this.m_keyCode != void 0 && this.m_keyCode != null
    };
    cp.Shortcut.prototype.isSame = function(a) {
        return this.m_keyCode == a.m_keyCode && this.m_isCtrl == a.m_isCtrl && this.m_isShift == a.m_isShift &&
            this.m_isAlt == a.m_isAlt
    };
    cp.getShortCutFromKeyEvent = function(a) {
        return new cp.Shortcut(a.keyCode, 1 == a.ctrlKey, 1 == a.shiftKey, 1 == a.altKey)
    };
    cp.KeyHandler = function(a, c, d, e, f) {
        this.m_handler = a;
        this.m_shortcut = null;
        if (c instanceof cp.Shortcut) this.m_shortcut = c;
        this.m_startFrame =
            d;
        this.m_endFrame = e;
        this.m_name = f
    };
    cp.KeyHandler.prototype.isValid = function() {
        return this.m_handler && this.m_shortcut
    };
    cp.SHIFT = 16;
    cp.CONTROL = 17;
    cp.ALT = 18;
    cp.KeyManager = function() {
        this.m_keys = [];
        this.m_shift = this.m_alt = this.m_ctrl = false;
        this.m_keyHandlers = []
    };
    cp.KeyManager.prototype.handleKeyDown = function(a) {
        a: {
            var c = false;
            if (a.keyCode == cp.SHIFT) c = this.m_shift = true;
            else if (a.keyCode == cp.CONTROL) c = this.m_ctrl = true;
            else if (a.keyCode == cp.ALT) c = this.m_alt = true;this.m_shift = 1 == a.shiftKey;this.m_ctrl =
            1 ==
            a.ctrlKey;this.m_alt = 1 == a.altKey;
            if (!c) {
                for (c = 0; c < this.m_keys.length; ++c)
                    if (a.keyCode == this.m_keys[c]) break a;
                this.m_keys.push(a.keyCode)
            }
        }
    };
    cp.KeyManager.prototype.handleKeyUp = function(a) {
        this.check(a);
        a: {
            var c = false;
            if (a.keyCode == cp.SHIFT) {
                this.m_shift = false;
                c = true
            } else if (a.keyCode == cp.CONTROL) {
                this.m_ctrl = false;
                c = true
            } else if (a.keyCode == cp.ALT) {
                this.m_alt = false;
                c = true
            }
            this.m_shift = 1 == a.shiftKey;this.m_ctrl = 1 == a.ctrlKey;this.m_alt = 1 == a.altKey;
            if (!c)
                for (c = 0; c < this.m_keys.length; ++c)
                    if (a.keyCode ==
                        this.m_keys[c]) {
                        this.m_keys.splice(c, 1);
                        break a
                    }
        }
    };
    cp.KeyManager.prototype.handleFocusOut = function() {
        this.m_keys = [];
        this.m_shift = this.m_alt = this.m_ctrl = false
    };
    cp.KeyManager.prototype.check = function(a) {
        var c = null,
            d = cpInfoCurrentFrame,
            e = 0,
            f = false,
            g = null;
        if (this.m_keys.length == 0) return false;
        for (e = 0; e < this.m_keyHandlers.length; ++e) {
            c = this.m_keyHandlers[e];
            if (c.m_startFrame <= d && c.m_endFrame >= d) {
                for (var f = c.m_shortcut, k = false, m = 0; m < this.m_keys.length && !k; ++m) f.m_keyCode ==
                    this.m_keys[m] && (k = true);
                f = k ? this.m_ctrl ==
                    f.m_isCtrl && this.m_shift == f.m_isShift && this.m_alt == f.m_isAlt : false;
                if (f) {
                    g = c;
                    if (c.m_handler(f)) return true;
                    break
                }
            }
        }
        for (e = 0; e < this.m_keyHandlers.length; ++e) {
            c = this.m_keyHandlers[e];
            if (g != c && c.m_shortcut.isValid() != false && c.m_startFrame <= d && c.m_endFrame >= d && c
                .m_handler(false)) return true
        }
        var l;
        if (a.keyCode) l = a.keyCode;
        else if (a.which) l = a.which;
        if (l == 13 || l == 32) {
            var n, g = "";
            if (a.target) n = a.target;
            else if (a.srcElement) n = a.srcElement;
            if (n.nodeType == 3) n = n.parentNode;
            if (n) g = n.id;
            if (g != "")
                for (e = 0; e < this.m_keyHandlers.length; ++e) {
                    c =
                        this.m_keyHandlers[e];
                    if (c.m_name == g && c.m_startFrame <= d && c.m_endFrame >= d && c.m_handler(true))
                    return true
                }
        }
        return false
    };
    cp.KeyManager.prototype.addHandler = function(a) {
        a && a.isValid() && this.m_keyHandlers.push(a)
    };
    cp.KeyManager.prototype.clearHandlers = function() {
        this.m_keyHandlers = []
    };
    cp.getGradientSvgStr = function(a, c, d, e, f) {
        var g = "";
        if (!a.cs || a.cs.length < 2) return "";
        if (0 == a.t) {
            g = "linearGradient";
            if (void 0 == a.x1 || void 0 == a.x2 || void 0 == a.y1 || void 0 == a.y2) return ""
        } else if (1 == a.t) {
            g = "radialGradient";
            if (void 0 ==
                a.cx || void 0 == a.cy || void 0 == a.r) return ""
        } else return "";
        if (e == void 0 || e == 0) e = 1;
        if (f == void 0 || f == 0) f = 1;
        var k = "<" + g + ' id="grad1" gradientUnits="userSpaceOnUse"';
        if (0 == a.t) k = k + (' x1="' + a.x1 * e + '" y1="' + a.y1 * f + '" x2="' + a.x2 * e + '" y2="' + a
            .y2 * f + '"');
        else {
            k = k + (' cx="' + a.cx * e + '" cy="' + a.cy * f + '" r="' + a.r * e + '"');
            void 0 != a.tf && (void 0 != a.tf.x && void 0 != a.tf.y) && (k = k + (
                ' gradientTransform="translate(' + a.tf.x * e + " " + a.tf.y * f + ')"'))
        }
        var m = "pad";
        void 0 != a.s && (1 == a.s ? m = "reflect" : 2 == a.s && (m = "repeat"));
        for (var l = "", n = 0; n <
            a.cs.length; ++n) var o = a.cs[n],
            l = l + ('<stop offset="' + o.p + '%" style="stop-color:' + o.c + ";stop-opacity:" + o.o +
                '" />');
        return '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="' + c * e + '" height="' + d * f +
            '"><defs>' + (k + (' spreadMethod="' + m + '">')) + l + "</" + g + "></defs>" + (
                '<rect x="0" y="0" width="' + c * e + '" height="' + d * f + '" fill="url(#grad1)"/>') +
            "</svg>"
    };
    cp.getGradientFill = function(a, c, d, e) {
        if (!c || !a.cs || a.cs.length < 2) return null;
        d == void 0 && (d = 1);
        e == void 0 && (e = 1);
        var f = null;
        if (0 == a.t) {
            if (void 0 == a.x1 ||
                void 0 == a.x2 || void 0 == a.y1 || void 0 == a.y2) return null;
            f = c.createLinearGradient(a.x1 * d, a.y1 * e, a.x2 * d, a.y2 * e)
        } else if (1 == a.t) {
            if (void 0 == a.cx || void 0 == a.cy || void 0 == a.r) return null;
            var f = a.cx,
                g = a.cy;
            if (void 0 != a.tf && void 0 != a.tf.x && void 0 != a.tf.y) {
                f = f + a.tf.x;
                g = g + a.tf.y
            }
            f = c.createRadialGradient(f * d, g * e, 0, f * d, g * e, a.r * d)
        } else return null;
        for (c = 0; c < a.cs.length; ++c) {
            d = a.cs[c];
            e = cp.getRGBA(d.c, d.o);
            f.addColorStop(d.p / 100, e)
        }
        return f
    };
    cp.drawLineCapStyle = function(a, c, d, e, f, g, k, m, l) {
        if (Math.sqrt((e - c) * (e - c) +
                (f - d) * (f - d)) != 0) switch (m) {
            case 1:
                cp.drawSquareCap(a, c, d, e, f, g, k, l);
                break;
            case 2:
                cp.drawRoundCap(a, c, d, e, f, g, k, l);
                break;
            case 3:
                cp.drawDiamondCap(a, c, d, e, f, g, k, l);
                break;
            case 4:
                cp.drawArrowCap(a, c, d, e, f, g, k, l)
        }
    };
    cp.drawRoundCap = function(a, c, d, e, f, g, k, m) {
        var l = 0,
            n = 0,
            o = 0,
            l = 0,
            l = Math.sin(0.349),
            o = (4 + k / (2 * l)) / 2;
        if (0 == m) {
            l = c;
            n = d
        } else {
            l = e;
            n = f
        }
        a.save();
        a.beginPath();
        a.arc(l, n, o, 0, 2 * Math.PI, false);
        a.closePath();
        a.fillStyle = g;
        a.fill();
        a.restore()
    };
    cp.drawSquareCap = function(a, c, d, e, f, g, k, m) {
        var l = 0,
            n = 0,
            o = 0,
            q = 0,
            p = q = 0,
            u = 0,
            s = l = 0,
            n = 0,
            n = Math.sin(0.349),
            l = (4 + k / (2 * n)) / 2;
        if (0 == m) {
            n = c;
            o = d
        } else {
            n = e;
            o = f
        }
        q = e - c;
        if (q == 0) {
            q = 0;
            u = p = l;
            l = 0
        } else {
            s = (f - d) / q;
            if (s != 0) {
                q = Math.sqrt(l * l / (s * s + 1));
                p = s * q;
                s = -1 / s;
                u = Math.sqrt(l * l / (s * s + 1));
                l = s * u
            } else {
                q = l;
                u = p = 0
            }
        }
        a.save();
        a.beginPath();
        a.moveTo(n - q - u, o - p - l);
        a.lineTo(n + q - u, o + p - l);
        a.lineTo(n + q + u, o + p + l);
        a.lineTo(n - q + u, o - p + l);
        a.lineTo(n - q - u, o - p - l);
        a.closePath();
        a.fillStyle = g;
        a.fill();
        a.restore()
    };
    cp.drawDiamondCap = function(a, c, d, e, f, g, k, m) {
        var l = 0,
            n = 0,
            o = 0,
            q = 0,
            p = q = 0,
            u = 0,
            s = l = 0,
            n = 0,
            n = Math.sin(0.349),
            l = (4 + k / (2 * n)) / 2;
        if (0 == m) {
            n = c;
            o = d
        } else {
            n = e;
            o = f
        }
        q = e - c;
        if (q == 0) {
            q = 0;
            u = p = l;
            l = 0
        } else {
            s = (f - d) / q;
            if (s != 0) {
                q = Math.sqrt(l * l / (s * s + 1));
                p = s * q;
                s = -1 / s;
                u = Math.sqrt(l * l / (s * s + 1));
                l = s * u
            } else {
                q = l;
                u = p = 0
            }
        }
        a.save();
        a.beginPath();
        a.moveTo(n - q, o - p);
        a.lineTo(n - u, o - l);
        a.lineTo(n + q, o + p);
        a.lineTo(n + u, o + l);
        a.lineTo(n - q, o - p);
        a.closePath();
        a.fillStyle = g;
        a.fill();
        a.restore()
    };
    cp.drawArrowCap = function(a, c, d, e, f, g, k, m) {
        var l = 0,
            n = 0,
            o = 0,
            q = 0,
            p = l = q = 0,
            u = 0,
            s = 0,
            v = 0,
            x = u = v = s = 0,
            q = 0,
            q = Math.sqrt((e - c) * (e - c) + (f - d) * (f - d));
        if (q != 0) {
            s = (e - c) / q;
            v =
                (f - d) / q;
            u = Math.cos(0.349);
            x = Math.sin(0.349);
            l = 1;
            k > 1 && (l = Math.sqrt(k));
            var q = k / (2 * x),
                n = 6 * l + q,
                o = 4 + q,
                q = n * (s * u - v * x),
                l = n * (v * u + s * x),
                p = n * (s * u + v * x),
                u = n * (v * u - s * x),
                s = o * s,
                v = o * v,
                w = n = x = o = k = 0,
                y = 0;
            if (0 == m) {
                k = c - s;
                o = d - v;
                x = c + q - s;
                n = d + l - v;
                w = c + p - s;
                y = d + u - v
            } else {
                k = e + s;
                o = f + v;
                x = e - q + s;
                n = f - l + v;
                w = e - p + s;
                y = f - u + v
            }
            a.save();
            a.beginPath();
            a.moveTo(k, o);
            a.lineTo(x, n);
            a.lineTo(w, y);
            a.lineTo(k, o);
            a.closePath();
            a.fillStyle = g;
            a.fill();
            a.restore()
        }
    };
    cp.getPattern = function(a, c, d) {
        var e = [];
        switch (a) {
            case 1:
                e[0] = d * c;
                e[1] = c;
                break;
            case 2:
                e[0] =
                    c;
                e[1] = c;
                break;
            case 3:
                e[0] = d * c;
                e[1] = c;
                e[2] = c;
                e[3] = c;
                break;
            case 4:
                e[0] = d * c;
                e[1] = c;
                e[2] = c;
                e[3] = c;
                e[4] = c;
                e[5] = c;
                break;
            default:
                e[0] = 1E4 * c;
                e[1] = 0
        }
        return e
    };
    cp.dashStruct = function() {
        this.m_drawingDash = true;
        this.m_offset = this.m_patternIndex = 0
    };
    cp.drawDashedLineImpl = function(a, c, d, e, f, g, k) {
        var g = g - e,
            k = k - f,
            m = Math.sqrt(g * g + k * k),
            l = 0,
            n = 0,
            o = 0,
            q = 0,
            p = 0;
        if (0 != m) {
            g = g / m;
            k = k / m;
            l = m;
            n = -d.m_offset;
            m = d.m_drawingDash;
            for (o = d.m_patternIndex; n < l;) {
                n = n + c[o];
                if (n >= l) {
                    d.m_offset = c[o] - (n - l);
                    d.m_patternIndex = o;
                    d.m_drawingDash =
                        m;
                    n = l
                }
                q = e + n * g;
                p = f + n * k;
                m ? a.lineTo(q, p) : a.moveTo(q, p);
                m = !m;
                o = (o + 1) % c.length
            }
        }
    };
    cp.drawDashedLine = function(a, c, d, e, f, g) {
        var g = cp.getPattern(g, 7, 3),
            k = new cp.dashStruct;
        cp.drawDashedLineImpl(a, g, k, c, d, e, f)
    };
    cp.drawDashedCurve = function(a, c, d, e, f, g, k, m, l, n, o, q) {
        var p = n = 0,
            u = o = 0,
            s = u = 0,
            v = 0,
            x = -d.m_offset,
            w = d.m_drawingDash,
            y = d.m_patternIndex,
            B = v = 0,
            z = 0,
            A = s = 0,
            F = p = 0,
            J = 0;
        if (q < 0) {
            q = 0;
            n = e;
            p = f;
            for (v = 1; v < 100; ++v) {
                u = v / 100;
                s = 1 - u;
                o = s * s * n + 2 * u * s * g + u * u * m;
                u = s * s * p + 2 * u * s * k + u * u * l;
                q = q + Math.sqrt((o - n) * (o - n) + (u - p) * (u - p));
                n = o;
                p = u
            }
            if (q <
                0 || q == 0) return
        }
        Math.sqrt((g - e) * (g - e) + (k - f) * (k - f));
        o = e;
        u = f;
        n = g;
        for (p = k; x < q;) {
            x = x + c[y];
            if (x >= q) {
                d.m_offset = c[y] - (x - q);
                d.m_patternIndex = y;
                d.m_drawingDash = w;
                x = q
            }
            F = o;
            J = u;
            v = u - p;
            B = n - o;
            z = o * p - u * n;
            u = x / q;
            u > 1 && (u = 1);
            s = 1 - u;
            n = s * e + u * g;
            p = s * f + u * k;
            o = s * s * e + 2 * u * s * g + u * u * m;
            u = s * s * f + 2 * u * s * k + u * u * l;
            s = u - p;
            A = n - o;
            p = o * p - u * n;
            if (A * v - B * s != 0) {
                n = (B * p - A * z) / (A * v - B * s);
                p = (v * p - s * z) / (B * s - A * v)
            } else {
                n = F;
                p = J
            }
            w ? a.quadraticCurveTo(n, p, o, u) : a.moveTo(o, u);
            w = !w;
            y = (y + 1) % c.length
        }
    };
    cp.drawDashedOval = function(a, c, d, e, f, g) {
        var k = 0,
            m = 0,
            l = 0,
            n = 0,
            o = 0,
            q =
            o = 0,
            p = 0,
            u = 0,
            s = 0,
            v = 0,
            x = 0,
            w = new cp.dashStruct,
            g = cp.getPattern(g, 7, 3);
        f < 0 && (f = e);
        k = Math.PI / 4;
        m = e / Math.cos(k / 2);
        l = f / Math.cos(k / 2);
        a.beginPath();
        n = 0;
        a.moveTo(c + e, d);
        s = c + e;
        v = d;
        for (x = 0; x < 8; ++x) {
            n = n + k;
            o = n - k / 2;
            p = c + Math.cos(o) * m;
            u = d + Math.sin(o) * l;
            o = c + Math.cos(n) * e;
            q = d + Math.sin(n) * f;
            cp.drawDashedCurve(a, g, w, s, v, p, u, o, q, e, f, -1);
            s = o;
            v = q
        }
        a.closePath()
    };
    cp.drawDashedArc = function(a, c, d, e, f, g, k, m, l) {
        var n = 0,
            o = 0,
            q = 0,
            p = 0,
            u = 0,
            s = u = 0,
            v = 0,
            x = 0,
            w = e - g,
            y = f,
            B = 0;
        k < 0 && (k = g);
        n = Math.PI / 4;
        o = g / Math.cos(n / 2);
        q = k / Math.cos(n / 2);
        p = 0;
        a.moveTo(e - g, f);
        for (B = 0; B < 16; ++B) {
            p = p + n;
            u = p - n / 2;
            v = e + Math.cos(u) * o;
            x = f + Math.sin(u) * q;
            u = e + Math.cos(p) * g;
            s = f + Math.sin(p) * k;
            if (p > m && p <= l) {
                cp.drawDashedCurve(a, c, d, w, y, v, x, u, s, g, k, Math.PI * g / 4);
                w = u;
                y = s
            } else if (p <= m) {
                w = u;
                y = s;
                a.moveTo(w, y)
            } else if (p > l) break
        }
    };
    cp.drawDashedRectangle = function(a, c, d, e, f, g, k) {
        var m = new cp.dashStruct,
            k = cp.getPattern(k, 7, 3);
        g <= 0 && (g = 0);
        a.beginPath();
        a.moveTo(c, d + f - g);
        cp.drawDashedLineImpl(a, k, m, c, d + f - g, c, d + g);
        g > 0 && cp.drawDashedArc(a, k, m, c + g, d + g, g, g, Math.PI, 3 * Math.PI / 2);
        cp.drawDashedLineImpl(a,
            k, m, c + g, d, c + e - g, d);
        g > 0 && cp.drawDashedArc(a, k, m, c + e - g, d + g, g, g, 3 * Math.PI / 2, 2 * Math.PI);
        cp.drawDashedLineImpl(a, k, m, c + e, d + g, c + e, d + f - g);
        g > 0 && cp.drawDashedArc(a, k, m, c + e - g, d + f - g, g, g, 2 * Math.PI, 5 * Math.PI / 2);
        cp.drawDashedLineImpl(a, k, m, c + e - g, d + f, c + g, d + f);
        g > 0 && cp.drawDashedArc(a, k, m, c + g, d + f - g, g, g, Math.PI / 2, Math.PI);
        a.closePath()
    };
    cp.drawDashedPolyLine = function(a, c, d, e, f) {
        var g = new cp.dashStruct,
            d = cp.getPattern(d, 7, 3),
            k = 0,
            m = 0,
            l = 0,
            n = 0,
            o = 0;
        if (0 != c.length) {
            k = c[0].x;
            m = c[0].y;
            a.beginPath();
            a.moveTo(k, m);
            for (o = 1; o <
                c.length; ++o) {
                l = c[o].x;
                n = c[o].y;
                cp.drawDashedLineImpl(a, d, g, k * e, m * f, l * e, n * f);
                k = l;
                m = n
            }
            l = c[0].x;
            n = c[0].y;
            cp.drawDashedLineImpl(a, d, g, k * e, m * f, l * e, n * f);
            a.closePath()
        }
    };
    cp.moveTo = function(a, c, d) {
        a.moveTo(c, d)
    };
    cp.lineTo = function(a, c, d) {
        a.lineTo(c, d)
    };
    cp.bezierCurveTo = function(a, c, d, e, f, g, k) {
        a.bezierCurveTo(c, d, e, f, g, k)
    };
    cp.getBezierLength = function(a, c, d, e, f, g, k, m, l) {
        for (var n = 0, o = 0, q = 0, p = 0, u = 0, o = 0, s = a, v = c, n = 1; n < l; ++n) {
            o = n / l;
            q = 1 - o;
            u = q * q * q * a + 3 * o * q * q * d + 3 * o * o * q * f + o * o * o * k;
            o = q * q * q * c + 3 * o * q * q * e + 3 * o * o * q * g + o * o *
                o * m;
            p = p + Math.sqrt((u - s) * (u - s) + (o - v) * (o - v));
            s = u;
            v = o
        }
        return p
    };
    cp.getCPSlideData = function() {
        var a = [],
            c = cp.movie.stage.slides.length;
        for (i = 0; i < c; ++i) {
            var d = cp.D[cp.movie.stage.slides[i]],
                e = {};
            e.slideNumber = i + 1;
            e.title = d.lb;
            e.idealTime = (d.to - d.from + 1) / cpInfoFPS;
            e.isQuestionSlide = false;
            if (cp.movie.playbackController)
                if (d = cp.movie.playbackController.GetQuizController()) {
                    d = d.GetSlideType(i);
                    e.isQuestionSlide = d == "Question" ? true : false
                } e.isEndSlide = false;
            a[i] = e
        }
        e.isEndSlide = true;
        return a
    };
    cp.doesCourseHasQuiz =
        function() {
            return !cp.movie.playbackController ? false : cp.movie.playbackController.HasQuiz()
        };
    cp.drawDashedBezierCurve = function(a, c, d, e, f, g, k, m, l, n, o) {
        var q = 0,
            p = 0,
            u = 0,
            s = 0,
            v = q = 0,
            x = 3,
            v = -d.m_offset,
            w = d.m_drawingDash,
            y = d.m_patternIndex,
            B = 0,
            z = 0,
            A = 0,
            s = 0,
            F = false,
            u = cp.getBezierLength(e, f, g, k, m, l, n, o, 100);
        if (!(u <= 0))
            for (; v < u;) {
                A = v;
                B = c[y];
                if (v + B >= u) {
                    d.m_offset = c[y] - (v + B - u);
                    d.m_patternIndex = y;
                    d.m_drawingDash = w;
                    B = u - v;
                    B > u && (B = u);
                    F = true;
                    if (!w) {
                        a.moveTo(n, o);
                        break
                    }
                } else {
                    if (v < 0) {
                        for (s = v; s < 0;) s = s + B;
                        B = s;
                        v = 0
                    }
                    d.m_offset =
                        0;
                    d.m_patternIndex = 0;
                    d.m_drawingDash = true
                }
                A < 0 && (A = 0);
                if (w && B > 0) {
                    B > u && (B = u);
                    x = B > 3 ? 3 : B;
                    z = B;
                    do {
                        A = z > x ? A + x : A + z;
                        q = A / u;
                        p = 1 - q;
                        if (q >= 1) {
                            s = n;
                            q = o
                        } else {
                            s = p * p * p * e + 3 * q * p * p * g + 3 * q * q * p * m + q * q * q * n;
                            q = p * p * p * f + 3 * q * p * p * k + 3 * q * q * p * l + q * q * q * o
                        }
                        a.lineTo(s, q);
                        z = z - x
                    } while (z > 0);
                    if (F) break
                } else {
                    q = (v + B) / u;
                    p = 1 - q;
                    if (q >= 1) {
                        s = n;
                        q = o
                    } else {
                        s = p * p * p * e + 3 * q * p * p * g + 3 * q * q * p * m + q * q * q * n;
                        q = p * p * p * f + 3 * q * p * p * k + 3 * q * q * p * l + q * q * q * o
                    }
                    a.moveTo(s, q)
                }
                w = !w;
                y = (y + 1) % c.length;
                v < 0 && (v = 0);
                v = v + B
            }
    };
    cp.handleQuizzingItemsInReviewMode = function(a, c, d) {
        if (cp.movie.playbackController) {
            var e =
                cp.movie.playbackController.GetQuizController();
            if (e) {
                var f = c.iqb,
                    e = e.GetIsInReviewMode();
                if (f) switch (c.qbt) {
                    case "submit":
                    case "submitAll":
                    case "clear":
                        if (e == true) {
                            cp.hide(d);
                            a.tabIndex = -1
                        }
                        break;
                    case "postResult":
                        c = cp.movie.playbackController.GetLMSType();
                        if (!cp.movie.playbackController.CanPostResults() || c && c.toUpperCase() ==
                            "INTERNALSERVER") {
                            cp.hide(d);
                            a.tabIndex = -1
                        }
                }
            }
        }
    };
    cp.Canvas = function(a) {
        this.element = a;
        this.gc = a.getContext("2d")
    };
    cp.createCanvas = function(a, c, d, e, f, g, k) {
        f || (f = cp.newElem("canvas"));
        f.width = d;
        f.height = e;
        f.style.width = g == void 0 ? d + "px" : g;
        f.style.height = k == void 0 ? e + "px" : k;
        f.left = a;
        f.top = c;
        f.style.left = a + "px";
        f.style.top = c + "px";
        return new cp.Canvas(f)
    };
    cp.createResponsiveCanvas = function(a, c, d, e, f) {
        e || (e = cp.newElem("canvas"));
        if (a.ipiv) {
            e.width = c;
            e.height = d
        } else {
            e.width = 0;
            e.height = 0
        }
        cp.applyResponsiveStyles(e, a, f, true);
        return new cp.Canvas(e)
    };
    if (typeof PPTXLib == "undefined" || PPTXLib == void 0) {
        cp.dummyPPTXLib = {};
        PPTXLib = cp.dummyPPTXLib;
        PPTXLib.PptxAnimatableDisplayItem = function() {};
        PPTXLib.PptxAnimatableDisplayItem.prototype.updateEffects = function() {};
        PPTXLib.initializeAnimationManagerForCPSlide = function() {};
        PPTXLib.hasAnimationInfo = function() {
            return false
        };
        PPTXLib.updateNoSkipFramesFromEffectData = function() {};
        PPTXLib.updateAnimationManager = function() {};
        PPTXLib.initializePPTXLibrary = function() {};
        PPTXLib.processTriggerForObject = function() {}
    }
    cp.DisplayObject = function(a) {
        var c = cp.D[a.id];
        if (c) {
            this.isCpObject = true;
            c.isCpObject = true
        }
        cp.DisplayObject.baseConstructor.call(this, a.id,
            c);
        this.element = a;
        this.hasEffect = this.getAttribute("JSONEffectData");
        if (cp.responsive) this.isStarted = false
    };
    cp.inherits(cp.DisplayObject, PPTXLib.PptxAnimatableDisplayItem);
    cp.DisplayObject.prototype.updateInputFontStyle = function(a) {
        if (a) {
            this.ResponsiveFontProp = this.getAttribute("rpfont");
            if (this.font = this.ResponsiveFontProp[cp.ResponsiveProjWidth].font) {
                a.style["font-family"] = this.font.n;
                a.style["font-size"] = this.font.s + "px";
                a.style.color = this.font.c;
                this.font.B && (a.style["font-weight"] = "bold");
                this.font.u && (a.style["text-decoration"] = "underline");
                this.font.i && (a.style["font-style"] = "italic")
            }
        }
    };
    cp.DisplayObject.prototype.subscribeToItemDrawingCompleteHandler = function() {
        if (cp.responsive) {
            var a = this,
                c = cp.getResponsiveCSS(a.getAttribute("css"));
            c && (c.lhID && c.lvID && (c.lhID != -1 || c.lvID != -1)) && cp.em.addEventListener(function(c) {
                a.linkedItemDrawingCompleteHandler(c)
            }, cp.ITEMDRAWINGCOMPLETEEVENT)
        }
    };
    cp.DisplayObject.prototype.linkedItemDrawingCompleteHandler = function(a) {
        if (cp.responsive && this.drawForResponsive &&
            this.isStarted) {
            var c = cp.getResponsiveCSS(this.getAttribute("css"));
            if (a.cpData && a.cpData.uid && !(a.cpData.uid != c.lhID && a.cpData.uid != c.lvID)) {
                cp.linksVerbose && cp.log("drawing " + this.element.id + ", for " + a.cpData.uid);
                this.drawForResponsive(true, cp.ReasonForDrawing.kLinkedToItemAppeared);
                Y(this.actualParent.id, true, true)
            }
        }
    };
    cp.DisplayObject.prototype.forEachChild = function(a, c) {
        if (this.children)
            for (var d = this.children, e = d.length, f = 0; f < e; ++f) a(d[f], c)
    };
    cp.DisplayObject.prototype.updateFrame = function() {
        this.updateEffects(this.hasEffect);
        this.forEachChild(function(a) {
            cp.responsive && !a.isDrawn && a.drawIfNeeded ? a.drawIfNeeded() : a.updateFrame()
        })
    };
    cp.DisplayObject.prototype.updateEffects = function(a) {
        cp.DisplayObject.superClass.updateEffects.call(this, a);
        if (this.actualParent && a) {
            var a = cp.D[this.actualParent.id],
                c = a.from;
            if (!a.rp && !a.rpa)
                if (cpInfoCurrentFrame <= c + 2) {
                    cp.verbose && cp.log("hiding " + this.parentDivName);
                    c = this.visible;
                    cp.hide(this.parentDivName);
                    a.hiddenFromFrame = cpInfoCurrentFrame;
                    a.hiddenFromFlicker = true;
                    this.visible = c
                } else if (a.hiddenFromFlicker &&
                this.visible) {
                cp.verbose && cp.log("showing " + this.parentDivName);
                cp.show(this.parentDivName);
                a.hiddenFromFlicker = false
            }
        }
    };
    cp.DisplayObject.prototype.isSizeNPositionUpdated = function(a, c) {
        if (!cp.responsive) return false;
        if (!a || !c) {
            cp.linksVerbose && cp.log("first time initialization. lastSizeNPosition = null");
            return true
        }
        if (a.l != c.l) {
            cp.linksVerbose && cp.log(a.l + "!=" + c.l);
            return true
        }
        if (a.t != c.t) {
            cp.linksVerbose && cp.log(a.t + "!=" + c.t);
            return true
        }
        if (a.r != c.r) {
            cp.linksVerbose && cp.log(a.r + "!=" + c.r);
            return true
        }
        if (a.b !=
            c.b) {
            cp.linksVerbose && cp.log(a.b + "!=" + c.b);
            return true
        }
        if (a.w != c.w) {
            cp.linksVerbose && cp.log(a.w + "!=" + c.w);
            return true
        }
        if (a.h != c.h) {
            cp.linksVerbose && cp.log(a.h + "!=" + c.h);
            return true
        }
        return false
    };
    cp.DisplayObject.prototype.drawComplete = function(a) {
        if (!this.isRegistered) {
            cp.verbose && cp.log("draw completed: " + this.element.id);
            var c = cp.movie.stage.getCurrentSlideInteractionManager();
            c != null && c.registerDisplayObject(this.element.id)
        }
        if (cp.responsive) {
            if (c = cp.D[this.element.id]) {
                var d = cp.D[c.dn],
                    e = true;
                d && d.type == cp.kCPOTStageMatchingAnswerEntry && (e = false);
                if (c && e && c) {
                    c = cp.getAccessibilityString(c);
                    c != void 0 && cp.modifyAlternativeAccessibleText(this.actualParent, c)
                }
            }
            if (a == cp.ReasonForDrawing.kRegularDraw || a == cp.ReasonForDrawing.kOrientationChangeOrResize) {
                cp.linksVerbose && cp.log("subscribeToItemDrawingCompleteHandler : " + this.element.id);
                this.subscribeToItemDrawingCompleteHandler()
            }
            c = this.actualParent.getBoundingClientRect();
            d = cp("div_Slide")
                .getBoundingClientRect();
            c = {
                l: c.left - d.left,
                t: c.top - d.top,
                r: c.right - d.right,
                b: c.bottom - d.bottom,
                w: c.width,
                h: c.height
            };
            if (a == cp.ReasonForDrawing.kMoviePaused && !this.isStarted || a == cp.ReasonForDrawing
                .kRegularDraw || a == cp.ReasonForDrawing.kOrientationChangeOrResize || a == cp.ReasonForDrawing
                .kTextGrow || a == cp.ReasonForDrawing.kLinkedToItemAppeared) {
                a = {
                    uid: this.getAttribute("uid")
                };
                this.isStarted = this.isDrawnComplete = true;
                if (this.isSizeNPositionUpdated(this.lastSizeNPosition, c)) {
                    cp.linksVerbose && cp.log("firing event for : " + this.actualParent.id);
                    this.lastSizeNPosition =
                        c;
                    return cp.em.fireEvent("CPItemDrawingCompleteEvent", a)
                }
            }
            this.lastSizeNPosition = c
        }
    };
    cp.DisplayObject.prototype.setTransformOrigin = function(a) {
        if (a) {
            var c = cp.D[cp.D[a.id].dn],
                d = c.xorig,
                c = c.yorig,
                e = "0px",
                f = "0px";
            if (this.actualParent) {
                parseFloat(this.actualParent.style.left);
                parseFloat(this.actualParent.style.top);
                e = parseFloat(this.actualParent.style.width);
                f = parseFloat(this.actualParent.style.height);
                if (cp.responsive) {
                    e = d * 100 + "%";
                    f = c * 100 + "%"
                } else {
                    e = d * e + "px";
                    f = c * f + "px"
                }
            }
            d = e + " " + f;
            if (a != void 0) {
                a.parentElement.style["-ms-transform-origin"] =
                    d;
                a.parentElement.style["-moz-transform-origin"] = d;
                a.parentElement.style["-webkit-transform-origin"] = d;
                a.parentElement.style["-o-transform-origin"] = d;
                a.parentElement.style["transform-origin"] = d
            }
        }
    };
    cp.DisplayObject.prototype.start = function(a, c) {
        if (!this.effectIsStarted || a) {
            this.updateEffects();
            this.effectIsStarted = true
        }
        this.forEachChild(function(d) {
            d.start(a, c);
            if (cp.responsive) d.isStarted = true
        })
    };
    cp.DisplayObject.prototype.reset = function(a) {
        this.isRegistered = false;
        this.forEachChild(function(c) {
            c.reset(a);
            if (cp.responsive) {
                c.currentCSS = void 0;
                c.isStarted = false
            }
        })
    };
    cp.DisplayObject.prototype.onEndOfMovie = function() {
        this.forEachChild(function(a) {
            a.onEndOfMovie()
        })
    };
    cp.DisplayObject.prototype.getAttribute = function(a) {
        var c = cp.D[this.element.id];
        return !c ? null : c[a]
    };
    cp.DisplayObject.prototype.setAttribute = function(a, c) {
        var d = cp.D[this.element.id];
        d && (d[a] = c)
    };
    cp.DisplayObject.prototype.restOfProjectDoOnNewSlide = function() {};
    cp.DisplayObject.prototype.deleteFromRopMap = function(a) {
        delete cp.ropMap[a.id]
    };
    cp.ResultSlideLabel = function(a, c) {
        cp.ResultSlideLabel.baseConstructor.call(this, a);
        this.id = this.getAttribute("id");
        this.visible = this.getAttribute("visible");
        this.textAlign = this.getAttribute("ta");
        this.bold = this.getAttribute("B");
        this.color = this.getAttribute("c");
        this.font = this.getAttribute("f");
        this.italic = this.getAttribute("i");
        this.size = this.getAttribute("sz");
        this.underline = this.getAttribute("u");
        this.parentDivName = this.getAttribute("dn");
        this.quizParam = this.getAttribute("qp");
        var d = "";
        if (cp.movie.playbackController) {
            var e =
                cp.movie.playbackController.GetQuizController();
            if (e) {
                if (this.quizParam != null) d = e.GetParameterValueByName(this.quizParam);
                else if (cp.movie.playbackController.HasQuiz()) {
                    this.textAlign = "left";
                    d = e.GetIsPassed() ? e.GetPassedScoreFeedback() : e.GetFailedScoreFeedback()
                }
                this.text = d;
                d = this.getAttribute("b");
                this.bounds = {
                    minX: d[0],
                    minY: d[1],
                    maxX: d[2],
                    maxY: d[3]
                };
                this.tr = this.getAttribute("tr");
                this.re = this.getAttribute("re");
                this.sh = this.getAttribute("sh");
                d = this.getAttribute("vb");
                this.vbounds = {
                    minX: d[0],
                    minY: d[1],
                    maxX: d[2],
                    maxY: d[3]
                };
                if (this.element) {
                    this.element.parentElement.drawingBoard = this.element.parentElement;
                    this.element.parentElement.bounds = this.bounds
                }
                this.args = c;
                this.isDrawn = false;
                if (cp.responsive) this.responsiveCSS = this.getAttribute("css")
            }
        }
    };
    cp.inherits(cp.ResultSlideLabel, cp.DisplayObject);
    cp.ResultSlideLabel.prototype.start = function(a, c) {
        this.addIfNeeded(a, c);
        if (!this.effectIsStarted || a) {
            this.updateEffects(this.hasEffect);
            this.effectIsStarted = true
        }
    };
    cp.ResultSlideLabel.prototype.reset = function() {
        delete cp.ropMap[this.element.id];
        this.isDrawn = false;
        this.element.width = "0";
        this.element.height = "0";
        this.element.style.width = "0px";
        this.element.style.height = "0px";
        this.element.left = "0";
        this.element.top = "0";
        this.element.style.left = "0px";
        this.element.style.top = "0px"
    };
    cp.ResultSlideLabel.prototype.drawForResponsive = function(a, c) {
        if (!this.responsiveCSS) return false;
        if (this.isDrawn && !a) return true;
        var d = cp.getResponsiveCSS(this.responsiveCSS),
            e = false,
            e = this.sh && !this.sh.i || this.fillOuterArea,
            f = this.tr != void 0;
        if (this.isDrawn && this.currentCSS ==
            d && !e && !f && (!a || c == cp.ReasonForDrawing.kMoviePaused)) return true;
        this.currentCSS = d;
        e = this.getAttribute("dn");
        if (!this.parentDivName) this.parentDivName = e;
        this.actualParent = cp(this.parentDivName);
        e = cp.D[this.parentDivName];
        f = cp("re-" + this.element.id);
        if (!f) {
            cp.applyResponsiveStyles(this.element.parentElement, d, true);
            this.element.parentNode.removeChild(this.element);
            f = cp.newElem("div");
            f.id = "re-" + this.element.id;
            cp.fixWebkitScaling(f);
            cp.movie.stage.getSlideDiv();
            cp.addRewrapObjectAsPerRestOfProjectItem(f);
            f.setAttribute("class", "cp-rewrap");
            f.appendChild(this.element);
            f.setAttribute("tabIndex", -1);
            this.zIndex = e.zIndex;
            f.style.zIndex = this.zIndex
        }
        cp.applyResponsiveStyles(f, d, true);
        if (!this.isDrawn) {
            this.element.style.left = "0px";
            this.element.style.top = "0px";
            this.element.style.width = "100%";
            this.element.style.position = "absolute";
            if (this.sh) this.element.style.textShadow = this.sh.d * Math.cos(Math.PI * this.sh.a / 180) +
                "px " + this.sh.d * Math.sin(Math.PI * this.sh.a / 180) + "px " + this.sh.b + "px " + cp
                .ConvertRGBToRGBA(this.sh.c,
                    this.sh.o) + (this.sh.i ? " inset" : "");
            if (this.re) f.style.webkitBoxReflect = "below " + this.re.d +
                "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" + (1 - this
                    .re.s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p / 100) + ")))";
            this.actualParentElem = cp(this.parentDivName);
            this.actualParentElem.setAttribute("tabIndex", -1);
            cp.createAlternativeAccessibleText(this.actualParentElem, this.text);
            cp.removeAccessibilityOutline(this.actualParentElem)
        }
        cp.applyResponsiveStyles(this.actualParentElem,
            d, true);
        d = this.getAttribute("rpfont")[cp.ResponsiveProjWidth].font;
        this.element.style.fontWeight = d.B ? "bold" : "normal";
        this.element.style.fontStyle = d.i ? "italic" : "normal";
        this.element.style.textDecoration = d.u ? "underline" : "none";
        this.element.style.color = d.c;
        this.element.style.fontFamily = d.n;
        this.element.style.fontSize = d.s + "px";
        this.element.style.textAlign = this.textAlign;
        this.element.style.verticalAlign = "middle";
        if (this.element.innerHTML == "") this.element.innerHTML = this.element.innerHTML + this.text;
        this.isDrawn =
            true;
        this.drawComplete(c);
        this.visible || cp.hide(this.parentDivName);
        d = this.actualParentElem.clientHeight;
        if (d > 0 && this.element.clientHeight <= d) this.element.style.top = (d - this.element.clientHeight) /
            2 + "px";
        return true
    };
    cp.ResultSlideLabel.prototype.addIfNeeded = function(a, c) {
        if ((!cp.responsive || !this.drawForResponsive(a, c)) && !this.isDrawn) {
            var d = cp.newElem("div");
            d.id = "re-" + this.element.id;
            cp.fixWebkitScaling(d);
            this.element.parentElement.style.position = "absolute";
            this.element.parentElement.style.left =
                this.vbounds.minX + "px";
            this.element.parentElement.style.top = this.vbounds.minY + "px";
            this.element.parentElement.style.width = this.vbounds.maxX - this.vbounds.minX + "px";
            this.element.parentElement.style.height = this.vbounds.maxY - this.vbounds.minY + "px";
            d.style.position = "absolute";
            d.style.left = this.vbounds.minX + "px";
            d.style.top = this.vbounds.minY + "px";
            d.style.width = this.vbounds.maxX - this.vbounds.minX + "px";
            d.style.height = this.vbounds.maxY - this.vbounds.minY + "px";
            this.element.style.left = "0px";
            this.element.style.top =
                "0px";
            this.element.style.width = "100%";
            if (this.sh) this.element.style.textShadow = this.sh.d * Math.cos(Math.PI * this.sh.a / 180) +
                "px " + this.sh.d * Math.sin(Math.PI * this.sh.a / 180) + "px " + this.sh.b + "px " + cp
                .ConvertRGBToRGBA(this.sh.c, this.sh.o) + (this.sh.i ? " inset" : "");
            if (this.re) d.style.webkitBoxReflect = "below " + this.re.d +
                "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" + (1 - this
                    .re.s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p / 100) + ")))";
            this.element.style.position =
                "absolute";
            this.element.style.textAlign = this.textAlign;
            this.element.style.verticalAlign = "middle";
            this.element.style.color = this.color;
            this.element.style.fontFamily = this.font;
            this.element.style.fontSize = this.size + "px";
            this.element.style.fontWeight = this.bold ? "bold" : "normal";
            this.element.style.fontStyle = this.italic ? "italic" : "normal";
            this.element.style.textDecoration = this.underline ? "underline" : "none";
            if (this.element.innerHTML == "") this.element.innerHTML = this.element.innerHTML + this.text;
            this.element.parentNode.removeChild(this.element);
            cp.movie.stage.getSlideDiv();
            cp.addRewrapObjectAsPerRestOfProjectItem(d);
            d.setAttribute("class", "cp-rewrap");
            d.appendChild(this.element);
            d.setAttribute("tabIndex", -1);
            this.zIndex = cp.D[this.parentDivName].zIndex;
            d.style.zIndex = this.zIndex;
            this.actualParentElem = cp(this.parentDivName);
            this.actualParentElem.setAttribute("tabIndex", -1);
            cp.createAlternativeAccessibleText(this.actualParentElem, this.text);
            cp.removeAccessibilityOutline(this.actualParentElem);
            this.isDrawn = true;
            this.visible || cp.hide(this.parentDivName);
            var e = cp.newElem("div");
            e.style.color = this.element.style.color;
            e.style.fontFamily = this.element.style.fontFamily;
            e.style.fontSize = this.element.style.fontSize;
            e.style.fontWeight = this.element.style.fontWeight;
            e.style.fontStyle = this.element.style.fontStyle;
            e.style.textDecoration = this.element.style.textDecoration;
            if (this.sh) e.style.textShadow = this.element.style.textShadow;
            e.style.visibility = "hidden";
            e.innerHTML = this.element.innerHTML;
            document.body.appendChild(e);
            d = e.clientHeight;
            document.body.removeChild(e);
            e = this.vbounds.maxY - this.vbounds.minY;
            if (d > 0 && e > 0 && d <= e) this.element.style.top = (e - d) / 2 + "px"
        }
    };
    cp.HighlightBox = function(a, c) {
        cp.HighlightBox.baseConstructor.call(this, a);
        this.visible = this.getAttribute("visible");
        this.parentDivName = this.getAttribute("dn");
        this.transIn = cp.D[this.parentDivName].trin;
        var d = this.getAttribute("b"),
            e = document.getElementById(this.parentDivName);
        this.actualParent = e;
        this.bounds = {
            minX: d[0],
            minY: d[1],
            maxX: d[2],
            maxY: d[3]
        };
        d = this.getAttribute("vb");
        this.vbounds = {
            minX: d[0],
            minY: d[1],
            maxX: d[2],
            maxY: d[3],
            width: d[2] - d[0],
            height: d[3] - d[1]
        };
        if (e) {
            e.drawingBoard = this.element.parentElement;
            e.bounds = this.bounds;
            e.drawingBoard.bounds = this.vbounds
        }
        this.args = c;
        this.isDrawn = false;
        this.tr = this.getAttribute("tr");
        this.sh = this.getAttribute("sh");
        this.re = this.getAttribute("re");
        this.fillColor = this.getAttribute("fc");
        this.strokeColor = this.getAttribute("sc");
        this.strokeWidth = this.getAttribute("sw");
        this.fillOpacity = this.getAttribute("fo") / 100;
        this.fillOuterArea = this.getAttribute("foa");
        if (cp.responsive) this.responsiveCSS =
            this.getAttribute("css")
    };
    cp.inherits(cp.HighlightBox, cp.DisplayObject);
    cp.HighlightBox.prototype.start = function(a, c) {
        this.drawIfNeeded(a, c);
        if (!this.effectIsStarted || a) {
            this.updateEffects(this.hasEffect);
            this.effectIsStarted = true
        }
    };
    cp.HighlightBox.prototype.reset = function() {
        delete cp.ropMap[this.element.id];
        this.isDrawn = false;
        this.element.width = "0";
        this.element.height = "0";
        this.element.style.width = "0px";
        this.element.style.height = "0px";
        this.element.left = "0";
        this.element.top = "0";
        this.element.style.left =
            "0px";
        this.element.style.top = "0px"
    };
    cp.HighlightBox.prototype.drawForResponsive = function(a, c) {
        if (!this.responsiveCSS) return false;
        if (this.isDrawn && !a) return true;
        var d = cp.getResponsiveCSS(this.responsiveCSS),
            e = false,
            e = this.sh && !this.sh.i || this.fillOuterArea,
            f = this.tr != void 0;
        if (this.isDrawn && this.currentCSS == d && !e && !f && (!a || c == cp.ReasonForDrawing.kMoviePaused))
            return true;
        this.currentCSS = d;
        var g = this.getAttribute("dn");
        if (!this.parentDivName) this.parentDivName = g;
        var k = d,
            g = this.actualParent,
            m = true;
        cp.applyResponsiveStyles(this.actualParent, d, m);
        this.actualParent.offsetHeight = this.actualParent.offsetHeight;
        this.actualParentClientBoundingRect = this.actualParent.getBoundingClientRect();
        var l = 0;
        if (this.tr) {
            l = cp.getAngleFromRotateStr(this.tr);
            m = cp.getCenterForRotation(this.actualParent);
            l = cp.getBoundsForRotatedItem(this.actualParent.clientWidth, this.actualParent.clientHeight, m, l,
                this.strokeWidth);
            m = t = r = b = void 0;
            if (d.l != "auto") m = l.l;
            if (d.t != "auto") t = l.t;
            if (d.r != "auto") r = l.r;
            if (d.b != "auto") b = l.b;
            k =
                cp.createResponsiveStyleObj(d, d.p, m, t, r, b, l.w, l.h, d.crop);
            m = false
        }
        cp.applyResponsiveStyles(this.element.parentElement, k, m);
        m = cp.movie.stage.mainSlideDiv.getBoundingClientRect();
        this.parentElementClientBoundingRect = this.element.parentElement.getBoundingClientRect();
        var l = this.parentElementClientBoundingRect.left - m.left,
            n = this.parentElementClientBoundingRect.top - m.top,
            o = k = 0,
            m = g.clientWidth - this.strokeWidth,
            q = g.clientHeight - this.strokeWidth,
            p = o = 0;
        if (e) {
            o = cp("div_Slide")
                .clientWidth;
            p = cp("div_Slide")
                .clientHeight;
            k = cp.createResponsiveStyleObj(d, void 0, "0px", "0px", "0px", "0px", o + "px", p + "px", void 0)
        } else {
            o = this.element.parentElement.clientWidth;
            p = this.element.parentElement.clientHeight;
            k = cp.createResponsiveStyleObj(d, void 0, "0px", "0px", "0px", "0px", "100%", "100%", void 0)
        }
        d = (this.canvas = cp.createResponsiveCanvas(k, o, p, this.element))
            .gc;
        d.clearRect(0, 0, this.element.getBoundingClientRect()
            .width, this.element.getBoundingClientRect()
            .height);
        cp.DESKTOP == cp.device && cp.MSIE == cp.browser && d.beginPath();
        if (!this.isParentOfTypeSlide &&
            e) {
            this.element.style["margin-left"] = (l < 0 ? 1 : -1) * l + "px";
            this.element.style["margin-top"] = (n < 0 ? 1 : -1) * n + "px"
        }
        if (this.tr) {
            cp.applyTransform(g, this.tr);
            g.tr = this.tr
        }
        if (this.re) this.element.parentElement.style.webkitBoxReflect = "below " + this.re.d +
            "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" + (1 - this.re
                .s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p / 100) + ")))";
        cp.movie.stage.addToParentChildMap(g.id, this.element.id);
        this.element.originalParent = g;
        d.save();
        if (e) {
            d.setTransform(1, 0, 0, 1, l < 0 ? -l : 0, n < 0 ? -n : 0);
            d.translate(l, n)
        } else if (f) {
            d.translate(this.element.parentElement.clientWidth / 2, this.element.parentElement.clientHeight /
            2);
            d.translate(this.strokeWidth / 2, this.strokeWidth / 2)
        }
        d.fillStyle = cp.ConvertColorToRGBA(this.fillColor, this.fillOpacity);
        d.lineWidth = 0;
        if (this.fillOuterArea) {
            d.translate(-l, -n);
            d.fillRect(0, 0, this.element.getBoundingClientRect()
                .width, this.element.getBoundingClientRect()
                .height);
            d.fillStyle = "rgba(0,0,0,0)";
            d.translate(l, n)
        }
        if (this.sh &&
            !this.sh.i) {
            d.shadowOffsetX = this.sh.d * Math.cos(Math.PI * this.sh.a / 180);
            d.shadowOffsetY = this.sh.d * Math.sin(Math.PI * this.sh.a / 180);
            d.shadowBlur = this.sh.b;
            d.shadowColor = cp.ConvertRGBToRGBA(this.sh.c, this.sh.o)
        }
        l = 0;
        this.tr && (l = cp.getAngleFromRotateStr(this.tr));
        e && d.translate(this.element.parentElement.clientWidth / 2, this.element.parentElement.clientHeight /
            2);
        l ? d.rotate(Math.PI * l / 180) : this.sh && d.rotate(Math.PI * 0.02 / 180);
        k = !e && !f ? 0 + this.strokeWidth / 2 : -g.clientWidth / 2;
        o = !e && !f ? 0 + this.strokeWidth / 2 : -g.clientHeight /
            2;
        d.lineWidth = this.strokeWidth;
        d.lineJoin = "miter";
        d.lineCap = "square";
        d.strokeStyle = this.strokeColor;
        d.rect(k, o, m, q);
        this.strokeWidth != 0 && d.stroke();
        d.fill();
        if (this.strokeWidth != 0) {
            d.shadowOffsetX = 0;
            d.shadowOffsetY = 0;
            d.shadowBlur = 0;
            d.shadowColor = "rgba(0,0,0,0)";
            d.stroke()
        }
        this.fillOuterArea && d.clearRect(k + this.strokeWidth / 2, o + this.strokeWidth / 2, m - this
            .strokeWidth, q - this.strokeWidth);
        d.restore();
        this.isDrawn = true;
        this.drawComplete(c);
        if (this.transIn && c == cp.ReasonForDrawing.kRegularDraw) this.element.parentElement.style.opacity =
            0;
        this.visible || cp.hide(this.parentDivName);
        return true
    };
    cp.HighlightBox.prototype.drawIfNeeded = function(a, c) {
        if ((!cp.responsive || !this.drawForResponsive(a, c)) && !this.isDrawn) {
            var d = this.bounds,
                e = this.vbounds,
                f = this.fillColor,
                g = this.strokeColor,
                k = this.strokeWidth,
                m = this.fillOpacity,
                l = this.fillOuterArea,
                n = d.minX,
                o = d.minY,
                q = d.maxX - d.minX,
                p = d.maxY - d.minY,
                u = this.actualParent;
            u.style.left = n + "px";
            u.style.top = o + "px";
            u.style.width = q + "px";
            u.style.height = p + "px";
            var s = n = 0,
                v = d.maxX - d.minX,
                x = d.maxY - d.minY,
                s = false,
                s = this.re || this.sh && !this.sh.i || this.fillOuterArea,
                w = this.tr != void 0,
                n = 0 < e.minX && s ? 0 : e.minX,
                o = 0 < e.minY && s ? 0 : e.minY,
                p = s && cp.D.project.h > e.maxY ? cp.D.project.h : e.maxY,
                q = (s && cp.D.project.w > e.maxX ? cp.D.project.w : e.maxX) - n,
                p = p - o,
                e = this.canvas = cp.createCanvas(0, 0, q, p, this.element);
            if (this.tr) {
                cp.applyTransform(u, this.tr);
                u.tr = this.tr
            }
            this.element.style.display = "block";
            this.element.style.position = "absolute";
            this.element.parentElement.style.left = this.vbounds.minX + "px";
            this.element.parentElement.style.top =
                this.vbounds.minY + "px";
            this.element.parentElement.style.width = this.vbounds.maxX - this.vbounds.minX + "px";
            this.element.parentElement.style.height = this.vbounds.maxY - this.vbounds.minY + "px";
            this.element.style.marginLeft = n - this.vbounds.minX + "px";
            this.element.style.marginTop = o - this.vbounds.minY + "px";
            if (this.re) this.element.parentElement.style.webkitBoxReflect = "below " + this.re.d +
                "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" + (1 - this
                    .re.s / 100) + ", transparent), to(rgba(255, 255, 255, " +
                (1 - this.re.p / 100) + ")))";
            cp.movie.stage.addToParentChildMap(u.id, this.element.id);
            this.element.originalParent = u;
            u = e.gc;
            u.save();
            var y = e = 0;
            if (s) {
                e = n < 0 ? -n : 0;
                y = o < 0 ? -o : 0;
                u.translate(e, y);
                u.setTransform(1, 0, 0, 1, e, y)
            } else w && u.translate(q / 2, p / 2);
            u.fillStyle = cp.ConvertColorToRGBA(f, m);
            u.lineWidth = 0;
            if (l) {
                u.fillRect(0, 0, q, p);
                u.fillStyle = "rgba(0,0,0,0)"
            }
            if (this.sh && !this.sh.i) {
                u.shadowOffsetX = this.sh.d * Math.cos(Math.PI * this.sh.a / 180);
                u.shadowOffsetY = this.sh.d * Math.sin(Math.PI * this.sh.a / 180);
                u.shadowBlur = this.sh.b;
                u.shadowColor = cp.ConvertRGBToRGBA(this.sh.c, this.sh.o)
            }
            f = 0;
            this.tr && (f = cp.getAngleFromRotateStr(this.tr));
            s && u.translate((d.minX + d.maxX) / 2, (d.minY + d.maxY) / 2);
            f ? u.rotate(Math.PI * f / 180) : this.sh && u.rotate(Math.PI * 0.02 / 180);
            n = !s && !w ? 0 + k / 2 : (d.minX - d.maxX) / 2;
            s = !s && !w ? 0 + k / 2 : (d.minY - d.maxY) / 2;
            u.lineWidth = k;
            u.lineJoin = "miter";
            u.lineCap = "square";
            u.strokeStyle = g;
            u.rect(n, s, v, x);
            k != 0 && u.stroke();
            u.fill();
            if (k != 0) {
                u.shadowOffsetX = 0;
                u.shadowOffsetY = 0;
                u.shadowBlur = 0;
                u.shadowColor = "rgba(0,0,0,0)";
                u.stroke()
            }
            l && u.clearRect(n +
                k / 2, s + k / 2, v - k, x - k);
            u.restore();
            this.isDrawn = true;
            this.drawComplete();
            if (this.transIn) this.element.parentElement.style.opacity = 0;
            this.visible || cp.hide(this.parentDivName)
        }
    };
    cp.Zoom = function(a, c) {
        cp.Zoom.baseConstructor.call(this, a);
        this.visible = this.getAttribute("visible");
        this.parentDivName = this.getAttribute("dn");
        var d = cp.D[this.parentDivName];
        this.transIn = d.trin;
        var e = this.getAttribute("b"),
            f = document.getElementById(this.parentDivName);
        this.actualParent = f;
        this.bounds = {
            minX: e[0],
            minY: e[1],
            maxX: e[2],
            maxY: e[3]
        };
        e = this.getAttribute("db");
        this.destbounds = {
            minX: e[0],
            minY: e[1],
            maxX: e[2],
            maxY: e[3]
        };
        this.vbounds = this.bounds;
        if (f) {
            f.drawingBoard = this.element.parentElement;
            f.bounds = this.bounds;
            f.drawingBoard.bounds = this.vbounds
        }
        this.args = c;
        this.isDrawn = false;
        this.tr = this.getAttribute("tr");
        this.fillColor = this.getAttribute("fc");
        this.strokeColor = this.getAttribute("sc");
        this.strokeWidth = this.getAttribute("sw");
        this.fillOpacity = this.getAttribute("fo") / 100;
        this.fillOuterArea = this.getAttribute("foa");
        this.destfillColor =
            this.getAttribute("dfc");
        this.deststrokeColor = this.getAttribute("dsc");
        this.deststrokeWidth = this.getAttribute("dsw");
        this.destfillOpacity = this.getAttribute("dfo") / 100;
        this.zoomfor = this.getAttribute("zf");
        this.from = d.from;
        this.to = d.to;
        this.currImage = this.getAttribute("ip");
        this.prevDrawnFrame = 0;
        if (cp.responsive) {
            this.responsiveCSS = this.getAttribute("css");
            this.destinationResponsiveCSS = this.getAttribute("dcss")
        }
    };
    cp.inherits(cp.Zoom, cp.DisplayObject);
    cp.Zoom.prototype.subscribeToItemDrawingCompleteHandler =
        function(a) {
            if (cp.responsive) {
                cp.Zoom.superClass.subscribeToItemDrawingCompleteHandler.call(this, a);
                var c = this;
                (a = cp.getResponsiveCSS(c.getAttribute("dcss"))) && (a.lhID && a.lvID && (a.lhID != -1 || a.lvID !=
                    -1)) && cp.em.addEventListener(function(a) {
                    c.linkedItemDrawingCompleteHandler(a)
                }, cp.ITEMDRAWINGCOMPLETEEVENT)
            }
        };
    cp.Zoom.prototype.start = function(a, c) {
        this.drawIfNeeded(a, c);
        if (!this.effectIsStarted || a) {
            this.updateEffects(this.hasEffect);
            this.effectIsStarted = true
        }
    };
    cp.Zoom.prototype.updateFrame = function() {
        this.drawIfNeeded()
    };
    cp.Zoom.prototype.reset = function() {
        delete cp.ropMap[this.element.id];
        this.isDrawn = false;
        this.prevDrawnFrame = 0;
        this.element.width = "0";
        this.element.height = "0";
        this.element.style.width = "0px";
        this.element.style.height = "0px";
        this.canvas = null;
        this.element.left = "0";
        this.element.top = "0";
        this.element.style.left = "0px";
        this.element.style.top = "0px"
    };
    cp.Zoom.prototype.drawForResponsive = function(a, c) {
        if (!this.responsiveCSS) return false;
        var d = cpInfoCurrentFrame - this.from + 1;
        if (d > 0 && d <= this.zoomfor) this.isDrawn = false;
        else {
            if (this.isDrawn && !a) return true;
            d = this.zoomfor
        }
        if (this.prevDrawnFrame == d && !a) return true;
        var e = cp.getResponsiveCSS(this.responsiveCSS);
        if (!this.isDrawn || !(this.currentCSS == e && a && c == cp.ReasonForDrawing.kMoviePaused)) {
            var f = this.currentCSS = e;
            cp.applyResponsiveStyles(this.element.parentElement, e, true);
            this.prevDrawnFrame = d;
            var g = this.actualParent;
            cp.applyResponsiveStyles(g, e, true);
            cp.applyResponsiveStyles(this.element.parentElement, f, true);
            var k = cp.movie.stage.mainSlideDiv.getBoundingClientRect();
            this.parentElementClientBoundingRect = this.element.parentElement.getBoundingClientRect();
            this.actualParentClientBoundingRect = g.getBoundingClientRect();
            var m = this.parentElementClientBoundingRect.left - k.left,
                l = this.parentElementClientBoundingRect.top - k.top,
                n = 0,
                o = 0,
                k = g.clientWidth - this.strokeWidth,
                q = g.clientHeight - this.strokeWidth,
                o = cp("div_Slide")
                .getBoundingClientRect(),
                p = o.width,
                u = o.height,
                f = cp.createResponsiveStyleObj(e, void 0, "0px", "0px", "0px", "0px", p + "px", u + "px",
                    void 0),
                f = this.canvas = cp.createResponsiveCanvas(f,
                    p, u, this.element),
                f = f.gc;
            if (!this.isParentOfTypeSlide) {
                this.element.style["margin-left"] = (m < 0 ? 1 : -1) * m + "px";
                this.element.style["margin-top"] = (l < 0 ? 1 : -1) * l + "px"
            }
            cp.movie.stage.addToParentChildMap(g.id, this.element.id);
            this.element.originalParent = g;
            f = this.canvas;
            f = f.gc;
            f.clearRect(0, 0, p, u);
            f.beginPath();
            var s = this.fillColor,
                m = this.strokeColor,
                g = this.strokeWidth,
                l = this.fillOpacity,
                v = this.fillOuterArea,
                x = this.destfillColor,
                w = this.deststrokeColor,
                y = this.deststrokeWidth,
                B = this.destfillOpacity,
                n = this.destinationResponsiveCSS[cp.ResponsiveProjWidth];
            n.ipiv = e.ipiv;
            var n = cp.createTempElemAndGetBoundingRect(n, void 0, true),
                e = n.width,
                z = n.height,
                A = n.left - o.left,
                F = n.top - o.top,
                n = this.actualParentClientBoundingRect.left - o.left,
                o = this.actualParentClientBoundingRect.top - o.top;
            if (v) {
                f.fillStyle = cp.ConvertColorToRGBA(s, l);
                f.lineWidth = 0;
                f.fillRect(0, 0, p, u);
                f.fillStyle = "rgba(0,0,0,0)";
                f.lineWidth = g;
                f.lineJoin = "miter";
                f.lineCap = "square";
                f.strokeStyle = m;
                f.rect(n, o, k, q);
                g != 0 && f.stroke();
                f.clearRect(n + g / 2, o + g / 2, k - g, q - g);
                f.beginPath()
            }
            for (var u = parseInt(s.substr(1,
                        2), 16), p = parseInt(s.substr(3, 2), 16), s = parseInt(s.substr(5, 2), 16), J =
                    parseInt(x.substr(1, 2), 16), v = parseInt(x.substr(3, 2), 16), C = parseInt(x.substr(5, 2),
                        16), x = "#", u = Math.round(u + (J - u) * d / this.zoomfor)
                    .toString(16); u.length < 2;) u = "0" + u;
            x = x + u;
            for (u = Math.round(p + (v - p) * d / this.zoomfor)
                .toString(16); u.length < 2;) u = "0" + u;
            x = x + u;
            for (u = Math.round(s + (C - s) * d / this.zoomfor)
                .toString(16); u.length < 2;) u = "0" + u;
            n = n + (A - n) * d / this.zoomfor;
            o = o + (F - o) * d / this.zoomfor;
            k = k + (e - k) * d / this.zoomfor;
            q = q + (z - q) * d / this.zoomfor;
            f.fillStyle = cp.ConvertColorToRGBA(x +
                u, l + (B - l) * d / this.zoomfor);
            g = g + (y - g) * d / this.zoomfor;
            f.lineWidth = g;
            f.lineJoin = "miter";
            f.lineCap = "square";
            u = parseInt(m.substr(1, 2), 16);
            p = parseInt(m.substr(3, 2), 16);
            s = parseInt(m.substr(5, 2), 16);
            J = parseInt(w.substr(1, 2), 16);
            v = parseInt(w.substr(3, 2), 16);
            C = parseInt(w.substr(5, 2), 16);
            x = "#";
            for (u = Math.round(u + (J - u) * d / this.zoomfor)
                .toString(16); u.length < 2;) u = "0" + u;
            x = x + u;
            for (u = Math.round(p + (v - p) * d / this.zoomfor)
                .toString(16); u.length < 2;) u = "0" + u;
            x = x + u;
            for (u = Math.round(s + (C - s) * d / this.zoomfor)
                .toString(16); u.length <
                2;) u = "0" + u;
            x = x + u;
            this.currImage = this.getAttribute("ip");
            if (typeof this.currImage === "object") this.currImage = this.currImage[cp.ResponsiveProjWidth];
            (m = cp.movie.im.images[this.currImage]) && m.nativeImage.complete && f.drawImage(m.nativeImage, n,
                o, k, q);
            f.strokeStyle = x;
            f.rect(n, o, k, q);
            f.fill();
            g != 0 && f.stroke();
            if (d == this.zoomfor) this.isDrawn = true;
            if (this.transIn && d == 1 && c == cp.ReasonForDrawing.kRegularDraw) this.element.parentElement
                .style.opacity = 0;
            this.visible || cp.hide(this.parentDivName);
            return true
        }
    };
    cp.Zoom.prototype.drawIfNeeded =
        function(a, c) {
            if (!cp.responsive || !this.drawForResponsive(a, c)) {
                var d = cpInfoCurrentFrame - this.from + 1;
                if (d > 0 && d <= this.zoomfor) this.isDrawn = false;
                else {
                    if (this.isDrawn) return;
                    d = this.zoomfor
                }
                if (this.prevDrawnFrame != d) {
                    this.prevDrawnFrame = d;
                    var e = this.bounds,
                        f = this.destbounds,
                        g = this.fillColor,
                        k = this.strokeColor,
                        m = this.strokeWidth,
                        l = this.fillOpacity,
                        n = this.fillOuterArea,
                        o = this.destfillColor,
                        q = this.deststrokeColor,
                        p = this.deststrokeWidth,
                        u = this.destfillOpacity,
                        s = e.maxX - e.minX,
                        v = e.maxY - e.minY,
                        x = 0,
                        w = 0,
                        y = f.maxX -
                        f.minX,
                        B = f.maxY - f.minY,
                        z = f.minX,
                        f = f.minY,
                        x = this.actualParent;
                    if (!this.canvas) {
                        var w = e.minY,
                            A = e.maxX - e.minX,
                            F = e.maxY - e.minY;
                        x.style.left = e.minX + "px";
                        x.style.top = w + "px";
                        x.style.width = A + "px";
                        x.style.height = F + "px";
                        A = cp.D.project.w;
                        F = cp.D.project.h;
                        this.canvas = cp.createCanvas(0, 0, A, F, this.element);
                        this.element.style.display = "block";
                        this.element.style.position = "absolute";
                        this.element.parentElement.style.left = this.vbounds.minX + "px";
                        this.element.parentElement.style.top = this.vbounds.minY + "px";
                        this.element.parentElement.style.width =
                            this.vbounds.maxX - this.vbounds.minX + "px";
                        this.element.parentElement.style.height = this.vbounds.maxY - this.vbounds.minY + "px";
                        this.element.style.marginLeft = -this.vbounds.minX + "px";
                        this.element.style.marginTop = -this.vbounds.minY + "px";
                        cp.movie.stage.addToParentChildMap(x.id, this.element.id);
                        this.element.originalParent = x
                    }
                    A = this.canvas.gc;
                    A.clearRect(0, 0, cp.D.project.w, cp.D.project.h);
                    A.beginPath();
                    x = e.minX;
                    w = e.minY;
                    if (n) {
                        A.fillStyle = cp.ConvertColorToRGBA(g, l);
                        A.lineWidth = 0;
                        A.fillRect(0, 0, cp.D.project.w,
                            cp.D.project.h);
                        A.fillStyle = "rgba(0,0,0,0)";
                        A.lineWidth = m;
                        A.lineJoin = "miter";
                        A.lineCap = "square";
                        A.strokeStyle = k;
                        A.rect(x, w, s, v);
                        m != 0 && A.stroke();
                        A.clearRect(x + m / 2, w + m / 2, s - m, v - m);
                        A.beginPath()
                    }
                    for (var n = parseInt(g.substr(1, 2), 16), e = parseInt(g.substr(3, 2), 16), g = parseInt(g
                                .substr(5, 2), 16), J = parseInt(o.substr(1, 2), 16), F = parseInt(o.substr(3, 2),
                                16), C = parseInt(o.substr(5, 2), 16), o = "#", n = Math.round(n + (J - n) * d /
                                this.zoomfor)
                            .toString(16); n.length < 2;) n = "0" + n;
                    o = o + n;
                    for (n = Math.round(e + (F - e) * d / this.zoomfor)
                        .toString(16); n.length <
                        2;) n = "0" + n;
                    o = o + n;
                    for (n = Math.round(g + (C - g) * d / this.zoomfor)
                        .toString(16); n.length < 2;) n = "0" + n;
                    x = x + (z - x) * d / this.zoomfor;
                    w = w + (f - w) * d / this.zoomfor;
                    s = s + (y - s) * d / this.zoomfor;
                    v = v + (B - v) * d / this.zoomfor;
                    A.fillStyle = cp.ConvertColorToRGBA(o + n, l + (u - l) * d / this.zoomfor);
                    m = m + (p - m) * d / this.zoomfor;
                    A.lineWidth = m;
                    A.lineJoin = "miter";
                    A.lineCap = "square";
                    n = parseInt(k.substr(1, 2), 16);
                    e = parseInt(k.substr(3, 2), 16);
                    g = parseInt(k.substr(5, 2), 16);
                    J = parseInt(q.substr(1, 2), 16);
                    F = parseInt(q.substr(3, 2), 16);
                    C = parseInt(q.substr(5, 2), 16);
                    o = "#";
                    for (n = Math.round(n + (J - n) * d / this.zoomfor)
                        .toString(16); n.length < 2;) n = "0" + n;
                    o = o + n;
                    for (n = Math.round(e + (F - e) * d / this.zoomfor)
                        .toString(16); n.length < 2;) n = "0" + n;
                    o = o + n;
                    for (n = Math.round(g + (C - g) * d / this.zoomfor)
                        .toString(16); n.length < 2;) n = "0" + n;
                    o = o + n;
                    (k = cp.movie.im.images[this.currImage]) && k.nativeImage.complete && A.drawImage(k.nativeImage,
                        x, w, s, v);
                    A.strokeStyle = o;
                    A.rect(x, w, s, v);
                    A.fill();
                    m != 0 && A.stroke();
                    if (d == this.zoomfor) this.isDrawn = true;
                    if (this.transIn && d == 1) this.element.parentElement.style.opacity =
                        0;
                    this.visible || cp.hide(this.parentDivName)
                }
            }
        };
    cp.AnimationItem = function(a, c) {
        cp.AnimationItem.baseConstructor.call(this, a);
        this.visible = this.getAttribute("visible");
        this.imgSrc = this.getAttribute("ip");
        var d = this.getAttribute("b");
        this.bounds = {
            minX: d[0],
            minY: d[1],
            maxX: d[2],
            maxY: d[3]
        };
        this.tr = this.getAttribute("tr");
        this.re = this.getAttribute("re");
        this.sh = this.getAttribute("sh");
        this.alpha = this.getAttribute("a");
        d = this.getAttribute("vb");
        this.vbounds = {
            minX: d[0],
            minY: d[1],
            maxX: d[2],
            maxY: d[3]
        };
        if (cp.responsive) this.responsiveCSS =
            this.getAttribute("css");
        this.parentDivName = this.getAttribute("dn");
        this.parentData = cp.D[this.parentDivName];
        this.isParentOfTypeSlide = void 0 == this.parentData.type;
        this.modifyParent = !this.isParentOfTypeSlide;
        this.actualParent = document.getElementById(this.parentDivName);
        if (this.element) {
            if (this.actualParent) this.actualParent.drawingBoard = this.element;
            this.element.parentElement.drawingBoard = this.element.parentElement;
            this.element.parentElement.bounds = this.bounds;
            cp.movie.stage.addToParentChildMap(this.actualParent.id,
                this.element.id)
        }
        this.args = c;
        this.isDrawn = false
    };
    cp.inherits(cp.AnimationItem, cp.DisplayObject);
    cp.AnimationItem.prototype.start = function(a, c) {
        this.addIfNeeded(a, c);
        if (!this.effectIsStarted || a) {
            this.updateEffects(this.hasEffect);
            this.effectIsStarted = true
        }
    };
    cp.AnimationItem.prototype.reset = function() {
        delete cp.ropMap[this.element.id];
        this.isDrawn = false;
        this.element.width = "0";
        this.element.height = "0";
        this.element.style.width = "0px";
        this.element.style.height = "0px";
        this.element.left = "0";
        this.element.top =
            "0";
        this.element.style.left = "0px";
        this.element.style.top = "0px";
        if (this.re) this.element.parentElement.style.webkitBoxReflect = "";
        this.element.style.display = "none"
    };
    cp.AnimationItem.prototype.addIfNeeded = function(a, c) {
        if ((!cp.responsive || !this.drawForResponsive(a, c)) && !this.isDrawn) {
            var d = this.bounds;
            this.element.style.width = d.maxX - d.minX + "px";
            this.element.style.height = d.maxY - d.minY + "px";
            this.element.style.verticalAlign = "middle";
            var e = 0;
            this.element.parentElement.style.position = "absolute";
            this.element.parentElement.style.left =
                this.vbounds.minX + "px";
            this.element.parentElement.style.top = this.vbounds.minY + "px";
            this.element.parentElement.style.width = this.vbounds.maxX - this.vbounds.minX + "px";
            this.element.parentElement.style.height = this.vbounds.maxY - this.vbounds.minY + "px";
            this.element.style.marginLeft = -(this.vbounds.minX - d.minX) + "px";
            this.element.style.marginTop = -(this.vbounds.minY - d.minY) + "px";
            this.element.style.display = "block";
            this.element.style.position = "absolute";
            this.element.rotateAngle = e;
            var f = this.modifyParent && !this.isParentOfTypeSlide,
                g = this.actualParent;
            if (g) {
                var d = this.bounds,
                    k = d.minX,
                    m = d.minY,
                    l = d.maxX - d.minX,
                    d = d.maxY - d.minY;
                if (f) {
                    g.style.left = k + "px";
                    g.style.top = m + "px";
                    g.style.width = l + "px";
                    g.style.height = d + "px"
                }
                if (this.tr) {
                    if (f) {
                        cp.applyTransform(g, this.tr);
                        g.tr = this.tr
                    }
                    e = cp.getAngleFromRotateStr(this.tr)
                }
                if (f) g.rotateAngle = e
            }
            if (this.tr) {
                cp.applyTransform(this.element, this.tr);
                this.element.tr = this.tr
            }
            this.actualDrawingElement = this.element;
            this.element.innerHTML = "<img id='" + this.element.id + "imgSrc' src='" + this.imgSrc +
                "' alt=' ' style='width:" +
                (this.vbounds.maxX - this.vbounds.minX) + "px; height:" + (this.vbounds.maxY - this.vbounds
                    .minY) + "px'/>";
            f = document.getElementById(this.element.id + "imgSrc");
            if (this.sh && !this.sh.i) {
                e = this.sh.a - e;
                cp.applyShadow(f, this.sh.d * Math.cos(Math.PI * e / 180) + "px " + this.sh.d * Math.sin(Math
                    .PI * e / 180) + "px " + this.sh.b + "px " + cp.ConvertRGBToRGBA(this.sh.c, this.sh
                    .o) + (this.sh.i ? " inset" : ""))
            }
            if (this.re) this.element.parentElement.style.webkitBoxReflect = "below " + this.re.d +
                "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" +
                (1 - this.re.s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p / 100) +
                ")))";
            this.isDrawn = true;
            this.drawComplete();
            this.visible || cp.hide(this.parentDivName)
        }
    };
    cp.AnimationItem.prototype.drawForResponsive = function(a, c) {
        if (!this.responsiveCSS) return false;
        if (this.isDrawn && !a) return true;
        var d = cp.getResponsiveCSS(this.responsiveCSS);
        if (this.isDrawn && this.currentCSS == d && (!a || c == cp.ReasonForDrawing.kMoviePaused)) return true;
        this.currentCSS = d;
        cp.applyResponsiveStyles(this.element.parentElement, d,
            true);
        this.element.style.verticalAlign = "middle";
        var e = 0;
        this.element.rotateAngle = e;
        var f = this.modifyParent && !this.isParentOfTypeSlide,
            g = this.actualParent;
        if (g) {
            f && cp.applyResponsiveStyles(g, d, true);
            if (this.tr) {
                if (f) {
                    cp.applyTransform(g, this.tr);
                    g.tr = this.tr
                }
                e = cp.getAngleFromRotateStr(this.tr)
            }
            if (f) g.rotateAngle = e
        }
        if (this.tr) {
            cp.applyTransform(this.element, this.tr);
            this.element.tr = this.tr
        }
        this.actualDrawingElement = this.element;
        this.element.innerHTML = "<img id='" + this.element.id + "imgSrc' src='" + this.imgSrc +
            "' alt=' ' style='width:100%;height:100%'/>";
        d = document.getElementById(this.element.id + "imgSrc");
        if (this.sh && !this.sh.i) {
            e = this.sh.a - e;
            cp.applyShadow(d, this.sh.d * Math.cos(Math.PI * e / 180) + "px " + this.sh.d * Math.sin(Math.PI *
                e / 180) + "px " + this.sh.b + "px " + cp.ConvertRGBToRGBA(this.sh.c, this.sh.o) + (this
                .sh.i ? " inset" : ""))
        }
        if (this.re) this.element.parentElement.style.webkitBoxReflect = "below " + this.re.d +
            "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" + (1 - this.re
                .s / 100) + ", transparent), to(rgba(255, 255, 255, " +
            (1 - this.re.p / 100) + ")))";
        this.isDrawn = true;
        this.drawComplete(c);
        this.visible || cp.hide(this.parentDivName);
        return true
    };
    cp.TextAnimation = function(a, c) {
        cp.TextAnimation.baseConstructor.call(this, a);
        this.visible = this.getAttribute("visible");
        this.bold = this.getAttribute("B");
        this.color = this.getAttribute("c");
        this.font = this.getAttribute("f");
        this.italic = this.getAttribute("i");
        this.size = this.getAttribute("sz");
        this.text = this.getAttribute("text");
        this.m_delay = this.getAttribute("del");
        this.m_letterCount = this.getAttribute("nchar");
        this.m_loop = this.getAttribute("l");
        this.animType = this.getAttribute("animT");
        this.m_TextAnimationObj = this;
        switch (this.animType) {
            case "Typing Text":
                this.m_TextAnimationObj = new cp.TypingTextAnimation(a, this.m_loop, this.m_letterCount, this
                    .m_delay);
                break;
            case "Typing Text With Sound":
                this.m_TextAnimationObj = new cp.TypingTextAnimation(a, this.m_loop, this.m_letterCount, this
                    .m_delay, true);
                break;
            default:
                this.m_TextAnimationObj = this
        }
        var d = this.getAttribute("b");
        this.bounds = {
            minX: d[0],
            minY: d[1],
            maxX: d[2],
            maxY: d[3]
        };
        this.tr = this.getAttribute("tr");
        this.re = this.getAttribute("re");
        this.sh = this.getAttribute("sh");
        this.alpha = this.getAttribute("a");
        d = this.getAttribute("vb");
        this.vbounds = {
            minX: d[0],
            minY: d[1],
            maxX: d[2],
            maxY: d[3]
        };
        this.parentDivName = this.getAttribute("dn");
        if (this.element) {
            if (d = document.getElementById(this.parentDivName)) d.drawingBoard = this.element;
            this.actualParent = d;
            this.element.parentElement.drawingBoard = this.element.parentElement;
            this.element.parentElement.bounds = this.bounds;
            cp.movie.stage.addToParentChildMap(d.id,
                this.element.id)
        }
        this.args = c;
        this.isDrawn = false
    };
    cp.inherits(cp.TextAnimation, cp.DisplayObject);
    cp.TextAnimation.prototype.start = function(a, c) {
        this.addIfNeeded(a, c);
        if (!this.effectIsStarted || a) {
            this.updateEffects(this.hasEffect);
            this.effectIsStarted = true
        }
    };
    cp.TextAnimation.prototype.reset = function() {
        this.m_TextAnimationObj != this && this.m_TextAnimationObj.reset();
        delete cp.ropMap[this.element.id];
        this.isDrawn = false;
        this.element.width = "0";
        this.element.height = "0";
        this.element.style.width = "0px";
        this.element.style.height =
            "0px";
        this.element.left = "0";
        this.element.top = "0";
        this.element.style.left = "0px";
        this.element.style.top = "0px";
        this.element.style.display = "none"
    };
    cp.TextAnimation.prototype.draw = function() {
        this.element.innerHTML = this.text
    };
    cp.TextAnimation.prototype.addIfNeeded = function() {
        if (!this.isDrawn) {
            var a = this.bounds,
                c = -a.minX + a.maxX;
            this.actualDrawingElement = this.element;
            this.element.style.width = (cp.device == cp.IDEVICE ? c * 1.5 : c) + "px";
            this.element.style.height = a.maxY - a.minY + "px";
            this.element.style.verticalAlign =
                "middle";
            var d = 0;
            if (this.tr) {
                cp.applyTransform(this.element, this.tr);
                d = cp.getAngleFromRotateStr(this.tr);
                this.element.tr = this.tr
            }
            this.element.rotateAngle = d;
            if (this.sh) {
                var c = this.sh.d * Math.cos(Math.PI * this.sh.a / 180),
                    e = this.sh.d * Math.sin(Math.PI * this.sh.a / 180),
                    f = c,
                    g = e;
                if (d != 0) {
                    for (f = d; f < 0;) f = 360 + d;
                    f = 360 - d;
                    d = Math.sin(Math.PI * f / 180);
                    g = Math.cos(Math.PI * f / 180);
                    f = c * g - e * d;
                    g = c * d + e * g
                }
                this.element.style.textShadow = f + "px " + g + "px " + this.sh.b + "px " + cp.ConvertRGBToRGBA(
                    this.sh.c, this.sh.o) + (this.sh.i ? " inset" :
                    "")
            }
            if (this.re) this.element.parentElement.style.webkitBoxReflect = "below " + this.re.d +
                "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" + (1 - this
                    .re.s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p / 100) + ")))";
            this.element.parentElement.style.position = "absolute";
            this.element.parentElement.style.left = this.vbounds.minX + "px";
            this.element.parentElement.style.top = this.vbounds.minY + "px";
            this.element.parentElement.style.width = (cp.device == cp.IDEVICE ? (this.vbounds.maxX -
                this.vbounds.minX) * 1.5 : this.vbounds.maxX - this.vbounds.minX) + "px";
            this.element.parentElement.style.height = this.vbounds.maxY - this.vbounds.minY + "px";
            this.element.style.marginLeft = -(this.vbounds.minX - a.minX) + "px";
            this.element.style.marginTop = -(this.vbounds.minY - a.minY) + "px";
            this.element.style.display = "block";
            this.element.style.position = "absolute";
            this.element.style.color = this.color;
            this.element.style.fontFamily = this.font;
            this.element.style.fontSize = this.size + "px";
            this.element.style.lineHeight = "100%";
            this.element.style.opacity = this.alpha;
            this.element.setAttribute("aria-hidden", "true");
            this.element.style.fontWeight = this.bold ? "bold" : "normal";
            this.element.style.fontStyle = this.italic ? "italic" : "normal";
            this.m_TextAnimationObj.draw(this.text);
            this.isDrawn = true;
            this.drawComplete();
            this.visible || cp.hide(this.parentDivName)
        }
    };
    cp.TypingTextAnimation = function(a, c, d, e, f) {
        this.element = a;
        this.loop = c;
        this.letterCount = d;
        this.delay = e;
        this.hasAudio = f;
        this.canPlayAnimation = false;
        this.lTimer = void 0
    };
    cp.TypingTextAnimation.prototype.reset =
        function() {
            clearInterval(this.lTimer);
            this.lTimer = void 0;
            this.canPlayAnimation = false
        };
    cp.TypingTextAnimation.prototype.draw = function(a) {
        this.text = a;
        var a = this.delay * 1E3 / cpInfoFPS,
            c = this,
            d = 0;
        this.txtElement = cp.newElem("div");
        this.txtElement.id = this.element.id + "_txt";
        this.txtElement.style.display = "inline";
        this.element.appendChild(c.txtElement);
        this.cursorElement = cp.newElem("div");
        this.cursorElement.id = this.element.id + "_cursor";
        this.cursorElement.style.display = "inline";
        this.element.appendChild(c.cursorElement);
        this.canPlayAnimation = true;
        this.lTimer = setInterval(function() {
            if (!cp.movie.paused)
                if (c.canPlayAnimation) {
                    var a;
                    if (d >= c.text.length) a = void 0;
                    else {
                        a = "";
                        var e = false,
                            f = e = false;
                        a = c.text[d];
                        if (a == "&") {
                            var e = true,
                                l = "",
                                n = 0;
                            do {
                                l = l + a;
                                d++;
                                n++;
                                a = c.text[d];
                                if (a == "&" && e) {
                                    d = d - (n - 1);
                                    break
                                }
                                if (a == ";" && e) {
                                    l = l + a;
                                    d++;
                                    a = c.text[d];
                                    e = false;
                                    f = true
                                }
                                if (l == "&nbsp;") {
                                    cp.verbose && cp.log("Next Characters : " + c.text.substring(d, d +
                                        18));
                                    c.text.substring(d, d + 18) == "&nbsp;&nbsp;&nbsp;" && (l = l + c
                                        .text.substring(d, d + 18));
                                    break
                                }
                            } while (!f);
                            d--;
                            a = l
                        } else if (a == "<") {
                            e = true;
                            l = "";
                            n = 0;
                            do {
                                l = l + a;
                                d++;
                                n++;
                                a = c.text[d];
                                if (a == "<" && e) {
                                    d = d - (n - 1);
                                    break
                                }
                                if (a == ">" && e) {
                                    l = l + a;
                                    l != "<br>" && (d = d - n);
                                    break
                                }
                            } while (a != ">");
                            a = l
                        }
                        d++
                    }
                    if (a != void 0) {
                        c.hasAudio && (c.element.style.visibility != "hidden" || c.element.style
                            .display != "block") && cp.movie.am.playKeyTap();
                        c.txtElement.innerHTML = c.txtElement.innerHTML + a
                    } else if (c.loop) {
                        d = 0;
                        c.txtElement.innerHTML = ""
                    } else {
                        clearInterval(c.lTimer);
                        c.lTimer = void 0
                    }
                } else {
                    clearInterval(c.lTimer);
                    c.lTimer = void 0
                }
        }, a);
        var e = true,
            f = setInterval(function() {
                if (cp.movie.paused) c.cursorElement.innerHTML =
                    "";
                else if (c.lTimer != void 0) {
                    c.cursorElement.innerHTML = e ? "|" : "";
                    e = !e
                } else if (!c.loop) {
                    c.cursorElement.innerHTML = "";
                    clearInterval(f);
                    f = void 0
                }
            }, a / 2)
    };
    cp.TextButton = function(a, c) {
        cp.TextButton.baseConstructor.call(this, a);
        this.id = this.getAttribute("id");
        this.type = "button";
        this.accstring = this.getAttribute("accstr");
        this.visible = this.getAttribute("visible");
        this.parentDivName = this.getAttribute("dn");
        var d = cp.D[this.parentDivName];
        this.parentDivName = this.getAttribute("dn");
        this.transIn = d.trin;
        d = this.getAttribute("b");
        this.bounds = {
            minX: d[0],
            minY: d[1],
            maxX: d[2],
            maxY: d[3]
        };
        d = this.getAttribute("vb");
        this.vbounds = {
            minX: d[0],
            minY: d[1],
            maxX: d[2],
            maxY: d[3]
        };
        if (this.actualParent = d = document.getElementById(this.parentDivName)) {
            d.drawingBoard = this.element.parentElement;
            d.bounds = this.bounds;
            d.drawingBoard.bounds = this.vbounds;
            var e = this,
                f = function() {
                    if (e.enabled && !e.isTransparent) e.buttonElem.style.borderStyle = "inset"
                },
                g = function() {
                    if (e.enabled && !e.isTransparent) e.buttonElem.style.borderStyle = "outset"
                };
            if (cp.DESKTOP != cp.device) {
                cp.registerGestureEvent(d,
                    cp.GESTURE_EVENT_TYPES.TOUCH, f);
                cp.registerGestureEvent(d, cp.GESTURE_EVENT_TYPES.RELEASE, g)
            } else {
                d.onmousedown = f;
                d.onmouseup = g
            }
        }
        this.args = c;
        this.isDrawn = false;
        this.font = this.getAttribute("font");
        this.tr = this.getAttribute("tr");
        this.sh = this.getAttribute("sh");
        this.re = this.getAttribute("re");
        if (cp.responsive) this.responsiveCSS = this.getAttribute("css")
    };
    cp.inherits(cp.TextButton, cp.DisplayObject);
    cp.TextButton.prototype.start = function(a, c) {
        this.addIfNeeded(a, c);
        if (!this.effectIsStarted || a) {
            this.updateEffects(this.hasEffect);
            this.effectIsStarted = true
        }
    };
    cp.TextButton.prototype.reset = function() {
        delete cp.ropMap[this.element.id];
        this.isDrawn = false;
        this.element.width = "0";
        this.element.height = "0";
        this.element.style.width = "0px";
        this.element.style.height = "0px";
        this.element.left = "0";
        this.element.top = "0";
        this.element.style.left = "0px";
        this.element.style.top = "0px"
    };
    cp.TextButton.prototype.drawForResponsive = function(a, c) {
        if (!this.responsiveCSS) return false;
        if (this.isDrawn && !a) return true;
        var d = cp.getResponsiveCSS(this.responsiveCSS),
            e = false,
            e = this.sh && !this.sh.i,
            f = this.tr != void 0;
        if (this.isDrawn && this.currentCSS == d && !e && !f && (!a || c == cp.ReasonForDrawing.kMoviePaused))
            return true;
        this.currentCSS = d;
        this.parentDivName = this.getAttribute("dn");
        cp.applyResponsiveStyles(this.actualParent, d, true);
        cp.applyResponsiveStyles(this.element.parentElement, d, true);
        this.element.style.left = "0px";
        this.element.style.top = "0px";
        this.element.style.width = "100%";
        this.element.style.height = "100%";
        this.parentElementClientBoundingRect = this.element.parentElement.getBoundingClientRect();
        d = this.type;
        e = "";
        f = cp.D[this.parentDivName];
        this.isTransparent = f.itr;
        var g = 0;
        this.tr && (g = cp.getAngleFromRotateStr(this.tr));
        this.element.rotateAngle = g;
        this.actualParent.rotateAngle = g;
        if (this.tr) {
            cp.applyTransform(this.actualParent, this.tr);
            cp.applyTransform(this.element, this.tr);
            this.actualParent.tr = this.tr;
            this.element.tr = this.tr
        }
        if (this.sh && !this.sh.i) {
            g = this.sh.a - g;
            cp.applyShadow(this.element, this.sh.d * Math.cos(Math.PI * g / 180) + "px " + this.sh.d * Math.sin(
                Math.PI * g / 180) + "px " + this.sh.b + "px " + cp.ConvertRGBToRGBA(this.sh.c,
                this.sh.o) + (this.sh.i ? " inset" : ""))
        }
        if (this.re) this.element.parentElement.style.webkitBoxReflect = "below " + this.re.d +
            "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" + (1 - this.re
                .s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p / 100) + ")))";
        this.enabled = f.enabled;
        if (this.element.innerHTML == "") {
            e = e + " -webkit-appearance:none;";
            e = this.isTransparent ? e + "background-color:transparent;" : e + "background-color:#d1d1d1;";
            this.element.innerHTML = this.element.innerHTML +
                ("<input type='" + d + "'" + (this.enabled == 0 ? " disabled " : "") + " aria-label=' ' id='" +
                    this.element.id + "_button' style='display:block;left: 0px; top: 0px;position:relative; " +
                    (this.enabled == 0 ? "opacity:0.5;" : "") + "width:100%;height:100%;" + (e +
                        "border-radius:0px;") + "'> </input>")
        }
        if (!this.buttonElem) this.buttonElem = document.getElementById(this.element.id + "_button");
        this.updateInputFontStyle(this.buttonElem);
        if (cp.MSIE != cp.browser) this.buttonElem.style.border = "none";
        this.buttonElem.style.borderStyle = "none";
        if (!this.isTransparent) this.buttonElem.style.borderStyle =
            "outset";
        this.buttonElem.value = f.rpvt[cp.ResponsiveProjWidth].text;
        if (!this.isDrawnForResponsive) {
            if (this.buttonElem) {
                this.buttonElem.setAttribute("tabindex", -1);
                cp.D.pref.hsr === 1 && cp.removeAccessibilityOutline(this.buttonElem)
            }
            if (this.transIn) this.element.parentElement.style.opacity = 0;
            this.isDrawnForResponsive = true
        }
        cp.movie.stage.addToParentChildMap(this.actualParent.id, this.element.id);
        this.element.originalParent = this.actualParent;
        cp.handleQuizzingItemsInReviewMode(this.element, f, this.parentDivName);
        this.isDrawn = true;
        this.drawComplete(c);
        this.visible || cp.hide(this.parentDivName)
    };
    cp.TextButton.prototype.addIfNeeded = function(a, c) {
        if ((!cp.responsive || !this.drawForResponsive(a, c)) && !this.isDrawn) {
            var d = this.id,
                e = this.bounds,
                f = this.type,
                g = "",
                k = cp.D[this.element.id],
                m = cp.D[k.dn],
                l = 0;
            this.tr && (l = cp.getAngleFromRotateStr(this.tr));
            var n = this.element.parentElement,
                o = this.vbounds.minY,
                q = this.vbounds.maxY - this.vbounds.minY;
            if (cp.MSIE == cp.browser && !this.showBorder) {
                o = o - 1;
                q = q + 1
            }
            n.style.left = this.vbounds.minX +
                "px";
            n.style.top = o + "px";
            n.style.width = this.vbounds.maxX - this.vbounds.minX + "px";
            n.style.height = q + "px";
            this.element.rotateAngle = l;
            this.element.style.left = e.minX - this.vbounds.minX + "px";
            this.element.style.top = e.minY - this.vbounds.minY + "px";
            this.element.style.width = e.maxX - e.minX + "px";
            this.element.style.height = e.maxY - e.minY + 3 + "px";
            if (this.tr) {
                cp.applyTransform(this.element, this.tr);
                this.element.tr = this.tr
            }
            if (this.sh && !this.sh.i) {
                l = this.sh.a - l;
                cp.applyShadow(this.element, this.sh.d * Math.cos(Math.PI * l / 180) +
                    "px " + this.sh.d * Math.sin(Math.PI * l / 180) + "px " + this.sh.b + "px " + cp
                    .ConvertRGBToRGBA(this.sh.c, this.sh.o) + (this.sh.i ? " inset" : ""))
            }
            if (this.re) this.element.parentElement.style.webkitBoxReflect = "below " + this.re.d +
                "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" + (1 - this
                    .re.s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p / 100) + ")))";
            if (this.element.innerHTML == "") {
                if (this.font) {
                    g = g + " -webkit-appearance:none;" + (' font-family:"' + this.font.n + '";');
                    g = g + ("font-size:" +
                        this.font.s + "px;");
                    g = g + ("color: " + this.font.c + ";");
                    this.font.B && (g = g + "font-weight:bold;");
                    this.font.u && (g = g + "text-decoration: underline;");
                    this.font.i && (g = g + "font-style: italic;");
                    g = g + "border-radius:0px;"
                }
                this.element.innerHTML = this.element.innerHTML + ("<button type='" + f + "'" + (this.enabled ==
                        0 ? " disabled " : "") + " aria-label='" + this.accstring + "' id='" + d +
                    "_button' style='display:block;left: 0px; top: 0px;position:relative; width:" + (e
                        .maxX - e.minX) + "px; height:" + inputHeight + "px;" + g + "'>" + m.vt +
                    "</button>")
            }
            if (this.buttonElem =
                document.getElementById(d + "_button")) {
                this.buttonElem.setAttribute("tabIndex", k.ti);
                cp.D.pref.hsr === 1 && cp.removeAccessibilityOutline(this.buttonElem);
                this.actualParent = this.element.parentElement
            }
            cp.handleQuizzingItemsInReviewMode(this.element, m, this.parentDivName);
            this.isDrawn = true;
            this.drawComplete(iReason);
            if (this.transIn) this.element.parentElement.style.opacity = 0;
            this.visible || cp.hide(this.parentDivName)
        }
    };
    cp.TextInput = function(a, c) {
        function d(a) {
            var c = f.tebData,
                d = c.sc,
                e = void 0;
            d && (e = new cp.Shortcut(d.k,
                1 == d.c, 1 == d.s, 1 == d.a));
            d = cp.getShortCutFromKeyEvent(a);
            if (f.canBeAutoSubmitted || e && e.isSame(d)) {
                f.canBeAutoSubmitted = 0;
                f.tebcData.keyHandledOnce = true;
                a.currentTarget && a.currentTarget.parentElement ? cp.vTEB(a.currentTarget.parentElement.id) : a
                    .srcElement && (a.srcElement.parentElement && a.srcElement.parentElement.parentElement) &&
                    cp.vTEB(a.srcElement.parentElement.parentElement.id)
            }
            setTimeout(function() {
                if (f.inputField) {
                    if (c.vn.length > 0) {
                        var a = f.inputField.value;
                        f.m_isNumeric ? a = Number(a) : f.m_isUppercase ?
                            a = a.toUpperCase() : f.m_isLowercase && (a = a.toLowerCase());
                        isNaN(Number(a)) || (a = Number(a));
                        var d = [];
                        d.push(c.vn);
                        svvi(c.vn, a, d)
                    }
                    if (f.retainText)
                        if (cp.responsive) {
                            f.getAttribute("txt");
                            for (var e in f.tebcData.txt) f.tebcData.txt[e] = f.inputField.value
                        } else f.tebcData.txt = f.inputField.value
                }
            }, 200)
        }

        function e(a) {
            if (f.inputField.value.length >= f.m_charLimit && f.m_charLimit != -1) {
                f.canBeAutoSubmitted = 1;
                d(a)
            }
        }
        cp.TextInput.baseConstructor.call(this, a);
        var f = this;
        this.id = this.getAttribute("id");
        this.type = "text";
        if (this.getAttribute("ft") ==
            "pw") this.type = "password";
        this.expectedStrings = this.getAttribute("exp") || [];
        this.defaultText = this.getAttribute("txt");
        this.accstring = this.getAttribute("accstr");
        this.visible = this.getAttribute("visible");
        this.parentDivName = this.getAttribute("dn");
        var g = cp.D[this.parentDivName];
        this.transIn = g.trin;
        this.m_isAutoSubmit = g.as;
        this.m_isLowercase = g.lcase;
        this.m_isUppercase = g.ucase;
        this.m_isNumeric = g.num;
        this.m_hasNoCondition = g.nc;
        this.m_charLimit = g.cl;
        this.canBeAutoSubmitted = 0;
        this.element.parentElement.drawingBoard =
            this.element.parentElement;
        g = this.getAttribute("b");
        this.bounds = {
            minX: g[0],
            minY: g[1],
            maxX: g[2],
            maxY: g[3]
        };
        g = this.getAttribute("vb");
        this.vbounds = {
            minX: g[0],
            minY: g[1],
            maxX: g[2],
            maxY: g[3]
        };
        this.element.parentElement.bounds = this.vbounds;
        this.args = c;
        this.isDrawn = false;
        this.inputField = null;
        this.showScroll = this.getAttribute("ss");
        this.fillColor = this.getAttribute("fc");
        this.fillAlpha = this.getAttribute("fa");
        if (void 0 == this.fillAlpha) this.fillAlpha = 1;
        this.font = this.getAttribute("font");
        this.showBorder = this.getAttribute("sb");
        this.retainText = this.getAttribute("rtx");
        this.focusLostAction = "";
        if (cp.D[this.id].ofla) this.focusLostAction = cp.D[this.id].ofla;
        this.tebcData = cp.D[this.element.id];
        this.tebData = cp.D[this.tebcData.id];
        this.element.onkeyup = d;
        this.element.onkeypress = function() {
            var a, c;
            if (window.event) a = event.keyCode;
            else if (event.which) a = event.which;
            c = String.fromCharCode(a);
            if (a != 8)
                if (f.m_isNumeric) {
                    a = /\d/;
                    a.test(c) || cp.preventEventDefault(event)
                } else if (f.m_isUppercase) {
                a = /[A-Za-z ]/;
                a.test(c) || cp.preventEventDefault(event)
            } else if (f.m_isLowercase) {
                a =
                    /[a-zA-Z ]/;
                a.test(c) || cp.preventEventDefault(event)
            }
        };
        if (this.m_isAutoSubmit) this.element.onkeyup = e;
        this.tr = this.getAttribute("tr");
        this.sh = this.getAttribute("sh");
        this.re = this.getAttribute("re");
        if (cp.responsive) this.responsiveCSS = this.getAttribute("css")
    };
    cp.inherits(cp.TextInput, cp.DisplayObject);
    cp.TextInput.prototype.start = function(a, c) {
        this.addIfNeeded(a, c);
        if (!this.effectIsStarted || a) {
            this.updateEffects(this.hasEffect);
            this.effectIsStarted = true
        }
    };
    cp.TextInput.prototype.reset = function() {
        delete cp.ropMap[this.element.id];
        if (this.retainText)
            if (cp.responsive) {
                var a = this.inputField.value;
                if (this.tebcData && this.tebcData.txt && this.tebcData.txt[cp.ResponsiveProjWidth] != a)
                    for (var c in this.tebcData) this.tebcData.txt[c] = a
            } else this.setAttribute("txt", this.inputField.value);
        this.setAttribute("keyHandledOnce", false);
        if (this.inputField) {
            this.inputField.onblur = null;
            this.inputField.onchange = null
        }
        this.inputField = null;
        this.isDrawn = false;
        this.element.width = "0";
        this.element.height = "0";
        this.element.style.width = "0px";
        this.element.style.height =
            "0px";
        this.element.left = "0";
        this.element.top = "0";
        this.element.style.left = "0px";
        this.element.style.top = "0px"
    };
    cp.TextInput.prototype.saveState = function(a) {
        if (cp.responsive && this.inputField) {
            var c = this.inputField.value;
            if (this.defaultText[a] != c)
                for (var d in this.defaultText) this.defaultText[d] = c
        }
    };
    cp.TextInput.prototype.drawForResponsive = function(a, c) {
        if (!this.responsiveCSS) return false;
        if (this.isDrawn && !a) return true;
        var d = cp.getResponsiveCSS(this.responsiveCSS),
            e = false,
            e = this.sh && !this.sh.i,
            f = this.tr !=
            void 0;
        if (this.isDrawn && this.currentCSS == d && !e && !f && (!a || c == cp.ReasonForDrawing.kMoviePaused))
            return true;
        this.currentCSS = d;
        this.parentDivName = this.getAttribute("dn");
        e = d;
        this.getAttribute("useV") && (e = cp.createResponsiveStyleObj(d, d.p, d.vl, d.vt, d.vr, d.vb, d.vw, d
            .vh, d.crop));
        cp.applyResponsiveStyles(this.element.parentElement, e, true);
        this.element.style.left = "0px";
        this.element.style.top = "0px";
        this.element.style.width = "100%";
        this.element.style.height = "100%";
        this.parentElementClientBoundingRect = this.element.parentElement.getBoundingClientRect();
        var d = this.id,
            e = this.type,
            f = "input",
            g = "";
        this.showScroll && (f = "textarea");
        var k = 0;
        this.tr && (k = cp.getAngleFromRotateStr(this.tr));
        this.element.rotateAngle = k;
        if (this.tr) {
            cp.applyTransform(this.element, this.tr);
            this.element.tr = this.tr
        }
        if (this.sh && !this.sh.i) {
            k = this.sh.a - k;
            cp.applyShadow(this.element, this.sh.d * Math.cos(Math.PI * k / 180) + "px " + this.sh.d * Math.sin(
                Math.PI * k / 180) + "px " + this.sh.b + "px " + cp.ConvertRGBToRGBA(this.sh.c, this.sh
                .o) + (this.sh.i ? " inset" : ""))
        }
        if (this.re) this.element.parentElement.style.webkitBoxReflect =
            "below " + this.re.d +
            "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" + (1 - this.re
                .s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p / 100) + ")))";
        if (this.element.innerHTML == "") {
            g = g + " -webkit-appearance:none;";
            this.showScroll && (g = g + "resize: none;");
            g = void 0 != this.showBorder && !this.showBorder ? g + "border:0px;" : g +
                "border:1px solid;border-top-color:#696969;border-left-color:#696969;border-right-color:#E6E6E6;border-bottom-color:#E6E6E6;";
            g = g + "border-radius:0px;";
            this.m_isUppercase ? g = g + "text-transform: uppercase;" : this.m_isLowercase && (g = g +
                "text-transform: lowercase;");
            g = cp.device != cp.DESKTOP ? g + "padding:0px;" : g + "padding-left:2px;";
            if (void 0 != this.fillColor && 7 == this.fillColor.length && "#" == this.fillColor[0]) var k =
                parseInt(this.fillColor.substr(1, 2), 16),
                m = parseInt(this.fillColor.substr(3, 2), 16),
                l = parseInt(this.fillColor.substr(5, 2), 16),
                g = g + ("background-color: rgba(" + k + ", " + m + ", " + l + ", " + this.fillAlpha + ");");
            this.element.innerHTML = this.element.innerHTML + ("<" + f +
                " type='" + e + "'" + (this.enabled == 0 ? " disabled " : "") + " aria-label='" + this
                .accstring + "' id='" + d +
                "_inputField' style='display:block;left: 0px; top: 0px;position:relative; width:100%;height:100%;" +
                g + "'></" + f + ">")
        }
        if (this.tebData.vn.length > 0) {
            e = [];
            e.push(this.tebData.vn);
            f = this.defaultText[cp.ResponsiveProjWidth];
            if (f != "" && (this.m_isNumeric || !isNaN(Number(f)))) f = Number(f);
            svvi(this.tebData.vn, f, e)
        }
        if (!this.inputField) this.inputField = document.getElementById(d + "_inputField");
        this.updateInputFontStyle(this.inputField);
        if (!this.isDrawnForResponsive) {
            if (this.inputField) {
                this.inputField.setAttribute("tabIndex", cp.D[this.tebData.mdi].ti);
                cp.D.pref.hsr === 1 && cp.removeAccessibilityOutline(this.inputField);
                this.inputField.value = this.defaultText[cp.ResponsiveProjWidth];
                d = this.inputField.value.length;
                this.inputField.setSelectionRange && this.inputField.setSelectionRange(0, d);
                this.m_charLimit != -1 && this.inputField.setAttribute("maxlength", this.m_charLimit);
                this.actualParent = this.element.parentElement
            }
            if (this.focusLostAction.length >
                0) {
                var n = this.inputField;
                this.inputField.onchange = function() {
                    n.cp_has_changed = true
                };
                var o = this.focusLostAction,
                    q = this.inputField,
                    p = this.tebData;
                this.inputField.onblur = function() {
                    if ((!p || !p.handled) && q.cp_has_changed) {
                        q.cp_has_changed = false;
                        cp.movie.executeAction(o)
                    }
                }
            }
            if (this.transIn && c == cp.ReasonForDrawing.kRegularDraw) this.element.parentElement.style
                .opacity = 0;
            this.isDrawnForResponsive = true
        }
        lTxt = this.defaultText[cp.ResponsiveProjWidth];
        if (this.inputField) this.inputField.value = lTxt;
        this.isDrawn = true;
        this.drawComplete(c);
        this.visible || cp.hide(this.parentDivName)
    };
    cp.TextInput.prototype.addIfNeeded = function(a, c) {
        if ((!cp.responsive || !this.drawForResponsive(a, c)) && !this.isDrawn) {
            var d = this.id,
                e = this.bounds,
                f = this.type,
                g = "input",
                k = "";
            this.showScroll && (g = "textarea");
            var m = 0;
            this.tr && (m = cp.getAngleFromRotateStr(this.tr));
            var l = this.element.parentElement,
                n = this.vbounds.minY,
                o = this.vbounds.maxY - this.vbounds.minY;
            if (cp.MSIE == cp.browser && !this.showBorder) {
                n = n - 1;
                o = o + 1
            }
            l.style.left = this.vbounds.minX + "px";
            l.style.top = n + "px";
            l.style.width = this.vbounds.maxX - this.vbounds.minX + "px";
            l.style.height = o + "px";
            this.element.rotateAngle = m;
            this.element.style.left = e.minX - this.vbounds.minX + "px";
            this.element.style.top = e.minY - this.vbounds.minY + "px";
            this.element.style.width = e.maxX - e.minX + "px";
            this.element.style.height = e.maxY - e.minY + 3 + "px";
            if (this.tr) {
                cp.applyTransform(this.element, this.tr);
                this.element.tr = this.tr
            }
            if (this.sh && !this.sh.i) {
                m = this.sh.a - m;
                cp.applyShadow(this.element, this.sh.d * Math.cos(Math.PI * m / 180) + "px " +
                    this.sh.d * Math.sin(Math.PI * m / 180) + "px " + this.sh.b + "px " + cp
                    .ConvertRGBToRGBA(this.sh.c, this.sh.o) + (this.sh.i ? " inset" : ""))
            }
            if (this.re) this.element.parentElement.style.webkitBoxReflect = "below " + this.re.d +
                "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" + (1 - this
                    .re.s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p / 100) + ")))";
            if (this.element.innerHTML == "") {
                if (this.font) {
                    k = k + " -webkit-appearance:none;" + (' font-family:"' + this.font.n + '";');
                    k = k + ("font-size:" +
                        this.font.s + "px;");
                    k = k + ("color: " + this.font.c + ";");
                    this.m_isUppercase ? k = k + "text-transform: uppercase;" : this.m_isLowercase && (k = k +
                        "text-transform: lowercase;");
                    this.font.B && (k = k + "font-weight:bold;");
                    this.font.u && (k = k + "text-decoration: underline;");
                    this.font.i && (k = k + "font-style: italic;");
                    this.showScroll && (k = k + "resize: none;");
                    k = void 0 != this.showBorder && !this.showBorder ? k + "border:0px;" : k +
                        "border:1px solid;border-top-color:#696969;border-left-color:#696969;border-right-color:#E6E6E6;border-bottom-color:#E6E6E6;";
                    k = k + "border-radius:0px;";
                    k = cp.device != cp.DESKTOP ? k + "padding:0px;" : k + "padding-left:2px;";
                    if (void 0 != this.fillColor && 7 == this.fillColor.length && "#" == this.fillColor[0]) {
                        m = parseInt(this.fillColor.substr(1, 2), 16);
                        l = parseInt(this.fillColor.substr(3, 2), 16);
                        n = parseInt(this.fillColor.substr(5, 2), 16);
                        k = k + ("background-color: rgba(" + m + ", " + l + ", " + n + ", " + this.fillAlpha +
                            ");")
                    }
                }
                m = e.maxY - e.minY;
                cp.MSIE == cp.browser && (m = m + 1);
                this.element.innerHTML = this.element.innerHTML + ("<" + g + " type='" + f + "'" + (this
                        .enabled == 0 ? " disabled " :
                        "") + " aria-label='" + this.accstring + "' id='" + d +
                    "_inputField' style='display:block;left: 0px; top: 0px;position:relative; width:" + (e
                        .maxX - e.minX) + "px; height:" + m + "px;" + k + "'></" + g + ">");
                if (this.tebData.vn.length > 0) {
                    e = [];
                    e.push(this.tebData.vn);
                    if (this.defaultText != "" && (this.m_isNumeric || !isNaN(Number(this.defaultText)))) this
                        .defaultText = Number(this.defaultText);
                    svvi(this.tebData.vn, this.defaultText, e)
                }
            }
            if (this.inputField = document.getElementById(d + "_inputField")) {
                this.inputField.setAttribute("tabIndex",
                    cp.D[this.tebData.mdi].ti);
                cp.D.pref.hsr === 1 && cp.removeAccessibilityOutline(this.inputField);
                this.inputField.value = this.defaultText;
                d = this.inputField.value.length;
                this.inputField.setSelectionRange && this.inputField.setSelectionRange(0, d);
                this.m_charLimit != -1 && this.inputField.setAttribute("maxlength", this.m_charLimit);
                this.actualParent = this.element.parentElement
            }
            this.isDrawn = true;
            this.drawComplete(c);
            if (this.focusLostAction.length > 0) {
                var q = this.inputField;
                this.inputField.onchange = function() {
                    q.cp_has_changed =
                        true
                };
                var p = this.focusLostAction,
                    u = this.inputField,
                    s = this.tebData;
                this.inputField.onblur = function() {
                    if ((!s || !s.handled) && u.cp_has_changed) {
                        u.cp_has_changed = false;
                        cp.movie.executeAction(p)
                    }
                }
            }
            if (this.transIn) this.element.parentElement.style.opacity = 0;
            this.visible || cp.hide(this.parentDivName)
        }
    };
    cp.Gradient = function(a, c, d) {
        cp.Gradient.baseConstructor.call(this, a);
        this.visible = 1;
        this.parentId = c;
        if (this.parentObj = cp.D[c]) {
            this.gradientData = this.parentObj.gf;
            a = this.gradientData.b;
            this.bounds = {
                minX: a[0],
                minY: a[1],
                maxX: a[2],
                maxY: a[3]
            };
            this.args = d
        }
        this.isDrawn = false
    };
    cp.inherits(cp.Gradient, cp.DisplayObject);
    cp.Gradient.prototype.start = function(a, c) {
        this.drawIfNeeded(a, c);
        if (!this.effectIsStarted || a) {
            this.updateEffects(this.hasEffect);
            this.effectIsStarted = true
        }
    };
    cp.Gradient.prototype.reset = function() {
        delete cp.ropMap[this.element.id];
        this.isDrawn = false;
        this.element.width = "0";
        this.element.height = "0";
        this.element.style.width = "0px";
        this.element.style.height = "0px";
        this.element.left = "0";
        this.element.top =
            "0";
        this.element.style.left = "0px";
        this.element.style.top = "0px"
    };
    cp.Gradient.prototype.drawIfNeeded = function(a, c) {
        if ((!cp.responsive || !this.drawForResponsive(a, c)) && !this.isDrawn && this.gradientData) {
            if (void 0 == this.canvasElem)
                for (var d = this.element.firstChild; d; d = d.nextSibling)
                    if (d.nodeType == Node.ELEMENT_NODE && d.id && d.id == this.parentId + "gf") {
                        this.canvasElem = d;
                        break
                    } if (this.canvasElem) {
                var e = this.bounds,
                    f = e.minX,
                    g = e.minY,
                    d = e.maxX - e.minX,
                    e = e.maxY - e.minY;
                this.canvasElem.style.position = "absolute";
                f = (this.canvas =
                        cp.createCanvas(f, g, d, e, this.canvasElem))
                    .gc;
                f.save();
                if (g = cp.getGradientFill(this.gradientData, f)) {
                    f.fillStyle = g;
                    f.fillRect(0, 0, d, e)
                }
                f.restore();
                this.isDrawn = true
            }
        }
    };
    cp.Gradient.prototype.drawForResponsive = function(a) {
        if (!cp.responsive) return false;
        if (this.isDrawn && !a) return true;
        if (!this.gradientData) return false;
        if (void 0 == this.canvasElem)
            for (a = this.element.firstChild; a; a = a.nextSibling)
                if (a.nodeType == Node.ELEMENT_NODE && a.id && a.id == this.parentId + "gf") {
                    this.canvasElem = a;
                    break
                } if (!this.canvasElem) return false;
        this.canvasElem.style.width = "100%";
        this.canvasElem.style.height = "100%";
        a = cp.createResponsiveStyleObj(void 0, void 0, "0px", "0px", void 0, void 0, "100%", "100%", void 0);
        a.ipiv = true;
        a = (this.canvas = cp.createResponsiveCanvas(a, this.canvasElem.clientWidth, this.canvasElem
                .clientHeight, this.canvasElem))
            .gc;
        a.save();
        var c = cp.getGradientFill(this.gradientData, a, this.canvasElem.clientWidth / cp.D.project.w, this
            .canvasElem.clientHeight / cp.D.project.h);
        if (c) {
            a.fillStyle = c;
            a.fillRect(0, 0, this.canvasElem.clientWidth,
                this.canvasElem.clientHeight)
        }
        a.restore();
        return this.isDrawn = true
    };
    cp.ImageFill = function(a, c, d) {
        cp.ImageFill.baseConstructor.call(this, a);
        this.visible = 1;
        this.parentId = c;
        if (this.parentObj = cp.D[c]) {
            this.tileData = this.parentObj.imgf;
            a = this.tileData.b;
            this.bounds = {
                minX: a[0],
                minY: a[1],
                maxX: a[2],
                maxY: a[3]
            };
            this.args = d
        }
        this.isDrawn = false
    };
    cp.inherits(cp.ImageFill, cp.DisplayObject);
    cp.ImageFill.prototype.start = function(a, c) {
        this.drawIfNeeded(a, c);
        if (!this.effectIsStarted || a) {
            this.updateEffects(this.hasEffect);
            this.effectIsStarted = true
        }
    };
    cp.ImageFill.prototype.reset = function() {
        delete cp.ropMap[this.element.id];
        this.isDrawn = false;
        this.element.width = "0";
        this.element.height = "0";
        this.element.style.width = "0px";
        this.element.style.height = "0px";
        this.element.left = "0";
        this.element.top = "0";
        this.element.style.left = "0px";
        this.element.style.top = "0px"
    };
    cp.ImageFill.prototype.drawIfNeeded = function(a, c) {
        if ((!cp.responsive || !this.drawForResponsive(a, c)) && !this.isDrawn && this.tileData && this.tileData
            .img && this.tileData.img.ip) {
            if (void 0 ==
                this.canvasElem)
                for (var d = this.element.firstChild; d; d = d.nextSibling)
                    if (d.nodeType == Node.ELEMENT_NODE && d.id && d.id == this.parentId + "imgf") {
                        this.canvasElem = d;
                        break
                    } if (this.canvasElem) {
                var e = this.bounds,
                    f = e.minX,
                    g = e.minY,
                    d = e.maxX - e.minX,
                    e = e.maxY - e.minY;
                this.canvasElem.style.position = "absolute";
                this.canvasElem.style.backgroundColor = "#FFFFFF";
                var k = cp.movie.im.images[this.tileData.img.ip];
                if (k && k.nativeImage.complete) {
                    f = (this.canvas = cp.createCanvas(f, g, d, e, this.canvasElem))
                        .gc;
                    f.save();
                    var g = this.tileData.img.x,
                        m = this.tileData.img.y;
                    f.translate(g, m);
                    var l = this.tileData.s;
                    if (this.tileData.t) {
                        k = f.createPattern(k.nativeImage, "repeat");
                        f.rect(0, 0, d - g, e - m);
                        f.fillStyle = k;
                        f.fill()
                    } else l ? f.drawImage(k.nativeImage, 0, 0, d - g, e - m) : f.drawImage(k.nativeImage, 0,
                    0);
                    f.restore();
                    this.isDrawn = true
                }
            }
        }
    };
    cp.ImageFill.prototype.drawForResponsive = function(a) {
        if (!cp.responsive) return false;
        if (this.isDrawn && !a) return true;
        if (!this.tileData || !this.tileData.img || !this.tileData.img.ip) return false;
        if (void 0 == this.canvasElem)
            for (a = this.element.firstChild; a; a =
                a.nextSibling)
                if (a.nodeType == Node.ELEMENT_NODE && a.id && a.id == this.parentId + "imgf") {
                    this.canvasElem = a;
                    break
                } if (!this.canvasElem) return false;
        this.canvasElem.style.width = "100%";
        this.canvasElem.style.height = "100%";
        this.canvasElem.style.position = "absolute";
        this.canvasElem.style.backgroundColor = "#FFFFFF";
        if ((a = cp.movie.im.images[this.tileData.img.ip]) && a.nativeImage.complete) {
            var c = cp.createResponsiveStyleObj(void 0, void 0, "0px", "0px", void 0, void 0, "100%", "100%",
                void 0);
            c.ipiv = true;
            c = (this.canvas = cp.createResponsiveCanvas(c,
                    this.canvasElem.clientWidth, this.canvasElem.clientHeight, this.canvasElem))
                .gc;
            c.save();
            var d = Math.floor(this.tileData.img.x * this.canvasElem.clientWidth / cp.D.project.w),
                e = Math.floor(this.tileData.img.y * this.canvasElem.clientHeight / cp.D.project.h);
            c.translate(d, e);
            var f = this.tileData.s;
            if (this.tileData.t) {
                a = c.createPattern(a.nativeImage, "repeat");
                c.rect(0, 0, this.canvasElem.clientWidth - d, this.canvasElem.clientHeight - e);
                c.fillStyle = a;
                c.fill()
            } else f ? c.drawImage(a.nativeImage, 0, 0, this.canvasElem.clientWidth -
                d, this.canvasElem.clientHeight - e) : c.drawImage(a.nativeImage, 0, 0, a.nativeImage
                .width * this.canvasElem.clientWidth / cp.D.project.w, a.nativeImage.height * this
                .canvasElem.clientHeight / cp.D.project.h);
            c.restore();
            return this.isDrawn = true
        }
        return false
    };
    cp.Line = function(a, c) {
        cp.Line.baseConstructor.call(this, a);
        this.visible = this.getAttribute("visible");
        this.data = cp.D[this.element.id];
        this.parentDivName = this.getAttribute("dn");
        var d = document.getElementById(this.parentDivName);
        this.actualParent = d;
        var e = this.data.b;
        this.bounds = {
            minX: e[0],
            minY: e[1],
            maxX: e[2],
            maxY: e[3]
        };
        e = this.data.vb;
        this.vbounds = {
            minX: e[0],
            minY: e[1],
            maxX: e[2],
            maxY: e[3],
            width: e[2] - e[0],
            height: e[3] - e[1]
        };
        if (d) {
            d.drawingBoard = this.element.parentElement;
            d.bounds = this.bounds;
            d.drawingBoard.bounds = this.vbounds
        }
        this.args = c;
        this.isDrawn = false;
        this.sh = this.getAttribute("sh");
        this.re = this.getAttribute("re");
        if (cp.responsive) this.responsiveCSS = this.getAttribute("css")
    };
    cp.inherits(cp.Line, cp.DisplayObject);
    cp.Line.prototype.start = function(a, c) {
        this.drawIfNeeded(a,
            c);
        if (!this.effectIsStarted || a) {
            this.updateEffects(this.hasEffect);
            this.effectIsStarted = true
        }
    };
    cp.Line.prototype.reset = function() {
        delete cp.ropMap[this.element.id];
        this.isDrawn = false;
        this.element.width = "0";
        this.element.height = "0";
        this.element.style.width = "0px";
        this.element.style.height = "0px";
        this.element.left = "0";
        this.element.top = "0";
        this.element.style.left = "0px";
        this.element.style.top = "0px"
    };
    cp.Line.prototype.getLinkOffsets = function(a) {
        var c = {
            l: 0,
            t: 0,
            r: 0,
            b: 0,
            hOff: {}
        };
        c.hOff.offset = 0;
        c.hOff.poleVal = {
            init: 0,
            curr: 0
        };
        c.vOff = {};
        c.vOff.offset = 0;
        c.vOff.poleVal = {
            init: 0,
            curr: 0
        };
        var d = cp("div_Slide")
            .getBoundingClientRect(),
            e = cp("project")
            .clientWidth,
            f = cp("project")
            .clientHeight,
            g = false,
            k = false,
            m = void 0,
            l = void 0;
        if (a.lhID || a.lvID) {
            m = cp.getDisplayObjByCP_UID(a.lhID);
            l = a.lhID == a.lvID ? m : cp.getDisplayObjByCP_UID(a.lvID);
            m && (g = m.isStarted && m.isDrawnComplete);
            l && (k = l.isStarted && l.isDrawnComplete)
        }
        if (g && a.lhID != -1) {
            var n = m.actualParent;
            if (n) {
                g = n.getBoundingClientRect();
                if (n.tr) {
                    var o = m.actualParent.style.transform ||
                        m.actualParent.style.msTransform || m.actualParent.style.MozTransform || m.actualParent
                        .style.WebkitTransform || m.actualParent.style.OTransform;
                    cp.applyTransform(m.actualParent, "");
                    g = n.getBoundingClientRect();
                    cp.applyTransform(m.actualParent, o)
                }
                if (g) {
                    n = a.lhV;
                    if (n.indexOf("%") != -1) {
                        n = n.split("%")[0];
                        n = cp.getRoundedValue(n * e / 100) + "px"
                    }
                    g = g[cp.rLinkEdges[a.lhEID]];
                    g = g - d.left;
                    c.hOff.poleVal.curr = g;
                    if (a.l != "auto" && a.l != "") c.hOff.offset = parseFloat(n);
                    if (a.r != "auto" && a.r != "") c.hOff.offset = -parseFloat(n)
                }
                m = cp.createTempElemAndGetBoundingRect(m.currentCSS,
                    void 0, false);
                c.hOff.poleVal.init = m[cp.rLinkEdges[a.lhEID]] - d.left
            }
        } else c.hOff = void 0;
        if (k && a.lvID != -1) {
            if (n = l.actualParent) {
                g = n.getBoundingClientRect();
                if (n.tr) {
                    o = l.actualParent.style.transform || l.actualParent.style.msTransform || l.actualParent
                        .style.MozTransform || l.actualParent.style.WebkitTransform || l.actualParent.style
                        .OTransform;
                    cp.applyTransform(l.actualParent, "");
                    g = n.getBoundingClientRect();
                    cp.applyTransform(l.actualParent, o)
                }
                if (g) {
                    n = a.lvV;
                    if (n.indexOf("H%") != -1) {
                        n = n.split("H%")[0];
                        n = cp.getRoundedValue(n *
                            e / 100) + "px"
                    } else if (n.indexOf("%") != -1) {
                        n = n.split("%")[0];
                        n = cp.getRoundedValue(n * f / 100) + "px"
                    }
                    g = g[cp.rLinkEdges[a.lvEID]];
                    g = g - d.top;
                    c.vOff.poleVal.curr = g;
                    if (a.t != "auto" && a.t != "") c.vOff.offset = parseFloat(n);
                    if (a.b != "auto" && a.b != "") c.vOff.offset = -parseFloat(n)
                }
                m = cp.createTempElemAndGetBoundingRect(l.currentCSS, void 0, false);
                c.vOff.poleVal.init = m[cp.rLinkEdges[a.lvEID]] - d.top
            }
        } else c.vOff = void 0;
        return c
    };
    cp.Line.prototype.drawForResponsive = function(a, c) {
        if (!this.responsiveCSS) return false;
        if (this.isDrawn &&
            !a) return true;
        if (!this.data) return false;
        var d = cp.getResponsiveCSS(this.responsiveCSS),
            e = false,
            e = this.sh && !this.sh.i,
            f = this.tr != void 0;
        if (this.isDrawn && this.currentCSS == d && !e && !f && (!a || c == cp.ReasonForDrawing.kMoviePaused))
            return true;
        this.currentCSS = d;
        this.parentDivName = this.getAttribute("dn");
        var g = d,
            e = this.getLinkOffsets(d);
        cp.applyResponsiveStyles(this.element.parentElement, g, true);
        cp.applyResponsiveStyles(this.actualParent, d, true);
        var k = cp.movie.stage.mainSlideDiv.getBoundingClientRect();
        this.parentElementClientBoundingRect =
            this.element.parentElement.getBoundingClientRect();
        var f = this.parentElementClientBoundingRect.left - k.left,
            m = this.parentElementClientBoundingRect.top - k.top;
        this.actualParentClientBoundingRect = this.actualParent.getBoundingClientRect();
        var l = this.actualParent,
            n = 0,
            o = 0,
            k = cp("div_Slide")
            .clientWidth,
            q = cp("div_Slide")
            .clientHeight,
            n = k > this.element.parentElement.clientWidth ? k : this.element.parentElement.clientWidth,
            o = q > this.element.parentElement.clientHeight ? q : this.element.parentElement.clientHeight,
            g = cp.createResponsiveStyleObj(d,
                void 0, "0px", "0px", "0px", "0px", n + "px", o + "px", void 0),
            g = this.canvas = cp.createResponsiveCanvas(g, n, o, this.element);
        this.element.style["margin-left"] = -f + "px";
        this.element.style["margin-top"] = -m + "px";
        if (this.re) this.element.parentElement.style.webkitBoxReflect = "below " + this.re.d +
            "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" + (1 - this.re
                .s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p / 100) + ")))";
        cp.movie.stage.addToParentChildMap(l.id, this.element.id);
        this.element.originalParent = l;
        f = g.gc;
        f.clearRect(0, 0, this.element.getBoundingClientRect()
            .width, this.element.getBoundingClientRect()
            .height);
        cp.DESKTOP == cp.device && cp.MSIE == cp.browser && f.beginPath();
        f.save();
        if (this.sh && !this.sh.i) {
            f.shadowOffsetX = this.sh.d * Math.cos(Math.PI * this.sh.a / 180);
            f.shadowOffsetY = this.sh.d * Math.sin(Math.PI * this.sh.a / 180);
            f.shadowBlur = this.sh.b;
            f.shadowColor = cp.ConvertRGBToRGBA(this.sh.c, this.sh.o)
        }
        n = d.l;
        o = d.t;
        m = d.w;
        l = d.h;
        g = cp.getResponsiveCSS(this.data);
        if (m.indexOf("%") !=
            -1) var p = m.split("%")[0],
            m = cp.getRoundedValue(p * k / 100);
        else m = m.split("px")[0];
        if (l.indexOf("H%") != -1) {
            p = l.split("H%")[0];
            l = cp.getRoundedValue(p * k / 100)
        } else if (l.indexOf("%") != -1) {
            p = l.split("%")[0];
            l = cp.getRoundedValue(p * q / 100)
        } else l = l.split("px")[0];
        m = parseFloat(m);
        l = parseFloat(l);
        if (d.l != "auto")
            if (n.indexOf("%") != -1) {
                p = n.split("%")[0];
                n = cp.getRoundedValue(p * k / 100)
            } else n = n.split("px")[0];
        else {
            n = d.r;
            if (n.indexOf("%") != -1) {
                p = n.split("%")[0];
                n = cp.getRoundedValue(p * k / 100)
            } else n = n.split("px")[0];
            n =
                parseFloat(n);
            n = k - (n + m)
        }
        if (d.t != "auto")
            if (o.indexOf("H%") != -1) {
                p = o.split("H%")[0];
                o = cp.getRoundedValue(p * k / 100)
            } else if (o.indexOf("%") != -1) {
            p = o.split("%")[0];
            o = cp.getRoundedValue(p * q / 100)
        } else o = o.split("px")[0];
        else {
            o = d.b;
            if (o.indexOf("H%") != -1) {
                p = o.split("H%")[0];
                o = cp.getRoundedValue(p * k / 100)
            } else if (o.indexOf("%") != -1) {
                p = o.split("%")[0];
                o = cp.getRoundedValue(p * q / 100)
            } else o = o.split("px")[0];
            o = parseFloat(o);
            o = q - (o + l)
        }
        var n = parseFloat(n),
            o = parseFloat(o),
            u = p = q = k = 0;
        if (g.rpX1IsLeft != "false") {
            k = n;
            q = n +
                m
        } else {
            k = n + m;
            q = n
        }
        if (g.rpY1IsTop != "false") {
            p = o;
            u = o + l
        } else {
            p = o + l;
            u = o
        }
        m = lRightPoint = lTopPoint = lBottomPoint = 0;
        if (k > q) {
            m = q;
            lRightPoint = k
        } else {
            m = k;
            lRightPoint = q
        }
        if (p > u) {
            lTopPoint = u;
            lBottomPoint = p
        } else {
            lTopPoint = p;
            lBottomPoint = u
        }
        if (e.hOff) {
            l = 0;
            if (d.l != "" && d.l != "auto") {
                l = m;
                m = e.hOff.poleVal.curr + e.hOff.offset;
                lRightPoint = lRightPoint + (m - l)
            } else if (d.r != "" && d.r != "auto") {
                l = lRightPoint;
                lRightPoint = e.hOff.poleVal.curr + e.hOff.offset;
                m = m + (lRightPoint - l)
            }
        }
        if (e.vOff) {
            l = 0;
            if (d.t != "" && d.t != "auto") {
                l = lTopPoint;
                lTopPoint =
                    e.vOff.poleVal.curr + e.vOff.offset;
                lBottomPoint = lBottomPoint + (lTopPoint - l)
            } else if (d.b != "" && d.b != "auto") {
                l = lBottomPoint;
                lBottomPoint = e.vOff.poleVal.curr + e.vOff.offset;
                lTopPoint = lTopPoint + (lBottomPoint - l)
            }
        }
        if (k > q) {
            q = m;
            k = lRightPoint
        } else {
            k = m;
            q = lRightPoint
        }
        if (p > u) {
            u = lTopPoint;
            p = lBottomPoint
        } else {
            p = lTopPoint;
            u = lBottomPoint
        }
        d = this.data.sw;
        d < 5 && (d = 5);
        f.lineWidth = this.data.sw;
        f.strokeStyle = this.data.sc;
        f.moveTo(k, p);
        0 == this.data.ss ? f.lineTo(q, u) : cp.drawDashedLine(f, k, p, q, u, this.data.ss);
        f.stroke();
        cp.drawLineCapStyle(f,
            k, p, q, u, this.data.sc, d, this.data.sst, 0);
        cp.drawLineCapStyle(f, k, p, q, u, this.data.sc, d, this.data.est, 1);
        f.restore();
        this.isDrawn = true;
        this.drawComplete(c);
        this.visible || cp.hide(this.parentDivName);
        return true
    };
    cp.Line.prototype.drawIfNeeded = function(a, c) {
        if ((!cp.responsive || !this.drawForResponsive(a, c)) && !this.isDrawn && this.data) {
            var d = this.bounds,
                e = this.vbounds,
                f = this.data.sw;
            f < 5 && (f = 5);
            var g = d.minX,
                k = d.minY,
                m = d.maxX - d.minX,
                l = d.maxY - d.minY,
                d = this.actualParent;
            d.style.left = g + "px";
            d.style.top = k + "px";
            d.style.width = m + "px";
            d.style.height = l + "px";
            g = 0 < e.minX ? 0 : e.minX;
            k = 0 < e.minY ? 0 : e.minY;
            l = cp.D.project.h > e.maxY ? cp.D.project.h : e.maxY;
            m = (cp.D.project.w > e.maxX ? cp.D.project.w : e.maxX) - g;
            e = this.canvas = cp.createCanvas(0, 0, m, l - k, this.element);
            this.element.style.display = "block";
            this.element.style.position = "absolute";
            this.element.parentElement.style.left = this.vbounds.minX + "px";
            this.element.parentElement.style.top = this.vbounds.minY + "px";
            this.element.parentElement.style.width = this.vbounds.maxX - this.vbounds.minX +
                "px";
            this.element.parentElement.style.height = this.vbounds.maxY - this.vbounds.minY + "px";
            this.element.style.marginLeft = g - this.vbounds.minX + "px";
            this.element.style.marginTop = k - this.vbounds.minY + "px";
            if (this.re) this.element.parentElement.style.webkitBoxReflect = "below " + this.re.d +
                "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" + (1 - this
                    .re.s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p / 100) + ")))";
            cp.movie.stage.addToParentChildMap(d.id, this.element.id);
            this.element.originalParent =
                d;
            e = e.gc;
            e.save();
            e.translate(g < 0 ? -g : 0, k < 0 ? -k : 0);
            if (this.sh && !this.sh.i) {
                e.shadowOffsetX = this.sh.d * Math.cos(Math.PI * this.sh.a / 180);
                e.shadowOffsetY = this.sh.d * Math.sin(Math.PI * this.sh.a / 180);
                e.shadowBlur = this.sh.b;
                e.shadowColor = cp.ConvertRGBToRGBA(this.sh.c, this.sh.o)
            }
            g = this.data.x1;
            k = this.data.y1;
            m = this.data.x2;
            d = this.data.y2;
            e.lineWidth = this.data.sw;
            e.strokeStyle = this.data.sc;
            e.moveTo(g, k);
            0 == this.data.ss ? e.lineTo(m, d) : cp.drawDashedLine(e, g, k, m, d, this.data.ss);
            e.stroke();
            cp.drawLineCapStyle(e, g, k,
                m, d, this.data.sc, f, this.data.sst, 0);
            cp.drawLineCapStyle(e, g, k, m, d, this.data.sc, f, this.data.est, 1);
            e.restore();
            this.isDrawn = true;
            this.visible || cp.hide(this.parentDivName)
        }
    };
    cp.DrawingItem = function(a, c, d) {
        cp.DrawingItem.baseConstructor.call(this, a);
        this.visible = this.getAttribute("visible");
        this.parentId = cp.D[c].dn;
        this.parentObj = cp.D[this.parentId];
        this.canvasObj = null;
        this.transIn = this.parentObj.trin;
        if (void 0 != this.parentObj) this.canvasObj = cp.D[this.parentObj.mdi];
        this.parentDivName = this.getAttribute("dn");
        this.actualParent = a = document.getElementById(this.parentDivName);
        if (this.canvasObj) {
            this.type = this.canvasObj.t;
            c = this.canvasObj.b;
            this.bounds = {
                minX: c[0],
                minY: c[1],
                maxX: c[2],
                maxY: c[3],
                width: c[2] - c[0],
                height: c[3] - c[1]
            };
            this.args = d;
            d = this.canvasObj.vb;
            this.vbounds = {
                minX: d[0],
                minY: d[1],
                maxX: d[2],
                maxY: d[3],
                width: d[2] - d[0],
                height: d[3] - d[1]
            };
            this.sh = this.canvasObj.sh;
            this.re = this.canvasObj.re;
            this.tr = this.canvasObj.tr;
            this.currImage = this.getAttribute("ip")
        }
        if (a) {
            a.drawingBoard = this.element.parentElement;
            a.bounds = this.bounds;
            a.drawingBoard.bounds = this.vbounds
        }
        this.isDrawn = false;
        if (cp.responsive) this.responsiveCSS = this.getAttribute("css")
    };
    cp.inherits(cp.DrawingItem, cp.DisplayObject);
    cp.DrawingItem.prototype.start = function(a, c) {
        this.drawIfNeeded(a, c);
        if (!this.effectIsStarted || a) {
            this.updateEffects(this.hasEffect);
            this.effectIsStarted = true
        }
    };
    cp.DrawingItem.prototype.reset = function() {
        delete cp.ropMap[this.element.id];
        this.isDrawn = false;
        this.element.width = "0";
        this.element.height = "0";
        this.element.style.width =
            "0px";
        this.element.style.height = "0px";
        this.element.left = "0";
        this.element.top = "0";
        this.element.style.left = "0px";
        this.element.style.top = "0px"
    };
    cp.DrawingItem.prototype.drawForResponsive = function(a, c) {
        if (!this.responsiveCSS) return false;
        if (this.isDrawn && !a) return true;
        var d = cp.getResponsiveCSS(this.responsiveCSS),
            e = false,
            e = this.sh && !this.sh.i;
        if (!this.isDrawn || !(this.currentCSS == d && a && c == cp.ReasonForDrawing.kMoviePaused)) {
            this.currentCSS = d;
            if (this.canvasObj && this.type) {
                var f = this.canvasObj,
                    g = this.getAttribute("dn"),
                    k = cp.D[g];
                this.parentDivName = g;
                var m = d;
                cp.applyTransform(this.actualParent, "rotate(0)");
                cp.applyResponsiveStyles(this.actualParent, d, true);
                if (k.rpvt && k.autoGrow && (c == cp.ReasonForDrawing.kTextGrow || c == cp.ReasonForDrawing
                        .kMouseEvent)) {
                    g = k.minItemHeight;
                    if (!g) {
                        g = k.variableText;
                        if (g == void 0) g = k.rpvt[cp.ResponsiveProjWidth].vt;
                        var l = this.actualParent.clientWidth,
                            n = k.offsets;
                        n && (l = l - (n[0] + n[2]));
                        l = l - ((k.rplm ? k.rplm[cp.ResponsiveProjWidth] : 0) + (k.rprm ? k.rprm[cp
                            .ResponsiveProjWidth] : 0));
                        g = cp.createTempTextElemAndGetBoundingRect(l,
                                k, g)
                            .height
                    }
                    if (this.actualParent.clientHeight < g) this.actualParent.style.height = g + "px";
                    cp.createResponsiveStyleObj(d, d.p, d.l, d.t, d.r, d.b, this.actualParent.clientWidth +
                        "px", this.actualParent.clientHeight + "px", d.crop)
                }
                this.actualParent.offsetHeight = this.actualParent.offsetHeight;
                this.actualParentClientBoundingRect = this.actualParent.getBoundingClientRect();
                var o = cp.movie.stage.mainSlideDiv.getBoundingClientRect();
                this.HFactor = this.WFactor = 1;
                this.WFactor = Math.round(100 * this.actualParent.clientWidth / this.bounds.width) /
                    100;
                this.HFactor = Math.round(100 * this.actualParent.clientHeight / this.bounds.height) / 100;
                g = 0;
                this.tr && (g = cp.getAngleFromRotateStr(this.tr));
                if (!this.m_centrePoint || c == cp.ReasonForDrawing.kOrientationChangeOrResize || c == cp
                    .ReasonForDrawing.kLinkedToItemAppeared) this.m_centrePoint = cp.getCenterForRotation(this
                    .actualParent);
                l = cp.getBoundsForRotatedItem1(this.actualParentClientBoundingRect.left - o.left, this
                    .actualParentClientBoundingRect.top - o.top, this.actualParentClientBoundingRect.width,
                    this.actualParentClientBoundingRect.height,
                    this.m_centrePoint, g, this.strokeWidth);
                n = t = r = b = void 0;
                if (d.l != "auto") n = l.l;
                if (d.t != "auto") t = l.t;
                if (d.r != "auto") r = l.r;
                if (d.b != "auto") b = l.b;
                m = cp.createResponsiveStyleObj(d, d.p, n, t, r, b, l.w, l.h, d.crop);
                cp.applyResponsiveStyles(this.element.parentElement, m);
                this.parentElementClientBoundingRect = this.element.parentElement.getBoundingClientRect();
                n = l = 0;
                if (this.m_centrePoint) {
                    l = this.m_centrePoint.X - (this.actualParentClientBoundingRect.left - o.left);
                    n = this.m_centrePoint.Y - (this.actualParentClientBoundingRect.top -
                        o.top)
                }
                if (k.rpvt) {
                    var q = this.actualParent.id + "_vTxtHandlerHolder",
                        p = cp(q);
                    if (!p) {
                        p = cp.newElem("div");
                        p.id = q;
                        p.style.display = "block";
                        p.style.position = "absolute";
                        p.style.width = this.actualParent.clientWidth + "px";
                        p.style.height = this.actualParent.clientHeight + "px";
                        p.style.visibility = "hidden";
                        this.actualParent.appendChild(p)
                    }
                    p.style.left = "0px";
                    p.style.top = "0px";
                    p.style.width = this.actualParent.clientWidth + "px";
                    p.style.height = this.actualParent.clientHeight + "px";
                    p = this.actualParent.id + "_vTxtHolder";
                    q = cp(p);
                    if (!q) {
                        q = cp.newElem("div");
                        q.id = p;
                        q.style.display = "block";
                        q.style.position = "absolute";
                        this.element.parentElement.appendChild(q);
                        q.style.width = this.actualParent.clientWidth + "px";
                        q.style.height = this.actualParent.clientHeight + "px"
                    }
                    cp.applyTransform(q, "rotate(0)");
                    p = this.actualParentClientBoundingRect.top - this.parentElementClientBoundingRect.top +
                        this.actualParent.clientHeight / 2;
                    q.style.left = this.actualParentClientBoundingRect.left - this
                        .parentElementClientBoundingRect.left + this.actualParent.clientWidth /
                        2 - this.actualParent.clientWidth / 2 + "px";
                    q.style.top = p - this.actualParent.clientHeight / 2 + "px";
                    q.style.width = this.actualParent.clientWidth + "px";
                    q.style.height = this.actualParent.clientHeight + "px";
                    c == cp.ReasonForDrawing.kOrientationChangeOrResize && cp.updateVarText(this.actualParent,
                        true, true);
                    if (this.tr) {
                        q.style.left = (this.element.parentElement.clientWidth - q.clientWidth) / 2 + "px";
                        q.style.top = (this.element.parentElement.clientHeight - q.clientHeight) / 2 + "px";
                        p = "center center";
                        q.style["-ms-transform-origin"] =
                            p;
                        q.style["-moz-transform-origin"] = p;
                        q.style["-webkit-transform-origin"] = p;
                        q.style["-o-transform-origin"] = p;
                        q.style["transform-origin"] = p;
                        cp.applyTransform(q, this.tr)
                    }
                }
                var q = this.actualParent,
                    u = 0,
                    s = 0;
                if (e) {
                    u = cp("div_Slide")
                        .clientWidth;
                    s = cp("div_Slide")
                        .clientHeight
                } else {
                    u = this.element.parentElement.clientWidth;
                    s = this.element.parentElement.clientHeight
                }
                var m = cp.createResponsiveStyleObj(d, void 0, "0px", "0px", "0px", "0px", u + "px", s + "px",
                        void 0),
                    p = this.parentElementClientBoundingRect.left - o.left,
                    v = this.parentElementClientBoundingRect.top -
                    o.top,
                    m = this.canvas = cp.createResponsiveCanvas(m, u, s, this.element);
                if (!this.isParentOfTypeSlide && e) {
                    this.element.style["margin-left"] = (p < 0 ? 1 : -1) * p + "px";
                    this.element.style["margin-top"] = (v < 0 ? 1 : -1) * v + "px"
                }
                if (this.re) this.element.parentElement.style.webkitBoxReflect = "below " + this.re.d +
                    "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" + (1 -
                        this.re.s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p / 100) +
                    ")))";
                cp.movie.stage.addToParentChildMap(q.id, this.element.id);
                this.element.originalParent = q;
                o = m.gc;
                o.crop = d.crop ? d.crop : void 0;
                o.save();
                if (e) {
                    o.setTransform(1, 0, 0, 1, p < 0 ? -p : 0, v < 0 ? -v : 0);
                    o.translate(p, v);
                    o.shadowOffsetX = this.sh.d * Math.cos(Math.PI * this.sh.a / 180);
                    o.shadowOffsetY = this.sh.d * Math.sin(Math.PI * this.sh.a / 180);
                    o.shadowBlur = this.sh.b;
                    d = this.sh.o;
                    d == 1 && (d = 0.999);
                    o.shadowColor = cp.ConvertRGBToRGBA(this.sh.c, d)
                }
                this.element.style.display = "block";
                this.element.style.position = "absolute";
                o = m.gc;
                o.save();
                if (this.tr) {
                    p = l ? l * 100 / q.clientWidth + "%" : "center";
                    p = p + " ";
                    p =
                        n ? p + (n * 100 / q.clientHeight + "%") : p + "center";
                    q.style["-ms-transform-origin"] = p;
                    q.style["-moz-transform-origin"] = p;
                    q.style["-webkit-transform-origin"] = p;
                    q.style["-o-transform-origin"] = p;
                    q.style["transform-origin"] = p;
                    cp.applyTransform(q, this.tr);
                    q.tr = this.tr
                }
                q.rotateAngle = g;
                d = this.element.parentElement.clientWidth / 2;
                e = this.element.parentElement.clientHeight / 2;
                d = this.actualParentClientBoundingRect.left - this.parentElementClientBoundingRect.left + l;
                e = this.actualParentClientBoundingRect.top - this.parentElementClientBoundingRect.top +
                    n;
                o.translate(d, e);
                0 != g ? o.rotate(Math.PI * g / 180) : o.rotate(Math.PI * 0.02 / 180);
                o.translate(-l, -n);
                d = 0;
                if (void 0 != f.ss) d = f.ss;
                if ((f = this.draw(o, d)) && void 0 != this.normalImage)
                    if ((d = cp.movie.im.images[this.normalImage]) && d.nativeImage.complete) {
                        if (this.sh && !this.sh.i) {
                            o.shadowOffsetX = 0;
                            o.shadowOffsetY = 0;
                            o.shadowBlur = 0;
                            o.shadowColor = "rgba(0,0,0,0)"
                        }
                        o.drawImage(d.nativeImage, -d.nativeImage.width / 2, -d.nativeImage.height / 2, d
                            .nativeImage.width, d.nativeImage.height)
                    } else f = false;
                o.restore();
                if (this.transIn && c ==
                    cp.ReasonForDrawing.kRegularDraw) this.element.parentElement.style.opacity = 0;
                cp.handleQuizzingItemsInReviewMode(this.element, k, this.parentDivName);
                this.isDrawn = f;
                this.isDrawn == true && this.drawComplete(c);
                this.visible || cp.hide(this.parentDivName);
                return true
            }
        }
    };
    cp.DrawingItem.prototype.drawIfNeeded = function(a, c) {
        if ((!cp.responsive || !this.drawForResponsive(a, c)) && !this.isDrawn && this.canvasObj && this.type &&
            this.canvasObj.b) {
            this.HFactor = this.WFactor = 1;
            var d = this.bounds,
                e = this.vbounds,
                f = this.getAttribute("dn"),
                f = cp.D[f],
                g = d.minX,
                k = d.minY,
                m = d.maxX - d.minX,
                l = d.maxY - d.minY,
                n = this.actualParent;
            n.style.left = g + "px";
            n.style.top = k + "px";
            n.style.width = m + "px";
            n.style.height = l + "px";
            var l = false,
                l = this.re || this.sh && !this.sh.i,
                g = 0 < e.minX && l ? 0 : e.minX,
                k = 0 < e.minY && l ? 0 : e.minY,
                o = l && cp.D.project.h > e.maxY ? cp.D.project.h : e.maxY,
                m = (l && cp.D.project.w > e.maxX ? cp.D.project.w : e.maxX) - g,
                m = this.canvas = cp.createCanvas(0, 0, m, o - k, this.element);
            this.element.style.display = "block";
            this.element.style.position = "absolute";
            this.element.parentElement.style.left =
                this.vbounds.minX + "px";
            this.element.parentElement.style.top = this.vbounds.minY + "px";
            this.element.parentElement.style.width = this.vbounds.maxX - this.vbounds.minX + "px";
            this.element.parentElement.style.height = this.vbounds.maxY - this.vbounds.minY + "px";
            this.element.style.marginLeft = g - this.vbounds.minX + "px";
            this.element.style.marginTop = k - this.vbounds.minY + "px";
            if (this.re) this.element.parentElement.style.webkitBoxReflect = "below " + this.re.d +
                "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" +
                (1 - this.re.s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p / 100) +
                ")))";
            cp.movie.stage.addToParentChildMap(n.id, this.element.id);
            this.element.originalParent = n;
            e = m.gc;
            e.save();
            l ? e.setTransform(1, 0, 0, 1, g < 0 ? -g : 0, k < 0 ? -k : 0) : e.translate(-this.vbounds.minX, -
                this.vbounds.minY);
            if (this.sh && !this.sh.i) {
                e.shadowOffsetX = this.sh.d * Math.cos(Math.PI * this.sh.a / 180);
                e.shadowOffsetY = this.sh.d * Math.sin(Math.PI * this.sh.a / 180);
                e.shadowBlur = this.sh.b;
                e.shadowColor = cp.ConvertRGBToRGBA(this.sh.c, this.sh.o)
            }
            this.element.style.display =
                "block";
            this.element.style.position = "absolute";
            e = m.gc;
            e.save();
            g = 0;
            this.tr && (g = cp.getAngleFromRotateStr(this.tr));
            n.rotateAngle = g;
            if (this.sh || 0 != g) {
                e.translate((d.minX + d.maxX) / 2, (d.minY + d.maxY) / 2);
                0 != g ? e.rotate(Math.PI * g / 180) : e.rotate(Math.PI * 0.02 / 180);
                e.translate(-(d.minX + d.maxX) / 2, -(d.minY + d.maxY) / 2)
            }
            n = 0;
            if (void 0 != this.canvasObj.ss) n = this.canvasObj.ss;
            if ((n = this.draw(e, n)) && void 0 != this.currImage)
                if ((g = cp.movie.im.images[this.currImage]) && g.nativeImage.complete) {
                    e.translate((d.minX + d.maxX) / 2, (d.minY +
                        d.maxY) / 2);
                    e.drawImage(g.nativeImage, -g.nativeImage.width / 2, -g.nativeImage.height / 2, g
                        .nativeImage.width, g.nativeImage.height)
                } else n = false;
            cp.handleQuizzingItemsInReviewMode(this.element, f, this.parentDivName);
            e.restore();
            if (this.transIn) this.element.parentElement.style.opacity = 0;
            this.isDrawn = n;
            this.isDrawn == true && this.drawComplete(c)
        }
    };
    cp.DrawingItem.prototype.draw = function(a, c) {
        switch (this.type) {
            case cp.kCPOTOvalItem:
                this.drawOval(a, 0);
                break;
            case cp.kCPOTAnswerArea:
            case cp.kCPOTMatchingQuestionArea:
            case cp.kCPOTMatchingAnswerArea:
            case cp.kCPOTStageQuestionText:
            case cp.kCPOTStageQuestionTitle:
            case cp.kCPOTRectangleItem:
            case cp.kCPOTLikertQuestionArea:
            case cp.kCPOTLikertTotalGroupArea:
            case cp.kCPOTScorableButtonItem:
            case cp.kCPOTTextEntryButtonItem:
            case cp.kCPOTRetakeButton:
            case cp.kCPOTStageQuestionNextButton:
            case cp.kCPOTStageQuestionClearButton:
            case cp.kCPOTStageQuestionBackButton:
            case cp.kCPOTStageQuestionSubmitButton:
            case cp.kCPOTScoringReviewButton:
            case cp.kCPOTScoringContinueButton:
            case cp.kCPOTSubmitAllButton:
            case cp.kCPOTResetButton:
            case cp.kCPOTUndoButton:
            case cp.kCPOTDDSubmitButton:
                this.drawRectangle(a,
                    0);
                break;
            case cp.kCPOTPolygon:
                this.drawPolygon(a, 0);
                break;
            default:
                return true
        }
        var d = 1;
        void 0 != this.canvasObj.fa && (d = this.canvasObj.fa / 100);
        var e = a.globalAlpha;
        a.globalAlpha = d;
        if (cp.responsive && cp.D[this.parentDivName].shouldShowDisabledState) a.globalAlpha = 0.5;
        d = this.setFill(a);
        a.globalAlpha = e;
        if (0 != c && this.canvasObj.sw > 0) switch (this.type) {
            case cp.kCPOTOvalItem:
                this.drawOval(a, c);
                break;
            case cp.kCPOTAnswerArea:
            case cp.kCPOTMatchingQuestionArea:
            case cp.kCPOTMatchingAnswerArea:
            case cp.kCPOTStageQuestionText:
            case cp.kCPOTStageQuestionTitle:
            case cp.kCPOTRectangleItem:
            case cp.kCPOTLikertQuestionArea:
            case cp.kCPOTLikertTotalGroupArea:
            case cp.kCPOTScorableButtonItem:
            case cp.kCPOTTextEntryButtonItem:
            case cp.kCPOTRetakeButton:
            case cp.kCPOTStageQuestionNextButton:
            case cp.kCPOTStageQuestionClearButton:
            case cp.kCPOTStageQuestionBackButton:
            case cp.kCPOTStageQuestionSubmitButton:
            case cp.kCPOTScoringReviewButton:
            case cp.kCPOTScoringContinueButton:
            case cp.kCPOTSubmitAllButton:
            case cp.kCPOTResetButton:
            case cp.kCPOTUndoButton:
            case cp.kCPOTDDSubmitButton:
                this.drawRectangle(a,
                    c);
                break;
            case cp.kCPOTPolygon:
                this.drawPolygon(a, c);
                break;
            default:
                return true
        }
        if (this.canvasObj.sw > 0) {
            a.lineWidth = this.canvasObj.sw;
            a.strokeStyle = this.canvasObj.sc;
            a.stroke()
        }
        return d
    };
    cp.DrawingItem.prototype.setFill = function(a) {
        var c = null,
            d = "",
            d = null,
            e = [],
            f = 0,
            g = 0,
            k = 0,
            m = 1,
            c = c = null,
            k = true,
            l = 0,
            e = l = 1,
            n = false,
            o = false;
        if (this.canvasObj.gf) {
            if (c = cp.getGradientFill(this.canvasObj.gf, a)) a.fillStyle = c
        } else if (this.canvasObj.imgf) {
            k = false;
            c = this.canvasObj.imgf;
            if (void 0 == c.img || void 0 == c.img.ip) return false;
            d = c.img.ip;
            if ((d = cp.movie.im.images[d]) && d.nativeImage.complete) {
                f = c.img.x;
                g = c.img.y;
                if (cp.responsive) {
                    f = Math.floor(f * this.WFactor) + this.canvasObj.sw;
                    g = Math.floor(g * this.HFactor) + this.canvasObj.sw
                } else {
                    f = f + this.canvasObj.b[0];
                    g = g + this.canvasObj.b[1]
                }
                n = true;
                a.translate(f, g);
                k = c.s;
                if (m = c.t) {
                    c = a.createPattern(d.nativeImage, "repeat");
                    a.fillStyle = c
                } else if (k) {
                    if (void 0 != this.canvasObj.b && 4 == this.canvasObj.b.length) {
                        e = this.canvasObj.b;
                        l = e[2] - e[0];
                        h = e[3] - e[1];
                        if (cp.responsive) {
                            l = l * this.WFactor;
                            h = h * this.HFactor
                        }
                        l =
                            l / c.img.w;
                        e = h / c.img.h;
                        a.scale(l, e);
                        c = a.createPattern(d.nativeImage, "no-repeat");
                        a.fillStyle = c
                    }
                } else {
                    c = a.globalAlpha;
                    a.globalAlpha = 0;
                    a.fillStyle = "#FFFFFF";
                    a.fill();
                    a.globalAlpha = c;
                    c = a.createPattern(d.nativeImage, "no-repeat");
                    a.fillStyle = c
                }
                k = true
            }
        } else if (this.canvasObj.bc) a.fillStyle = this.canvasObj.bc;
        else if (this.currImage) {
            o = true;
            k = false
        }
        k && a.fill();
        (1 != l || 1 != e) && a.scale(1 / l, 1 / e);
        n && a.translate(-f, -g);
        return k || o
    };
    cp.DrawingItem.prototype.drawRectangle = function(a, c) {
        var d = 0,
            e = [],
            f = 0,
            g = 0,
            k = 0,
            m = k =
            0,
            l = 0,
            e = 0;
        if (!(void 0 == this.canvasObj.b || 4 != this.canvasObj.b.length)) {
            e = this.canvasObj.b;
            f = e[2] - e[0];
            g = e[3] - e[1];
            k = f;
            g < f && (k = g);
            if (void 0 != this.canvasObj.cr) {
                d = this.canvasObj.cr;
                d = k * d / 100
            }
            k = e[0];
            m = e[1];
            l = e[2];
            e = e[3];
            if (cp.responsive) {
                l = this.WFactor * (l - k);
                e = this.HFactor * (e - m);
                k = this.WFactor * (k - k);
                m = this.HFactor * (m - m);
                g = e - m;
                f = l - k
            }
            if (0 != c) cp.drawDashedRectangle(a, k, m, f, g, d, c);
            else {
                a.beginPath();
                cp.moveTo(a, k, e - d, c);
                cp.lineTo(a, k, m + d, c);
                d > 0 && cp.bezierCurveTo(a, k, m + d, k, m, k + d, m, c);
                cp.lineTo(a, k + d, m, c);
                cp.lineTo(a, l - d, m, c);
                d > 0 && cp.bezierCurveTo(a, l - d, m, l, m, l, m + d, c);
                cp.lineTo(a, l, m + d, c);
                cp.lineTo(a, l, e - d, c);
                d > 0 && cp.bezierCurveTo(a, l, e - d, l, e, l - d, e, c);
                cp.lineTo(a, l - d, e, c);
                cp.lineTo(a, k + d, e, c);
                d > 0 && cp.bezierCurveTo(a, k + d, e, k, e, k, e - d, c);
                a.closePath()
            }
        }
    };
    cp.DrawingItem.prototype.drawOval = function(a, c) {
        var d = [],
            e = d = 0,
            f = 0,
            g = 0,
            k = 0,
            m = 0,
            l = 0,
            n = 0;
        if (!(void 0 == this.canvasObj.b || 4 != this.canvasObj.b.length)) {
            d = this.canvasObj.b;
            f = d[0];
            g = d[1];
            k = d[2];
            m = d[3];
            if (cp.responsive) {
                f = this.WFactor * f;
                g = this.HFactor * g;
                k = this.WFactor *
                    k;
                m = this.HFactor * m
            }
            d = (k - f) / 2;
            e = (m - g) / 2;
            l = 0.55285 * d;
            n = 0.55285 * e;
            if (0 != c) cp.drawDashedOval(a, (f + k) / 2, (g + m) / 2, d, e, c);
            else {
                a.beginPath();
                cp.moveTo(a, k, g + e, c);
                cp.bezierCurveTo(a, k, g + e + n, f + d + l, m, f + d, m, c);
                cp.bezierCurveTo(a, f + d - l, m, f, g + e + n, f, g + e, c);
                cp.bezierCurveTo(a, f, g + e - n, f + d - l, g, f + d, g, c);
                cp.bezierCurveTo(a, f + d + l, g, k, g + e - n, k, g + e, c);
                a.closePath()
            }
        }
    };
    cp.DrawingItem.prototype.drawPolygon = function(a, c) {
        var d = null,
            e = this.canvasObj.pta,
            f = 0;
        if (!(void 0 == e || e.length < 2))
            if (0 != c) cp.drawDashedPolyLine(a, e, c, this.WFactor,
                this.HFactor);
            else {
                a.beginPath();
                d = e[0];
                cp.moveTo(a, this.WFactor * d.x, this.HFactor * d.y, c);
                for (f = 1; f < e.length; ++f) {
                    d = e[f];
                    cp.lineTo(a, this.WFactor * d.x, this.HFactor * d.y, c)
                }
                a.closePath()
            }
    };
    cp.AnswerArea = function(a, c) {
        cp.AnswerArea.baseConstructor.call(this, a, c);
        this.canvasElem = this.element
    };
    cp.inherits(cp.AnswerArea, cp.DrawingItem);
    cp.RectWithText = function(a, c) {
        cp.RectWithText.baseConstructor.call(this, a, c);
        this.canvasElem = this.element;
        this.currImage = this.getAttribute("ip")
    };
    cp.inherits(cp.RectWithText,
        cp.DrawingItem);
    cp.TypingText = function(a, c) {
        cp.TypingText.baseConstructor.call(this, a, c);
        this.id = this.getAttribute("id");
        this.positions = this.getAttribute("b");
        this.left = this.getAttribute("l");
        this.top = this.getAttribute("t");
        this.srcimage = this.getAttribute("ip");
        this.playKeyTap = this.getAttribute("pkt");
        this.isDrawn = false;
        if (cp.responsive) this.responsiveCSS = this.getAttribute("css")
    };
    cp.inherits(cp.TypingText, cp.DisplayObject);
    cp.TypingText.prototype.start = function(a, c) {
        this.addIfNeeded(a, c);
        if (!this.effectIsStarted ||
            a) {
            this.updateEffects(this.hasEffect);
            this.effectIsStarted = true
        }
    };
    cp.TypingText.prototype.reset = function() {
        delete cp.ropMap[this.element.id];
        this.top = this.left = this.srcimage = this.positions = this.id = "";
        this.isDrawn = false
    };
    cp.TypingText.prototype.drawForResponsive = function(a) {
        if (this.isDrawn && !a) return true;
        for (var c = 0; c < 1; ++c) {
            var d = this.positions,
                e = d[2],
                f = d[3],
                g = d[0],
                d = d[1],
                k = cp.movie.im.images[this.srcimage];
            if (k && k.nativeImage.complete) {
                var m = cp.movie.stage.currentSlide;
                if (m) {
                    var l = cp.D["Slide" +
                        m.id + "c"];
                    if (!(l.aip ? l.aip : l.ip)) break
                }
                l = cp("Slide" + m.id + "sf_c");
                if (!l) {
                    this.canvas = cp.createCanvas(0, 0, cp.D.project.w, cp.D.project.h, l);
                    l = this.canvas.element;
                    l.id = "Slide" + m.id + "sf_c";
                    l.style.display = "block";
                    l.style.position = "absolute";
                    l.style.left = "0px";
                    l.style.top = "0px";
                    var n = document.getElementById("Slide" + m.id + "c");
                    n.parentElement.insertBefore(l, n.nextSibling)
                }
                if (cp.movie.stage.isSlideBGCropped()) {
                    m = cp.D[m.mdi].css[cp.ResponsiveProjWidth];
                    l.style.left = -m.crop.x + "px";
                    l.style.top = -m.crop.y + "px";
                    l.style.width = cp.D.project.w + "px";
                    l.style.height = cp.D.project.h + "px"
                } else {
                    l.style.left = "0px";
                    l.style.top = "0px";
                    l.style.width = "100%";
                    l.style.height = "100%"
                }
                if (!a) {
                    m = l.getContext("2d");
                    m.setTransform(1, 0, 0, 1, this.left < 0 ? -this.left : 0, this.top < 0 ? -this.top : 0);
                    m.translate(0, 0);
                    m.drawImage(k.nativeImage, g, d, e, f, Math.floor(this.left), Math.floor(this.top), Math
                        .floor(e), Math.floor(f))
                }
                this.playKeyTap && (cp.movie.playKeyTap && !a) && cp.movie.am.playKeyTap();
                this.isDrawn = true
            }
        }
        return true
    };
    cp.TypingText.prototype.addIfNeeded =
        function(a, c) {
            if ((!cp.responsive || !this.drawForResponsive(a, c)) && !this.isDrawn) {
                for (var d = this.id, e = 0, f = 0; f < 1; ++f) {
                    var g = this.positions,
                        e = e + 1,
                        g = "#" + d + e + "{position: absolute; width:" + (g[2] + "px") + "; height:" + (g[3] +
                            "px") + "; display:block; background:url(" + this.srcimage + ") " + (-g[0] + "px") +
                        " " + (-g[1] + "px") + "; }",
                        k = document.getElementsByTagName("style")[0];
                    k.innerHTML.indexOf(g) != -1 == false && k.appendChild(document.createTextNode(g));
                    g = cp.newElem("img");
                    g.id = d + e;
                    g.src = "assets/htmlimages/img_trans.gif";
                    g.style.left =
                        this.left + "px";
                    g.style.top = this.top + "px";
                    g.width = 1;
                    g.height = 1;
                    this.element.appendChild(g)
                }
                this.isDrawn = true;
                this.playKeyTap && cp.movie.playKeyTap && cp.movie.am.playKeyTap()
            }
        };
    cp.mouseStateOver = 1;
    cp.mouseStateOut = 2;
    cp.mouseStateDown = 3;
    cp.mouseStateUp = 4;
    cp.mouseStateTouchStart = 5;
    cp.mouseStateTouchMove = 6;
    cp.mouseStateTouchEnd = 7;
    cp.Shape = function(a, c) {
        function d() {
            m.visible = m.getAttribute("visible");
            m.isDrawn = false;
            if (cp.responsive) m.currentCSS = void 0;
            m.currImage = cp.device == cp.IDEVICE || cp.device == cp.ANDROID ?
                m.downImage : m.hoverImage;
            var a = m.transIn,
                c = m.modifyParent;
            m.modifyParent = false;
            m.transIn = null;
            m.drawIfNeeded();
            m.transIn = a;
            m.modifyParent = c
        }

        function e() {
            m.visible = m.getAttribute("visible");
            m.isDrawn = false;
            if (cp.responsive) m.currentCSS = void 0;
            m.currImage = m.normalImage;
            var a = m.transIn,
                c = m.modifyParent;
            m.modifyParent = false;
            m.transIn = null;
            m.drawIfNeeded();
            m.transIn = a;
            m.modifyParent = c
        }

        function f() {
            m.isDrawn = false;
            if (cp.responsive) m.currentCSS = void 0;
            m.currImage = m.downImage;
            var a = m.transIn,
                c = m.modifyParent;
            m.modifyParent = false;
            m.transIn = null;
            m.drawIfNeeded();
            m.transIn = a;
            m.modifyParent = c
        }

        function g() {
            m.isDrawn = false;
            if (cp.responsive) m.currentCSS = void 0;
            m.currImage = m.hoverImage && cp.device != cp.IDEVICE && cp.device != cp.ANDROID ? m.hoverImage : m
                .normalImage;
            var a = m.transIn,
                c = m.modifyParent;
            m.modifyParent = false;
            m.transIn = null;
            m.drawIfNeeded();
            m.transIn = a;
            m.modifyParent = c
        }

        function k(a, c, d, e) {
            return function() {
                if (!(m.parentData && void 0 != m.parentData.enabled) || m.parentData.enabled) {
                    e && e();
                    if (!(d && m.mouseState == a)) {
                        m.mouseState =
                            a;
                        c()
                    }
                }
            }
        }
        var m = this;
        this.mouseState = cp.mouseStateOut;
        cp.Shape.baseConstructor.call(this, a);
        var l = this.getAttribute("sr");
        if (l) this.shape = l;
        if (cp.responsive) this.responsiveCSS = this.getAttribute("css");
        l = this.getAttribute("b");
        this.bounds = {
            minX: l[0],
            minY: l[1],
            maxX: l[2],
            maxY: l[3]
        };
        l = this.getAttribute("vb");
        this.vbounds = null;
        this.vbounds = l ? {
            minX: l[0],
            minY: l[1],
            maxX: l[2],
            maxY: l[3]
        } : this.bounds;
        this.args = c;
        this.isDrawn = false;
        this.canvas = null;
        this.visible = this.getAttribute("visible");
        this.divName = this.getAttribute("dns") ?
            this.getAttribute("dns") : this.getAttribute("dn");
        this.tex = this.getAttribute("tex") ? this.getAttribute("tex") : 0;
        this.tey = this.getAttribute("tey") ? this.getAttribute("tey") : 0;
        this.parentData = cp.D[this.divName];
        this.isParentOfTypeSlide = void 0 == this.parentData.type;
        this.modifyParent = !this.isParentOfTypeSlide;
        this.transIn = this.parentData.trin;
        this.normalImage = this.getAttribute("ip");
        if (cp.responsive && !this.normalImage && this.parentData.subt && this.parentData.subt == cp
            .kImageButton) this.normalImage = this.getAttribute("uImg");
        if (!this.normalImage && (cp.device == cp.IDEVICE || cp.device == cp.ANDROID)) this.normalImage = this
            .getAttribute("aip");
        this.currImage = this.normalImage;
        this.isMouse = false;
        if (this.parentData.mp) this.isMouse = true;
        var l = this.getAttribute("hImg"),
            n = this.getAttribute("pImg"),
            o = document.getElementById(this.divName);
        if (o) {
            o.drawingBoard = this.element.parentElement;
            o.bounds = this.bounds;
            o.drawingBoard.bounds = this.vbounds
        }
        this.actualParent = o;
        if (l) {
            this.hoverImage = l;
            if (o) {
                o.onmouseover = k(cp.mouseStateOver, d, false, o.onmouseover);
                o.onmouseout = k(cp.mouseStateOut, e, false, o.onmouseout);
                if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID) o.ontouchstart = k(cp
                    .mouseStateTouchStart, d);
                if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID) o.ontouchend = k(cp.mouseStateTouchEnd,
                    e);
                if (n) {
                    this.downImage = n;
                    o.onmousedown = k(cp.mouseStateDown, f);
                    o.onmouseup = k(cp.mouseStateUp, g);
                    if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID) o.ontouchmove = k(cp
                        .mouseStateTouchMove, f, true)
                }
            }
        }
        this.tr = this.getAttribute("tr");
        this.sh = this.getAttribute("sh");
        this.re = this.getAttribute("re")
    };
    cp.inherits(cp.Shape, cp.DisplayObject);
    cp.Shape.prototype.start = function(a, c) {
        this.drawIfNeeded(a, c);
        if (!this.effectIsStarted || a) {
            this.updateEffects(this.hasEffect);
            this.effectIsStarted = true
        }
    };
    cp.Shape.prototype.reset = function() {
        delete cp.ropMap[this.element.id];
        this.canvas = null;
        this.isDrawn = false;
        var a = true;
        this.parentData && this.parentData.st && (a = false);
        if (a) {
            this.element.width = "0";
            this.element.height = "0";
            this.element.style.width = "0px";
            this.element.style.height = "0px";
            this.element.left = "0";
            this.element.top =
                "0";
            this.element.style.left = "0px";
            this.element.style.top = "0px"
        }
    };
    cp.Shape.prototype.drawIfNeeded = function(a, c) {
        if ((!cp.responsive || !this.drawForResponsive(a, c)) && !this.isDrawn) {
            var d = this.getAttribute("dn"),
                e = cp.D[d];
            this.parentDivName = d;
            var d = this.bounds,
                f = -d.minX + d.maxX,
                g = -d.minY + d.maxY;
            if (f == 0 || g == 0) {
                this.isDrawn = true;
                this.drawComplete()
            } else {
                if (this.args) {
                    f = f + (Number(this.args[1]) + Number(this.args[2]));
                    g = g + (Number(this.args[1]) + Number(this.args[3]))
                }
                var k = e.type,
                    f = (k == cp.kCPOTClickBoxItem ? this.canvas =
                        cp.createCanvas(d.minX, d.minY, 0, 0, this.element) : this.canvas = cp.createCanvas(d
                            .minX, d.minY, Math.ceil(f), Math.ceil(g), this.element))
                    .gc;
                this.element.style.left = d.minX + "px";
                this.element.style.top = d.minY + "px";
                this.element.style.width = d.maxX - d.minX + "px";
                this.element.style.height = d.maxY - d.minY + "px";
                var g = false,
                    g = this.re || this.sh && !this.sh.i,
                    m = this.tr != void 0,
                    l = this.currImage,
                    n = this.modifyParent && !this.isParentOfTypeSlide;
                f.save();
                if (!this.isMouse) {
                    var o = d.minX,
                        q = d.minY,
                        p = d.maxX - d.minX,
                        u = d.maxY - d.minY,
                        s =
                        this.actualParent;
                    if (s) {
                        if (n) {
                            s.style.left = o + "px";
                            s.style.top = q + "px";
                            s.style.width = p + "px";
                            s.style.height = u + "px"
                        }
                        var v = 0;
                        if (this.tr) {
                            if (n) {
                                cp.applyTransform(s, this.tr);
                                s.tr = this.tr
                            }
                            v = cp.getAngleFromRotateStr(this.tr)
                        }
                        this.element.style.display = "block";
                        this.element.style.position = "absolute";
                        if (n) {
                            s.rotateAngle = v;
                            cp.movie.stage.addToParentChildMap(s.id, this.element.id);
                            this.element.parentElement.style.left = this.vbounds.minX + "px";
                            this.element.parentElement.style.top = this.vbounds.minY + "px";
                            this.element.parentElement.style.width =
                                this.vbounds.maxX - this.vbounds.minX + "px";
                            this.element.parentElement.style.height = this.vbounds.maxY - this.vbounds.minY +
                                "px";
                            if (this.re) this.element.parentElement.style.webkitBoxReflect = "below " + this.re
                                .d +
                                "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" +
                                (1 - this.re.s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re
                                    .p / 100) + ")))"
                        }
                    }
                    this.init = true;
                    this.element.originalParent = s;
                    o = 0 < this.vbounds.minX && g ? 0 : this.vbounds.minX;
                    q = 0 < this.vbounds.minY && g ? 0 : this.vbounds.minY;
                    n = g && cp.D.project.h > this.vbounds.maxY ? cp.D.project.h : this.vbounds.maxY;
                    p = (g && cp.D.project.w > this.vbounds.maxX ? cp.D.project.w : this.vbounds.maxX) - o;
                    u = n - q;
                    this.canvas = k == cp.kCPOTClickBoxItem ? cp.createCanvas(0, 0, 0, 0, this.element) : cp
                        .createCanvas(e.st != void 0 ? o : 0, e.st != void 0 ? q : 0, p, u, this.element);
                    this.element.style.display = "block";
                    this.element.style.position = "absolute";
                    if (!this.isParentOfTypeSlide) {
                        this.element.style.marginLeft = o - this.vbounds.minX + "px";
                        this.element.style.marginTop = q - this.vbounds.minY +
                            "px"
                    }
                    if (this.sh && !this.sh.i) {
                        f.shadowOffsetX = this.sh.d * Math.cos(Math.PI * this.sh.a / 180);
                        f.shadowOffsetY = this.sh.d * Math.sin(Math.PI * this.sh.a / 180);
                        f.shadowBlur = this.sh.b;
                        f.shadowColor = cp.ConvertRGBToRGBA(this.sh.c, this.sh.o)
                    }
                    v = 0;
                    this.tr && (v = cp.getAngleFromRotateStr(this.tr));
                    if (g) {
                        f.setTransform(1, 0, 0, 1, o < 0 ? -o : 0, q < 0 ? -q : 0);
                        f.translate((d.minX + d.maxX) / 2, (d.minY + d.maxY) / 2)
                    } else m && f.translate(p / 2, u / 2);
                    f.rotate(Math.PI * v / 180);
                    f.tex = this.tex;
                    f.tey = this.tey;
                    f.centreImage = true;
                    f.width = p;
                    f.height = u
                }
                if (this.shape) try {
                    var x =
                        this.getAttribute("objectToBeHidden");
                    if (this.shape(f, l, x, this.visible, this.divName, g, m) || k == cp
                        .kCPOTClickBoxItem) {
                        this.isDrawn = true;
                        this.drawComplete()
                    }
                } catch (w) {}
                f.restore();
                cp.handleQuizzingItemsInReviewMode(this.element, e, this.divName);
                if (this.transIn) this.element.parentElement.style.opacity = 0;
                this.visible || cp.hide(this.divName)
            }
        }
    };
    cp.Shape.prototype.drawForResponsive = function(a, c) {
        if (!this.responsiveCSS) return false;
        if (this.isDrawn && !a) return true;
        var d = cp.getResponsiveCSS(this.responsiveCSS),
            e = false,
            e = this.sh && !this.sh.i,
            f = this.tr != void 0;
        if (this.isDrawn && this.currentCSS == d && (!a || c == cp.ReasonForDrawing.kMoviePaused)) return true;
        var g = true;
        this.currentCSS = d;
        var k = this.getAttribute("dn"),
            m = cp.D[k];
        this.parentDivName = k;
        var l = this.getAttribute("aan"),
            n = d,
            k = this.modifyParent && !this.isParentOfTypeSlide,
            o = 0;
        cp.applyTransform(this.actualParent, "rotate(0)");
        this.parentElementClientBoundingRect = this.element.parentElement.getBoundingClientRect();
        var q = cp.movie.stage.mainSlideDiv.getBoundingClientRect();
        if (!this.isMouse) {
            if (k) {
                cp.applyResponsiveStyles(this.actualParent, d, g);
                if (m.rpvt && m.autoGrow && (c == cp.ReasonForDrawing.kTextGrow || c == cp.ReasonForDrawing
                        .kMoviePaused)) {
                    var p = m.minItemHeight;
                    if (p && this.actualParent.clientHeight < p) this.actualParent.style.height = p + "px";
                    n = cp.createResponsiveStyleObj(d, d.p, d.l, d.t, d.r, d.b, this.actualParent.clientWidth +
                        "px", this.actualParent.clientHeight + "px", d.crop)
                }
                cp.adjustPositionWithAnswerArea && (m.type == cp.kCPOTStageAnswerLabel || m.type == cp
                        .kCPOTStageAnswerItem || m.type ==
                        cp.kCPOTFillBlankCaption || m.type == cp.kCPOTStageMatchingAnswerEntry) && cp
                    .adjustPositionWithAnswerArea(d, this.actualParent, l);
                this.actualParent.offsetHeight = this.actualParent.offsetHeight;
                this.actualParentClientBoundingRect = this.actualParent.getBoundingClientRect();
                if (this.tr) {
                    o = cp.getAngleFromRotateStr(this.tr);
                    if (!this.m_centrePoint || c == cp.ReasonForDrawing.kOrientationChangeOrResize || c == cp
                        .ReasonForDrawing.kLinkedToItemAppeared) this.m_centrePoint = cp.getCenterForRotation(
                        this.actualParent);
                    g = cp.getBoundsForRotatedItem1(this.actualParentClientBoundingRect.left -
                        q.left, this.actualParentClientBoundingRect.top - q.top, this
                        .actualParentClientBoundingRect.width, this.actualParentClientBoundingRect.height,
                        this.m_centrePoint, o, this.strokeWidth);
                    p = t = r = b = void 0;
                    if (d.l != "auto") p = g.l;
                    if (d.t != "auto") t = g.t;
                    if (d.r != "auto") r = g.r;
                    if (d.b != "auto") b = g.b;
                    n = cp.createResponsiveStyleObj(d, d.p, p, t, r, b, g.w, g.h, d.crop);
                    g = false
                }
            }
            this.isParentOfTypeSlide || cp.applyResponsiveStyles(this.element.parentElement, n, g)
        }
        p = g = 0;
        if (this.m_centrePoint) {
            g = this.m_centrePoint.X - (this.actualParentClientBoundingRect.left -
                q.left);
            p = this.m_centrePoint.Y - (this.actualParentClientBoundingRect.top - q.top)
        }
        if (m.rpvt) {
            var u = m.offsets;
            u || (u = [0, 0, 0, 0]);
            var o = this.actualParent.id + "_vTxtHandlerHolder",
                s = cp(o);
            if (!s) {
                s = cp.newElem("div");
                s.id = o;
                s.style.display = "block";
                s.style.position = "absolute";
                s.style.width = this.actualParent.clientWidth + "px";
                s.style.height = this.actualParent.clientHeight + "px";
                s.style.visibility = "hidden";
                this.actualParent.appendChild(s)
            }
            s.style.left = u[0] + "px";
            s.style.top = u[1] + "px";
            s.style.width = this.actualParent.clientWidth -
                (u[0] + u[2]) + "px";
            s.style.height = this.actualParent.clientHeight - (u[1] + u[3]) + "px";
            o = this.actualParent.id + "_vTxtHolder";
            s = cp(o);
            if (!s) {
                s = cp.newElem("div");
                s.id = o;
                s.style.display = "block";
                s.style.position = "absolute";
                s.style.width = this.actualParent.clientWidth + "px";
                s.style.height = this.actualParent.clientHeight + "px";
                this.element.parentElement.appendChild(s)
            }
            cp.applyTransform(s, "rotate(0)");
            s.style.left = u[0] + "px";
            s.style.top = u[1] + "px";
            s.style.width = this.actualParent.clientWidth - (u[0] + u[2]) + "px";
            s.style.height =
                this.actualParent.clientHeight - (u[1] + u[3]) + "px";
            c == cp.ReasonForDrawing.kOrientationChangeOrResize && cp.updateVarText(this.actualParent, true,
                true);
            if (this.tr) {
                s.style.left = (this.element.parentElement.clientWidth - s.clientWidth) / 2 + "px";
                s.style.top = (this.element.parentElement.clientHeight - s.clientHeight) / 2 + "px";
                o = "center center";
                s.style["-ms-transform-origin"] = o;
                s.style["-moz-transform-origin"] = o;
                s.style["-webkit-transform-origin"] = o;
                s.style["-o-transform-origin"] = o;
                s.style["transform-origin"] = o;
                cp.applyTransform(s,
                    this.tr)
            }
        }
        cp.adjustPositionWithAnswerArea && (m.type == cp.kCPOTStageAnswerLabel || m.type == cp
            .kCPOTStageAnswerItem || m.type == cp.kCPOTFillBlankCaption || m.type == cp
            .kCPOTStageMatchingAnswerEntry) && cp.adjustPositionWithAnswerArea(d, this.element
            .parentElement, l);
        this.parentElementClientBoundingRect = this.element.parentElement.getBoundingClientRect();
        l = m.type;
        s = o = 0;
        u = this.parentElementClientBoundingRect.left - q.left;
        q = this.parentElementClientBoundingRect.top - q.top;
        if (l == cp.kCPOTClickBoxItem) n = cp.createResponsiveStyleObj(d,
            void 0, "0px", "0px", "0px", "0px", "0px", "0px", void 0);
        else if (e) {
            o = cp("div_Slide")
                .clientWidth;
            s = cp("div_Slide")
                .clientHeight;
            n = cp.createResponsiveStyleObj(d, void 0, "0px", "0px", "0px", "0px", o + "px", s + "px", void 0)
        } else if (this.isMouse) {
            o = this.bounds.maxX - this.bounds.minX;
            s = this.bounds.maxY - this.bounds.minY;
            m.clientWidth = o;
            m.clientHeight = s;
            var v = "0px",
                x = "0px";
            if (n = m.mpa) {
                x = (v = cp.movie.stage.isSlideBGCropped()) ? cp.RespDefaultBptW : cp.project.clientWidth;
                n = n.b[cp.ResponsiveProjWidth];
                v = v ? n[0] : cp.getRoundedValue(x *
                    n[0] / cp.ResponsiveProjWidth);
                v = v + "px";
                x = cp.getRoundedValue(n[1]) + "px"
            }
            n = cp.createResponsiveStyleObj(d, void 0, v, x, "0px", "0px", o + "px", s + "px", void 0)
        } else {
            o = this.element.parentElement.clientWidth;
            s = this.element.parentElement.clientHeight;
            n = cp.createResponsiveStyleObj(d, void 0, "0px", "0px", "0px", "0px", "100%", "100%", void 0)
        }
        this.canvas = this.isParentOfTypeSlide ? cp.movie.stage.isSlideBGCropped() ? cp.createCanvas(0, 0, cp(
                "div_Slide")
            .clientWidth, cp("div_Slide")
            .clientHeight, this.element) : cp.createCanvas((cp("project")
                .clientWidth -
                this.element.clientWidth) / 2, (cp("project")
                .clientHeight - this.element.clientHeight) / 2, this.element.clientWidth, this.element
            .clientHeight, this.element) : cp.createResponsiveCanvas(n, o, s, this.element);
        s = this.canvas.gc;
        s.crop = d.crop ? d.crop : void 0;
        if (!this.isParentOfTypeSlide && e) {
            this.element.style["margin-left"] = (u < 0 ? 1 : -1) * u + "px";
            this.element.style["margin-top"] = (q < 0 ? 1 : -1) * q + "px"
        }
        n = this.currImage;
        s.save();
        if (!this.isMouse) {
            if (v = this.actualParent) {
                o = 0;
                if (this.tr) {
                    if (k) {
                        o = g ? g * 100 / v.clientWidth + "%" : "center";
                        o = o + " ";
                        o = p ? o + (p * 100 / v.clientHeight + "%") : o + "center";
                        v.style["-ms-transform-origin"] = o;
                        v.style["-moz-transform-origin"] = o;
                        v.style["-webkit-transform-origin"] = o;
                        v.style["-o-transform-origin"] = o;
                        v.style["transform-origin"] = o;
                        cp.applyTransform(v, this.tr);
                        v.tr = this.tr
                    }
                    o = cp.getAngleFromRotateStr(this.tr)
                }
                if (k) {
                    v.rotateAngle = o;
                    cp.movie.stage.addToParentChildMap(v.id, this.element.id);
                    if (this.re) this.element.parentElement.style.webkitBoxReflect = "below " + this.re.d +
                        "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" +
                        (1 - this.re.s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p /
                            100) + ")))"
                }
            }
            this.init = true;
            this.element.originalParent = v;
            if (this.sh && !this.sh.i) {
                s.shadowOffsetX = this.sh.d * Math.cos(Math.PI * this.sh.a / 180);
                s.shadowOffsetY = this.sh.d * Math.sin(Math.PI * this.sh.a / 180);
                s.shadowBlur = this.sh.b;
                s.shadowColor = cp.ConvertRGBToRGBA(this.sh.c, this.sh.o)
            }
            o = 0;
            this.tr && (o = cp.getAngleFromRotateStr(this.tr));
            if (e) {
                s.setTransform(1, 0, 0, 1, u < 0 ? -u : 0, q < 0 ? -q : 0);
                s.translate(u + this.element.parentElement.clientWidth / 2,
                    q + this.element.parentElement.clientHeight / 2)
            } else f && s.translate(this.element.parentElement.clientWidth / 2, this.element.parentElement
                .clientHeight / 2);
            s.rotate(Math.PI * o / 180);
            s.tex = this.tex;
            s.tey = this.tey;
            s.centreImage = true;
            s.width = this.element.clientWidth;
            s.height = this.element.clientHeight;
            if (this.isParentOfTypeSlide) {
                m.clientWidth = this.element.clientWidth;
                m.clientHeight = this.element.clientHeight
            } else if (f) {
                m.clientWidth = this.actualParent.clientWidth;
                m.clientHeight = this.actualParent.clientHeight
            } else {
                m.clientWidth =
                    this.element.parentElement.clientWidth;
                m.clientHeight = this.element.parentElement.clientHeight
            }
            if (cp.isCaptionItem(m.type))
                if (this.shape) m.pixelColor = this.getAttribute("bc");
                else {
                    this.isDrawn = true;
                    this.drawComplete(c)
                }
        }
        if (this.shape) try {
            var w = this.getAttribute("objectToBeHidden");
            if (this.shape(s, n, w, this.visible, this.divName, e, f) || l == cp.kCPOTClickBoxItem || !d
                .ipiv) {
                this.isDrawn = true;
                this.drawComplete(c)
            } else return false
        } catch (y) {}
        if (m.type == cp.kCPOTScoringResultItem || m.type == cp.kCPOTStageAnswerLabel ||
            m.type == cp.kCPOTStageAnswerItem || m.type == cp.kCPOTFillBlankCaption || m.type == cp
            .kCPOTStageMatchingAnswerEntry || m.type == cp.kCPOTQuestionColumn) {
            this.isDrawn = true;
            this.drawComplete(c)
        }
        s.restore();
        cp.handleQuizzingItemsInReviewMode(this.element, m, this.divName);
        if (this.transIn && c == cp.ReasonForDrawing.kRegularDraw) this.element.parentElement.style.opacity = 0;
        this.visible || cp.hide(this.divName);
        return true
    };
    cp.Shape.prototype.playPath = function(a) {
        var c = a.length,
            d = 0,
            e = this.canvas.gc;
        for (e.beginPath(); d < c;) switch (a[d++]) {
            case "M":
                e.moveTo(a[d++],
                    a[d++]);
                break;
            case "L":
                e.lineTo(a[d++], a[d++]);
                break;
            case "Z":
                e.closePath();
                break;
            case "Q":
                e.quadraticCurveTo(a[d++], a[d++], a[d++], a[d++]);
                break;
            case "C":
                e.bezierCurveTo(a[d++], a[d++], a[d++], a[d++], a[d++], a[d++])
        }
    };
    cp.WebObject = function(a, c) {
        cp.WebObject.baseConstructor.call(this, a);
        this.visible = this.getAttribute("visible");
        this.parentDivName = this.getAttribute("dn");
        var d = this.getAttribute("b");
        this.actualParent = document.getElementById(this.parentDivName);
        this.actualDrawingElement = this.element;
        this.bounds = {
            minX: d[0],
            minY: d[1],
            maxX: d[2],
            maxY: d[3]
        };
        d = this.getAttribute("vb");
        this.vbounds = {
            minX: d[0],
            minY: d[1],
            maxX: d[2],
            maxY: d[3],
            width: d[2] - d[0],
            height: d[3] - d[1]
        };
        this.args = c;
        this.isDrawn = false;
        this.tr = this.getAttribute("tr");
        this.clientURI = this.getAttribute("wou");
        this.autoLoad = this.getAttribute("woal");
        this.useBorder = this.getAttribute("wob");
        this.useScroll = this.getAttribute("wos");
        this.loadingAnimation = this.getAttribute("wolanim");
        this.container = this.getAttribute("woc");
        this.windowsizingType = this.getAttribute("wows");
        this.windowWidth = this.getAttribute("woww");
        this.windowHeight = this.getAttribute("wowh");
        this.resourceType = this.getAttribute("wort");
        if (cp.responsive) this.responsiveCSS = this.getAttribute("css");
        this.webObjectCreated = false;
        if (window && window.location.protocol === "https:") {
            d = this.clientURI.indexOf("http:");
            if (d == 0) this.clientURI = "https:" + this.clientURI.slice(d + 5)
        }
    };
    cp.inherits(cp.WebObject, cp.DisplayObject);
    cp.WebObject.prototype.start = function(a, c) {
        this.drawIfNeeded(a, c)
    };
    cp.WebObject.prototype.reset =
        function() {
            delete cp.ropMap[this.element.id];
            this.isDrawn = false;
            this.element.parentElement.width = "0";
            this.element.parentElement.height = "0";
            this.element.parentElement.style.width = "0px";
            this.element.parentElement.style.height = "0px";
            this.element.parentElement.left = "0";
            this.element.parentElement.top = "0";
            this.element.parentElement.style.left = "0px";
            this.element.parentElement.style.top = "0px";
            this.webObjectCreated = false;
            $("#" + this.element.id)
                .empty()
        };
    cp.WebObject.prototype.drawForResponsive = function(a, c) {
        if (!this.responsiveCSS) return false;
        if (this.isDrawn && !a) return true;
        var d = cp.getResponsiveCSS(this.responsiveCSS),
            e = this.tr != void 0;
        if (this.isDrawn && this.currentCSS == d && !e && (!a || c == cp.ReasonForDrawing.kMoviePaused))
        return true;
        this.currentCSS = d;
        e = 0;
        this.tr && (e = cp.getAngleFromRotateStr(this.tr));
        var f = this.element.parentElement;
        cp.applyResponsiveStyles(f, d, true);
        f.rotateAngle = e;
        if (this.tr) {
            cp.applyTransform(f, this.tr);
            f.tr = this.tr
        }
        if (!this.webObjectCreated) {
            f.style.position = "absolute";
            f.style.color = "#00FF00";
            f.style.border = this.container ==
                0 && this.useBorder ? "1px solid #9A9A9A" : "0px";
            if (cp.device == cp.IDEVICE) {
                f.style.overflow = "scroll";
                f.style["-webkit-overflow-scrolling"] = "touch"
            }
            cp.movie.stage.addToParentChildMap(this.parentDivName, this.element.id);
            if (this.autoLoad == false) {
                d = "clicktoload_" + this.element.id;
                jQuery("<div>", {
                        id: d,
                        style: "background:url(assets/htmlimages/Play_icon.png) no-repeat center center;background-color:#ffffff;position:absolute;margin:auto;top:0;left:0;right:0;bottom:0;"
                    })
                    .appendTo("#" + this.element.id);
                var g = this;
                $("#" + d)
                    .click(function() {
                        g.loadWebObject();
                        $(this)
                            .hide()
                    })
            } else this.loadWebObject();
            this.webObjectCreated = true
        }
        this.positionWebObject();
        this.visible || cp.hide(this.parentDivName);
        this.isDrawn = true;
        this.drawComplete(c);
        return true
    };
    cp.WebObject.prototype.drawIfNeeded = function(a, c) {
        if ((!cp.responsive || !this.drawForResponsive(a, c)) && !this.isDrawn) {
            this.element.style.left = "0px";
            this.element.style.top = "0px";
            this.element.style.width = "100%";
            this.element.style.height = "100%";
            this.element.parentElement.style.left =
                this.bounds.minX + "px";
            this.element.parentElement.style.top = this.bounds.minY + "px";
            this.element.parentElement.style.width = this.bounds.maxX - this.bounds.minX + "px";
            this.element.parentElement.style.height = this.bounds.maxY - this.bounds.minY + "px";
            this.element.parentElement.style.position = "absolute";
            this.element.parentElement.style.color = "#00FF00";
            this.element.parentElement.style.border = this.container == 0 && this.useBorder ?
                "1px solid #9A9A9A" : "0px";
            if (cp.device == cp.IDEVICE) {
                this.element.parentElement.style.overflow =
                    "scroll";
                this.element.parentElement.style["-webkit-overflow-scrolling"] = "touch"
            }
            cp.movie.stage.addToParentChildMap(this.parentDivName, this.element.id);
            if (this.autoLoad == false) {
                var d = "clicktoload_" + this.element.id;
                jQuery("<div>", {
                        id: d,
                        style: "background:url(assets/htmlimages/Play_icon.png) no-repeat center center;background-color:#ffffff;position:absolute;margin:auto;top:0;left:0;right:0;bottom:0;"
                    })
                    .appendTo("#" + this.element.id);
                var e = this;
                $("#" + d)
                    .click(function() {
                        e.loadWebObject();
                        $(this)
                            .hide()
                    })
            } else this.loadWebObject();
            this.webObjectCreated = true;
            rotateAngle = 0;
            if (this.tr) {
                cp.applyTransform(this.element.parentElement, this.tr);
                rotateAngle = cp.getAngleFromRotateStr(this.tr)
            }
            this.isDrawn = true;
            this.drawComplete();
            this.visible || cp.hide(this.parentDivName)
        }
    };
    cp.WebObject.prototype.loadWebObject = function() {
        var a = this;
        if (this.container == 0) {
            var c = "no";
            this.useScroll && (c = "auto");
            var d = "myFrame_" + this.element.id,
                e = "loading_" + this.element.id;
            jQuery("<iframe>", {
                    src: this.clientURI,
                    id: d,
                    allowtransparency: "true",
                    style: "visibility : hidden ; position:absolute ; border:0px;",
                    scrolling: c,
                    width: this.element.parentElement.clientWidth,
                    height: this.element.parentElement.clientHeight
                })
                .appendTo("#" + this.element.id);
            this.loadingAnimation && jQuery("<div>", {
                    id: e,
                    style: "background:url(assets/htmlimages/loader_transparent.gif) no-repeat center center;background-color:#ffffff;position:absolute;margin:auto;top:0;left:0;right:0;bottom:0;"
                })
                .appendTo("#" + this.element.id);
            if (this.resourceType == 3) {
                $("#" + d)
                    .css("visibility", "visible");
                $("#" + e)
                    .css("display", "none")
            }
            $("#" + d)
                .load(function() {
                    if (a.visible) {
                        this.style.visibility =
                            "visible";
                        $("#" + e)
                            .css("display", "none")
                    }
                })
        } else if (this.container == 1) {
            c = "";
            this.windowsizingType == 0 ? c = c + ",top=0,left=0'" : this.windowsizingType == 1 ? c = c +
                ",width=" + screen.width + ",height=" + screen.height + ",top=0,left=0,fullscreen=yes'" : this
                .windowsizingType == 2 && (c = c + ",width=" + parseInt(this.windowWidth) + ",height=" +
                    parseInt(this.windowHeight) + "'");
            cp.m_isPreview ? cp.parentWindow.open(this.clientURI, "_blank", c) : cp.currentWindow.open(this
                .clientURI, "_blank", c)
        }
    };
    cp.WebObject.prototype.positionWebObject = function() {
        var a =
            cp("myFrame_" + this.element.id);
        if (a) {
            a.style.width = this.element.parentElement.clientWidth + "px";
            a.style.height = this.element.parentElement.clientHeight + "px"
        }
    };
    cp.MouseClick = function(a, c) {
        cp.MouseClick.baseConstructor.call(this, a, c);
        this.data = this.getAttribute("data")
    };
    cp.inherits(cp.MouseClick, cp.Shape);
    cp.MouseClick.prototype.drawForResponsive = cp.MouseClick.prototype.drawIfNeeded = function(a) {
        if (!this.isDrawn || a) {
            a = this.bounds;
            if (cp.responsive) {
                a = this.getAttribute("b");
                a = a[cp.ResponsiveProjWidth];
                a = {
                    minX: a[0],
                    minY: a[1],
                    maxX: a[2],
                    maxY: a[3]
                }
            }
            var c = -a.minY + a.maxY,
                c = (this.canvas = cp.createCanvas(a.minX, a.minY, Math.ceil(-a.minX + a.maxX), Math.ceil(c),
                    this.element))
                .gc;
            c.save();
            var d = cp.movie.stage.isSlideBGCropped(),
                e = 0,
                e = cp.responsive ? d ? a.minX : cp.project.clientWidth * a.minX / cp.ResponsiveProjWidth : a
                .minX;
            this.element.style.left = e + "px";
            this.element.style.top = a.minY + "px";
            this.element.style.width = a.maxX - a.minX + "px";
            this.element.style.height = a.maxY - a.minY + "px";
            if (this.shape) try {
                var f = this.getAttribute("objectToBeHidden");
                if (this.shape(c, this.data, f, this.visible, this.divName)) this.isDrawn = true
            } catch (g) {}
            c.restore()
        }
    };
    cp.FrameSet = function(a, c) {
        function d(a, c, d, e, f, o) {
            var c = new cp.Shortcut(c.k, c.c ? true : false, c.s ? true : false, c.a ? true : false),
                q = "";
            if (d.eh != void 0) q = e.dn;
            return new cp.KeyHandler(function(c) {
                return a(d, e, c)
            }, c, f, o, q)
        }
        cp.FrameSet.baseConstructor.call(this, a);
        this.children = c;
        this.from = this.getAttribute("from");
        this.to = this.getAttribute("to");
        this.afrom = this.getAttribute("afrom");
        this.ato = this.getAttribute("ato");
        this.transIn = this.getAttribute("trin");
        if (!this.transIn) this.transIn = 0;
        this.transOut = this.getAttribute("trout");
        if (!this.transOut) this.transOut = 0;
        if (this.element.drawingBoard) {
            this.element.drawingBoard.style.display = "block";
            this.element.drawingBoard.style.opacity = this.transIn > 0 ? 0 : 1
        }
        if (this.getAttribute("mp") == "mouse") {
            this.motionPathMover = cp.movie.mousePath;
            this.motionPathArgs = this.getAttribute("mpa")
        }
        this.type = this.getAttribute("type");
        this.itemData = cp.D[this.element.id];
        this.itemCanvasData = null;
        if (this.itemData && this.itemData.mdi) this.itemCanvasData = cp.D[this.itemData.mdi];
        if (this.itemCanvasData) cp.cpIDMap[this.itemCanvasData.uid] = this.itemData.mdi;
        this.pa = this.getAttribute("pa");
        this.alwaysPause = this.getAttribute("cpa");
        var e = this.getAttribute("psv");
        if (e) this.psv = e;
        if (void 0 != this.pa) {
            this.element.style.WebkitTapHighlightColor = "rgba(0,0,0,0.3)";
            this.setAttribute("handled", false);
            this.setAttribute("clickedOnce", false);
            this.setAttribute("currentAttempt", 0);
            this.setAttribute("actionInProgress",
                false);
            if (this.getAttribute("iqb") != void 0 && this.getAttribute("iqb")) {
                var e = this.getAttribute("sn"),
                    e = cp.D[e].qs,
                    f;
                e && e.indexOf(",") == -1 && (f = cp.getQuestionObject(e));
                e = this.getAttribute("qbt");
                this.element.style.cursor = "pointer";
                if (e) switch (e) {
                    case "submit":
                        f.registerSubmitButton(this.element);
                        break;
                    case "back":
                        f.registerBackButton(this.element);
                        break;
                    case "skip":
                        f.registerSkipButton(this.element);
                        break;
                    case "clear":
                        f.registerClearButton(this.element);
                        break;
                    case "submitAll":
                        f.registerSubmitAllButton(this.element);
                        break;
                    default:
                        cp.registerGestureEvent(this.element, cp.GESTURE_EVENT_TYPES.TAP, cp.QuizButtonCH)
                }
            }
            this.dependents = this.getAttribute("dep");
            if (cp.kCPOTAutoShape == this.type && 1 == this.getAttribute("rp"))
                if ((f = cp.movie.stage.currentSlide) && f.from > this.pa) this.rp_pa = f.from + this.pa - this
                    .from
        }
        this.htmlDependents = [];
        void 0 != this.psv && this.setAttribute("pausedOnce", false);
        if (f = this.getAttribute("onShow")) this.onShow = window[f];
        if (this.keyHandler = this.getAttribute("kh"))
            if (this.keyShortcut = this.getAttribute("sc"))(f =
                d(this.keyHandler, this.keyShortcut, cp.D[this.element.id], cp.D[this.element.id + "c"],
                    this.from, this.to)) && cp.movie.stage.addKeyHandler(f);
        if (!this.keyHandler)
            if (this.keyHandler = this.getAttribute("eh"))(f = d(this.keyHandler, "", cp.D[this.element.id], cp
                .D[this.element.id + "c"], this.from, this.to)) && cp.movie.stage.addKeyHandler(f);
        this.isStarted = false;
        if (cp.kCPOTClickBoxItem == this.type || cp.kCPOTScorableButtonItem == this.type || cp.kCPOTAutoShape ==
            this.type)
            if (this.dblClick = this.getAttribute("dclk")) cp.movie.stage.getClickManager()
                .addDoubleClick(cp.D[this.element.id],
                    cp.D[this.element.id + "c"], this.element);
            else if (cp.kCPOTClickBoxItem == this.type)(this.rightClick = this.getAttribute("rclk")) && cp.movie
            .stage.getClickManager()
            .addRightClick(cp.D[this.element.id], cp.D[this.element.id + "c"], this.element);
        if (cp.kCPOTTextEntryButtonItem == this.type)(this.parentId = this.getAttribute("vid")) && cp.movie
            .stage.addToParentChildMap(this.parentId, this.element.id);
        if (cp.MSIE == cp.browser && void 0 != this.type) switch (this.type) {
            case cp.kCPOTStageShortAnswer:
            case cp.kCPOTQuestionFillBlank:
            case cp.kCPOTFillBlankCaption:
            case cp.kCPOTWidgetItem:
            case cp.kCPOTWebObject:
            case cp.kCPOTProgressIndicator:
            case cp.kCPOTReviewArea:
            case cp.kCPOTScoringResult:
            case cp.kCPOTStageAnswerItem:
            case cp.kCPOTStageAnswerLabel:
            case cp.kCPOTStageMatchingQuestion:
            case cp.kCPOTStageMatchingAnswerEntry:
            case cp.kCPOTFLVItem:
                break;
            default:
                a.style.backgroundColor = "#FFFFFF";
                a.style.opacity = 0
        }
    };
    cp.inherits(cp.FrameSet, cp.DisplayObject);
    cp.FrameSet.prototype.isInRange = function(a) {
        return this.from == 0 && this.to == 0 || cp.kCPOTSuccessCaptionItem == this.type || cp
            .kCPOTFailureCaptionItem == this.type || cp.kCPOTHintCaptionItem == this.type || cp
            .kCPRolloverCaptionItem == this.type || cp.kCPRolloverImageItem == this.type || cp
            .kCPOTRolloverAutoShape == this.type || cp.kCPOTSuccessShapeItem == this.type || cp
            .kCPOTFailureShapeItem == this.type || cp.kCPOTHintShapeItem ==
            this.type ? true : this.from <= a && this.to >= a
    };
    cp.FrameSet.prototype.updateOpacity = function() {
        if (this.element.drawingBoard && !(cp.kCPOTSuccessCaptionItem == this.type || cp
                .kCPOTFailureCaptionItem == this.type || cp.kCPOTHintCaptionItem == this.type || cp
                .kCPOTSuccessShapeItem == this.type || cp.kCPOTFailureShapeItem == this.type || cp
                .kCPOTHintShapeItem == this.type)) {
            var a = cpInfoCurrentFrame - this.from + 1,
                c = this.to - cpInfoCurrentFrame;
            this.element.drawingBoard.style.opacity = a <= this.transIn ? a / this.transIn : a > this.to - this
                .from - this.transOut ?
                c / this.transOut : 1
        }
    };
    cp.FrameSet.prototype.updateFrame = function(a) {
        this.updateOpacity();
        cp.FrameSet.superClass.updateFrame.call(this);
        a == cp.Timeline.ReasonForUpdate.JUMP && this.setAttribute("clickedOnce", false)
    };
    cp.FrameSet.prototype.start = function(a, c) {
        var d = 0,
            e = !this.isStarted;
        this.isStarted = true;
        this.element.style.display = "block";
        if (this.element.drawingBoard) this.element.drawingBoard.style.display = "block";
        if (void 0 != this.pa && null != cp.movie.stage.currentSlide) {
            (d = -1 != this.pa) || (d = cp.kCPOTClickBoxItem ==
                this.type || cp.kCPOTScorableButtonItem == this.type || cp.kCPOTAutoShape == this.type || cp
                .kCPOTTextEntryBoxItem == this.type);
            if (d) cp.movie.stage.currentSlide.topMostObjectInteractiveObject = this.element.id
        }
        cp.FrameSet.superClass.start.call(this, a, c);
        if (this.itemCanvasData && 1 == this.itemCanvasData.visible)
            for (d = 0; d < this.htmlDependents.length; ++d) this.htmlDependents[d].style.visibility =
            "visible";
        this.updateOpacity();
        if (this.onShow) try {
            this.onShow.call(this.timeline)
        } catch (f) {}
        if (typeof cptb != "undefined" && !cptb.isObjectDrawn(this)) cptb.onObjectEnter(this);
        if (cp.responsive && e) {
            cp.updateVarText(this.element, true, true);
            if (this.element)(e = cp.D[this.element.id]) && (e.rpvt != void 0 || e.vt != void 0) && cp
                .updateVarText(this.element, true, true)
        }
    };
    cp.FrameSet.prototype.reset = function(a) {
        if (typeof cptb != "undefined" && !cptb.isObjectReset(this)) cptb.onObjectExit(this);
        var c = 0;
        delete cp.ropMap[this.element.id];
        cp.FrameSet.superClass.reset.call(this, a);
        this.isStarted = false;
        var d = true;
        this.itemData.st && (d = false);
        a && this.children && (this.children[0] && this.children[0].continueToNextSlide) &&
            (d = false);
        if (d) this.element.style.display = "none";
        if (void 0 != this.pa) {
            this.setAttribute("handled", false);
            this.setAttribute("clickedOnce", false);
            if (void 0 != this.dependents)
                for (c = 0; c < this.dependents.length; ++c) cp.hide(this.dependents[c])
        }
        for (c = 0; c < this.htmlDependents.length; ++c) this.htmlDependents[c].style.visibility = "hidden";
        void 0 != this.psv && this.setAttribute("pausedOnce", false);
        if (d && this.element.drawingBoard) {
            this.element.drawingBoard.style.opacity = 0;
            this.element.drawingBoard.style.display = "none"
        }
    };
    cp.FrameSet.prototype.ApplyMotion = function(a, c) {
        if (this.motionPathMover != null) try {
            this.motionPathMover(this, a, c)
        } catch (d) {}
    };
    cp.FrameSet.prototype.handleRewind = function() {
        if (void 0 != this.pa) {
            this.setAttribute("handled", false);
            this.setAttribute("clickedOnce", false)
        }
        void 0 != this.psv && this.setAttribute("pausedOnce", false);
        void 0 != this.type && cp.kCPOTWidgetItem == this.type && !this.itemData.rp && 1 == this.children
            .length && this.reset()
    };
    cp.FrameSet.prototype.onEndOfSlide = function(a) {
        var c = this.isStarted && !this.isInRange(cpInfoCurrentFrame);
        if (!c)(c = cp.kCPOTSuccessCaptionItem == this.type || cp.kCPOTFailureCaptionItem == this.type || cp
                .kCPOTHintCaptionItem == this.type || cp.kCPOTAutoShape == this.type && this.getAttribute(
                "rp") != 1 || cp.kCPRolloverCaptionItem == this.type || cp.kCPRolloverImageItem == this.type ||
                cp.kCPOTRolloverAutoShape == this.type || cp.kCPOTSuccessShapeItem == this.type || cp
                .kCPOTFailureShapeItem == this.type || cp.kCPOTHintShapeItem == this.type) || this.type == cp
            .kCPOTWidgetItem && !this.itemData.rp && (c = true);
        if (c) this.reset(a == cp.Timeline.ReasonForUpdate.PROGRESS);
        else if (cp.kCPOTAutoShape == this.type && this.getAttribute("uab") == 1)(a = this.children[0]) && a
            .removeMouseHandlers()
    };
    cp.VideoFrameSet = function(a, c) {
        this.suppliedElement = a;
        this.children = c;
        this.element = a;
        this.from = this.getAttribute("from");
        this.to = this.getAttribute("to");
        this.type = this.getAttribute("type");
        this.itemData = cp.D[this.element.id];
        this.pa = this.getAttribute("pa");
        var d = this.getAttribute("psv");
        if (d) this.psv = d;
        void 0 != this.pa && this.setAttribute("pausedOnce", false);
        void 0 != this.psv && this.setAttribute("pausedOnce",
            false);
        this.isStarted = false
    };
    cp.inherits(cp.VideoFrameSet, cp.FrameSet);
    cp.VideoFrameSet.prototype.start = function(a, c) {
        if (!cp.movie.stage.VideoPlaying) {
            var d = cp.movie.stage.VideoElement;
            if (!d) {
                d = this.suppliedElement;
                cp.movie.stage.VideoElement = d
            }
            cp.VideoFrameSet.baseConstructor.call(this, d, this.children);
            cp.VideoFrameSet.superClass.start.call(this, a, c);
            if (!this.effectIsStarted || a) {
                this.updateEffects(this.hasEffect);
                this.effectIsStarted = true
            }
        }
    };
    cp.VideoFrameSet.prototype.reset = function(a) {
        var c = this.suppliedElement;
        c == this.element && (c = null);
        cp.VideoFrameSet.superClass.reset.call(this, a);
        if (c) c.style.display = "none"
    };
    cp.VideoFrameSet.prototype.getAttribute = function(a) {
        var c = cp.D[this.suppliedElement.id];
        return !c ? null : c[a]
    };
    cp.VideoFrameSet.prototype.setAttribute = function(a, c) {
        var d = cp.D[this.suppliedElement.id];
        d && (d[a] = c)
    };
    cp.FeedbackType = {
        SUCCESS: 0,
        FAILURE: 1,
        HINT: 2,
        OTHER: 3
    };
    cp.FeedbackCloseReason = {
        SHOW_SUCCESS: 1,
        SHOW_FAILURE: 2,
        SHOW_HINT: 3,
        SLIDE_CHANGE: 4,
        OTHER: 5
    };
    cp.Feedback = function(a, c, d, e, f) {
        this.lastFrame =
            this.startFrame = this.currentFrame = 0;
        this.itemName = a;
        this.endAction = c;
        this.parentSlide = cp.movie.stage.currentSlide;
        this.element = document.getElementById(a);
        this.item = cp.D[a];
        this.type = cp.FeedbackType.OTHER;
        if (void 0 != e) switch (e) {
            case cp.FeedbackType.SUCCESS:
            case cp.FeedbackType.FAILURE:
            case cp.FeedbackType.HINT:
                this.type = e
        }
        this.actionObj = f;
        if (cp.FeedbackType.SUCCESS == this.type && this.actionObj) this.actionObj.actionInProgress = true;
        if (this.item) {
            this.transIn = this.item.trin;
            this.effectObj = this.item.ef
        }
        if (!this.transIn) this.transIn =
            0;
        this.drawingBoard = null;
        if (this.element && this.element.drawingBoard) {
            this.element.drawingBoard.style.opacity = 0;
            this.drawingBoard = this.element.drawingBoard
        }
        if (this.item) this.transOut = this.item.trout;
        if (!this.transOut) this.transOut = 0;
        this.pause = d;
        this.onMouse = false;
        if (this.item && this.item.to && this.item.from) this.lastFrame = this.item.to - this.item.from;
        if (this.item && void 0 != this.item.du) this.lastFrame = this.item.du;
        this.createCSSAnimationRule()
    };
    cp.Feedback.prototype = {
        update: function() {
            this.currentFrame++;
            if (this.currentFrame > this.lastFrame) {
                cp.movie.stage.RemoveFeedback(this);
                this.hide();
                this.endAction && cp.movie.executeAction(this.endAction)
            }
            if (this.effectObj) {
                var a = this.effectObj["ef" + this.effectObj.id];
                if (a && a.length)
                    for (var c = 0; c < a.length; ++c) {
                        var d = a[c],
                            e = this.currentFrame;
                        if (d.sf - 1 > e || d.sf - 1 + d.du <= e) d.ci = -1;
                        else {
                            for (var f, e = e - (d.sf - 1), g = 0; g < d.kf.length - 1; ++g)
                                if (d.kf[g].f <= e && d.kf[g + 1].f > e) {
                                    d.ci = g;
                                    break
                                } f = d.kf[d.ci];
                            var k = d.io,
                                m = d.fo,
                                l = d.kf[d.ci + 1],
                                n = e - f.f,
                                o = d.ease < 0 ? -d.ease / 100 + 1 : 1 - d.ease / 200,
                                g = f.x + (l.x - f.x) * Math.pow(n / (l.f - f.f), o);
                            f = f.y + (l.y - f.y) * Math.pow(n / (l.f - f.f), o);
                            d = (k + (m - k) * e / d.du) / 100;
                            d = d < 0 ? 0 : d;
                            d = d > 1 ? 1 : d;
                            this.element.style.left = this.element.bounds.minX + g + "px";
                            this.element.style.top = this.element.bounds.minY + f + "px";
                            if (this.element.drawingBoard) {
                                this.element.drawingBoard.style.left = this.element.drawingBoard.bounds
                                    .minX + g + "px";
                                this.element.drawingBoard.style.top = this.element.drawingBoard.bounds
                                    .minY + f + "px";
                                this.element.drawingBoard.style.opacity = d + ""
                            }
                        }
                    }
            }
            if (this.drawingBoard) {
                a = cp.canUseWebkitAnimations() &&
                    cp.FeedbackType.HINT != this.type;
                c = this.currentFrame;
                d = this.lastFrame - this.currentFrame;
                if (c < this.transIn) {
                    if (!a) this.drawingBoard.style.opacity = cp.device != cp.DESKTOP ? 1 : c / this.transIn
                } else {
                    if (!a) this.drawingBoard.style.opacity = cp.device != cp.DESKTOP ? 1 : c > this
                        .lastFrame - this.transOut ? d / this.transOut : 1;
                    if (this.onMouse) this.currentFrame = this.lastFrame - this.transOut - 1
                }
            }
        },
        onRollover: function() {
            this.onMouse = true;
            this.currentFrame = 0;
            this.show()
        },
        onRollout: function() {
            this.onMouse = false;
            this.currentFrame = this.lastFrame -
                this.transOut
        },
        createCSSAnimationRule: function() {
            function a() {
                var a = document.styleSheets[0];
                if (a && !a.cssRules) return false;
                for (var c = 0; c < a.cssRules.length; ++c)
                    if (a.cssRules[c].type == window.CSSRule.WEBKIT_KEYFRAMES_RULE && a.cssRules[c].name ==
                        d) return true;
                return false
            }
            var c = cp.D[this.itemName];
            if (c && cp.canUseWebkitAnimations() && cp.FeedbackType.HINT != this.type) {
                var d = this.itemName + "_rule";
                if (a()) cp.verbose && cp.log("rule exists");
                else {
                    var e = "";
                    if (c.trin != 0 && c.trin != void 0) var f = Math.round(c.trin * 1E4 /
                            c.du) / 100,
                        e = e + (" { 0% { opacity:0; } " + f + "% { opacity:1; } ");
                    else e = e + " { 0% { opacity:1; } ";
                    if (c.trout != 0 && c.trout != void 0) {
                        c = Math.round((c.du - c.trout) * 1E4 / c.du) / 100;
                        e = e + (" " + c + "% { opacity:1; }  100% { opacity:0; } }")
                    } else e = e + " 100% { opacity:1; } }";
                    c = document.styleSheets[0];
                    cp.verbose && cp.log(d + ", " + e);
                    c.insertRule("@-webkit-keyframes " + d + e)
                }
                this.webkitAnimationRule = d
            }
        },
        show: function() {
            var a = cp.D[this.itemName];
            if (a) {
                if (this.drawingBoard)
                    if (cp.canUseWebkitAnimations() && cp.FeedbackType.HINT !=
                        this.type) {
                        cp.verbose && cp.log("Using Webkit animation");
                        this.drawingBoard.style.webkitAnimationName = this.webkitAnimationRule;
                        this.drawingBoard.style.webkitAnimationDuration = a.du / cp.movie.fps + "s"
                    } else this.drawingBoard.style.opacity = cp.device != cp.DESKTOP ? 1 : 0;
                if (this.parentSlide != void 0 && this.parentSlide == cp.movie.stage.currentSlide) {
                    this.pause && !cp.movie.paused && cp.movie.pause(cp.ReasonForPause.FEEDBACK_ITEM);
                    var c = cp.FeedbackCloseReason.OTHER;
                    switch (this.type) {
                        case cp.FeedbackType.SUCCESS:
                            c = cp.FeedbackCloseReason.SHOW_SUCCESS;
                            break;
                        case cp.FeedbackType.FAILURE:
                            c = cp.FeedbackCloseReason.SHOW_FAILURE;
                            break;
                        case cp.FeedbackType.HINT:
                            c = cp.FeedbackCloseReason.SHOW_HINT
                    }
                    cp.movie.stage.RemoveFeedbacks(c);
                    cp.movie.stage.AddFeedback(this);
                    cp.moveDivElemToTop(this.element);
                    a = document.getElementById(a.mdi);
                    a != void 0 && cp.moveRewrapElemToTop(a.parentNode);
                    cp.show(this.itemName)
                }
            }
        },
        hide: function() {
            if (cp.FeedbackType.SUCCESS == this.type && this.actionObj) this.actionObj.actionInProgress =
                false;
            cp.hide(this.itemName);
            if (this.drawingBoard) this.drawingBoard.style.opacity =
                1
        },
        canHide: function(a) {
            return cp.FeedbackType.HINT == this.type || cp.FeedbackType.OTHER == this.type || cp
                .FeedbackCloseReason.SLIDE_CHANGE == a || cp.FeedbackCloseReason.OTHER == a ? true : cp
                .FeedbackCloseReason.SHOW_HINT == a || cp.FeedbackType.SUCCESS == this.type ? false : true
        }
    };
    cp.SlideGraphManager = function() {
        this.m_CurrentBranch = [];
        this.m_BranchHistory = [];
        this.m_SlideGraphObj = {};
        this.m_RootSlideIndex = -1;
        this.m_InvalidSlideJump = false;
        this.m_CompletionBranch = [];
        this.m_CompletionBranchSet = false;
        this.m_CompletionBranchSlideCount = -1;
        this.m_CompletionBranchSlideCountSet = false;
        this.m_BranchNumber = 0;
        if (!this.BranchEnum) {
            this.BranchEnum = {};
            this.BranchEnum.kBranchNotFound = 0;
            this.BranchEnum.kBranchFound = 1;
            this.BranchEnum.kLoopBranchFound = 2;
            this.BranchEnum.kMultipleBranchFound = 3
        }
    };
    cp.SlideGraphManager.prototype = {
        countUniqItems: function(a) {
            for (var c = {}, d = 0, e = 0; e < a.length; ++e) {
                var f = a[e];
                if (c[f] == void 0) {
                    c[f] = f;
                    ++d
                }
            }
            return d
        },
        findCompletionBranchTraverse: function(a, c, d) {
            var e = false,
                f = -1;
            if (!e && this.m_SlideGraphObj[a] == void 0) {
                f = this.BranchEnum.kBranchFound;
                e = true
            }
            if (!e && d[a] != void 0) {
                f = this.BranchEnum.kLoopBranchFound;
                e = true
            }
            c.push(a);
            d[a] = a;
            if (e) {
                ++this.m_BranchNumber;
                if (this.m_BranchNumber == 1) {
                    this.m_CompletionBranch = this.m_CurrentBranch.concat(c);
                    this.m_CompletionBranchSet = true;
                    if (!(f == this.BranchEnum.kLoopBranchFound && a == c[0])) {
                        this.m_CompletionBranchSlideCount = this.countUniqItems(this.m_CurrentBranch.concat(
                            c));
                        this.m_CompletionBranchSlideCountSet = true
                    }
                    c.pop();
                    delete d[a];
                    return this.BranchEnum.kBranchFound
                }
                if (this.m_BranchNumber >= 2) {
                    this.m_CompletionBranchSet =
                        false;
                    if (this.m_CompletionBranchSlideCountSet) {
                        var g = this.countUniqItems(this.m_CurrentBranch.concat(c));
                        if (!(f == this.BranchEnum.kLoopBranchFound && a == c[0]) && g == this
                            .m_CompletionBranchSlideCount) {
                            c.pop();
                            delete d[a];
                            return this.BranchEnum.kBranchFound
                        }
                        this.m_CompletionBranchSlideCountSet = false;
                        c.pop();
                        delete d[a];
                        return this.BranchEnum.kMultipleBranchFound
                    }
                    c.pop();
                    delete d[a];
                    return this.BranchEnum.kMultipleBranchFound
                }
            }
            f = this.m_SlideGraphObj[a];
            e = false;
            for (g in f) switch (this.findCompletionBranchTraverse(Number(g),
                    c, d)) {
                case this.BranchEnum.kBranchFound:
                    e = true;
                case this.BranchEnum.kBranchNotFound:
                    break;
                case this.BranchEnum.kMultipleBranchFound:
                    return this.BranchEnum.kMultipleBranchFound
            }
            c.pop();
            delete d[a];
            return e ? this.BranchEnum.kBranchFound : this.BranchEnum.kBranchNotFound
        },
        findCompletionBranch: function() {
            this.m_CompletionBranch = [];
            this.m_CompletionBranchSet = false;
            this.m_BranchNumber = 0;
            this.findCompletionBranchTraverse(this.m_CurrentBranch.length >= 1 ? this.m_CurrentBranch[this
                    .m_CurrentBranch.length - 1] : this.m_RootSlideIndex,
                [], {})
        },
        initialize: function() {
            if (cp.D.baq) {
                var a = cp.D.sgMgr;
                if (a != void 0) {
                    var c = a.ri,
                        a = a.sg;
                    if (!(c == void 0 || a == void 0)) {
                        this.m_InvalidSlideJump = false;
                        this.m_RootSlideIndex = c;
                        for (c = 0; c < a.length; ++c) {
                            var d = a[c];
                            if (!(d == void 0 || d.length != 2)) {
                                this.m_SlideGraphObj[d[0]] = {};
                                for (var e = d[1], f = 0; f < e.length; ++f) {
                                    var g = e[f];
                                    if (!(g == void 0 || g.length != 2)) {
                                        this.m_SlideGraphObj[d[0]][g[0]] = {};
                                        for (var k = g[1], m = 0; m < k.length; ++m) {
                                            var l = k[m];
                                            l != void 0 && (this.m_SlideGraphObj[d[0]][g[0]][l] = l)
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        onSlideJump: function(a) {
            if (this.m_CurrentBranch.length >
                0) {
                var c = this.m_CurrentBranch[this.m_CurrentBranch.length - 1];
                if (a == c) return;
                if (this.m_SlideGraphObj[c] == void 0) {
                    this.m_BranchHistory.push(a);
                    this.m_InvalidSlideJump = true;
                    return
                }
                if (this.m_SlideGraphObj[c][a] == void 0) {
                    this.m_InvalidSlideJump = true;
                    this.updateCurrentBranch(a);
                    this.m_BranchHistory.push(a);
                    return
                }
            }
            this.m_BranchHistory.push(a);
            this.m_CurrentBranch.push(a)
        },
        getSlideViewPercentage: function() {
            !this.m_CompletionBranchSet && !this.m_CompletionBranchSlideCountSet && this
                .findCompletionBranch();
            if (!this.m_CompletionBranchSet &&
                !this.m_CompletionBranchSlideCountSet) return "NaN";
            var a = this.countUniqItems(this.m_CurrentBranch),
                c = -1,
                c = this.m_CompletionBranchSlideCountSet ? this.m_CompletionBranchSlideCount : this
                .countUniqItems(this.m_CompletionBranch);
            return c <= 0 ? "NaN" : a * 100 / c
        },
        isSlidePartOfCurrentBranch: function(a) {
            return this.m_CurrentBranch.length > 0 && this.m_CurrentBranch.indexOf(a) != -1 ? true : false
        },
        getCompletionBranch: function() {
            this.m_CompletionBranchSet || this.findCompletionBranch();
            return !this.m_CompletionBranchSet ? [] : this.m_CompletionBranch
        },
        getCurrentBranch: function() {
            return this.m_CurrentBranch
        },
        getBranchHistory: function() {
            return this.m_BranchHistory
        },
        restoreCompletionBranchState: function(a) {
            if (a.length > 0) {
                this.m_CompletionBranch = [];
                this.m_CompletionBranch = a;
                this.m_CompletionBranchSet = true
            }
        },
        restoreCurrentBranchState: function(a) {
            if (a.length > 0) {
                this.m_CurrentBranch = [];
                this.m_CurrentBranch = a;
                this.m_BranchHistory = [];
                this.m_BranchHistory = a.slice()
            }
        },
        resetCurrentBranch: function(a) {
            if (!(a < 0)) {
                for (var c = -1, d = 0; d < this.m_CurrentBranch.length; ++d)
                    if (this.m_CurrentBranch[d] ==
                        a) {
                        c = a;
                        break
                    } c >= 0 && c + 1 < this.m_CurrentBranch.length && this.m_CurrentBranch.splice(c + 1)
            }
        },
        updateCurrentBranch: function() {},
        getMaxQuizScore: function() {
            return 0
        },
        getMinQuizScore: function() {
            return 0
        },
        getQuizScorePercentage: function() {
            return 0
        },
        getNextAttemptFirstQuestionSlideIndex: function() {
            return -1
        },
        getReviewFirstQuestionSlideIndex: function() {
            return -1
        },
        getNumQuestions: function() {
            return 0
        },
        getQuestionSlideProgressNumber: function() {
            return "NaN"
        },
        setQuestionSlideProgressNumber: function() {},
        getLastQuestionSlideIndex: function() {
            return -1
        },
        getNextSlideList: function(a) {
            var c = [];
            if (this.m_SlideGraphObj[a] != void 0) {
                var a = this.m_SlideGraphObj[a],
                    d;
                for (d in a) c.push(Number(d))
            }
            return c
        },
        getIsJumpValid: function(a, c) {
            return this.m_SlideGraphObj[a] == void 0 || this.m_SlideGraphObj[a][c] == void 0 ? false : true
        }
    };
    cp.Timeline = function(a) {
        cp.Timeline.baseConstructor.call(this, a);
        this.updateTimeline();
        this.pools = this.getAttribute("pools");
        this.currentSlideStartFrame = this.nextSlideStartFrame = this.previousSlideStartFrame = -1;
        this.movieEndAction = this.getAttribute("endAction");
        this.fadeInAtStart = this.getAttribute("fadeInAtStart");
        this.fadeOutAtEnd = this.getAttribute("fadeOutAtEnd");
        this.noSkipFrames = {};
        this.m_useWidgetVersion7 = this.getAttribute("useWidgetVersion7");
        var c = this;
        this.paused = false;
        this.cStart = this.lastFrame + 1;
        this.cEnd = -1;
        this.imagesToBeCleared = [];
        this.slideDiv = null;
        this.eventListeners = [];
        this.feedbacks = [];
        this.m_keyManager = new cp.KeyManager;
        this.m_clickManager = new cp.ClickManager;
        this.parentChildMap = [];
        this.videoCCItems = this.audioCCItems = null;
        this.curVidCCItem =
            this.curAudCCItem = -1;
        this.itemsNotLoaded = [];
        this.interactivePauseFrame = -1;
        this.m_interactionManagers = [];
        this.mainSlideDiv = this.element.children[0];
        this.mainSlideDiv.style.display = "block";
        if (a = document.getElementById("cpDocument")) {
            jQuery(document)
                .keydown(function(a) {
                    c.m_keyManager.handleKeyDown(a)
                });
            jQuery(document)
                .keyup(function(a) {
                    c.m_keyManager.handleKeyUp(a)
                });
            jQuery(document)
                .focusout(function(a) {
                    c.m_keyManager.handleFocusOut(a)
                })
        }
        a.style.backgroundColor = cp.D.project.htmlBgColor;
        this.verbose =
            false
    };
    cp.inherits(cp.Timeline, cp.DisplayObject);
    cp.Timeline.prototype.updateTimeline = function() {
        this.slides = (this.getAttribute("slides") || "")
            .split(",");
        this.questions = [];
        var a = this.getAttribute("questions") || "";
        if (a.length > 0) this.questions = a.split(",");
        this.lastFrame = this.getAttribute("to")
    };
    cp.Timeline.prototype.addToItemNotLoaded = function(a) {
        this.itemsNotLoaded.push(a)
    };
    cp.Timeline.prototype.removeFromItemNotLoaded = function(a) {
        for (var c = 0; c < this.itemsNotLoaded.length; ++c)
            if (a == this.itemsNotLoaded[c]) {
                this.itemsNotLoaded.splice(c,
                    1);
                break
            }
    };
    cp.Timeline.prototype.hasItemsLoaded = function() {
        var a = this.itemsNotLoaded.length > 0;
        cp.verbose && a > 0 && cp.log(a + " widgets pending");
        return !a
    };
    cp.Timeline.prototype.addToParentChildMap = function(a, c) {
        var d = 0,
            e = "",
            d = null;
        if (!("" == a || "" == c)) {
            for (d = 0; d < this.parentChildMap.length; ++d) {
                e = this.parentChildMap[d].m_parent;
                if (e == a) {
                    this.parentChildMap[d].m_childArr.push(c);
                    return
                }
            }
            d = {};
            d.m_parent = a;
            d.m_childArr = [];
            d.m_childArr.push(c);
            this.parentChildMap.push(d)
        }
    };
    cp.Timeline.prototype.clearParentChildMap =
        function() {
            this.parentChildMap = []
        };
    cp.Timeline.prototype.getChildrenForParent = function(a, c) {
        var d = 0,
            e = "";
        if ("" != a)
            for (d = 0; d < this.parentChildMap.length; ++d) {
                e = this.parentChildMap[d].m_parent;
                if (e == a)
                    for (j = 0; j < this.parentChildMap[d].m_childArr.length; ++j) {
                        c.push(this.parentChildMap[d].m_childArr[j]);
                        this.getChildrenForParent(this.parentChildMap[d].m_childArr[j], c)
                    }
            }
    };
    cp.Timeline.prototype.addKeyHandler = function(a) {
        a && this.m_keyManager.addHandler(a)
    };
    cp.Timeline.prototype.getClickManager = function() {
        return this.m_clickManager
    };
    cp.Timeline.prototype.setupSlideItemDiv = function(a, c, d, e, f, g, k) {
        var m = "canvas",
            g = "cp-shape",
            d = true;
        if (cp.kCPHighlight == a.t) g = "cp-hb";
        else if (cp.kCPRolloverAreaItem == a.t) g = "cp-rai";
        else if (cp.kCPZoomSource == a.t) g = "cp-zoom";
        else if (cp.kCPMouse == a.t) d = true;
        else if (cp.kCPMouseClick == a.t) {
            g = "cp-mc";
            d = true
        } else if (cp.kCPOTReviewArea == a.t) {
            m = "div";
            g = "cp-questionSlideReviewLabel";
            d = false
        } else if (cp.kCPOTProgressIndicator == a.t) {
            m = "div";
            g = "cp-progressSlideLabel";
            d = false
        } else if (cp.kCPOTScoringResult == a.t) {
            m =
                "div";
            g = "cp-resultSlideLabel";
            d = false
        } else if (cp.kCPTypingText == a.t) {
            m = "div";
            g = "cp-typingtext"
        } else if (cp.kCPOTTextEntryBoxItem == a.t) {
            m = "div";
            g = "cp-input";
            d = false
        } else if (cp.kCPOTLineItem == a.t) g = "cp-line";
        else if (cp.kCPOTAnswerArea == a.t || cp.kCPOTMatchingQuestionArea == a.t || cp
            .kCPOTMatchingAnswerArea == a.t || cp.kCPOTLikertQuestionArea == a.t || cp
            .kCPOTLikertTotalGroupArea == a.t) g = "cp-answerArea";
        else if (cp.kCPOTStageQuestionText == a.t || cp.kCPOTStageQuestionTitle == a.t) g = "cp-rectWithText";
        else if (cp.kCPOTWidgetItem ==
            a.t) {
            m = "div";
            g = "cp-widget";
            d = this.m_useWidgetVersion7
        } else if (cp.kCPOTWebObject == a.t) {
            m = "div";
            g = "cp-WebObject";
            d = this.m_useWidgetVersion7
        } else if (cp.kCPOTTAItem == a.t) {
            m = "div";
            g = "cp-ta"
        } else if (cp.kCPOTFLVItem == a.t) {
            m = "div";
            g = "cp-eventVideo";
            d = true
        } else if (cp.kCPOTVideo == a.t) {
            m = "div";
            g = "cp-slideVideo";
            d = true
        } else if (cp.kCPFullMotion == a.t) {
            m = "div";
            g = "cp-fmrVideo";
            d = true
        } else if (cp.kCPOTVideoResource == a.t) {
            m = "div";
            g = "cp-cpvcVideo";
            d = true
        } else if (cp.kCPOTAnimationItem == a.t) {
            m = "div";
            g = "cp-animationItem";
            d = true
        } else if (cp.extObjInfo)
            for (var l = 0; l < cp.extObjInfo.length; ++l)
                if (cp.IsValidObj(cp.extObjInfo[l].cb)) {
                    var n = {};
                    n.elemType = m;
                    n.classType = g;
                    n.rewrap = d;
                    if (cp.extObjInfo[l].cb(a.t, n)) {
                        m = n.elemType;
                        g = n.classType;
                        d = n.rewrap;
                        break
                    }
                } l = "c";
        if (cp.kCPOTStageAnswerItem == a.t) {
            n = cp.D[a.n + "c"];
            n = n.at;
            if (n == cp.kCPOTStageSingleChoiceMultipleAnswer) {
                l = "r";
                g = "cp-singleChoiceInput"
            } else if (n == cp.kCPOTStageMultipleChoiceMultipleAnswer) {
                l = "ch";
                g = "cp-multipleChoiceInput"
            } else if (n == cp.kCPOTStageSequenceAnswer) {
                l = "seq";
                g = "cp-sequenceInput"
            } else if (n == cp.kCPOTStageMatchingAnswer) {
                l = "mtcha";
                g = "cp-matchingAnswer"
            }
            m = "div";
            d = false
        }
        if (cp.kCPOTQuestionFillBlank == a.t) {
            g = "cp-fibAnswer";
            l = "fib";
            m = "div";
            d = false
        }
        if (cp.kCPOTStageShortAnswer == a.t) {
            g = "cp-shortAnswer";
            l = "sha";
            m = "div";
            d = false
        }
        if (cp.kCPOTItemHotSpot == a.t) {
            g = "cp-hotspotInput";
            l = "hotspot";
            m = "div";
            d = false
        }
        if (cp.kCPOTStageMatchingQuestion == a.t) {
            g = "cp-matchingItem";
            l = "mtchi";
            m = "div";
            d = false
        }
        if (cp.kCPOTStageLikertQuestion == a.t) {
            g = "cp-likertItem";
            l = "li";
            m = "div";
            d = false
        } else if (cp.kCPOTOvalItem ==
            a.t || cp.kCPOTRectangleItem == a.t || cp.kCPOTPolygon == a.t || cp.kCPOTAnswerArea == a.t || cp
            .kCPOTMatchingQuestionArea == a.t || cp.kCPOTMatchingAnswerArea == a.t || cp
            .kCPOTLikertQuestionArea == a.t || cp.kCPOTLikertTotalGroupArea == a.t) g = "cp-drawingItem";
        else if (cp.kCPOTTitleAutoShape == a.t || cp.kCPOTSubTitleAutoShape == a.t || cp.kCPOTAutoShape == a
            .t || cp.kCPOTRolloverAutoShape == a.t || cp.kCPOTStageCorrectFeedbackShape == a.t || cp
            .kCPOTSuccessShapeItem == a.t || cp.kCPOTStageIncorrectFeedbackShape == a.t || cp
            .kCPOTFailureShapeItem == a.t ||
            cp.kCPOTHintShapeItem == a.t || cp.kCPOTStagePartialCorrectFeedbackShape == a.t || cp
            .kCPOTRetryFeedbackShape == a.t || cp.kCPOTIncompleteFeedbackShape == a.t || cp
            .kCPOTTimeoutFeedbackShape == a.t || cp.kCPOTAnswerFeedbackShape == a.t) g = "cp-autoShape";
        else if (cp.responsive && (cp.kCPOTScorableButtonItem == a.t || cp.kCPOTRetakeButton == a.t || cp
                .kCPOTStageQuestionNextButton == a.t || cp.kCPOTStageQuestionClearButton == a.t || cp
                .kCPOTStageQuestionBackButton == a.t || cp.kCPOTStageQuestionSubmitButton == a.t || cp
                .kCPOTScoringReviewButton == a.t ||
                cp.kCPOTScoringContinueButton == a.t || cp.kCPOTSubmitAllButton == a.t || cp.kCPOTResetButton ==
                a.t || cp.kCPOTUndoButton == a.t || cp.kCPOTDDSubmitButton == a.t || cp
                .kCPOTTextEntryButtonItem == a.t)) {
            n = cp.D[a.n];
            if (n.subt != cp.kImageButton)
                if (n.subt == cp.kTextButton) {
                    m = "div";
                    g = "cp-textbutton"
                } else g = "cp-drawingItem"
        }
        this.SetItemVisibility(a);
        if (k) m = cp(a.n + l);
        else {
            m = cp.newElem(m);
            m.id = a.n + l;
            m.setAttribute("class", g)
        }
        if (cp.kCPOTStageAnswerItem == a.t) {
            c = cp.D[a.n + "c"];
            n = c.at;
            if (n == cp.kCPOTStageSequenceAnswer) {
                m.setAttribute("tabIndex",
                    "-1");
                m.setAttribute("aria-label", c.accstr);
                cp.removeAccessibilityOutline(m);
                m.setAttribute("role", "img")
            }
        }
        if (cp.kCPOTTextEntryBoxItem == a.t && a.d) {
            if (a.d.hc && a.d.hc.length > 0 && cp.device != cp.IDEVICE && cp.device != cp.ANDROID) {
                m.setAttribute("onmouseover", 'cp.showHint("' + a.d.hc + '",this)');
                f.setAttribute("onmousemove", 'cp.showHint("' + a.d.hc + '",this)');
                m.setAttribute("onmouseout", 'cp.hideHint("' + a.d.hc + '",this)')
            }
            if (a.d.cur) m.style.cursor = "text"
        }
        g = void 0;
        if (d) {
            if (k) f = cp("re-" + m.id);
            else {
                f = cp.newElem("div");
                f.id = "re-" + m.id;
                f.setAttribute("tabIndex", -1);
                f.setAttribute("class", "cp-rewrap");
                f.appendChild(m)
            }
            cp.kCPOTTAItem == a.t && cp.removeAccessibilityOutline(f);
            g = f;
            (!k || !(cp.kCPOTWidgetItem == a.t || cp.kCPOTWebObject == a.t)) && e.appendChild(f)
        } else {
            g = f;
            k ? cp.kCPOTWidgetItem != a.t && cp.kCPOTWebObject != a.t && e.appendChild(f) : f.appendChild(m)
        }
        g.style.zIndex = c.zIndex;
        cp.fixWebkitScaling(g)
    };
    cp.Timeline.prototype.SetItemVisibility = function(a) {
        if (a && cp.kCPOTRetakeButton == a.t && cp.movie.playbackController)
            if (a = cp.D[a.n]) {
                var a =
                    cp.D[a.mdi],
                    c = cp.movie.playbackController.GetQuizController();
                a && c && (a.visible = c.CanShowRetakeButton())
            }
    };
    cp.setupSlideBGDivAndCanvasInternal = function(a, c, d) {
        var e = cp.D.project.w,
            f = cp.D.project.h,
            g = false,
            k = c.firstChild;
        if (!k) {
            k = cp.newElem("div");
            k.setAttribute("class", "cp-frameset");
            g = true
        }
        var m = k.id;
        k.id = "Slide" + a.id;
        k.style.zIndex = "0";
        if (cp.responsive) {
            k.style.width = "100%";
            k.style.height = "100%"
        } else {
            k.style.left = "0px";
            k.style.width = e + "px";
            k.style.height = f + "px"
        }
        g && c.appendChild(k);
        var l, c = false;
        if (g) c = false;
        else if (k.firstChild && k.firstChild.id == "__bgDiv__") {
            l = k.firstChild;
            c = true
        }
        var n = false,
            o = false;
        if (a.gf) {
            o = true;
            if (!c) {
                l = cp.newElem("div");
                l.id = "__bgDiv__";
                n = true
            }
            if (cp.browser_supports_svg) {
                var q = cp.getGradientSvgStr(a.gf, e, f, cp("project")
                    .clientWidth / e, cp("project")
                    .clientHeight / f);
                if (q.length > 0) {
                    l.setAttribute("class", "");
                    l.style.position = "absolute";
                    if (cp.responsive) {
                        l.style.width = "100%";
                        l.style.height = "100%"
                    } else {
                        l.style.width = e + "px";
                        l.style.height = f + "px"
                    }
                    l.innerHTML = q
                }
            } else {
                l.setAttribute("class",
                    "cp-gf");
                l.style.position = "absolute";
                if (cp.responsive) {
                    l.style.width = "100%";
                    l.style.height = "100%"
                } else {
                    l.style.width = e + "px";
                    l.style.height = f + "px"
                }
                l.firstChild && l.firstChild.nodeName == "CANVAS" ? l.firstChild.id = "Slide" + a.id + "gf" : l
                    .innerHTML = '<canvas id="Slide' + a.id + 'gf"></canvas>'
            }
        } else if (a.imgf) {
            o = true;
            if (!c) {
                l = cp.newElem("div");
                l.id = "__bgDiv__";
                n = true
            }
            l.setAttribute("class", "cp-imgf");
            l.style.position = "absolute";
            if (cp.responsive) {
                l.style.width = "100%";
                l.style.height = "100%"
            } else {
                l.style.width = e + "px";
                l.style.height = f + "px"
            }
            l.firstChild && l.firstChild.nodeName == "CANVAS" ? l.firstChild.id = "Slide" + a.id + "imgf" : l
                .innerHTML = '<canvas id="Slide' + a.id + 'imgf"></canvas>'
        }
        o ? n && (k.firstChild ? k.insertBefore(l, k.firstChild) : k.appendChild(l)) : c && k.removeChild(l);
        var p;
        g || (p = document.getElementById(m + "c"));
        if (!p) {
            p = cp.newElem("canvas");
            p.setAttribute("class", "cp-shape");
            k.appendChild(p)
        }
        p.id = "Slide" + a.id + "c";
        g = cp.D[p.id];
        c = g.b;
        m = c[2] - c[0];
        l = c[3] - c[1];
        e = m != e || l != f;
        if (cp.responsive) {
            var n = cp("project")
                .clientWidth,
                o = cp("project")
                .clientHeight,
                f = m,
                c = l,
                q = n / m,
                u = o / l,
                q = q < u ? q : u;
            if (g.aip) {
                e = true;
                f = f * q;
                c = c * q
            } else {
                m > n && (f = n);
                l > o && (c = o)
            }
            if (n = g.css[cp.ResponsiveProjWidth].crop)
                if ((o = cp.movie.im.images[g.ip]) && o.nativeImage && o.nativeImage.complete) {
                    n = cp.getIntersectionRect([0, 0, o.nativeImage.width, o.nativeImage.height], [n.x, n.y, f,
                        c
                    ]);
                    if (n.w >= 0 && n.w < f || n.h >= 0 && n.h < c) e = true
                } p.style.width = f + "px";
            p.style.height = c + "px";
            p.style.left = (cp("project")
                .clientWidth - f) / 2 + "px";
            p.style.top = (cp("project")
                .clientHeight - c) / 2 + "px"
        } else {
            p.style.width =
                m + "px";
            p.style.height = l + "px";
            p.style.left = c[0] + "px";
            p.style.top = c[1] + "px"
        }
        if (d && m > 0 && l > 0)
            if (d = g.aip ? g.aip : g.ip)(d = cp.movie.im.images[d]) && d.nativeImage.complete && p.getContext(
                    "2d")
                .drawImage(d.nativeImage, 0, 0, p.clientWidth, p.clientHeight);
        if (k.style.backgroundColor != a.bc && e) k.style.backgroundColor = a.bc
    };
    cp.Timeline.prototype.isSlideBGCropped = function() {
        if (!cp.responsive || !this.currentSlide || !cp.D[this.currentSlide.mdi]) return false;
        var a = cp.D[this.currentSlide.mdi];
        if (!a) return false;
        a = a.css;
        if (!a) return false;
        a = a[cp.ResponsiveProjWidth];
        if (!a) return false;
        var c = a.crop != void 0;
        if (c) {
            this.currentSlide.cropX = a.crop.x;
            this.currentSlide.cropY = a.crop.y
        }
        return c
    };
    cp.Timeline.prototype.setupSlideDiv = function(a, c) {
        cp.setupSlideBGDivAndCanvasInternal(a, c, false);
        var d = c.firstChild,
            e = document.getElementById("Slide" + a.id + "c");
        d.offsetHeight = d.offsetHeight;
        e.offsetHeight = e.offsetHeight;
        if (a.st == "Question Slide") {
            c.onclick = void 0;
            var f = cp.getQuestionObjectName(d.id);
            (f = cp.D[f]) && (f.qtp != "Hotspot" ? cp.removeGestureEvent(c,
                cp.GESTURE_EVENT_TYPES.TAP) : cp.registerGestureEvent(c, cp.GESTURE_EVENT_TYPES.TAP, cp
                .handleClick))
        } else cp.registerGestureEvent(c, cp.GESTURE_EVENT_TYPES.TAP, cp.handleClick);
        this.m_EffectAnimationManager = void 0;
        if (this.m_SlideHasEffects || cp.movie.PPTXSlide) this.m_EffectAnimationManager = PPTXLib
            .initializeAnimationManagerForCPSlide(a);
        if (a.si.length > 0)
            for (var f = a.si, g = 0; g < f.length; ++g) {
                var k = f[g],
                    m = cp.D[k.n];
                m.zIndex = g;
                var l, n = document.getElementById(k.n);
                if (n) {
                    l = n;
                    this.setupSlideItemDiv(k, m, a, d, l, e,
                        true);
                    m.rp == 1 && l.tabIndex !== -1 && (m.rpa == 1 ? l.setAttribute("tabIndex", 2499) : l
                        .setAttribute("tabIndex", 2500 + m.zIndex))
                } else {
                    l = cp.newElem("div");
                    l.id = k.n;
                    cp.device == cp.IDEVICE || cp.device == cp.ANDROID ? cp.kCPOTFLVItem == k.t || cp
                        .kCPOTVideo == k.t || cp.kCPFullMotion == k.t || cp.kCPOTVideoResource == k.t ? l
                        .setAttribute("class", "cp-videoframeset") : l.setAttribute("class", "cp-frameset") : l
                        .setAttribute("class", "cp-frameset");
                    this.setupAccessibility(k, l);
                    this.addHyperLinks(k, l);
                    if (cp.kCPOTTextEntryButtonItem == k.t) {
                        var o =
                            l;
                        cp.registerGestureEvent(l, cp.GESTURE_EVENT_TYPES.TAP, function() {
                            cp.TEBValidator(o)
                        })
                    }
                    if ((cp.kCPOTScorableButtonItem == k.t || cp.kCPOTClickBoxItem == k.t || cp
                            .kCPOTAutoShape == k.t) && k.d) {
                        if (k.d.hc && k.d.hc.length > 0 && cp.device != cp.IDEVICE && cp.device != cp.ANDROID) {
                            l.setAttribute("onmouseover", 'cp.showHint("' + k.d.hc + '",this)');
                            l.setAttribute("onmouseout", 'cp.hideHint("' + k.d.hc + '",this)')
                        }
                        if (k.d.cur) cp.kCPOTAutoShape == k.t ? m.handCursor = true : l.style.cursor = "pointer"
                    }
                    this.setupSlideItemDiv(k, m, a, d, l, e);
                    m.immo ===
                        true && l.tabIndex !== -1 && (a.mmot ? l.setAttribute("tabIndex", 2499) : l
                            .setAttribute("tabIndex", 2500 + f.length))
                }
                m = m.zIndex;
                cp.kCPOTWidgetItem == k.t || cp.kCPOTWebObject == k.t ? (this.m_useWidgetVersion7 || !n) && c
                    .appendChild(l) : c.appendChild(l);
                l.style.zIndex = m;
                cp.fixWebkitScaling(l)
            }
        cp.createAlternativeAccessibleText(d, a.accstr, "img");
        cp.removeAccessibilityOutline(d);
        f = a.accstr;
        cp.D.pref.acc === 0 && (f = " ");
        if (cp.SAFARI === cp.browser) {
            d.setAttribute("role", "img");
            d.setAttribute("aria-label", f)
        } else {
            e = cp.newElem("p");
            e.innerHTML = f;
            f = cp.newElem("div");
            f.id = d.id + "accStr2";
            f.style.opacity = 0;
            f.style.width = "0px";
            f.style.height = "0px";
            f.style.left = "-1999px";
            f.style.position = "fixed";
            f.appendChild(e);
            f.setAttribute("tabIndex", "2400");
            d.appendChild(f)
        }
    };
    cp.Timeline.prototype.addHyperLinks = function(a, c) {
        var d = function(a) {
            return function() {
                cp.hyperlinkClick(a)
            }
        };
        if (a) {
            var e = cp.D[a.n + "c"];
            if (e != void 0 && e.hasOwnProperty("hl") != false)
                for (var e = e.hl.split(","), f = 0; f < e.length; ++f) {
                    var g = e[f];
                    if (g != "") {
                        var k = cp.D[g];
                        if (k == void 0) break;
                        if (k.oca == "") break;
                        var m = k.b;
                        if (m == "") break;
                        var l;
                        if (cp.responsive) {
                            if (l = cp(g)) break;
                            l = g.split("_");
                            l = l[0].substr(2);
                            l = document.getElementsByClassName(l);
                            l = l[0];
                            if (!l) continue
                        } else l = cp.newElem("div");
                        l.id = g;
                        l.setAttribute("tabIndex", k.ti);
                        l.setAttribute("aria-label", k.accstr);
                        cp.D.pref.hsr === 1 && cp.removeAccessibilityOutline(l);
                        l.setAttribute("role", "link");
                        if (!cp.responsive) {
                            l.style.display = "block";
                            l.style.position = "absolute";
                            l.style.width = m[2] - m[0] + "px";
                            l.style.height = m[3] - m[1] + "px";
                            l.style.top =
                                m[1] + "px";
                            l.style.left = m[0] + "px";
                            l.style.backgroundColor = "#FFFFFF";
                            l.style.opacity = 0;
                            c.appendChild(l)
                        }
                        cp.responsive || cp.registerGestureEvent(l, cp.GESTURE_EVENT_TYPES.TAP, d(g));
                        l.style.cursor = "pointer"
                    }
                }
        }
    };
    cp.Timeline.prototype.setupAccessibility = function(a, c) {
        if (a) {
            var d = cp.D[a.n + "c"];
            if (d != void 0 && d.hasOwnProperty("accstr") !== false) {
                var e = d.ti,
                    f = cp.getAccessibilityString(d);
                if (a.t == cp.kCPOTCaptionItem || a.t == cp.kCPOTTitleAutoShape || a.t == cp
                    .kCPOTScoringResultItem || cp.kCPOTSuccessCaptionItem == a.t ||
                    cp.kCPOTImageBoxItem == a.t || cp.kCPOTFailureCaptionItem == a.t || cp
                    .kCPOTHintCaptionItem == a.t || cp.kCPOTIncompleteFeedbackItem == a.t || cp
                    .kCPOTStageCorrectFeedback == a.t || cp.kCPOTStageIncorrectFeedback == a.t || cp
                    .kCPOTStagePartialCorrectFeedback == a.t || cp.kCPOTTimeoutFeedbackItem == a.t || cp
                    .kCPOTRetryFeedbackItem == a.t || cp.kCPOTFillBlankCaption == a.t || cp
                    .kCPOTStageMatchingQuestion == a.t || cp.kCPOTStageMatchingAnswer == a.t || cp
                    .kCPOTStageAnswerItem == a.t || cp.kCPOTQuestionColumn == a.t || cp
                    .kCPRolloverCaptionItem == a.t || cp.kCPRolloverImageItem ==
                    a.t || cp.kCPOTStageCorrectFeedbackShape == a.t || cp.kCPOTSuccessShapeItem == a.t || cp
                    .kCPOTStageIncorrectFeedbackShape == a.t || cp.kCPOTFailureShapeItem == a.t || cp
                    .kCPOTHintShapeItem == a.t || cp.kCPOTStagePartialCorrectFeedbackShape == a.t || cp
                    .kCPOTRetryFeedbackShape == a.t || cp.kCPOTIncompleteFeedbackShape == a.t || cp
                    .kCPOTTimeoutFeedbackShape == a.t) {
                    c.setAttribute("tabIndex", -1);
                    cp.kCPOTFillBlankCaption == a.t ? cp.createAlternativeAccessibleText(c, d.fibText, "img") :
                        cp.createAlternativeAccessibleText(c, f, "img");
                    cp.removeAccessibilityOutline(c)
                } else if (cp.kCPOTStageMatchingAnswerEntry ==
                    a.t) {
                    c.setAttribute("tabIndex", -1);
                    cp.createAlternativeAccessibleText(c, "", "img");
                    cp.removeAccessibilityOutline(c)
                } else if (a.t == cp.kCPOTScorableButtonItem || a.t == cp.kCPOTRetakeButton || a.t == cp
                    .kCPOTScoringReviewButton || a.t == cp.kCPOTScoringContinueButton) {
                    c.setAttribute("tabIndex", e);
                    cp.createAlternativeAccessibleText(c, f, "button");
                    cp.D.pref.hsr === 1 && cp.removeAccessibilityOutline(c)
                } else if (a.t == cp.kCPOTTextEntryButtonItem) {
                    c.setAttribute("tabIndex", e);
                    cp.createAlternativeAccessibleText(c, f, "button");
                    cp.D.pref.hsr === 1 && cp.removeAccessibilityOutline(c)
                } else if (a.t == cp.kCPOTClickBoxItem) {
                    c.setAttribute("tabIndex", -1);
                    cp.removeAccessibilityOutline(c);
                    cp.createAlternativeAccessibleText(c, f, "button")
                } else if (a.t == cp.kCPOTLineItem || a.t == cp.kCPOTOvalItem || a.t == cp.kCPOTRectangleItem ||
                    a.t == cp.kCPOTPolygon || a.t == cp.kCPOTAutoShape) {
                    c.setAttribute("tabIndex", e);
                    cp.createAlternativeAccessibleText(c, f, "img");
                    cp.D.pref.hsr === 1 && cp.removeAccessibilityOutline(c)
                } else if (a.t == cp.kCPOTStageQuestionText || a.t == cp.kCPOTStageQuestionTitle) {
                    c.setAttribute("tabIndex",
                        -1);
                    cp.removeAccessibilityOutline(c);
                    cp.createAlternativeAccessibleText(c, f, "img")
                } else if (a.t == cp.kCPOTStageQuestionNextButton || a.t == cp.kCPOTStageQuestionClearButton ||
                    a.t == cp.kCPOTStageQuestionBackButton || a.t == cp.kCPOTStageQuestionSubmitButton || a.t ==
                    cp.kCPOTSubmitAllButton) {
                    c.setAttribute("tabIndex", e);
                    cp.createAlternativeAccessibleText(c, f, "button");
                    cp.D.pref.hsr === 1 && cp.removeAccessibilityOutline(c)
                } else if (a.t == cp.kCPOTAnimationItem || a.t == cp.kCPOTTAItem || a.t == cp
                    .kCPOTTitleAutoShape || a.t == cp.kCPOTSubTitleAutoShape) {
                    c.setAttribute("tabIndex",
                        -1);
                    cp.removeAccessibilityOutline(c);
                    cp.createAlternativeAccessibleText(c, f, "img")
                } else if (a.t == cp.kCPOTFLVItem) {
                    c.setAttribute("tabIndex", e);
                    cp.createAlternativeAccessibleText(c, f, "presentation")
                } else if (a.t == cp.kCPOTWidgetItem) {
                    c.setAttribute("tabIndex", e);
                    cp.createAlternativeAccessibleText(c, f, "application");
                    cp.D.pref.hsr === 1 && cp.removeAccessibilityOutline(c)
                }
            }
        }
    };
    cp.Timeline.prototype.getSlideDiv = function() {
        return this.mainSlideDiv
    };
    cp.Timeline.prototype.canUpdateToFrame = function(a, c) {
        var d = c;
        d || (d = this.getSlideIndexForFrame(a));
        return this.canUpdateToSlide(d)
    };
    cp.Timeline.prototype.canUpdateToSlide = function(a) {
        return a >= this.slides.length || a < 0 ? false : cp.movie.playbackController ? cp.movie
            .playbackController.AllowedToGoToSlide(cpInfoCurrentSlideIndex, a) == "" : true
    };
    cp.Timeline.prototype.getSlideIndexForFrame = function(a) {
        for (var c = 0; c < this.slides.length; ++c) {
            var d = cp.D[this.slides[c]],
                e = d.to;
            if (a >= d.from && a <= e) return c
        }
        return -1
    };
    cp.Timeline.prototype.getSlideNameForIndex = function(a) {
        return 0 <=
            a && a < this.slides.length ? this.slides[a] : ""
    };
    cp.Timeline.prototype.getSlideIndexForName = function(a) {
        if (a == void 0 || a == "") return -1;
        for (var c = 0; c < this.slides.length; ++c)
            if (a == this.slides[c]) return c;
        return -1
    };
    cp.Timeline.prototype.updatePlaybar = function(a) {
        cp.verbose && cp.log("update playbar " + a);
        if (cp.responsive && cp.PB && cp.PB.playbarCreated && cp.PB.rootObj && cp.PB.rootObj.slider) this
            .frameSlider = cp.PB.rootObj.slider;
        if (!this.frameSlider) this.frameSlider = document.getElementById("playbarSlider");
        this.frameSlider !=
            void 0 && this.frameSlider.updateSlider && this.frameSlider.updateSlider(a - (Math.floor(cp.movie
                .framesToSkipForPlaybar) - cp.movie.framesToSkipForPlaybar))
    };
    cp.Timeline.prototype.updateToc = function(a) {
        if (cp.loadedModules.toc && cp.D.tocProperties.showTotalD) {
            if (!this.toc) this.toc = document.getElementById("tocFooterText");
            this.toc != void 0 && this.toc.updateTime(a)
        }
    };
    cp.Timeline.prototype.updateSlideNumber = function() {};
    cp.Timeline.prototype.setAdjacentSlidesStartFrames = function(a, c) {
        this.updateSlideNumber(c);
        var d = cp.D[a[c - 1]];
        this.previousSlideStartFrame = d ? d.from : -1;
        this.nextSlideStartFrame = (d = cp.D[a[c + 1]]) ? d.from : -1
    };
    cp.Timeline.prototype.AddEventListeners = function(a) {
        if (a.si.length > 0)
            for (var a = a.si, c = 0; c < a.length; ++c) {
                var d = a[c],
                    e = cp.D[d.n];
                if ((d = cp(d.n)) && e) {
                    var f = false,
                        g = {};
                    if (cp.responsive) {
                        if (e.rpvt) {
                            var k = e.rpvt,
                                m;
                            for (m in k) {
                                var l = k[m].vt;
                                g[m] = [];
                                g[m].push(l)
                            }
                        }
                    } else {
                        g[cp.D.project.w] = [];
                        g[cp.D.project.w].push(e.vt)
                    }
                    for (var n in g) {
                        k = g[n];
                        if (void 0 == e.vars && void 0 == e.varLens && void 0 == e.texts) {
                            e.vars = {};
                            e.varLens = {};
                            e.texts = {}
                        }
                        for (l = 0; l < k.length; ++l) {
                            text = k[l];
                            if (text != void 0 && text != "")
                                if (void 0 == e.vars[n] && void 0 == e.varLens[n] && void 0 == e.texts[n]) {
                                    var o = [],
                                        q = [],
                                        p = [],
                                        u = text.split("$$");
                                    if (u.length >= 3)
                                        for (var s = 0; s < u.length; s = s + 2) {
                                            p.push(u[s]);
                                            if (s + 1 < u.length) {
                                                var v = u[s + 1];
                                                if (!cp.vm || !cp.vm.hasOwnProperty(v)) p.push("$$" + v + "$$");
                                                else {
                                                    var x = 0;
                                                    if (v && "" != v) {
                                                        f = cp.em.addEventListener(d, cp
                                                            .SPECIFIC_VARIABLE_CHANGED_EVENT, v);
                                                        x = cp.vm.getVariableLength(v)
                                                    }
                                                    void 0 == v && (v = "");
                                                    o.push(v);
                                                    q.push(x)
                                                }
                                            }
                                        } else p.push(text);
                                    e.vars[n] = o;
                                    e.varLens[n] = q;
                                    e.texts[n] = p
                                } else
                                    for (var w in e.vars)
                                        if (o = e.vars[w])
                                            for (s = 0; s < o.length; ++s) cp.em.addEventListener(d, cp
                                                .SPECIFIC_VARIABLE_CHANGED_EVENT, o[s])
                        }
                    }
                    f && this.eventListeners.push(d)
                }
            }
    };
    cp.Timeline.prototype.AddFeedback = function(a) {
        a && this.feedbacks.push(a)
    };
    cp.Timeline.prototype.RemoveFeedbacks = function(a) {
        for (var c = 0, d = [], c = 0; c < this.feedbacks.length; ++c) cp.FeedbackCloseReason.SLIDE_CHANGE ==
            a || this.feedbacks[c].canHide(a) ? this.feedbacks[c].hide() : d.push(this.feedbacks[c]);
        this.feedbacks = [];
        for (c = 0; c < d.length; ++c) this.feedbacks.push(d[c])
    };
    cp.Timeline.prototype.RemoveFeedback = function(a) {
        for (var c = 0; c < this.feedbacks.length; ++c)
            if (this.feedbacks[c] == a) {
                this.feedbacks.splice(c, 1);
                break
            }
    };
    cp.Timeline.prototype.UpdateFeedbacks = function() {
        for (var a = 0; a < this.feedbacks.length; ++a) this.feedbacks[a].update()
    };
    cp.Timeline.prototype.RemoveEventListeners = function() {
        for (var a = 0; a < this.eventListeners.length; ++a) cp.em.removeEventListener(this.eventListeners[a],
            cp.SPECIFIC_VARIABLE_CHANGED_EVENT);
        this.eventListeners.length = 0
    };
    cp.Timeline.prototype.getFrameset = function(a) {
        for (var c = 0, c = 0; c < this.children.length; ++c)
            if (a == this.children[c].element.id) return this.children[c];
        return null
    };
    cp.Timeline.prototype.correctReWrapZOrder = function(a, c) {
        if (a && (c && a.id != c.id) && !(c.className != "cp-rewrap" || a.className != "cp-rewrap")) {
            var d = c.parentElement;
            if (d)
                for (var e = d.firstChild; e.id != c.id; e = e.nextSibling)
                    if (e.id != a.id && e.className == "cp-rewrap") {
                        var f = e.firstChild;
                        if (f)
                            if ((f = f.firstChild) && f.tagName == "VIDEO") continue;
                        cp.verbose && cp.log("inserting " + e.id + " before " + a.id);
                        d.insertBefore(e, a)
                    }
        }
    };
    cp.Timeline.prototype.correctParentZOrder = function(a, c) {
        if (a && (c && a.id != c.id) && !(c.className != "cp-frameset" || a.className != "cp-frameset")) {
            var d = c.parentElement;
            if (d)
                for (var e = d.firstChild; e.id != c.id; e = e.nextSibling)
                    if (e.id != a.id && e.className == "cp-frameset") {
                        cp.verbose && cp.log("inserting " + e.id + " before " + a.id);
                        d.insertBefore(e, a)
                    }
        }
    };
    cp.Timeline.prototype.selectivelyRemoveHTMLObjects = function(a) {
        var c = a.firstChild;
        if (c) {
            var d = {};
            if (this.children)
                for (var e = 1; e < this.children.length; ++e) {
                    var f = this.children[e],
                        g = false;
                    if (f.itemData.rp || f.itemData.ddv) f.itemData.from <= cpInfoCurrentFrame && f.itemData
                        .to >= cpInfoCurrentFrame && (g = true);
                    if (cp.kCPOTVideo == f.type) {
                        var k = f.children[0];
                        if (k && k.element)(k = k.element.firstChild) && k.tagName == "VIDEO" && (g = true)
                    } else if (cp.IDEVICE == cp.device || cp.device == cp.ANDROID)
                        if (cp.kCPOTFLVItem == f.type || cp.kCPFullMotion == f.type || cp.kCPOTVideo == f
                            .type || cp.kCPOTVideoResource == f.type)
                            if ((k = f.children[0]) &&
                                k.element)(k = k.element.firstChild) && k.tagName == "VIDEO" && (g = true);
                    if (g) {
                        for (var m in f.children) {
                            k = f.children[m];
                            if (k.element)(g = k.element.parentElement) && (g.className == "cp-rewrap" ? d[g
                                .id] = 1 : d[k.element.id] = 1)
                        }
                        f.element && (d[f.element.id] = 1);
                        if (cp.IDEVICE == cp.device || cp.device == cp.ANDROID) f.suppliedElement && (d[f
                            .suppliedElement.id] = 1)
                    }
                }
            for (f = c.firstChild; f; f = e) {
                e = f.nextSibling;
                if (f && !(f.id == "__bgDiv__" || c.id + "c" == f.id || d[f.id])) {
                    f.onmouseover = null;
                    f.onmouseout = null;
                    f.ontouchstart = null;
                    f.ontouchend =
                        null;
                    f.onmousedown = null;
                    f.onmouseup = null;
                    f.ontouchmove = null;
                    f.onclick = null;
                    cp.removeGestureEvent(f, cp.GESTURE_EVENT_TYPES.TAP);
                    cp.verbose && cp.log("removing " + f.id);
                    c.removeChild(f)
                }
            }
            for (c = c.nextSibling; c; c = e) {
                e = c.nextSibling;
                if (!d[c.id]) {
                    c.onmouseover = null;
                    c.onmouseout = null;
                    c.ontouchstart = null;
                    c.ontouchend = null;
                    c.onmousedown = null;
                    c.onmouseup = null;
                    c.ontouchmove = null;
                    c.onclick = null;
                    cp.removeGestureEvent(c, cp.GESTURE_EVENT_TYPES.TAP);
                    cp.verbose && cp.log("removing " + c.id);
                    a.removeChild(c)
                }
            }
            for (e = this.parentChildMap.length -
                1; e >= 0; --e) d[this.parentChildMap[e].m_parent] || this.parentChildMap.splice(e, 1)
        }
    };
    cp.Timeline.prototype.loadAssetsForSlideAtIndex = function(a) {
        cp.verbose && cp.log("loadAssetsForSlideAtIndex " + a);
        cp.movie.pm.loadSlideAssets(a);
        var c = cp.movie.pm.numSlidesToAttemptPreloaded(),
            d = false,
            e = cp.D.sgMgr;
        if (e)
            if ((e = e.sg) && e.length > a)
                for (var e = e[a][1], f = e.length, g = 0; c-- > 0 && g < f;) {
                    a < this.slides.length - 1 && cp.movie.pm.preloadSlideAssets(e[g][0]);
                    ++g;
                    d = true
                }
        d || a < this.slides.length - 1 && cp.movie.pm.preloadSlideAssets(a +
            1)
    };
    cp.Timeline.prototype.addFramesetsForSlideAtIndex = function(a) {
        cp.verbose && cp.log("addFramesetsForSlideAtIndex " + a);
        var c = cp.D[this.slides[a]],
            d = this.getSlideDiv();
        this.RemoveFeedbacks(cp.FeedbackCloseReason.SLIDE_CHANGE);
        this.m_keyManager.clearHandlers();
        this.m_clickManager.clearClicks();
        this.selectivelyRemoveHTMLObjects(d);
        this.m_lowestRewrapElementThatIsRestOfProjectAndOnTop = this
            .m_lowestElementThatIsRestOfProjectAndOnTop = null;
        this.itemsNotLoaded = [];
        this.setupSlideDiv(c, d);
        var e = c.qs.split(",");
        if (this.m_GraphManager) this.m_GraphManager.onSlideJump(a);
        if (cp.movie.playbackController) {
            var f = cp.movie.playbackController.GetQuizController();
            if (e && e != "" && e.length > 0) {
                if (!f) return;
                for (var g = 0; g < e.length; ++g) {
                    var k = cp.getQuestionObject(e[g]);
                    if (k) {
                        this.verbose && cp.log("Starting question for : " + e[g]);
                        k.m_isStarted = false
                    }
                }
            }
            if (f)
                if (a == f.GetAnyScoreSlideIndex()) {
                    f.GetScore();
                    if (!f.GetIsAllowReviewMode() && f.GetIsQuizCompleted()) {
                        cp.movie.paused = true;
                        shouldShowSlide = false
                    }
                    if (f.GetCurrentAttempt() >= f.GetNumberOfQuizAttempts()) {
                        f.GetIsAllowReviewMode() &&
                            f.SetIsInReviewMode(true);
                        f.SetIsQuizCompleted(true)
                    }
                    f.GetIsPassed() && f.SetIsQuizCompleted(true);
                    f.GetScore()
                } else shouldShowSlide = false
        }
        ka = {};
        a = [];
        for (d = d.firstChild; d; d = d.nextSibling)
            if (d.nodeType == Node.ELEMENT_NODE && d.nodeName != "IMG") {
                e = false;
                if ("Slide" + c.id == d.id) e = true;
                else
                    for (f = 0; f < c.si.length; ++f)
                        if (c.si[f].n == d.id) {
                            e = true;
                            break
                        } g = (d.className + "")
                    .split(" ");
                f = g.indexOf("cp-frameset") != -1 || g.indexOf("cp-videoframeset") != -1;
                g = g.indexOf("cp-mask") != -1;
                if ((f || g) && f) {
                    f = cp.parseFrameset(d);
                    f.considerForUpdate =
                        e;
                    f.timeline = self;
                    a.push(f)
                }
            } this.children = a;
        c = null;
        a = cp.D[this.slides[cpInfoCurrentSlideIndex]].iph;
        if (null != a && a.length > 0) {
            c = this.m_interactionManagers[this.slides[cpInfoCurrentSlideIndex]];
            if (c == void 0)(c = cp.CreateInteractionManager(a)) && (this.m_interactionManagers[this.slides[
                cpInfoCurrentSlideIndex]] = c);
            cp.SetCurrentInteractionManager(c)
        }
        this.m_EffectAnimationManager && this.m_EffectAnimationManager.start()
    };
    cp.Timeline.prototype.getCurrentSlideInteractionManager = function() {
        return this.m_interactionManagers[this.slides[cpInfoCurrentSlideIndex]]
    };
    cp.Timeline.prototype.handleRewindForFramesets = function() {
        for (var a = 0; a < this.children.length; ++a) this.children[a].handleRewind()
    };
    cp.Timeline.prototype.initializeGraphManager = function() {
        if (cp.D.baq && cp.D.sgMgr != void 0) {
            this.m_GraphManager = cp.movie.playbackController ? cp.movie.playbackController.GetGraphManager() :
                new cp.SlideGraphManager;
            this.m_GraphManager != void 0 && this.m_GraphManager.initialize()
        }
    };
    cp.Timeline.prototype.createQuestionObjs = function() {
        this.questions = [];
        var a = this.getAttribute("questions") ||
            "";
        if (a.length > 0) this.questions = a.split(",");
        for (a = 0; a < this.questions.length; ++a) {
            var c = this.questions[a];
            if ("" != c) {
                var d = cp.D[c],
                    e = d.sn;
                switch (d.qtp) {
                    case "MCQ":
                        c = new cp.MultipleChoiceQuestion(c, e);
                        break;
                    case "Hotspot":
                        c = new cp.HotspotQuestion(c, e);
                        break;
                    case "Sequence":
                        c = new cp.SequenceQuestion(c, e);
                        break;
                    case "Matching":
                        c = new cp.MatchingQuestion(c, e);
                        break;
                    case "FIB":
                        c = new cp.FIBQuestion(c, e);
                        break;
                    case "ShortAnswer":
                        c = new cp.ShortAnswerQuestion(c, e);
                        break;
                    case "Widget":
                        c = new cp.WidgetQuestion(c,
                            e);
                        break;
                    case "InteractiveItemQuestion":
                        c = new cp.InteractiveItemQuestion(c, e);
                        break;
                    case "InteractiveWidgetQuestion":
                        c = new cp.InteractiveWidgetQuestion(c, e);
                        break;
                    case "DragDropQuestion":
                        d = d.itn;
                        c = new cp.DragDropQuestion(c, e, d);
                        break;
                    case "LIKERT":
                        d = d.itn;
                        c = new cp.LikertQuestion(c, e, d);
                        break;
                    default:
                        c = new cp.Question(c, e)
                }
                if (!c) break;
                cp.movie.questionObjs[a] = c
            }
        }
    };
    cp.Timeline.prototype.getNextBoundForNoLoad = function(a) {
        a = a < this.slides.length ? a : this.slides.length - 1;
        return cp.D[this.slides[a]].to
    };
    cp.Timeline.prototype.getPreviousBoundForNoLoad =
        function(a) {
            return cp.D[this.slides[a >= 0 ? a : 0]].from
        };
    cp.Timeline.prototype.loadSlideAtIndex = function(a) {
        if (!(this.slides.length <= 0)) {
            G = {};
            cp.cpIDMap = {};
            var c = this.slides[a],
                d = cp.D[c],
                e = d.from,
                f = d.to;
            svvi("cpInfoCurrentSlide", a + 1, ["cpInfoCurrentSlide"]);
            svvi("cpInfoCurrentSlideLabel", d.lb, ["cpInfoCurrentSlideLabel"]);
            this.currentSlide = d;
            cp.adjustProjectHeight(this.currentSlide);
            this.cStart = e;
            this.cEnd = f;
            this.audioCCItems = d.audCC;
            this.videoCCItems = d.vidCC;
            this.curVidCCItem = this.curAudCCItem = -1;
            cp.movie.ccText.innerHTML =
                "";
            cp.movie.PPTXSlide = "PPTX Slide" == d.st;
            this.m_SlideHasEffects = PPTXLib.hasAnimationInfo(d);
            cp.movie.resetMovieElapsedTime(cp.movie.PPTXSlide);
            cp.movie.am.changeCurrentSlide(a, e, true);
            d.v = true;
            cp.D.project_main.currentFrame = e;
            this.slideEnterAction = d.sea;
            this.slideExitAction = d.sxa;
            this.currentSlideStartFrame = e;
            this.currentSlideStartTime = this.currentSlideStartFrame * 1E3 / cp.getCpInfoOriginalFPS();
            this.setAdjacentSlidesStartFrames(this.slides, a);
            try {
                this.RemoveEventListeners();
                this.addFramesetsForSlideAtIndex(a);
                this.AddEventListeners(d);
                this.noSkipFrames = {};
                this.forEachChild(Ra);
                PPTXLib.updateNoSkipFramesFromEffectData(d);
                this.noSkipFrames[this.cEnd] = this.cEnd;
                this.noSkipFrames[this.cEnd + 1] = this.cEnd + 1;
                var g = this.m_interactionManagers[c];
                if (g) {
                    var k = g.PauseAtFrame();
                    k != -1 && (this.noSkipFrames[k] = k)
                }
            } catch (m) {
                cp.log(m);
                m.stack && cp.log(m.stack)
            }
        }
    };
    cp.Timeline.ReasonForUpdate = {};
    cp.Timeline.ReasonForUpdate.PROGRESS = 1;
    cp.Timeline.ReasonForUpdate.JUMP = 2;
    cp.Timeline.prototype.fallsOutsideCurrentSlide = function() {
        return this.cEnd <
            cpInfoCurrentFrame || this.cStart > cpInfoCurrentFrame
    };
    cp.Timeline.prototype.updateFrame = function(a) {
        var c = true;
        this.updatingFrame = cpInfoCurrentFrame;
        if (cp.movie.executedActionOnFrame != this.updatingFrame) cp.movie.executedActionOnFrame = void 0;
        this.updatePlaybar(cpInfoCurrentFrame);
        this.updateToc(cpInfoCurrentFrame);
        var d = {};
        d.frame = cpInfoCurrentFrame;
        d.timeInMillSecs = 1E3 * (cpInfoCurrentFrame / cpInfoFPS);
        cp.em.fireEvent("CPTime_Update", d);
        if (cpInfoCurrentFrame > this.lastFrame) this.onEndOfMovie();
        else {
            if (this.cEnd ==
                cpInfoCurrentFrame) {
                if (cp.movie.playbackController)
                    if (d = cp.movie.playbackController.GetQuizController()) {
                        var e = cp.movie.playbackController.GetLMSType();
                        e && (e = e.toUpperCase());
                        d.GetIsReportingEnabled() && (e != "EMAIL" && e != "ACROBAT" && e !=
                            "INTERNALSERVER") && cp.movie.playbackController.SendCourseData(false)
                    } e = 1;
                cpInfoCurrentSlideIndex && (e = cpInfoCurrentSlideIndex + 1);
                if (e >= this.slides.length && cp.movie.playbackController)
                    if ((d = cp.movie.playbackController.GetQuizController()) && d.DoSubmitAll(
                            cpInfoCurrentSlideIndex)) {
                        cp.movie.pause(cp.ReasonForPause.CANNOT_MOVE_AHEAD);
                        return
                    } if (!this.canUpdateToSlide(e) && e < this.slides.length) {
                    cp.movie.pause(cp.ReasonForPause.CANNOT_MOVE_AHEAD);
                    return
                }
                cp.movie.play();
                var e = cpInfoCurrentFrame,
                    f = false;
                if (cp.movie.playbackController)
                    if (d = cp.movie.playbackController.GetQuizController()) {
                        var g = d.GetSlideType(cpInfoCurrentSlideIndex);
                        if (g == "Question" || g == "AnyScoreSlide") f = d.LeaveSlide(cpInfoCurrentSlideIndex)
                    } if (typeof cptb != "undefined" && cptb.onSlideExit) cptb.onSlideExit(cp.D[this.slides[
                    cpInfoCurrentSlideIndex]]);
                f || cp.movie.frameBasedExecuteAction(this.slideExitAction);
                if (e != cpInfoCurrentFrame) return
            }
            d = false;
            if (this.fallsOutsideCurrentSlide(cpInfoCurrentFrame)) {
                if (this.cEnd != -1) {
                    c = this.slides[cpInfoCurrentSlideIndex];
                    (d = this.m_interactionManagers[c]) && d.handleSlideExit();
                    c = cp.D[c];
                    c.slideNumber = cpInfoCurrentSlideIndex + 1;
                    c.lcpversion = ca();
                    c.frameNumber = cpInfoCurrentFrame;
                    e = -1;
                    if (cp.movie)(f = cp.movie.playbackController) && (e = f.GetPercentageSlidesSeen());
                    c.percentageSlideSeen = e;
                    if (cp.IsRunningInACAP) c.navid = this.slides[cpInfoCurrentSlideIndex];
                    cp.em.fireEvent("CPSlideExit",
                        c)
                }
                this.onEndOfSlide(a);
                svvi("cpInfoPrevSlide", cpInfoCurrentSlideIndex, ["cpInfoPrevSlide"]);
                svvi("cpInfoLastVisitedSlide", cpInfoCurrentSlideIndex, ["cpInfoLastVisitedSlide"]);
                cp.movie.cpInfoLastVisitedSlideStartFrame = this.currentSlideStartFrame;
                g = this.getSlideIndexForFrame(cpInfoCurrentFrame);
                cp.movie.playbackController && cp.movie.playbackController.LeaveCurrentSlide(g);
                this.loadSlideAtIndex(g);
                d = true;
                cp.movie.playbackController && cp.movie.playbackController.SetCurrentSlide(g);
                if (typeof cptb != "undefined" &&
                    cptb.onSlideEnter) cptb.onSlideEnter(cp.D[this.slides[cpInfoCurrentSlideIndex]]);
                cp.movie.frameBasedExecuteAction(this.slideEnterAction);
                c = cp.D[this.slides[cpInfoCurrentSlideIndex]];
                c.slideNumber = cpInfoCurrentSlideIndex + 1;
                c.frameNumber = cpInfoCurrentFrame;
                c.lcpversion = ca();
                e = -1;
                if (cp.movie)(f = cp.movie.playbackController) && (e = f.GetPercentageSlidesSeen());
                c.percentageSlideSeen = e;
                if (cp.IsRunningInACAP) c.navid = this.slides[cpInfoCurrentSlideIndex];
                cp.em.fireEvent("CPSlideEnter", c);
                if (c = document.getElementById(this.slides[g]))(c =
                    document.getElementById(c.id + "accStr2")) && c.focus();
                c = false
            }
            this.syncMotionToFrame(cpInfoCurrentFrame);
            this.updateToFrame(cpInfoCurrentFrame, false, a);
            cp.responsive && !c && cp.adjustResponsiveItems(cp.ReasonForDrawing.kSlideChanged);
            if (a == cp.Timeline.ReasonForUpdate.JUMP) {
                cp.movie.am.seekTo(cpInfoCurrentFrame, c);
                cp.movie.vdm.seekTo(cpInfoCurrentFrame, true)
            }
            if (d) {
                a = this.getSlideIndexForFrame(cpInfoCurrentFrame) + 1;
                c = cp.movie.stage.getSlideNameForIndex(a);
                cp.multiAudioTrack && c != "" && cp.movie.am.preload(c);
                c != "" && cp.movie.vdm.preload(c)
            }
            c = cp.D[this.slides[cpInfoCurrentSlideIndex]];
            if (c.si.length > 0) {
                a = c.si;
                c = -1;
                for (d = 0; d < a.length; ++d) {
                    f = a[d];
                    e = document.getElementById(f.n);
                    if (f.t === cp.kCPOTTextEntryBoxItem)
                        if (c === -1) c = d;
                        else {
                            f = document.getElementById(a[c].n);
                            e.tabIndex < f.tabIndex && (c = d)
                        }
                }
                if (c !== -1)(this.inputField = document.getElementById(a[c].n + "_inputField")) && this
                    .inputField.focus()
            }
            this.pauseAtFrame(cpInfoCurrentFrame);
            cp.movie.paused ? cpInfoCurrentFrame == 1 && cp.movie.am.play(1, true) : cp.movie.am.play(
                cpInfoCurrentFrame)
        }
    };
    cp.Timeline.prototype.attemptToAdvanceCurrentFrameByOffset = function(a) {
        if (!(a <= 0)) {
            var c = true,
                a = cpInfoCurrentFrame + a,
                d;
            for (d in this.noSkipFrames) {
                var e = this.noSkipFrames[d];
                if (cpInfoCurrentFrame < e && a > e) {
                    a = e;
                    c = false;
                    break
                }
            }
            L(a, c)
        }
    };
    cp.Timeline.prototype.updateFrameCurrentOnPause = function() {
        this.updateToFrame(cpInfoCurrentFrame, true)
    };
    cp.Timeline.prototype.pauseAtFrame = function(a) {
        if (!this.paused) {
            this.paused = false;
            this.forEachChild(function(c) {
                var e = cp.D[c.element.id],
                    f = cp.D[e.mdi].visible;
                if (a !=
                    cp.movie.stage.interactivePauseFrame)
                    if (f && (c.pa == a || c.rp_pa && a == c.rp_pa)) {
                        if ((f = e.handled) && (cp.kCPOTClickBoxItem == e.type || cp
                                .kCPOTScorableButtonItem == e.type || cp.kCPOTAutoShape == e.type)) f =
                            false;
                        if (!f && (!e.iqb && !e.clickedOnce) && (void 0 == e.enabled || e.enabled)) {
                            cp.movie.am.interactiveItemFound = true;
                            if (cp.D[c.element.id].ssp) cp.movie.am.ssp = 1;
                            cp.movie.pause(cp.ReasonForPause.INTERACTIVE_ITEM);
                            if (cp.movie.paused && null != cp.movie.stage.currentSlide) cp.movie.stage
                                .currentSlide.topMostObjectInteractiveObject =
                                c.element.id
                        }
                    } else if (c.psv == a && f && !e.pausedOnce && (void 0 == e.enabled || e.enabled)) {
                    if (c = c.children[0])
                        if (f = c.element)
                            if ((f = f.firstChild) && f.tagName == "VIDEO" && c.started && (f.paused ||
                                    f.ended)) return;
                    e.pausedOnce = true;
                    cp.movie.pause(cp.ReasonForPause.EVENT_VIDEO_PAUSE)
                }
            });
            var c = this.m_interactionManagers[this.slides[cpInfoCurrentSlideIndex]];
            c != void 0 && a != cp.movie.stage.interactivePauseFrame && c.CheckInteractionPause(a) && cp.movie
                .pause(cp.ReasonForPause.INTERACTIVE_ITEM)
        }
    };
    cp.Timeline.prototype.updateAudioCC =
        function() {
            if (this.audioCCItems) {
                var a = cp.movie.am.slideAudios[cp.movie.am.currentSlideAudio];
                if (a && a.nativeAudio) {
                    var c = a.nativeAudio.currentTime * cp.movie.fps,
                        d = 0;
                    c != 0 && (d = c + a.from);
                    this.updateCC(this.audioCCItems, this.curAudCCItem, d)
                }
            }
        };
    cp.Timeline.prototype.updateVideoCC = function(a) {
        this.videoCCItems && this.updateCC(this.videoCCItems, this.curVidCCItem, a)
    };
    cp.Timeline.prototype.updateCC = function(a, c, d) {
        if (cpCmndCC) {
            var e = cp.movie.ccText,
                f = cp.movie.ccLines,
                d = d - (this.cStart - 1),
                g = a.length - 1,
                k = 1,
                m = this.cEnd -
                this.cStart + 1;
            if (g >= 0) {
                k = a[g].sf;
                m = a[g].ef
            }
            for (; g >= 0; --g) {
                if (k > a[g].sf) k = a[g].sf;
                if (m < a[g].ef) m = a[g].ef;
                if (a[g].sf <= d && a[g].ef >= d) {
                    if (c == g) return;
                    var l = "",
                        n = a[g].t.split("<br/>");
                    if (n.length > 0)
                        for (var l = n[0], o = 1; o < n.length && o < f; ++o) l = l + "<br/>" + n[o];
                    e.innerHTML = l
                }
            }
            if (d < k || d > m) e.innerHTML = ""
        }
    };
    cp.Timeline.prototype.updateToFrame = function(a, c, d) {
        if (!(a > this.lastFrame)) {
            this.updateAudioCC();
            if (!this.paused && !this.yield) {
                var e = this.lastFrame - a;
                this.mainSlideDiv.style.opacity = this.fadeInAtStart && a <= this.fadeInAtStart ?
                    a / this.fadeInAtStart : this.fadeOutAtEnd && a > this.lastFrame - this.fadeOutAtEnd ? e /
                    this.fadeOutAtEnd : 1;
                this.updateVideoCC(a);
                if (!cp.movie.waitingForResources()) {
                    if (this.interactivePauseFrame != a) this.interactivePauseFrame = -1;
                    this.forEachChild(function(e) {
                        e.considerForUpdate && (e.isInRange(a) ? e.isStarted ? c ? e.start(c, cp
                            .ReasonForDrawing.kMoviePaused) : e.updateFrame(d) : e.start(c, cp
                            .ReasonForDrawing.kRegularDraw) : e.isStarted && e.reset())
                    });
                    this.m_EffectAnimationManager != void 0 && (cp.movie.PPTXSlide || this.m_SlideHasEffects) &&
                        PPTXLib.updateAnimationManager()
                }
            }
        }
    };
    cp.Timeline.prototype.onEndOfSlide = function(a) {
        this.forEachChild(function(c) {
            c.onEndOfSlide(a)
        })
    };
    cp.Timeline.prototype.onEndOfMovie = function() {
        if (!(this.onEndOfMovieExecutedFrame != void 0 && this.onEndOfMovieExecutedFrame < this
            .updatingFrame)) {
            this.onEndOfMovieExecutedFrame = this.updatingFrame;
            cp.em.fireEvent("CPMovieStop");
            this.forEachChild(function(a) {
                a.onEndOfMovie()
            });
            cp.movie.pause(cp.ReasonForPause.MOVIE_ENDED);
            cp.movie.frameBasedExecuteAction(this.movieEndAction)
        }
    };
    cp.Timeline.prototype.syncMotionToFrame = function(a, c) {
        this.forEachChild(function(d) {
            d.isStarted && d.isInRange(a) && d.ApplyMotion(a, c)
        })
    };
    cp.Timeline.prototype.start = function() {
        this.paused = false;
        this.element.style.display = "block";
        this.m_keyManager.clearHandlers();
        this.m_clickManager.clearClicks();
        cpInfoCurrentFrame <= 1 && L(1);
        this.updateToFrame(cpInfoCurrentFrame);
        this.RemoveFeedbacks(cp.FeedbackCloseReason.SLIDE_CHANGE);
        this.clearParentChildMap()
    };
    cp.Timeline.prototype.reset = function() {
        this.paused = false;
        this.element.style.display = "none";
        this.m_keyManager.clearHandlers();
        this.m_clickManager.clearClicks();
        L(0);
        this.updateToFrame(cpInfoCurrentFrame);
        this.RemoveFeedbacks(cp.FeedbackCloseReason.SLIDE_CHANGE);
        this.clearParentChildMap()
    };
    cp.Timeline.prototype.stop = function() {
        this.paused = true
    };
    var z = {};
    cp.initObjectFactory = function() {
        z.questionSlideReviewLabel = cp.QuestionSlideReviewLabel;
        z.progressSlideLabel = cp.ProgressSlideLabel;
        z.fibAnswer = cp.FIBAnswer;
        z.shortAnswer = cp.ShortAnswer;
        z.sequenceInput = cp.SequenceInput;
        z.matchingAnswer = cp.MatchingAnswer;
        z.matchingItem = cp.MatchingItem;
        z.likertItem = cp.LikertItem;
        z.hotspotInput = cp.HotspotInput;
        z.multipleChoiceInput = cp.MCQInput;
        z.resultSlideLabel = cp.ResultSlideLabel;
        z.singleChoiceInput = cp.MCQInput;
        z.input = cp.TextInput;
        z.textbutton = cp.TextButton;
        z.shape = cp.Shape;
        z.image = cp.DisplayObject;
        z.group = cp.Group;
        z.svg = cp.DisplayObject;
        z.text = cp.DisplayObject;
        z.placeholder = cp.Placeholder;
        z.hb = cp.HighlightBox;
        z.rai = cp.RolloverAreaItem;
        z.mc = cp.MouseClick;
        z.gf = cp.Gradient;
        z.imgf =
            cp.ImageFill;
        z.typingtext = cp.TypingText;
        z.line = cp.Line;
        z.drawingItem = cp.DrawingItem;
        z.answerArea = cp.AnswerArea;
        z.rectWithText = cp.RectWithText;
        z.autoShape = cp.AutoShape;
        z.widget = cp.Widget;
        z.WebObject = cp.WebObject;
        z.eventVideo = cp.EventVideo;
        z.slideVideo = cp.SlideVideo;
        z.fmrVideo = cp.FMRVideo;
        z.cpvcVideo = cp.CPVCVideo;
        z.zoom = cp.Zoom;
        z.ta = cp.TextAnimation;
        z.animationItem = cp.AnimationItem;
        if (cp.extObjInfo && cp.IsValidObj(cp.extObjInfo))
            for (var a = 0; a < cp.extObjInfo.length; ++a)
                if (cp.IsValidObj(cp.extObjInfo[a])) z[cp.extObjInfo[a].n] =
                    cp.extObjInfo[a].cls
    };
    var ka = {};
    cp.ropMap = {};
    var G = {};
    cp.cpIDMap = {};
    cp.parseChildren = function(a, c) {
        var d = [],
            e = a.id + "c";
        ka[e] && d.push(ka[e]);
        for (e = a.firstChild; e; e = e.nextSibling) {
            var f = e,
                g = false;
            if (e.className == "cp-rewrap") {
                f = e.firstChild;
                g = true
            }
            if (f.nodeType == Node.ELEMENT_NODE) {
                for (var k = (f.className + "")
                        .split(" "), m = null, l, n = false, o = "", q = 0; q < k.length && m == null; ++q)
                    if (k[q].substr(0, 3) == "cp-") {
                        l = k[q].substr(3);
                        var m = z[l],
                            p = k[q].substr(3);
                        if (p == "gf" || p == "imgf" || p == "drawingItem" || p == "answerArea" || p ==
                            "rectWithText" || p == "autoShape") n = true;
                        if ((p == "gf" || p == "imgf") && f.parentElement) o = f.parentElement.id
                    } if (m) {
                    if (k = cp.ropMap[f.id]) {
                        k.restOfProjectDoOnNewSlide();
                        cp.verbose && cp.log("resued childObj from cp.ropMap for " + f.id)
                    } else {
                        if (n) {
                            if (0 == o.length) o = f.id;
                            k = new m(f, o, c)
                        } else k = new m(f, c);
                        cp.verbose && cp.log("created new " + l);
                        m = 0;
                        if (n = k.getAttribute("dn")) m = cp.D[n].rp;
                        if (f.id && 1 == m) {
                            cp.ropMap[f.id] = k;
                            cp.verbose && cp.log("added " + f.id + " to cp.ropMap")
                        }
                    }
                    G[f.id] = k;
                    g ? ka[f.id] = k : d.push(k)
                }
            }
        }
        return d
    };
    cp.removeFromDisplayObjectMap =
        function(a) {
            G[a] = void 0
        };
    cp.parseFrameset = function(a) {
        cp.verbose && cp.log("parseFrameset " + a.id);
        var c = cp.parseChildren(a);
        PPTXLib.instanceManager && PPTXLib.addToInstanceManager(a.id, c[0]);
        if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID) {
            var d = cp.D[a.id];
            if (d) {
                d = d.type;
                if (cp.kCPOTFLVItem == d || cp.kCPOTVideo == d || cp.kCPFullMotion == d || cp
                    .kCPOTVideoResource == d) return new cp.VideoFrameSet(a, c)
            }
        }
        c = new cp.FrameSet(a, c);
        return G[a.id] = c
    };
    cp.parseTimeline = function(a) {
        return new cp.Timeline(a)
    };
    cp.CacheView = function(a) {
        this.index =
            a;
        if (!cp.CacheView.DIM) {
            cp.CacheView.DIM = 20;
            cp.CacheView.GAP = 5;
            cp.CacheView.LEFT_OFFSET = 100;
            cp.CacheView.TOP_OFFSET = 30;
            cp.CacheView.NUM_CACHE_VIEWS = 0
        }
        this.view = cp.newElem("div");
        document.body.appendChild(this.view);
        this.view.style.cssText = "z-index:100;display:block; position:fixed; left:" + (cp.CacheView
                .LEFT_OFFSET + cp.CacheView.NUM_CACHE_VIEWS * (cp.CacheView.DIM + cp.CacheView.GAP)) +
            "px; top:" + cp.CacheView.TOP_OFFSET + "px; width:" + cp.CacheView.DIM + "px; height:" + cp
            .CacheView.DIM + "px; background-color:#555555;opacity:0.8";
        this.view.innerHTML = "<font color='#000000' style='font-size:10px'>-1</font>";
        ++cp.CacheView.NUM_CACHE_VIEWS
    };
    cp.CacheView.prototype = {
        update: function() {
            var a = cp.movie.pm.cache[this.index];
            this.view.innerHTML = "<font color='#000000' style='font-size:10px'>" + a + "</font>";
            this.view.style.backgroundColor = this.index == cp.movie.pm.tail ? "#ffff00" : this.index == cp
                .movie.pm.head ? "#0000ff" : a != -1 ? "#00ff00" : "#555555"
        }
    };
    cp.PrefetchManager = function() {
        cp.movie.pm = this;
        this.cache = cp.device == cp.DESKTOP ? Array(7) : Array(4);
        for (var a = 0; a < this.cache.length; ++a) this.cache[a] = -1;
        this.tail = this.head = 0;
        this.viewCache = false
    };
    cp.PrefetchManager.prototype = {
        numSlidesToAttemptPreloaded: function() {
            return this.cache.length - 3
        },
        print: function() {
            for (var a = "[ ", c = this.tail; c != this.head; c = (c + 1) % this.cache.length) {
                a = a + this.cache[c];
                a = a + " "
            }
            console.log("cached slides:" + (a + "]"))
        },
        showCache: function() {
            if (this.viewCache)
                for (var a = 0; a < this.cacheViews.length; ++a) this.cacheViews[a].update()
        },
        slideWasPrefetched: function(a) {
            for (var c = this.tail; c !=
                this.head; c = (c + 1) % this.cache.length)
                if (this.cache[c] == a) return true;
            return false
        },
        ifPrefetchedMakeMRU: function(a) {
            for (var c = this.tail; c != this.head; c = (c + 1) % this.cache.length)
                if (this.cache[c] == a) {
                    for (var d = (c + 1) % this.cache.length; d != this.head;) {
                        this.cache[c] = this.cache[d];
                        c = d;
                        d = (c + 1) % this.cache.length
                    }
                    this.cache[c] = a;
                    return true
                } return false
        },
        throwAwayLRUSlide: function() {
            if (this.head != this.tail) {
                var a = this.cache[this.tail];
                cp.movie.im.verbose && cp.log("throwing Away LRU Slide " + a);
                var c = cp.D[cp.movie.stage.slides[a]],
                    d = cp.D[c.mdi].ip;
                d != "" && cp.movie.im.unloadImage(a, d);
                if (c = c.si)
                    for (d = 0; d < c.length; ++d) {
                        var e = cp.D[c[d].n],
                            f = cp.D[e.mdi];
                        if (f) {
                            var g = f.ip;
                            if (g) {
                                var k = false;
                                e.pa || (k = e.rp == "1");
                                if (!k) {
                                    cp.movie.im.unloadImage(a, g);
                                    (g = f.uImg) && cp.movie.im.unloadImage(a, g);
                                    (g = f.hImg) && cp.movie.im.unloadImage(a, g);
                                    (g = f.pImg) && cp.movie.im.unloadImage(a, g);
                                    (e = f.imgf) && (e.img && e.img.ip && e.img.ip.length > 0) && cp.movie
                                        .im.unloadImage(a, e.img.ip);
                                    if (f = f[cp.kPPTXSlideImagesStr])
                                        for (e = 0; e < f.length; ++e) f[e].ip.length > 0 && cp.movie.im
                                            .unloadImage(a,
                                                cp.kPPTXSlideImagesDir + f[e].ip)
                                }
                            }
                        }
                    }
                this.cache[this.tail] = -1;
                this.tail = (this.tail + 1) % this.cache.length
            }
        },
        isLoading: function() {
            return this.loading
        },
        loadSlideAssets: function(a) {
            if (this.loading) return false;
            this.loading = true;
            try {
                cp.movie.im.verbose && cp.log("loading assets of slide " + a);
                if (this.ifPrefetchedMakeMRU(a)) M(a, true);
                else {
                    var c = (this.head + 1) % this.cache.length;
                    c == this.tail && this.throwAwayLRUSlide();
                    M(a, true);
                    this.cache[this.head] = a;
                    this.head = c
                }
                cp.movie.im.verbose && this.print()
            } catch (d) {}
            this.loading =
                false;
            this.showCache();
            return true
        },
        preloadSlideAssets: function(a) {
            cp.movie.im.verbose && cp.log("preloading assets of slide " + a);
            if (!this.slideWasPrefetched(a)) {
                var c = (this.head + 1) % this.cache.length;
                c == this.tail && this.throwAwayLRUSlide();
                M(a);
                this.cache[this.head] = a;
                this.head = c
            }
            cp.movie.im.verbose && this.print();
            this.showCache()
        }
    };
    cp.ImageObject = function(a, c, d) {
        this.im = a;
        this.nativeImage = new Image;
        this.nativeImage.cpImage = this;
        this.src = c;
        this.complete = false;
        this.loaders = {};
        this.preloaded = false;
        this.isProjectImage =
            d;
        this.includedInViews = {};
        this.monitorFunc = function(a) {
            a.target.cpImage.complete = true;
            cp.responsive && cp.movie.stage && cp.movie.stage.lastFrame < cpInfoCurrentFrame && cp.movie
                .im && !cp.movie.im.imagesNotLoaded() && cp.adjustResponsiveItems();
            cp.movie.im.verbose && cp.log("loaded " + a.target.src)
        }
    };
    cp.ImageObject.prototype = {
        isIncludedInView: function() {
            var a = !cp.responsive;
            if (cp.responsive) {
                if (this.isProjectImage) return true;
                var c = cp.ResponsiveProjWidth;
                if (cp.DESKTOP != cp.device) {
                    if (window.innerWidth > window.innerHeight) {
                        a =
                            window.innerWidth;
                        c = window.innerHeight
                    } else {
                        a = window.innerHeight;
                        c = window.innerWidth
                    }
                    a = cp.getCorrectBreakpoint(a);
                    c = cp.getCorrectBreakpoint(c);
                    a = this.includedInViews[a] == 1 || this.includedInViews[c] == 1
                } else if (cp.m_isPreview) a = true;
                else {
                    a = cp.getCorrectBreakpoint(window.innerWidth);
                    a = this.includedInViews[a] == 1
                }
            }
            return a
        },
        load: function(a, c) {
            if (!(void 0 == this.src || "" == this.src || null == this.src))
                if (!cp.responsive || this.isIncludedInView()) {
                    if (this.im.verbose) {
                        cp.log("load (monitor = " + c + ") " + this.src);
                        this.complete &&
                            cp.log("completed");
                        this.nativeImage.onload && cp.log("onload is set")
                    }
                    if (!this.complete && !this.nativeImage.onload) {
                        this.monitor = true == c ? true : false;
                        this.nativeImage.onload = this.monitorFunc
                    }
                    if (!this.complete && this.nativeImage.onload && true == c) this.monitor = true;
                    this.loaders[a] = 1;
                    this.im.verbose && cp.log("loaded by = " + a);
                    if (true != c) this.preloaded = true;
                    if (this.nativeImage.src == "") {
                        this.im.verbose && cp.log("loading " + this.src);
                        this.nativeImage.src = this.src;
                        return true
                    }
                }
        },
        unload: function(a) {
            this.im.verbose &&
                cp.log("unload " + this.src + " preloaded = " + this.preloaded);
            this.loaders[a] && delete this.loaders[a];
            var a = 0,
                c;
            for (c in this.loaders) ++a;
            if (a == 0) {
                this.im.verbose && cp.log("unloading " + this.src);
                this.nativeImage = new Image;
                this.nativeImage.cpImage = this;
                this.monitor = this.preloaded = this.complete = false;
                return true
            }
            return false
        }
    };
    cp.ImageManager = function() {
        cp.movie.im = this;
        this.images = {};
        this.preloadingProjectImages = false;
        this.m_projectImages = {};
        this.verbose = false;
        this.reset();
        for (var a = cp.model.projectImages,
                c = 0; c < a.length; ++c) this.m_projectImages[a[c]] = new cp.ImageObject(this, a[c], true);
        a = cp.model.images;
        for (c = 0; c < a.length; ++c) {
            var d = a[c],
                e = cp.responsive ? d.ip : d,
                f = new cp.ImageObject(this, e, false);
            if (cp.responsive) f.includedInViews = d.ipiv;
            this.images[e] = f
        }
    };
    cp.ImageManager.prototype = {
        imagesNotLoaded: function() {
            var a = 0;
            if (this.preloadingProjectImages)
                for (var c in this.m_projectImages) this.m_projectImages[c].monitor && !this
                    .m_projectImages[c].complete && ++a;
            else
                for (c in this.images) this.images[c].monitor &&
                    !this.images[c].complete && ++a;
            this.verbose && a > 0 && cp.log(a + " imaged pending");
            return a > 0
        },
        loadImages: function(a, c, d, e) {
            if (c.length != 0) {
                this.preloadingProjectImages = e ? true : false;
                for (var f = 0; f < c.length; ++f) {
                    var g = c[f],
                        k = e ? this.m_projectImages[g] : this.images[g];
                    if (!k) {
                        k = new cp.ImageObject(this, g, e);
                        e ? this.m_projectImages[g] = k : this.images[g] = k
                    }
                    k.load(a, d)
                }
            }
        },
        unloadImage: function(a, c) {
            var d = this.images[c];
            d && d.unload(a)
        },
        reset: function() {
            if (this.preloadingProjectImages)
                for (var a in this.m_projectImages) this.m_projectImages[a].monitor =
                    false;
            else
                for (a in this.images) this.images[a].monitor = false
        }
    };
    cp.MediaSeeker = function() {
        cp.movie.ms = this;
        this.retryQueue = {};
        this.enabled = this.verbose = false;
        if (cp.browser == cp.MSIE && cp.browserVersion >= cp.MSIE_MIN_SUPPORTED_VERSION || cp.browser == cp
            .FIREFOX && cp.browserVersion >= cp.FF_MIN_SUPPORTED_VERSION || cp.OS == cp.WINDOWS && cp.browser ==
            cp.CHROME && cp.browserVersion >= cp.CHROME_MIN_SUPPORTED_VERSION || cp.device == cp.IDEVICE && cp
            .IOSMajor >= cp.IOS4 || cp.device == cp.ANDROID) this.enabled = true;
        this.verbose && cp.log("MediaSeeker enabled = " +
            this.enabled)
    };
    cp.MediaSeeker.prototype = {
        resetFlags: function(a) {
            delete a.retryCount;
            delete a.lastKnownBuffered;
            delete a.thulped;
            delete a.resting;
            delete a.rested;
            delete a.failure1;
            delete a.failure2
        },
        addToQueue: function(a) {
            if (this.enabled) {
                this.retryQueue[a.id] = a;
                a.retryCount = 1;
                a.lastKnownBuffered = 0;
                a.thulped = false;
                a.resting = false;
                a.rested = false;
                a.failure1 = 0;
                a.failure2 = 0
            }
        },
        removeFromQueue: function(a) {
            if (this.enabled) {
                this.resetFlags(a);
                delete this.retryQueue[a.id]
            }
        },
        inQueue: function(a) {
            return !this.enabled ?
                false : this.retryQueue[a.id] ? true : false
        },
        hasSeeked: function(a) {
            if (!this.enabled) return true;
            ++a.retryCount;
            var c = a.nativeAudio;
            if (!c) c = a.nativeVideo;
            if (!c) {
                this.verbose && cp.log("MediaSeeker: no native media to seek " + a.id);
                return true
            }
            if (void 0 == a.seekToTime) {
                this.verbose && cp.log("MediaSeeker: seekToTime is undefined " + a.id);
                return true
            }
            if (a.thulped) {
                if (!(a.retryCount < 3)) {
                    this.verbose && cp.log("retrying thulped media " + a.id + " seekToTime = " + a
                        .seekToTime);
                    a.thulped = false;
                    a.retryCount = 0;
                    c.src = a.src;
                    c.load()
                }
                return false
            }
            if (a.resting) {
                if (a.retryCount >=
                    3) {
                    this.verbose && cp.log("retrying rested media " + a.id + " seekToTime = " + a
                        .seekToTime);
                    a.resting = false;
                    a.rested = true;
                    a.retryCount = 0
                }
                return false
            }
            if (a.seekToTime < 0) a.seekToTime = 0;
            if (isNaN(c.duration) || !isFinite(c.duration)) {
                this.verbose && cp.log("MediaSeeker: duration is NAN " + a.id);
                if (a.seekToTime == 0) return true;
                if (a.rested) {
                    a.rested = false;
                    ++a.failure1;
                    if (a.failure1 >= 2) {
                        cp.exceptionalLogs && console.log(a.id +
                            " gotStuck while seeking (NAN). gave up seeking");
                        return true
                    }
                    a.thulped = true;
                    try {
                        c.src = "_cp_n_m_"
                    } catch (d) {}
                    try {
                        c.load()
                    } catch (e) {}
                } else a.resting =
                    true;
                return false
            }
            if (a.seekToTime > c.duration) a.seekToTime = c.duration;
            var f = true;
            try {
                c.currentTime = a.seekToTime;
                var g = Math.abs(c.currentTime - a.seekToTime);
                if (g >= 0.05) {
                    var f = false,
                        k = c.buffered;
                    k.end(k.length - 1);
                    if (a.lastKnownBuffered == k)
                        if (a.rested) {
                            a.rested = false;
                            ++a.failure2;
                            if (a.failure2 >= 2) {
                                cp.exceptionalLogs && console.log(a.id +
                                    " gotStuck while seeking (CONST BUFF). gave up seeking");
                                return true
                            }
                            a.thulped = true;
                            try {
                                c.src = "_cp_n_m_"
                            } catch (m) {}
                            try {
                                c.load()
                            } catch (l) {}
                        } else a.resting = true;
                    else a.lastKnownBuffered =
                        k
                }
            } catch (n) {
                g = Math.abs(c.currentTime - a.seekToTime);
                f = g >= 0.05 ? false : true
            }
            this.verbose && f && cp.log("MediaSeeker: " + a.id + " currentTime = " + c.currentTime);
            return f
        },
        pendingItems: function() {
            if (!this.enabled) return 0;
            var a = 0,
                c;
            for (c in this.retryQueue) {
                var d = this.retryQueue[c];
                if (this.hasSeeked(d)) {
                    delete d.seekToTime;
                    this.removeFromQueue(d);
                    if (d.revoke) {
                        delete d.revoke;
                        this.verbose && cp.log("MediaSeeker revoking play of " + d.id);
                        d.play()
                    }
                } else ++a
            }
            this.verbose && (a && this.numPending != a) && cp.log("MediaSeeker: " +
                a + " items pending seek");
            this.numPending = a;
            cp.verbose && a > 0 && cp.log(a + " pendingForSeek");
            return a
        },
        reset: function() {
            for (var a in this.retryQueue) {
                var c = this.retryQueue[a];
                delete c.seekToTime;
                delete c.revoke;
                this.resetFlags(c)
            }
            this.retryQueue = {}
        }
    };
    cp.NativeAudio = function() {
        var a = function() {
            this.duration = this.currentTime = 0;
            this.ended = this.paused = true;
            this.defaultPlaybackRate = 0;
            this.playbackRate = 1;
            this.fastSeek = this.seekable = this.seeking = this.played = false;
            this.src = "";
            this.autoplay = this.preload = this.crossorigin =
                false;
            this.mediagroup = "";
            this.controls = this.muted = this.loop = false
        };
        a.prototype = {
            load: function() {},
            play: function() {},
            pause: function() {},
            addEventListener: function() {},
            removeEventListener: function() {}
        };
        if (typeof Audio === "undefined" || !Audio) {
            var c = document.createElement("audio");
            return c.load == void 0 || c.play == void 0 || c.pause == void 0 || c.addEventListener == void 0 ?
                new a : c
        }
        return new Audio
    };
    cp.AudioObject = function(a, c, d, e, f, g, k) {
        this.am = a;
        this.id = c;
        this.nativeAudio = null;
        this.src = cp.getCorrectMediaPath(d);
        this.from = e;
        this.to = f;
        if (g) this.duration = g / 1E3;
        this.hidden = this.ended = false;
        this.paused = true;
        this.cploop = this.loop = false;
        this.gotStuck = 0;
        this.rp = k
    };
    cp.AudioObject.prototype = {
        load: function() {
            this.nativeAudio && this.nativeAudio.load()
        },
        setSrc: function(a) {
            this.src = cp.getCorrectMediaPath(a);
            if (this.nativeAudio) {
                this.nativeAudio.cpSrc = cp.getCorrectMediaPath(a);
                this.nativeAudio.src = cp.getCorrectMediaPath(a);
                this.load()
            }
        },
        play: function() {
            if (!(this.ended == true || this.hidden))
                if (this.paused)
                    if (this.paused &&
                        this.am.webAudio && this.am.playWebAudio(this)) this.paused = false;
                    else if (cp.lastMediaPlayReqTime && (new Date)
                .getTime() - cp.lastMediaPlayReqTime.getTime() < 50)
                if (cp.movie.paused) {
                    this.am.verbose && cp.log("crowded request postponed " + this.id);
                    var a = this;
                    setTimeout(function() {
                        a.play()
                    }, 50)
                } else this.am.verbose && cp.log("crowded request denied " + this.id);
            else {
                this.paused = false;
                this.am.verbose && cp.log("AdObjPlay " + this.id + " " + this.src);
                this.nativeAudio || this.am.allocAudioChannel(this, cp.IDEVICE != cp.device &&
                    cp.device != cp.ANDROID);
                if (this.nativeAudio)
                    if (this.isSeekPending()) this.finishPendingSeek();
                    else {
                        if (cp.device == cp.IDEVICE && cp.multiAudioTrack) cp.lastMediaPlayReqTime =
                            new Date;
                        this.nativeAudio.play()
                    }
            } else if (cp.device == cp.IDEVICE && !cp.multiAudioTrack && this.nativeAudio)
                if (this.lastTime == this.nativeAudio.currentTime) {
                    ++this.gotStuck;
                    if (this.gotStuck >= 30) {
                        cp.exceptionalLogs && cp.log(this.id + " " + this.src + " gotStuck @" + this
                            .nativeAudio.currentTime);
                        this.gotStuck = 0;
                        try {
                            this.nativeAudio.src = "_cp_n_m_"
                        } catch (c) {}
                        this.nativeAudio.src =
                            this.src;
                        this.nativeAudio.load();
                        this.nativeAudio.play()
                    }
                } else {
                    this.lastTime = this.nativeAudio.currentTime;
                    this.gotStuck = 0
                }
        },
        resetAndPlay: function() {
            this.am.verbose && cp.log("AudioObject " + this.id + " resetAndPlay()");
            this.ended = false;
            this.setCurrentTime(0);
            this.play()
        },
        show: function() {
            this.am.verbose && cp.log("AudioObject " + this.id + " show()");
            this.hidden = false;
            this.shownAt = cpInfoCurrentFrame;
            this.resetAndPlay()
        },
        hide: function() {
            this.am.verbose && cp.log("AudioObject " + this.id + " hide()");
            this.hidden = true;
            delete this.shownAt;
            this.pause()
        },
        pause: function() {
            if (!this.paused && this.am.webAudio && this.am.pauseWebAudio(this.src)) {
                this.paused = true;
                this.am.verbose && cp.log("webAudio:pause " + this.id + " " + this.src)
            } else {
                if (this.isSeekPending()) {
                    this.am.verbose && this.revoke && cp.log("AdObjPause deleting revoke " + this.id);
                    delete this.revoke
                }
                if (!this.paused) {
                    this.paused = true;
                    this.am.verbose && cp.log("AdObjPause " + this.id + " " + this.src);
                    if (this.nativeAudio) {
                        this.nativeAudio.pause();
                        this.nativeAudio.pausedAt = (new Date)
                            .getTime()
                    }
                }
            }
        },
        setLoop: function(a, c) {
            this.loop = a;
            this.loopFrames = c;
            if (cp.IDEVICE == cp.device || cp.device == cp.ANDROID) this.cploop = a;
            else if (this.nativeAudio) a ? this.nativeAudio.loop = true : delete this.nativeAudio.loop
        },
        setCurrentTime: function(a) {
            if (!(this.from == -1 && this.to == -1)) {
                this.am.verbose && cp.log("AudioObject " + this.id + " setCurrentTime(" + a + ")");
                if (this.nativeAudio) {
                    this.am.verbose && cp.log("this.nativeAudio.currentTime = " + this.nativeAudio
                        .currentTime);
                    if (Math.abs(this.nativeAudio.currentTime - a) < 0.1) {
                        this.am.verbose &&
                            cp.log("not seeking delta < 0.1");
                        cp.movie.ms.inQueue(this) || delete this.seekToTime
                    } else {
                        delete this.seekToTime;
                        if (!this.paused) {
                            this.am.verbose && cp.log("setting revoke to true");
                            this.revoke = true;
                            this.pause()
                        }
                        var c = true;
                        try {
                            this.nativeAudio.currentTime = a;
                            var d = Math.abs(this.nativeAudio.currentTime - a);
                            d >= 0.05 && (c = false)
                        } catch (e) {
                            d = Math.abs(this.nativeAudio.currentTime - a);
                            c = d >= 0.05 ? false : true
                        }
                        this.am.verbose && cp.log("seekSuccess = " + c);
                        if (cp.movie.ms.enabled)
                            if (c) {
                                if (this.revoke) {
                                    this.am.verbose && cp.log("revoking play");
                                    delete this.revoke;
                                    this.play()
                                }
                            } else {
                                this.am.verbose && cp.log("pause movie and add to seekQueue");
                                this.seekToTime = a;
                                cp.movie.ms.addToQueue(this)
                            }
                        else if (this.revoke) {
                            this.am.verbose && cp.log("revoking play");
                            delete this.revoke;
                            this.play()
                        }
                    }
                } else {
                    this.seekToTime = a;
                    this.am.verbose && cp.log("no native audio. Kept in pending...")
                }
            }
        },
        isSeekPending: function() {
            return this.from == -1 && this.to == -1 ? false : void 0 != this.seekToTime
        },
        finishPendingSeek: function() {
            if (this.nativeAudio && this.isSeekPending()) {
                this.am.verbose &&
                    cp.log("AudioObject " + this.id + " finishPendingSeek");
                this.setCurrentTime(this.seekToTime)
            }
        },
        seekTo: function(a) {
            if (this.from == -1 && this.to == -1) return true;
            this.am.verbose && cp.log("AudioObject " + this.id + " seekTo(" + a + ")");
            if (this.loop && this.loopFrames) {
                if (this.from <= a) {
                    this.setCurrentTime((a - this.from) % this.loopFrames / cpInfoFPS);
                    this.ended = false;
                    return true
                }
            } else {
                if (this.from <= a && this.to >= a) {
                    this.setCurrentTime((a - this.from) / cpInfoFPS);
                    this.ended = false;
                    return true
                }
                if (this.to >= a) {
                    this.setCurrentTime(0);
                    this.ended = false
                }
            }
            if (this.id == "bga" && !this.loop) this.ended = true;
            return false
        }
    };
    cp.RegisterExternalObjects = function(a, c, d, e) {
        if (!cp.IsValidObj(cp.extObjInfo)) cp.extObjInfo = [];
        for (var f = false, g = 0; g < cp.extObjInfo.length; ++g)
            if (cp.extObjInfo[g].cb == d) {
                f = true;
                break
            } if (!f) {
            f = {};
            f.n = a;
            f.cls = c;
            f.cb = d;
            f.chcb = e;
            cp.extObjInfo.push(f)
        }
    };
    cp.AddNoSkipFrameExternal = function(a) {
        cp.movie.stage && (cp.movie.stage.noSkipFrames[a] = a)
    };
    cp.AddExternalAudioCb = function(a) {
        var c = false;
        if (void 0 == cp.extAudioCallbacks) cp.extAudioCallbacks = [];
        for (var d = 0; d < cp.extAudioCallbacks.length; ++d)
            if (cp.extAudioCallbacks[d] == a) {
                c = true;
                break
            } c || cp.extAudioCallbacks.push(a)
    };
    cp.ExtAudioObject = function(a, c, d, e, f) {
        this.am = a;
        this.id = c;
        this.nativeAudio = null;
        this.src = cp.getCorrectMediaPath(d);
        this.from = e;
        this.to = f;
        this.hidden = this.ended = false;
        this.paused = true;
        this.cploop = this.loop = false;
        this.gotStuck = 0
    };
    cp.ExtAudioObject.prototype = {
        load: function() {
            this.nativeAudio && this.nativeAudio.load()
        },
        play: function() {},
        pause: function() {
            if (!this.paused) {
                this.paused =
                    true;
                if (this.nativeAudio) {
                    this.nativeAudio.pause();
                    this.nativeAudio.pausedAt = (new Date)
                        .getTime()
                }
            }
        },
        isSeekPending: function() {
            return false
        },
        finishPendingSeek: function() {},
        seekTo: function() {
            return true
        },
        reset: function() {}
    };
    cp.MediaView = function(a) {
        this.a = a;
        if (!cp.MediaView.PROGRESS_WIDTH) {
            cp.MediaView.PROGRESS_WIDTH = 300;
            cp.MediaView.STATUS1_WIDTH = 100;
            cp.MediaView.STATUS2_WIDTH = 100;
            cp.MediaView.STATUS3_WIDTH = 100;
            cp.MediaView.STATUS4_WIDTH = 50;
            cp.MediaView.STATUS_WIDTH = cp.MediaView.STATUS1_WIDTH + cp.MediaView.STATUS2_WIDTH +
                cp.MediaView.STATUS3_WIDTH + cp.MediaView.STATUS4_WIDTH;
            cp.MediaView.LEFT_OFFSET = 260;
            cp.MediaView.TOP_OFFSET = 5;
            cp.MediaView.HEIGHT = 15;
            cp.MediaView.GAP = 5;
            cp.MediaView.NUM_MEDIA_VIEWS = 0
        }
        this.view = cp.newElem("div");
        this.status = cp.newElem("div");
        this.status2 = cp.newElem("div");
        this.status3 = cp.newElem("div");
        this.status4 = cp.newElem("div");
        this.progressBar = cp.newElem("div");
        this.srcNameBar = cp.newElem("div");
        this.downloaded = cp.newElem("div");
        this.playHead = cp.newElem("div");
        document.body.appendChild(this.view);
        this.view.appendChild(this.status);
        this.view.appendChild(this.status2);
        this.view.appendChild(this.status3);
        this.view.appendChild(this.status4);
        this.view.appendChild(this.progressBar);
        this.progressBar.appendChild(this.downloaded);
        this.progressBar.appendChild(this.playHead);
        this.progressBar.appendChild(this.srcNameBar);
        this.view.style.cssText = "z-index:100;display:block; position:fixed; left:" + cp.MediaView
            .LEFT_OFFSET + "px; top:" + (cp.MediaView.TOP_OFFSET + cp.MediaView.NUM_MEDIA_VIEWS * (cp.MediaView
                .HEIGHT +
                cp.MediaView.GAP)) + "px; width:" + (cp.MediaView.STATUS_WIDTH + cp.MediaView.PROGRESS_WIDTH) +
            "px; height:" + cp.MediaView.HEIGHT + "px; background-color:#555555;opacity:0.5";
        this.status.style.cssText = "z-index:100;display:block; position:absolute; left:0px; top:0px; width:" +
            cp.MediaView.STATUS1_WIDTH + "px; height:" + cp.MediaView.HEIGHT + "px;background-color:#0000ff";
        this.status2.style.cssText = "z-index:100;display:block; position:absolute; left:" + cp.MediaView
            .STATUS1_WIDTH + "px; top:0px; width:" + cp.MediaView.STATUS2_WIDTH +
            "px; height:" + cp.MediaView.HEIGHT + "px;background-color:#ffffff";
        this.status3.style.cssText = "z-index:100;display:block; position:absolute; left:" + (cp.MediaView
                .STATUS1_WIDTH + cp.MediaView.STATUS2_WIDTH) + "px; top:0px; width:" + cp.MediaView
            .STATUS3_WIDTH + "px; height:" + cp.MediaView.HEIGHT + "px;background-color:#ffffff";
        this.status4.style.cssText = "z-index:100;display:block; position:absolute; left:" + (cp.MediaView
                .STATUS1_WIDTH + cp.MediaView.STATUS2_WIDTH + cp.MediaView.STATUS3_WIDTH) +
            "px; top:0px; width:" + cp.MediaView.STATUS4_WIDTH +
            "px; height:" + cp.MediaView.HEIGHT + "px;background-color:#ffffff";
        this.progressBar.style.cssText = "z-index:100;display:block; position:absolute; left:" + cp.MediaView
            .STATUS_WIDTH + "px; top:0px; width:" + cp.MediaView.PROGRESS_WIDTH + "px; height:" + cp.MediaView
            .HEIGHT + "px;background-color:#888888";
        this.srcNameBar.style.cssText =
            "z-index:100;display:block; position:absolute; left:0px; top:0px; width:" + cp.MediaView
            .PROGRESS_WIDTH + "px; height:" + cp.MediaView.HEIGHT + "px;white-space: nowrap; overflow: hidden;";
        this.downloaded.style.cssText =
            "z-index:100;display:block; position:absolute; left:0px; top:0px; width:0px; height:" + cp.MediaView
            .HEIGHT / 3 + "px;background-color:#10ff10;";
        this.playHead.style.cssText =
            "z-index:100;display:block; position:absolute; left:0px; top:0px; width:2px; height:" + cp.MediaView
            .HEIGHT / 3 + "px;background-color:#101010";
        ++cp.MediaView.NUM_MEDIA_VIEWS
    };
    cp.MediaView.prototype = {
        update: function() {
            var a = this.a.cpAudio;
            if (!a) a = this.a.cpVideo;
            var c = this.a.src.indexOf("/ar/");
            c == -1 && (c = this.a.src.indexOf("/vr/"));
            c == -1 &&
                (c = this.a.src.indexOf("_cp_n_m_"));
            c == -1 && (c = 0);
            c = this.a.src.substr(c);
            a && (c = c + ("|" + a.src + "|" + a.id));
            this.srcNameBar.innerHTML = "<font style='font-size:9px'>" + c + "</font>";
            c = this.a.paused ? "paused" : "playing";
            this.a.ended && (c = c + " end");
            this.status2.innerHTML = "<font color='#000000' style='font-size:8px'>" + c + "</font>";
            if (a) {
                c = a.paused ? "paused" : "playing";
                a.ended && (c = c + " end");
                a.hidden && (c = c + " hdn")
            } else c = "NULL";
            this.status3.innerHTML = "<font color='#000000' style='font-size:8px'>" + c + "</font>";
            switch (this.a.readyState) {
                case cp.HAVE_NOTHING:
                    c =
                        "HaveNone";
                    this.status4.style.backgroundColor = "#ff0000";
                    break;
                case cp.HAVE_METADATA:
                    c = "HaveMeta";
                    this.status4.style.backgroundColor = "#ffaa00";
                    break;
                case cp.HAVE_CURRENT_DATA:
                    c = "HaveCurr";
                    this.status4.style.backgroundColor = "#aacc00";
                    break;
                case cp.HAVE_FUTURE_DATA:
                    c = "HaveMore";
                    this.status4.style.backgroundColor = "#55ff00";
                    break;
                case cp.HAVE_ENOUGH_DATA:
                    c = "HaveAll";
                    this.status4.style.backgroundColor = "#00ff00";
                    break;
                default:
                    c = "???";
                    this.status4.style.backgroundColor = "#555555"
            }
            this.status4.innerHTML = "<font color='#000000' style='font-size:8px'>" +
                c + "</font>";
            if (this.a.ended) {
                this.status.style.backgroundColor = "#ffff00";
                this.status.innerHTML = "<font color='#000000' style='font-size:8px'>Ended</font>"
            } else if (this.a && this.a.networkState == this.a.NETWORK_EMPTY) {
                this.status.style.backgroundColor = "#000000";
                this.status.innerHTML = "<font color='#ffffff' style='font-size:8px'>Empty</font>"
            } else if (this.a && this.a.networkState == this.a.NETWORK_IDLE) {
                this.status.style.backgroundColor = "#aaaaaa";
                this.status.innerHTML = "<font color='#000000' style='font-size:8px'>Idle</font>"
            } else if (this.a &&
                this.a.networkState == this.a.NETWORK_LOADING) {
                this.status.style.backgroundColor = "#00ff00";
                this.status.innerHTML = "<font color='#000000' style='font-size:8px'>Loading</font>"
            } else if (this.a && this.a.networkState == this.a.NETWORK_NO_SOURCE) {
                this.status.style.backgroundColor = "#ff0000";
                this.status.innerHTML = "<font color='#ffffff' style='font-size:8px'>NoSrc</font>"
            }
            var d;
            if (this.a && !isNaN(this.a.duration) && isFinite(this.a.duration)) d = this.a.duration;
            else if (a && a.duration) d = a.duration;
            if (d) {
                a = this.a.buffered;
                if (a.length) {
                    a = a.end(a.length - 1);
                    this.downloaded.style.width = a / d * cp.MediaView.PROGRESS_WIDTH + "px"
                }
                this.playHead.style.left = this.a.currentTime / d * cp.MediaView.PROGRESS_WIDTH + "px"
            } else {
                this.downloaded.style.width = "0px";
                this.playHead.style.left = "0px"
            }
        }
    };
    cp.AudioView = cp.MediaView;
    cp.VideoView = cp.MediaView;
    cp.AudioManager = function() {
        cp.movie.am = this;
        this.volume = 1;
        this.viewAudio = this.verbose = this.loaded = this.muted = false;
        if (window.location.protocol.substr(0, 4) == "http" && window.webkitAudioContext) {
            this.webAudio =
                new window.webkitAudioContext;
            this.webAudioCache = {};
            this.webAudioLoaded = this.webAudioReq = 0
        }
        this.errorCallBackFn = function(a) {
            if (-1 == this.src.indexOf("_cp_n_m_")) {
                if (cp.exceptionalLogs) {
                    cp.log("src = " + this.src + " error code = " + (this.error ? this.error.code :
                        "NULL") + " n/w state = " + this.networkState);
                    cp.log(a)
                }
                this.waitCount = 0
            }
        };
        this.waitingFn = function(a) {
            var c;
            if (!isNaN(this.duration) && isFinite(this.duration)) c = this.duration;
            else if (this.cpAudio && this.cpAudio.duration) c = this.cpAudio.duration;
            if (c) {
                var f =
                    Math.abs(this.currentTime - c);
                cp.movie.am.verbose && cp.log(this.cpSrc + " wait came when delta = " + f + " duration = " +
                    c);
                if (f < 0.3) {
                    if (!(c < 0.3)) {
                        cp.movie.am.verbose && cp.log("simulating arrival of ended event");
                        cp.movie.am.onEndedCallBackFn.call(this, a)
                    }
                    return
                }
            }++this.waitCount;
            if (cp.movie.am.verbose) {
                a = "wait " + this.waitCount + " " + this.cpSrc + " currTime = " + this.currentTime +
                    " duration = " + c + " curFrame = " + cpInfoCurrentFrame;
                if (this.cpAudio) {
                    a = a + (" id = " + this.cpAudio.id);
                    a = a + (" from " + this.cpAudio.from);
                    a =
                        a + (" to " + this.cpAudio.to)
                }
                cp.log(a)
            }
        };
        this.canPlayCallBackFn = function() {
            this.waitCount = 0;
            cp.movie.am.verbose && cp.log("cnPly " + this.cpSrc + " " + (this.cpAudio ? this.cpAudio.id :
                ""))
        };
        this.onEndedCallBackFn = function() {
            this.waitCount = 0;
            if (this.cploop) {
                cp.movie.am.verbose && cp.log(this.cpSrc + " loop");
                if (this.cpAudio) {
                    this.cpAudio.pause();
                    this.cpAudio.seekTo(this.cpAudio.from);
                    this.cpAudio.play()
                }
            } else {
                cp.movie.am.verbose && cp.log(this.cpSrc + " ended");
                this.endedAt = (new Date)
                    .getTime();
                if (this.cpAudio) {
                    this.cpAudio.ended =
                        true;
                    this.cpAudio.pause();
                    if (this.cpAudio.onEndAutoPlayMovie) {
                        delete this.cpAudio.onEndAutoPlayMovie;
                        cp.movie.play()
                    }
                }
            }
        };
        this.onWebAudioEndedCallBackFn = function(a) {
            if (a) {
                cp.movie.am.verbose && cp.log(a.cpSrc + " ended");
                a.ended = true;
                a.pause();
                if (a.onEndAutoPlayMovie) {
                    delete a.onEndAutoPlayMovie;
                    cp.movie.play()
                }
            }
        };
        this.PlayPauseCallBackFn = function() {
            if (this.paused) this.pausedAt = (new Date)
                .getTime();
            if (this.cpAudio) this.cpAudio.paused = this.paused
        };
        this.MAX_AUDIO_CHANNELS = cp.multiAudioTrack ? 10 : 1;
        this.audioChannels = [];
        for (var a = 0; a < this.MAX_AUDIO_CHANNELS; ++a) {
            var c = cp.NativeAudio();
            c.cpSrc = "";
            c.cpAudio = null;
            c.ended = false;
            c.addEventListener("ended", this.onEndedCallBackFn, false);
            c.addEventListener("error", this.errorCallBackFn, false);
            if (cp.waitForAudio) {
                c.addEventListener("waiting", this.waitingFn, false);
                c.addEventListener("canplay", this.canPlayCallBackFn, false)
            }
            c.addEventListener("play", this.PlayPauseCallBackFn, false);
            c.addEventListener("pause", this.PlayPauseCallBackFn, false);
            c.waitCount = 0;
            c.muted = this.muted;
            c.volume = this.volume;
            this.audioChannels[a] = c
        }
        if (this.verbose) {
            a = cp.NativeAudio();
            cp.log("NetworkStates: NETWORK_EMPTY = " + a.NETWORK_EMPTY + " NETWORK_IDLE = " + a.NETWORK_IDLE +
                " NETWORK_LOADING = " + a.NETWORK_LOADING + " NETWORK_NO_SOURCE = " + a.NETWORK_NO_SOURCE);
            a = null
        }
    };
    cp.AudioManager.prototype = {
        unlockWebAudio: function() {
            if (this.webAudio) {
                var a = this.webAudio.createBuffer(1, 1, 22050),
                    c = this.webAudio.createBufferSource();
                c.buffer = a;
                c.connect(this.webAudio.destination);
                c.noteOn = c.noteOn || c.start;
                c.noteOn(0);
                var d = this;
                setTimeout(function() {
                    if (c.playbackState === c.PLAYING_STATE || c.playbackState === c
                        .FINISHED_STATE) {
                        d.webAudioUnlocked = true;
                        d.verbose && cp.log("web audio unlocked")
                    }
                }, 100)
            }
        },
        loadWebAudio: function(a) {
            function c(e) {
                try {
                    d.webAudio.decodeAudioData(e.buf, function(c) {
                        var e = {};
                        e.buffer = c;
                        d.webAudioCache[a] = e
                    }, function() {
                        cp.exceptionalLogs && cp.log(a +
                            " Error decoding. Attempting to sync stream");
                        var d;
                        var f = new Uint8Array(e.buf);
                        f.indexOf = Array.prototype.indexOf;
                        for (d = e.sync;;) {
                            ++e.retry;
                            d = f.indexOf(255,
                                d);
                            if (d == -1 || f[d + 1] & 1) break;
                            ++d
                        }
                        if (d != -1) {
                            f = e.buf.slice(d);
                            delete e.buf;
                            e.buf = f;
                            e.sync = d;
                            d = true
                        } else d = false;
                        d && c(e)
                    })
                } catch (f) {
                    cp.exceptionalLogs && cp.log(a + " Error decoding2 " + f)
                }
            }
            var d = this,
                e = {
                    sync: 0,
                    retry: 0
                };
            if (this.webAudio && !this.webAudioCache[a]) {
                ++this.webAudioReq;
                this.webAudioCache[a] = {};
                var f = new XMLHttpRequest;
                f.open("GET", a, true);
                f.responseType = "arraybuffer";
                f.onload = function(f) {
                    d.verbose && cp.log("webAudio:loaded " + a);
                    ++d.webAudioLoaded;
                    e.buf = f.target.response;
                    c(e)
                };
                f.send()
            }
        },
        playWebAudio: function(a) {
            if (this.webAudio) {
                var c =
                    a.src,
                    d = this.webAudioCache[c];
                if (d && d.buffer) {
                    d.source = this.webAudio.createBufferSource();
                    d.source.buffer = d.buffer;
                    d.source.loop = false;
                    d.source.connect(this.webAudio.destination);
                    d.source.noteOn = d.source.noteOn || d.source.start;
                    d.source.noteOn(0);
                    setTimeout(function() {
                        cp.movie.am.onWebAudioEndedCallBackFn(a)
                    }, d.buffer.duration * 1E3);
                    this.verbose && cp.log("webAudio:play " + c);
                    return true
                }
            }
            return false
        },
        pauseWebAudio: function(a) {
            if (this.webAudio) {
                var c = this.webAudioCache[a];
                if (c) {
                    if (c.source) {
                        c.source.noteOff =
                            c.source.noteOff || c.source.stop;
                        c.source.noteOff(0);
                        delete c.source
                    }
                    this.verbose && cp.log("webAudio:pause " + a);
                    return true
                }
            }
            return false
        },
        pendingAudios: function() {
            var a = 0;
            this.webAudio && (a = this.webAudioReq - this.webAudioLoaded);
            for (var c = 0; c < this.MAX_AUDIO_CHANNELS; ++c) {
                var d = this.audioChannels[c];
                d.waitCount > 0 && (!d.endedAt && !d.paused) && ++a
            }
            if (a > 0) {
                if (this.numPending != a) {
                    this.numPending = a;
                    cp.verbose && cp.log(a + " audios pending")
                }
            } else {
                this.numPending && cp.verbose && cp.log("no audios pending");
                this.numPending =
                    0
            }
            return a
        },
        resetAllWaitingAudios: function() {
            for (var a = 0; a < this.MAX_AUDIO_CHANNELS; ++a) this.audioChannels[a].waitCount = 0
        },
        LRUAudioIndex: function() {
            for (var a = (new Date)
                    .getTime(), c = -1, d = cpInfoCurrentFrame, e = 0; e < this.MAX_AUDIO_CHANNELS; ++e) {
                var f = this.audioChannels[e];
                if (f.ended || f.paused)
                    if (f.endedAt) {
                        if (a > f.endedAt) {
                            a = f.endedAt;
                            c = e
                        }
                    } else if (f.pausedAt) {
                    if (a > f.pausedAt) {
                        a = f.pausedAt;
                        c = e
                    }
                } else c == -1 && d > f.cpTo && (c = e)
            }
            return c
        },
        allocAudioChannel: function(a) {
            this.verbose && cp.log("allocAudioChannel " + a.id +
                " " + a.src);
            if (this.webAudio && this.webAudioCache[a.src]) this.verbose && cp.log(
                "found in web-audio cache");
            else {
                if (cp.multiAudioTrack) {
                    for (var c = 0; c < this.MAX_AUDIO_CHANNELS; ++c) {
                        var d = this.audioChannels[c];
                        if (d.cpSrc == a.src && (d.ended || d.paused)) {
                            if (d.cpAudio != null) {
                                d.cpAudio.nativeAudio = null;
                                d.cpAudio = null
                            }
                            a.nativeAudio = d;
                            d.cpAudio = a;
                            cp.device == cp.IDEVICE || cp.device == cp.ANDROID ? d.cploop = a.cploop : d
                                .loop = a.loop;
                            d.ended = false;
                            delete d.endedAt;
                            delete d.pausedAt;
                            d.cpTo = a.to;
                            a.isSeekPending() || a.seekTo(a.from);
                            a.finishPendingSeek();
                            d.load();
                            this.verbose && cp.log("allocAudioChannel found existing @ " + c);
                            return true
                        }
                    }
                    for (c = 0; c < this.MAX_AUDIO_CHANNELS; ++c) {
                        d = this.audioChannels[c];
                        if (d.cpSrc == "") {
                            d.waitCount = 0;
                            d.cpSrc = a.src;
                            d.src = a.src;
                            a.nativeAudio = d;
                            d.cpAudio = a;
                            cp.device == cp.IDEVICE || cp.device == cp.ANDROID ? d.cploop = a.cploop : d
                                .loop = a.loop;
                            d.ended = false;
                            delete d.endedAt;
                            delete d.pausedAt;
                            d.cpTo = a.to;
                            a.finishPendingSeek();
                            d.load();
                            this.verbose && cp.log("allocAudioChannel found empty slot @ " + c);
                            return true
                        }
                    }
                    c =
                        this.LRUAudioIndex();
                    if (-1 != c) {
                        d = this.audioChannels[c];
                        if (d.cpAudio != null) {
                            d.cpAudio.nativeAudio = null;
                            d.cpAudio = null
                        }
                        a.nativeAudio = d;
                        d.cpAudio = a;
                        cp.device == cp.IDEVICE || cp.device == cp.ANDROID ? d.cploop = a.cploop : d.loop =
                            a.loop;
                        d.ended = false;
                        delete d.endedAt;
                        delete d.pausedAt;
                        d.cpTo = a.to;
                        if (d.cpSrc != a.src) {
                            d.waitCount = 0;
                            d.cpSrc = a.src;
                            d.src = a.src
                        } else a.isSeekPending() || a.seekTo(a.from);
                        a.finishPendingSeek();
                        d.load();
                        this.verbose && cp.log("allocAudioChannel re-used LRU slot @ " + c);
                        return true
                    }
                    return false
                }
                d =
                    this.audioChannels[0];
                d.paused || (d.cpAudio != null ? d.cpAudio.pause() : d.pause());
                if (d.cpAudio != null) d.cpAudio.nativeAudio = null;
                a.nativeAudio = d;
                d.cpAudio = a;
                d.cploop = a.cploop;
                d.ended = false;
                delete d.endedAt;
                delete d.pausedAt;
                if (d.cpSrc != a.src) {
                    d.waitCount = 0;
                    d.cpSrc = a.src;
                    d.src = a.src;
                    d.currentTime > 0 && this.verbose && cp.log("currentTime after changing src = " + d
                        .currentTime + " going to wait...");
                    if (cp.IOSFlavor <= cp.IOS5)
                        for (; d.currentTime > 0;) d.load();
                    else
                        for (c = 0; d.currentTime > 0 && ++c < 100;) {
                            cp.verbose && cp.log("waiting for " +
                                c + " time");
                            d.load()
                        }
                    this.verbose && cp.log("finished waiting")
                } else a.isSeekPending() || a.seekTo(a.from);
                a.finishPendingSeek();
                d.load()
            }
        },
        allocSingletonAudioChannelForPlayAudioAction: function(a) {
            this.verbose && cp.log("allocSingletonAudioChannelForPlayAudioAction " + a);
            var c = cp.NativeAudio();
            c.addEventListener("ended", this.onEndedCallBackFn, false);
            c.addEventListener("error", this.errorCallBackFn, false);
            if (cp.waitForAudio) {
                c.addEventListener("waiting", this.waitingFn, false);
                c.addEventListener("canplay", this.canPlayCallBackFn,
                    false)
            }
            c.addEventListener("play", this.PlayPauseCallBackFn, false);
            c.addEventListener("pause", this.PlayPauseCallBackFn, false);
            c.waitCount = 0;
            c.cpSrc = a;
            c.src = a;
            cp.movie.am.singletonPlayAudio.nativeAudio = c;
            c.cpAudio = cp.movie.am.singletonPlayAudio;
            c.muted = this.muted;
            c.volume = this.volume;
            c.ended = false;
            c.load();
            this.audioViews && this.audioViews.push(new cp.AudioView(c))
        },
        load: function() {
            var a = cp.D.pbga;
            if (a) {
                this.bgAudio = new cp.AudioObject(this, "bga", a.src, 1, a.to, a.du);
                a.l && this.bgAudio.setLoop(true);
                this.bgAudio.stopAtProjectEnd =
                    a.spe;
                this.bgAudio.lowerVolumeOnSlidesWithAudio = a.lv;
                this.bgAudio.lowerVolumePercentage = a.vp
            }
            a = (cp.D.project_main.slideAudios || "")
                .split(",");
            this.slideAudios = {};
            for (var c = 0; c < a.length; ++c)
                if ("" != a[c]) {
                    var d = cp.D[a[c]],
                        e = new cp.AudioObject(this, a[c], d.src, d.from, d.to, d.du);
                    d.l && e.setLoop(true, d.lf);
                    this.slideAudios[a[c]] = e
                } a = {};
            this.objectAudios = {};
            this.eventAudios = {};
            c = (cp.D.project_main.slides || "")
                .split(",");
            for (d = 0; d < c.length; ++d) {
                for (var f = cp.D[c[d]], g = (f.oa || "")
                        .split(","), k = {}, m = false, e = 0; e <
                    g.length; ++e)
                    if ("" != g[e]) {
                        var l = cp.D[g[e]],
                            m = l.rp ? a[g[e]] : void 0;
                        if (!m) {
                            m = new cp.AudioObject(this, g[e], l.src, l.from, l.to, l.du, l.rp);
                            m.mouseAudio = l.msa;
                            l.rp && (a[g[e]] = m)
                        }
                        k[g[e]] = m;
                        m = true
                    } m && (this.objectAudios[c[d]] = k);
                f = (f.ea || "")
                    .split(",");
                g = {};
                m = false;
                for (e = 0; e < f.length; ++e)
                    if ("" != f[e]) {
                        k = cp.D[f[e]];
                        m = k.rp ? a[f[e]] : void 0;
                        if (!m) {
                            m = new cp.AudioObject(this, f[e], k.src, -1, -1, k.du, k.rp);
                            k.rp && (a[f[e]] = m)
                        }
                        g[f[e]] = m;
                        m = true
                    } m && (this.eventAudios[c[d]] = g)
            }
            if (cp.movie.playKeyTap) this.keyTap = new cp.AudioObject(this,
                "pkt", "ar/KeyClick.mp3", -1, -1, void 0);
            this.singletonPlayAudio = new cp.AudioObject(this, "spa", "", -1, -1, void 0);
            this.extAudios = {};
            if (cp.extAudioCallbacks)
                for (a = 0; a < cp.extAudioCallbacks.length; ++a) cp.extAudioCallbacks[a](this);
            this.loaded = true
        },
        deviceSpecificFlush: function() {
            if ((cp.IDEVICE == cp.device || cp.device == cp.ANDROID) && cp.multiAudioTrack) {
                for (var a = 0, c = 0; c < this.MAX_AUDIO_CHANNELS; ++c) {
                    var d = this.audioChannels[c];
                    if (d.src.indexOf("_cp_n_m_") != -1) {
                        ++a;
                        if (a >= this.MAX_AUDIO_CHANNELS / 2) return
                    }
                }
                for (c =
                    0; c < this.MAX_AUDIO_CHANNELS; ++c) {
                    d = this.audioChannels[c];
                    if (d.ended || d.paused) {
                        if (d.cpAudio != null) {
                            d.cpAudio.nativeAudio = null;
                            d.cpAudio = null
                        }
                        d.cpSrc = "";
                        d.waitCount = 0;
                        delete d.cploop;
                        d.ended = false;
                        delete d.endedAt;
                        delete d.pausedAt;
                        delete d.cpTo;
                        if (d.src.indexOf("_cp_n_m_") == -1) {
                            try {
                                d.src = "_cp_n_m_"
                            } catch (e) {}
                            try {
                                d.load()
                            } catch (f) {}
                        }
                    }
                }
            }
        },
        deviceSpecificInit: function() {
            if (cp.IDEVICE == cp.device || cp.device == cp.ANDROID)
                for (var a = 0; a < this.MAX_AUDIO_CHANNELS; ++a) {
                    var c = this.audioChannels[a];
                    if (!c.cpSrc) try {
                        c.src =
                            "_cp_n_m_"
                    } catch (d) {}
                    try {
                        c.load()
                    } catch (e) {}
                }
        },
        playKeyTap: function() {
            this.verbose && cp.log("playKeyTap");
            if (!this.playWebAudio(this.keyTap)) {
                if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID)
                    if (!cp.multiAudioTrack && (this.audioPlaying || cp.movie.stage.VideoPlaying)) {
                        this.verbose && cp.log("audioPlaying " + this.audioPlaying + " videoPlaying " + this
                            .videoPlaying);
                        return
                    } if (!this.muted && 1 == cp.movie.speed) {
                    this.eventAudioPlaying = this.keyTap.id;
                    this.keyTap.resetAndPlay()
                }
            }
        },
        seekTo: function(a, c) {
            if (!this.loaded) return -1;
            var d = cp.movie.stage.getSlideIndexForFrame(a);
            if (-1 == d) return -1;
            this.ssc = 0;
            this.changeCurrentSlide(d, a, false);
            if (this.currentSlide) {
                var e = this.objectAudios[this.currentSlide];
                if (e)
                    for (var f in e) {
                        var g = e[f];
                        g && (g.seekTo(a) || g.pause())
                    }
            }
            if (this.currentSlideAudio)(e = this.slideAudios[this.currentSlideAudio]) && (e.seekTo(a) || e
                .pause());
            this.bgAudio && (this.bgAudio.paused || this.bgAudio.ended) && this.bgAudio.seekTo(a);
            this.singletonPlayAudio && c && this.singletonPlayAudio.pause();
            return d
        },
        changeCurrentSlide: function(a,
            c, d) {
            this.deviceSpecificFlush();
            a = cp.movie.stage.getSlideNameForIndex(a);
            if (!(a == "" || this.currentSlide == a)) {
                this.verbose && cp.log("am changing slide from " + this.currentSlide + " to " + a +
                    " seek = " + d);
                this.interactiveItemFound = false;
                this.ssp = this.ssc = 0;
                if (this.currentSlide) {
                    var e = this.objectAudios[this.currentSlide];
                    if (e)
                        for (var f in e) {
                            var g = e[f];
                            g.mouseAudio ? setTimeout(function(a) {
                                return function() {
                                    a.pause()
                                }
                            }(g), 500) : g.pause()
                        }
                    if (e = this.eventAudios[this.currentSlide])
                        for (var k in e) {
                            g = e[k];
                            g.id.length <=
                                5 || g.id.substring(g.id.length - 5) != "ClkAd" ? g.pause() : setTimeout(
                                    function(a) {
                                        return function() {
                                            a.pause()
                                        }
                                    }(g), 500)
                        }
                    this.singletonPlayAudio.pause();
                    if (this.currentSlideAudio) {
                        k = this.slideAudios[this.currentSlideAudio];
                        if (k.from > c || k.to < c) {
                            k.pause();
                            if (k.nativeAudio) {
                                k.nativeAudio.cpAudio = null;
                                k.nativeAudio = null
                            }
                            if (k.ended) k.ended = false;
                            delete this.currentSlideAudio
                        } else d && cpInfoPrevFrame != c - 1 && k.seekTo(c)
                    }
                    if (k = this.extAudios[this.currentSlide])
                        for (f in k) k[f].reset()
                }
                this.currentSlide = a;
                if (!this.currentSlideAudio) {
                    this.currentSlideAudio =
                        cp.D[this.currentSlide].audioName;
                    (k = this.slideAudios[this.currentSlideAudio]) && k.seekTo(c)
                }
                if (d && this.currentSlide)
                    if (e = this.objectAudios[this.currentSlide])
                        for (f in e) {
                            g = e[f];
                            g.rp ? g.ended && g.seekTo(g.from) : g.seekTo(g.from)
                        }
                this.stopBGAudio = (c = cp.D[this.currentSlide]) && c.sba ? true : false
            }
        },
        preload: function(a) {
            if (this.webAudio) {
                var c = this.eventAudios[a];
                if (c)
                    for (var d in c) {
                        var e = c[d];
                        e && this.loadWebAudio(e.src)
                    }
                this.keyTap && cp.movie.playKeyTap && this.loadWebAudio(this.keyTap.src);
                var c = this.objectAudios[a],
                    f;
                for (f in c)(e = c[f]) && e.mouseAudio && this.loadWebAudio(e.src)
            }
            if (!(cp.device == cp.IDEVICE || cp.device == cp.ANDROID || cp.device == cp.KINDLE) && this
                .loaded && 1 == cp.movie.speed) {
                this.verbose && cp.log("audio manager preload " + a);
                if (c = cp.D[a])
                    if ((c = this.slideAudios[c.audioName]) && !c.nativeAudio && !this.allocAudioChannel(c,
                            false)) return;
                c = this.objectAudios[a];
                for (f in c) {
                    e = c[f];
                    if (!e || !e.rp || !e.nativeAudio)
                        if (e && (!e.mouseAudio || !this.webAudio) && !this.allocAudioChannel(e, false))
                            return
                }
                if (!this.webAudio) {
                    if (c = this.eventAudios[a])
                        for (d in c)
                            if ((e =
                                    c[d]) && (!e.rp || !e.nativeAudio) && !this.allocAudioChannel(e, false))
                                return;
                    if (this.keyTap && cp.movie.playKeyTap && !this.allocAudioChannel(this.keyTap, false))
                        return
                }
                a = this.extAudios[a];
                for (f in a)
                    if ((d = a[f]) && !this.allocAudioChannel(d, false)) break
            }
        },
        play: function(a, c) {
            this.pace = null;
            if (this.loaded && 1 == cp.movie.speed) {
                if ((cp.device == cp.IDEVICE || cp.device == cp.ANDROID) && !cp.multiAudioTrack) {
                    var d = this.audioChannels[0];
                    if (!d.paused && !d.ended && d.cpAudio && d.cpAudio.id == this.eventAudioPlaying || cp
                        .movie.stage.VideoPlaying) return
                }
                var d =
                    false,
                    e = null,
                    f = null;
                if (!c) {
                    if (this.currentSlide) {
                        var g = this.objectAudios[this.currentSlide];
                        if (g)
                            for (var k in g) {
                                var m = g[k];
                                if (m && !m.ended)
                                    if (m.from <= a && m.to >= a || m.shownAt && m.shownAt <= a && m
                                        .shownAt + m.to - m.from >= a) {
                                        if ((cp.device == cp.IDEVICE || cp.device == cp.ANDROID) && !cp
                                            .multiAudioTrack) null == e && (e = m);
                                        else {
                                            null == e && (e = m);
                                            m.play()
                                        }
                                        d = true
                                    } else m.mouseAudio ? this.webAudio && m.pause() : m.pause()
                            }
                    }
                    if (this.currentSlideAudio)
                        if ((k = this.slideAudios[this.currentSlideAudio]) && !k.ended)
                            if (k.from <= a && k.to >= a)
                                if ((cp.device ==
                                        cp.IDEVICE || cp.device == cp.ANDROID) && !cp.multiAudioTrack) {
                                    if (null == e) f = e = k;
                                    this.ssc != 1 && this.ssp != 1 && (d = true)
                                } else if (this.ssc != 1 && this.ssp != 1) {
                        k.play();
                        null == e && (e = k);
                        f = k;
                        d = true
                    } else k.pause();
                    else k.pause()
                }
                if (this.bgAudio) {
                    if (d) {
                        if (this.bgAudio.lowerVolumeOnSlidesWithAudio && this.bgAudio.nativeAudio) this
                            .bgAudio.nativeAudio.volume = this.volume * (this.bgAudio
                                .lowerVolumePercentage / 100)
                    } else if (this.bgAudio.nativeAudio) this.bgAudio.nativeAudio.volume = this.volume;
                    if ((cp.device == cp.IDEVICE || cp.device ==
                            cp.ANDROID) && !cp.multiAudioTrack) {
                        if (null == e) e = this.bgAudio
                    } else this.stopBGAudio ? this.bgAudio.pause() : this.bgAudio.play()
                }
                this.audioPlaying = null;
                if ((cp.device == cp.IDEVICE || cp.device == cp.ANDROID) && e && !cp.multiAudioTrack)
                    if (f == e) {
                        if (this.ssc != 1 && this.ssp != 1) {
                            this.audioPlaying = e.id;
                            e.play()
                        }
                    } else if (this.bgAudio == e)
                    if (this.stopBGAudio) e.pause();
                    else {
                        this.audioPlaying = e.id;
                        e.play()
                    }
                else {
                    this.audioPlaying = e.id;
                    e.play()
                }
                if (cp.IDEVICE == cp.device || cp.device == cp.ANDROID) {
                    if (1 == cp.movie.speed)
                        if (e && e != this.bgAudio &&
                            !e.shownAt && !e.ended && !e.paused && !e.loop && e.nativeAudio && e.nativeAudio
                            .currentTime > 0) {
                            this.pace = e.from + e.nativeAudio.currentTime * cpInfoFPS;
                            if (this.pace > e.to) this.pace = e.to
                        } else this.pace = cp.movie.vdm.pace()
                } else if (1 == cp.movie.speed && !this.interactiveItemFound)
                    if (f && !f.ended && !f.paused && !f.loop && f.nativeAudio && f.nativeAudio
                        .currentTime > 0) {
                        this.pace = f.from + f.nativeAudio.currentTime * cpInfoFPS;
                        if (this.pace > f.to) this.pace = cp.movie.vdm.pace() ? null : f.to
                    } else this.pace = cp.movie.vdm.pace()
            }
        },
        pause: function(a) {
            this.reasonForPause =
                a;
            if ((a == cp.ReasonForPause.PLAYBAR_ACTION || a == cp.ReasonForPause.CPCMNDPAUSE || a == cp
                    .ReasonForPause.MOVIE_REWIND_STOP || a == cp.ReasonForPause.EVENT_VIDEO_PAUSE || a == cp
                    .ReasonForPause.ONLY_ONE_MEDIUM_CAN_PLAY || a == cp.ReasonForPause
                    .PPTX_PAUSE_FOR_ONCLICK_ANIMATION || a == cp.ReasonForPause.CPCMNDGOTOFRAME) && this
                .currentSlide) {
                var c = this.objectAudios[this.currentSlide];
                if (c)
                    for (var d in c) c[d].pause();
                if (c = this.extAudios[this.currentSlide])
                    for (d in c) c[d].pause(a)
            }
            d = cpInfoCurrentFrame;
            if (this.currentSlideAudio)(c =
                this.slideAudios[this.currentSlideAudio]) && (c.from <= d && c.to >= d ? a == cp
                .ReasonForPause.INTERACTIVE_ITEM ? this.ssp == 1 && c.pause() : (a == cp.ReasonForPause
                    .PLAYBAR_ACTION || a == cp.ReasonForPause.CPCMNDPAUSE || a == cp.ReasonForPause
                    .MOVIE_REWIND_STOP || a == cp.ReasonForPause.EVENT_VIDEO_PAUSE || a == cp
                    .ReasonForPause.ONLY_ONE_MEDIUM_CAN_PLAY || a == cp.ReasonForPause
                    .PPTX_PAUSE_FOR_ONCLICK_ANIMATION || a == cp.ReasonForPause.CPCMNDGOTOFRAME) && c
                .pause() : c.pause());
            this.bgAudio && (a == cp.ReasonForPause.MOVIE_ENDED ? this.bgAudio.stopAtProjectEnd &&
                this.bgAudio.pause() : (a == cp.ReasonForPause.PLAYBAR_ACTION || a == cp.ReasonForPause
                    .CPCMNDPAUSE || a == cp.ReasonForPause.MOVIE_REWIND_STOP || a == cp.ReasonForPause
                    .EVENT_VIDEO_PAUSE || a == cp.ReasonForPause.ONLY_ONE_MEDIUM_CAN_PLAY) && this
                .bgAudio.pause())
        },
        pauseCurrentSlideAudioForInteractiveClick: function() {
            this.verbose && cp.log("pause currentSlide Audio for SSC");
            var a = cpInfoCurrentFrame;
            if (this.currentSlideAudio) {
                var c = this.slideAudios[this.currentSlideAudio];
                if (c && c.from <= a && c.to >= a) {
                    this.ssc = 1;
                    c.pause()
                }
            }
        },
        mute: function(a) {
            var a = a == true || a > 0 ? true : false,
                c = document.getElementById("playbar");
            a && c.mute != void 0 && c.mute();
            !a && c.unmute != void 0 && c.unmute();
            for (c = 0; c < this.MAX_AUDIO_CHANNELS; ++c) this.audioChannels[c].muted = a;
            this.muted = a
        },
        setVolume: function(a) {
            a < 0 && (a = 0);
            a > 1 && (a = 1);
            this.volume = a;
            for (var c = 0; c < this.MAX_AUDIO_CHANNELS; ++c) this.audioChannels[c].volume = a
        },
        playPauseEventAudio: function(a, c) {
            if (c && (cp.device == cp.IDEVICE || cp.device == cp.ANDROID) && !cp.multiAudioTrack)
                if (this.audioPlaying || cp.movie.stage.VideoPlaying) return;
            if ((!c || !(this.muted || 1 != cp.movie.speed)) && this.currentSlide) {
                var d = this.eventAudios[this.currentSlide];
                if (d) {
                    var e = d[a];
                    if (e)
                        if (c) {
                            this.eventAudioPlaying = e.id;
                            e.resetAndPlay();
                            e.id.length > 5 && e.id.substring(e.id.length - 5) == "ClkAd" && (e.duration ?
                                setTimeout(function() {
                                    e.pause()
                                }, (e.duration + 0.2) * 1E3) : setTimeout(function() {
                                    e.pause()
                                }, 500))
                        } else e.pause()
                }
            }
        },
        showHideObjectAudio: function(a, c) {
            if (this.currentSlide) {
                var d = this.objectAudios[this.currentSlide];
                if (d)(d = d[a]) && (c ? d.hidden && d.show() : d.hidden ||
                    d.hide())
            }
        },
        doesAudioStartBetween: function(a, c) {
            if (this.currentSlide) {
                var d = this.objectAudios[this.currentSlide];
                if (d)
                    for (var e in d) {
                        var f = d[e];
                        if (f && !f.ended && f.from >= a && f.from <= c) {
                            this.verbose && cp.log("objAudio " + f.id + " starts between " + a + " & " + c);
                            return true
                        }
                    }
            }
            if (this.currentSlideAudio)
                if ((d = this.slideAudios[this.currentSlideAudio]) && !d.ended && d.from >= a && d.from <=
                    c) {
                    this.verbose && cp.log("slideAudio " + d.id + " starts between " + a + " & " + c);
                    return true
                } return false
        },
        updateAudioViews: function() {
            if (this.viewAudio &&
                this.audioViews)
                for (var a in this.audioViews) this.audioViews[a].update()
        }
    };
    cp.VARIABLE_CREATED_EVENT = 0;
    cp.VARIABLE_CHANGED_EVENT = 1;
    cp.SPECIFIC_VARIABLE_CHANGED_EVENT = 2;
    cp.SLIDEENTEREVENT = 3;
    cp.SLIDEEXITEVENT = 4;
    cp.INTERACTIVEITEMSUBMITEVENT = 5;
    cp.MOVIEPAUSEEVENT = 6;
    cp.MOVIERESUMEEVENT = 7;
    cp.MOVIESTARTEVENT = 8;
    cp.MOVIESTOPEVENT = 9;
    cp.QUESTIONSKIPEVENT = 10;
    cp.QUESTIONSUBMITEVENT = 11;
    cp.STARTPLAYBARSCRUBBINGEVENT = 12;
    cp.ENDPLAYBARSCRUBBINGEVENT = 13;
    cp.MOVIEFOCUSINEVENT = 14;
    cp.MOVIEFOCUSLOSTEVENT = 15;
    cp.MOVIEAUDIOMUTEEVENT =
        16;
    cp.INPUTCONTROLREPLACEDEVENT = 17;
    cp.WINDOWRESIZEDEVENT = 18;
    cp.WINDOWRESIZECOMPLETEDEVENT = 19;
    cp.ORIENTATIONCHANGEDEVENT = 20;
    cp.ORIENTATIONCHANGECOMPLETEDEVENT = 21;
    cp.TIMEUPDATEEVENT = 22;
    cp.SET_RESUMEDATA = 23;
    cp.PLAYBARSTATECHANGED = 24;
    cp.TOCSTATECHANGED = 25;
    cp.ITEMDRAWINGCOMPLETEEVENT = 26;
    cp.MOVIEEXITEVENT = 27;
    var y = [];
    y[cp.VARIABLE_CREATED_EVENT] = [];
    y[cp.VARIABLE_CHANGED_EVENT] = [];
    y[cp.SPECIFIC_VARIABLE_CHANGED_EVENT] = [];
    y[cp.SLIDEENTEREVENT] = [];
    y[cp.SLIDEEXITEVENT] = [];
    y[cp.INTERACTIVEITEMSUBMITEVENT] = [];
    y[cp.MOVIEPAUSEEVENT] = [];
    y[cp.MOVIERESUMEEVENT] = [];
    y[cp.MOVIESTARTEVENT] = [];
    y[cp.MOVIESTOPEVENT] = [];
    y[cp.QUESTIONSKIPEVENT] = [];
    y[cp.QUESTIONSUBMITEVENT] = [];
    y[cp.STARTPLAYBARSCRUBBINGEVENT] = [];
    y[cp.ENDPLAYBARSCRUBBINGEVENT] = [];
    y[cp.MOVIEFOCUSINEVENT] = [];
    y[cp.MOVIEFOCUSLOSTEVENT] = [];
    y[cp.MOVIEAUDIOMUTEEVENT] = [];
    y[cp.INPUTCONTROLREPLACEDEVENT] = [];
    y[cp.WINDOWRESIZEDEVENT] = [];
    y[cp.WINDOWRESIZECOMPLETEDEVENT] = [];
    y[cp.ORIENTATIONCHANGEDEVENT] = [];
    y[cp.ORIENTATIONCHANGECOMPLETEDEVENT] = [];
    y[cp.TIMEUPDATEEVENT] = [];
    y[cp.SET_RESUMEDATA] = [];
    y[cp.PLAYBARSTATECHANGED] = [];
    y[cp.TOCSTATECHANGED] = [];
    y[cp.ITEMDRAWINGCOMPLETEEVENT] = [];
    y[cp.MOVIEEXITEVENT] = [];
    cp.updateTextBounds = function(a, c, d, e) {
        if (cp.responsive && a && d)
            for (var d = [d[cp.ResponsiveProjWidth].l, d[cp.ResponsiveProjWidth].t, d[cp.ResponsiveProjWidth].w,
                        d[cp.ResponsiveProjWidth].h
                    ], e = [e[0], e[1], -(e[0] + e[2]), -(e[1] + e[3])], f = ["left", "top", "width", "height"],
                    c = [a.parentElement.clientWidth, a.parentElement.clientHeight, c.clientWidth, c
                        .clientHeight
                    ], g = 0; g < 4; ++g) {
                var k =
                    d[g];
                a.style[f[g]] = k.indexOf("%") != -1 ? cp.getRoundedValue(parseFloat(k) * c[g] / 100) + e[g] +
                    "px" : parseFloat(k) + e[g] + "px"
            }
    };
    cp.adjustFontSizesForVariableText = function(a, c, d) {
        if (a) {
            var a = a.children,
                e;
            for (e in a) {
                var f = a[e];
                if (f && f.tagName && f.tagName.toLowerCase() == "span") {
                    var g = parseFloat(f.style.fontSize),
                        g = Math.floor(cp.getInterpolatedFontSize(c, g, d));
                    g < 8 && (g = 8);
                    f.style.fontSize = g + "px"
                }
                cp.adjustFontSizesForVariableText(f, c, d)
            }
        }
    };
    cp.updateVarText = Y;
    cp.updateVariableTextBounds = function(a, c) {
        a.element && cp.updateVarText(a.element,
            true, c)
    };
    cp.EventManager = function() {
        cp.em = this;
        (!document.createEvent || !document.addEventListener) && alert("EVENT FIRING WILL NOT WORK");
        document.addEventListener("propertyChange", Sa, false);
        this.verbose = false
    };
    cp.EventManager.prototype = {
        fireEvent: function(a, c) {
            if (document.createEvent) {
                var d = document.createEvent("Events");
                d.initEvent("propertyChange", true, true, null);
                d.cpName = a;
                d.cpData = c;
                if (window.cpAPIEventEmitter) {
                    d.Name = a;
                    d.Data = c;
                    window.cpAPIEventEmitter.trigger(d)
                }
                return !document.dispatchEvent(d)
            }
        },
        addEventListener: function(a, c, d, e) {
            this.verbose && cp.log("cp.em.addEventListener : " + a + " " + c + " " + d);
            if (c == cp.VARIABLE_CREATED_EVENT || c == cp.VARIABLE_CHANGED_EVENT || c == cp
                .SLIDEENTEREVENT || c == cp.SLIDEEXITEVENT || c == cp.STARTPLAYBARSCRUBBINGEVENT || c == cp
                .INTERACTIVEITEMSUBMITEVENT || c == cp.MOVIEPAUSEEVENT || c == cp.MOVIERESUMEEVENT || c ==
                cp.MOVIESTARTEVENT || c == cp.MOVIESTOPEVENT || c == cp.MOVIEEXITEVENT || c == cp
                .QUESTIONSKIPEVENT || c == cp.QUESTIONSUBMITEVENT || c == cp.MOVIEFOCUSINEVENT || c == cp
                .MOVIEFOCUSLOSTEVENT || c == cp.MOVIEAUDIOMUTEEVENT ||
                c == cp.ENDPLAYBARSCRUBBINGEVENT || c == cp.INPUTCONTROLREPLACEDEVENT || c == cp
                .WINDOWRESIZEDEVENT || c == cp.ORIENTATIONCHANGEDEVENT || c == cp
                .WINDOWRESIZECOMPLETEDEVENT || c == cp.ORIENTATIONCHANGECOMPLETEDEVENT || c == cp
                .TIMEUPDATEEVENT || c == cp.SET_RESUMEDATA || c == cp.ITEMDRAWINGCOMPLETEEVENT) {
                c = y[c];
                c.push({
                    l: a,
                    r: e
                });
                this.verbose && cp.log(c);
                return true
            }
            if (c == cp.SPECIFIC_VARIABLE_CHANGED_EVENT) {
                c = y[c];
                c.push({
                    l: a,
                    n: d,
                    r: e
                });
                this.verbose && cp.log(c);
                return true
            }
            return false
        },
        removeEventListener: function(a, c, d) {
            this.verbose &&
                cp.log("cp.em.removeEventListener : " + a + " " + c + " " + d);
            var e = false;
            if (c == cp.VARIABLE_CREATED_EVENT || c == cp.VARIABLE_CHANGED_EVENT || c == cp
                .SLIDEENTEREVENT || c == cp.SLIDEEXITEVENT || c == cp.STARTPLAYBARSCRUBBINGEVENT || c == cp
                .INTERACTIVEITEMSUBMITEVENT || c == cp.MOVIEPAUSEEVENT || c == cp.MOVIERESUMEEVENT || c ==
                cp.MOVIESTARTEVENT || c == cp.MOVIESTOPEVENT || c == cp.MOVIEEXITEVENT || c == cp
                .QUESTIONSKIPEVENT || c == cp.QUESTIONSUBMITEVENT || c == cp.MOVIEFOCUSINEVENT || c == cp
                .MOVIEFOCUSLOSTEVENT || c == cp.MOVIEAUDIOMUTEEVENT || c == cp.ENDPLAYBARSCRUBBINGEVENT ||
                c == cp.INPUTCONTROLREPLACEDEVENT || c == cp.WINDOWRESIZEDEVENT || c == cp
                .ORIENTATIONCHANGEDEVENT || c == cp.WINDOWRESIZECOMPLETEDEVENT || c == cp
                .ORIENTATIONCHANGECOMPLETEDEVENT || c == cp.TIMEUPDATEEVENT || c == cp.SET_RESUMEDATA ||
                c == cp.ITEMDRAWINGCOMPLETEEVENT) {
                c = y[c];
                if (a.id != void 0)
                    for (var f = 0; f < c.length; ++f) {
                        if (c[f].l.id == a.id) {
                            c.splice(f, 1);
                            e = true
                        }
                    } else
                        for (f = 0; f < c.length; ++f)
                            if (c[f].l == a) {
                                c.splice(f, 1);
                                e = true
                            } e && this.verbose && cp.log(c)
            } else if (c == cp.SPECIFIC_VARIABLE_CHANGED_EVENT) {
                c = y[c];
                if (d != void 0 && d != "")
                    if (a.id !=
                        void 0)
                        for (f = 0; f < c.length; ++f) {
                            if (c[f].l.id == a.id && c[f].n == d) {
                                c.splice(f, 1);
                                e = true
                            }
                        } else
                            for (f = 0; f < c.length; ++f) {
                                if (c[f].l == a && c[f].n == d) {
                                    c.splice(f, 1);
                                    e = true
                                }
                            } else if (a.id != void 0)
                                for (f = 0; f < c.length; ++f) {
                                    if (c[f].l.id == a.id) {
                                        c.splice(f, 1);
                                        e = true
                                    }
                                } else
                                    for (f = 0; f < c.length; ++f)
                                        if (c[f].l == a) {
                                            c.splice(f, 1);
                                            e = true
                                        } e && this.verbose && cp.log(c)
            }
            return e
        }
    };
    window.vh = {};
    window.svvi = function(a, c, d) {
        var e = null;
        if (a != "") {
            e = null;
            if (a && a != "") {
                var f = "_" + a,
                    e = vh[f];
                e !== c && (vh[f] = c)
            }
            if (cp.em && e != c) {
                a = {
                    captivateVersion: ca(),
                    varName: a,
                    oldVal: e,
                    newVal: c,
                    notify: d
                };
                cp.em.fireEvent("CPVariableValueChangedEvent", a)
            }
        } else if (cp.em) {
            a = {
                captivateVersion: ca(),
                varName: "",
                newVal: c,
                notify: d
            };
            cp.em.fireEvent("CPVariableValueChangedEvent", a)
        }
    };
    var X = 0;
    cp.setCpQuizScopeSlide = Pa;
    window.asg = function(a, c, d) {
        try {
            c == null && (c = Jc);
            d == null && (d = Kc);
            if (Object.defineProperty) Object.defineProperty(window, a, {
                get: d,
                set: c
            });
            else if (window.__defineGetter__) {
                d && window.__defineGetter__(a, d);
                c && window.__defineSetter__(a, c)
            }
        } catch (e) {
            cp.m_isPreview && cp.alert(
                "Please correct the variable name. This might be a javascript variable. : '" +
                a + "'")
        }
    };
    cp.VarInfo = function(a, c, d) {
        this.name = a;
        this.len = c;
        this.systemDefined = d
    };
    cp.VariablesManager = function() {
        cp.vm = this;
        this.varInfos = [];
        if (!Object.defineProperty && !window.__defineGetter__) alert("VARIABLES SETTER GETTER WILL NOT WORK");
        else {
            asg("cpCmndVolume", Va, Ua);
            asg("cpCmndMute", oa, pa);
            asg("rdcmndMute", oa, pa);
            asg("cpCmndCC", Ya, sa);
            asg("rdcmndCC", null, sa);
            asg("cpCmndNext", ia, null);
            asg("rdcmndNext", ia, null);
            asg("cpCmndNextSlide", ia, null);
            asg("rdcmndNextSlide", ia, null);
            asg("cpCmndPrevious", ga,
                fa);
            asg("rdcmndPrevious", ga, fa);
            asg("cpCmndNextOnReview", $a, null);
            asg("cpCmndPreviousSlide", ga, fa);
            asg("rdcmndPreviousSlide", ga, fa);
            asg("cpCmndPreviousOnReview", Za, null);
            asg("cpCmndPlaybarMoved", ra, qa);
            asg("rdcmndPlaybarMoved", ra, qa);
            asg("cpCmndShowPlaybar", Xa, Wa);
            asg("cpCmndFastForward", ab, null);
            asg("cpCmndRewindAndPlay", ua, ta);
            asg("rdcmndRewindAndPlay", ua, ta);
            asg("cpCmndRewindAndStop", wa, va);
            asg("rdcmndRewindAndStop", wa, va);
            asg("cpCmndGotoFrame", za, null);
            asg("rdcmndGotoFrame", za, null);
            asg("cpCmndGotoFrameAndResume",
                Aa, null);
            asg("rdcmndGotoFrameAndResume", Aa, null);
            asg("cpCmndGotoSlide", Ba, null);
            asg("rdcmndGotoSlide", Ba, null);
            asg("cpCmndGotoSlideAndResume", fb, null);
            asg("cpCmndGotoSlideByUIDAndResume", gb, null);
            asg("cpCmndResume", ya, xa);
            asg("rdcmndResume", ya, xa);
            asg("cpCmndPause", Fa, Ga);
            asg("rdcmndPause", Fa, Ga);
            asg("cpCmndExit", Ea, Da);
            asg("rdcmndExit", Ea, Da);
            asg("cpLockTOC", bb, cb);
            asg("cpCmndInfo", Ha, Ia);
            asg("rdcmndInfo", Ha, Ia);
            asg("cpCmndTOCVisible", db, eb);
            asg("cpInfoSlidesInProject", null, La);
            asg("rdinfoSlidesInProject",
                null, La);
            asg("rdinfoCurrentSlideInProject", null, function() {
                return 0
            });
            asg("cpInfoFPS", null, Oa);
            asg("rdinfoFPS", null, Oa);
            asg("cpInfoAuthor", null, hb);
            asg("cpInfoCompany", null, Sb);
            asg("cpInfoEmail", null, bc);
            asg("cpInfoWebsite", null, $b);
            asg("cpInfoCopyright", null, Zb);
            asg("cpInfoProjectName", null, ac);
            asg("cpInfoDescription", null, ib);
            asg("cpInfoCurrentFrame", null, la);
            asg("rdinfoCurrentFrame", null, la);
            asg("cpInfoPrevFrame", null, xc);
            asg("cpInfoFrameCount", null, gc);
            asg("cpInfoPrevSlide", null, wb);
            asg("cpInfoLastVisitedSlide",
                null, Nb);
            asg("cpInfoCurrentSlide", null, yc);
            asg("rdinfoCurrentSlide", null, Ma);
            asg("cpInfoCurrentSlideIndex", null, Ma);
            asg("cpInfoCurrentSlideLabel", null, rb);
            asg("cpInfoSlideCount", null, Na);
            asg("rdinfoSlideCount", null, Na);
            asg("cpInfoIsStandalone", null, cc);
            asg("cpInfoHasPlaybar", null, dc);
            asg("cpInfoCurrentSlideType", null, vc);
            asg("cpInfoElapsedTimeMS", null, uc);
            asg("cpInfoEpochMS", null, tc);
            asg("cpInfoCurrentMinutes", null, sc);
            asg("cpInfoCurrentHour", null, rc);
            asg("cpInfoCurrentTime", null, qc);
            asg("cpInfoCurrentDay",
                null, pc);
            asg("cpInfoCurrentYear", null, oc);
            asg("cpInfoCurrentMonth", null, nc);
            asg("cpInfoCurrentDate", null, mc);
            asg("cpInfoCurrentDateString", null, jc);
            asg("cpInfoCurrentDateStringDDMMYYYY", null, kc);
            asg("cpInfoCurrentLocaleDateString", null, lc);
            asg("cpCmndGotoQuizScopeSlide", Gc, null);
            asg("cpQuizInfoLastSlidePointScored", kb, jb);
            asg("cpQuizInfoQuestionSlideType", Kb, Jb);
            asg("cpQuizInfoAnswerChoice", Ub, Tb);
            asg("cpQuizInfoMaxAttemptsOnCurrentQuestion", Pb, Ob);
            asg("cpQuizInfoPointsPerQuestionSlide", mb, lb);
            asg("cpQuizInfoNegativePointsOnCurrentQuestionSlide",
                ob, nb);
            asg("cpQuizInfoQuestionSlideTiming", Rb, Qb);
            asg("cpQuizInfoQuizPassPoints", Ib, Hb);
            asg("cpQuizInfoQuizPassPercent", tb, sb);
            asg("cpQuizInfoTotalProjectPoints", vb, ub);
            asg("cpQuizInfoTotalUnansweredQuestions", Mb, Lb);
            asg("cpQuizInfoNoQuestionsPerQuiz", Wb, Vb);
            asg("cpQuizInfoPointsscored", Yb, Xb);
            asg("cpQuizInfoPretestPointsscored", null, Cc);
            asg("cpQuizInfoPretestScorePercentage", null, Fc);
            asg("cpQuizInfoTotalCorrectAnswers", yb, xb);
            asg("cpInfoPercentage", Eb, Db);
            asg("cpQuizInfoTotalQuizPoints", ic, hc);
            asg("cpQuizInfoAttempts",
                fc, ec);
            asg("cpQuizInfoTotalQuestionsPerProject", Gb, Fb);
            asg("cpQuizInfoQuestionPartialScoreOn", qb, pb);
            asg("cpQuizScopeSlide", null, zc);
            asg("cpInQuizScope", null, Ac);
            asg("cpQuizInfoPassFail", null, wc);
            asg("cpInfoCourseID", null, Hc);
            asg("cpInfoCourseName", null, Ic);
            asg("cpQuizInfoPreTestTotalCorrectAnswers", Cb, zb);
            asg("cpInReviewMode", null, Dc);
            asg("cpQuizInfoPreTestTotalQuestions", Ab, Bb);
            asg("cpQuizInfoPreTestMaxScore", null, Ec);
            asg("CaptivateVersion", null, ca);
            asg("cpInfoMobileOS", null, Ta);
            if (cp.getCurrentGeolocation &&
                cp.geo) {
                asg("cpInfoGeoLocation", null, getCurrentGeolocation);
                cp.getCurrentGeolocation()
            }
        }
        cp.initVariables();
        cp.vm.createVariable("cpQuizScopeSlide", -1, true, 100);
        cp.initVariables = null
    };
    window.DefineProperty = function(a) {
        eval("(function(){function get" + a + "(){return vh._" + a + ";}function set" + a + '(val){svvi("' + a +
            '", val, ["' + a + '"]);} asg("' + a + '",set' + a + ",get" + a + ");})();")
    };
    cp.VariablesManager.prototype = {
        hasOwnProperty: function(a) {
            try {
                return eval("vh._" + a) == void 0 ? false : true
            } catch (c) {
                return false
            }
        },
        getVariableValue: function(a) {
            var c =
                null;
            a && a != "" && (c = eval("vh._" + a));
            return c
        },
        createVariable: function(a, c, d, e) {
            void 0 == d && (d = true);
            if (a && a != "" && this.hasOwnProperty(a) == false) {
                this.addVarInfo(a, e, d);
                vh["_" + a] = c;
                if (cp.em && d != true) {
                    DefineProperty(a);
                    a = {
                        captivateVersion: ca(),
                        varName: a,
                        varVal: c
                    };
                    cp.em.fireEvent("CPVariableCreatedEvent", a)
                }
                return true
            }
            return false
        },
        setVariableValue: function(a, c, d) {
            d == void 0 && (d = true);
            var e = true;
            d ? this.createVariable(a, c, true, 1E4) == true && (e = false) : this.hasOwnProperty(a) ==
                false && (e = false);
            e && (vh["_" + a] = c)
        },
        addVarInfo: function(a, c, d) {
            this.varInfos.push(new cp.VarInfo(a, c, d))
        },
        getVariableLength: function(a) {
            for (var c = 0, c = 0; c < this.varInfos.length; ++c)
                if (a == this.varInfos[c].name) return this.varInfos[c].len;
            return 1E3
        }
    };
    cp.EventVideo = function(a) {
        this.vdm = cp.movie.vdm;
        this.vdm.verbose && cp.log("EventVideo being constructed for el " + a.id);
        cp.EventVideo.baseConstructor.call(this, a);
        this.id = this.parentDivName = this.getAttribute("dn");
        a = cp.D[this.parentDivName];
        this.from = a.from;
        this.to = a.to;
        this.displayForDurationOfVideo =
            a.ddv;
        cp.IDEVICE == cp.device || cp.device == cp.ANDROID ? this.cploop = this.getAttribute("l") : this.loop =
            this.getAttribute("l");
        if (this.showControls = this.getAttribute("svc")) this.videoSkinStrings = this.getAttribute("vss");
        this.autoPlay = this.getAttribute("au");
        this.autoRewind = this.getAttribute("ar");
        this.src = cp.getCorrectMediaPath(this.getAttribute("mp4"));
        if ((cp.device == cp.IDEVICE || cp.device == cp.ANDROID) && !cp.multiAudioTrack) {
            var c = cp.getCorrectMediaPath(this.getAttribute("amp4"));
            if (c) this.src = c
        }
        this.nativeVideo =
            null;
        this.ended = false;
        this.paused = true;
        this.started = false;
        this.visible = this.getAttribute("visible");
        this.transIn = a.trin;
        this.element.parentElement.drawingBoard = this.element.parentElement;
        c = this.getAttribute("b");
        this.actualParent = a = document.getElementById(this.parentDivName);
        this.actualDrawingElement = this.element;
        this.bounds = {
            minX: c[0],
            minY: c[1],
            maxX: c[2],
            maxY: c[3]
        };
        c = this.getAttribute("vb");
        this.vbounds = {
            minX: c[0],
            minY: c[1],
            maxX: c[2],
            maxY: c[3],
            width: c[2] - c[0],
            height: c[3] - c[1]
        };
        if (a) {
            a.drawingBoard =
                this.element.parentElement;
            a.bounds = this.bounds;
            a.drawingBoard.bounds = this.vbounds
        }
        this.isDrawn = false;
        this.tr = this.getAttribute("tr");
        if (!this.tr) this.tr = "rotate(0deg)";
        this.sh = this.getAttribute("sh");
        this.re = this.getAttribute("re");
        cp.movie.stage.addToParentChildMap(a.id, this.element.id);
        if (cp.responsive) this.responsiveCSS = this.getAttribute("css")
    };
    cp.inherits(cp.EventVideo, cp.DisplayObject);
    cp.EventVideo.prototype.start = function(a, c) {
        function d(e) {
            if ((cp.device == cp.IDEVICE || cp.device == cp.ANDROID) &&
                cp.multiAudioTrack) {
                var f = e.from;
                f < cpInfoCurrentFrame && (f = cpInfoCurrentFrame);
                var g = f + 0.5 * cpInfoFPS;
                if (g > e.to) g = e.to;
                if (cp.movie.am.doesAudioStartBetween(f, g)) {
                    e.vdm.verbose && cp.log("500mS delay in start of " + e.id);
                    e.delayStartTimer = setTimeout(function() {
                        d(e)
                    }, 500);
                    return
                }
            }
            e.drawIfNeeded(a, c);
            e.addNativeVideoIfNeeded()
        }
        d(this, a);
        if (!this.effectIsStarted || a) {
            this.updateEffects(this.hasEffect);
            this.effectIsStarted = true
        }
    };
    cp.EventVideo.prototype.reset = function(a) {
        this.vdm.verbose && cp.log("EventVideo " +
            this.id + " reset(" + a + ")");
        if (this.delayStartTimer) {
            clearTimeout(this.delayStartTimer);
            delete this.delayStartTimer
        }
        delete cp.ropMap[this.element.id];
        this.pause();
        if (this.nativeVideo) {
            this.nativeVideo.cpVideo = null;
            try {
                this.nativeVideo.currentTime = 0
            } catch (c) {}
            this.nativeVideo.style.display = "none";
            if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID) {
                var d = this.src;
                this.src = "_cp_n_m_";
                var e = this.nativeVideo;
                setTimeout(function() {
                        if (e.cpSrc == d) {
                            e.cpSrc = "_cp_n_m_";
                            try {
                                e.src = "_cp_n_m_"
                            } catch (a) {}
                            try {
                                e.load()
                            } catch (c) {}
                        }
                    },
                    100)
            }
            this.nativeVideo = null
        }
        this.isDrawn = false;
        if ((cp.device != cp.IDEVICE || cp.IOSMajor >= cp.IOS8) && cp.removeVideoSkin) {
            (cp.device == cp.ANDROID ? cp.movie.stage.NativeVideoElement : this.element)
            .style.backgroundColor = "";
            cp.removeVideoSkin(this.actualParent)
        }
        this.element.width = 0;
        this.element.height = 0;
        this.element.style.width = "0px";
        this.element.style.height = "0px";
        this.element.left = 0;
        this.element.top = 0;
        this.element.style.left = "0px";
        this.element.style.top = "0px";
        if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID) cp.movie.stage.VideoPlaying =
            false;
        this.ended = false;
        delete this.seekToTime
    };
    cp.EventVideo.prototype.onEndOfMovie = function() {
        this.vdm.verbose && cp.log("EventVideo " + this.id + " onEndOfMovie()");
        if (!this.displayForDurationOfVideo) {
            this.pause();
            if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID) cp.movie.stage.VideoPlaying = false;
            this.ended = false;
            delete this.seekToTime
        }
    };
    cp.EventVideo.prototype.drawForResponsive = function(a, c) {
        if (!this.responsiveCSS) return false;
        if (this.isDrawn && !a) return true;
        var d = cp.getResponsiveCSS(this.responsiveCSS),
            e = false,
            e = this.sh && !this.sh.i,
            f = this.tr != void 0;
        if (this.isDrawn && this.currentCSS == d && !e && !f && (!a || c == cp.ReasonForDrawing.kMoviePaused))
            return true;
        var g = this.currentCSS = d;
        if (!a) {
            if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID) {
                if (cp.movie.stage.VideoPlaying) return false;
                cp.multiAudioTrack || cp.movie.am.pause(cp.ReasonForPause.ONLY_ONE_MEDIUM_CAN_PLAY);
                cp.movie.stage.VideoPlaying = true
            }
            this.vdm.verbose && cp.log("EventVideo " + this.id + " start()")
        }
        f = 0;
        this.tr && (f = cp.getAngleFromRotateStr(this.tr));
        if (cp.device ==
            cp.IDEVICE || cp.device == cp.ANDROID) {
            e = cp.movie.stage.NativeVideoElement;
            if (!e) {
                e = this.element;
                cp.movie.stage.NativeVideoElement = this.element
            }
        } else e = this.element;
        var k = this.actualParent;
        cp.applyResponsiveStyles(k, g, true);
        cp.applyResponsiveStyles(e, g, true);
        g = cp.movie.stage.mainSlideDiv.getBoundingClientRect();
        g = cp.createResponsiveStyleObj(d, void 0, "0px", "0px", "0px", "0px", g.width + "px", g.height + "px",
            void 0);
        cp.applyResponsiveStyles(e.parentElement, g);
        this.parentElementClientBoundingRect = e.parentElement.getBoundingClientRect();
        e.rotateAngle = f;
        if (this.tr) {
            cp.applyTransform(e, this.tr);
            cp.applyTransform(k, this.tr);
            e.tr = this.tr;
            k.tr = this.tr
        }
        if (this.sh && !this.sh.i) {
            d = this.sh.a - f;
            cp.applyShadow(e, this.sh.d * Math.cos(Math.PI * d / 180) + "px " + this.sh.d * Math.sin(Math.PI *
                d / 180) + "px " + this.sh.b + "px " + cp.ConvertRGBToRGBA(this.sh.c, this.sh.o) + (this
                .sh.i ? " inset" : ""))
        }
        if (this.re) e.style.webkitBoxReflect = "below " + this.re.d +
            "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" + (1 - this.re
                .s / 100) + ", transparent), to(rgba(255, 255, 255, " +
            (1 - this.re.p / 100) + ")))";
        if (this.transIn && c == cp.ReasonForDrawing.kRegularDraw) e.parentElement.style.opacity = 0;
        this.visible || cp.hide(this.parentDivName);
        return this.isDrawn = true
    };
    cp.EventVideo.prototype.drawIfNeeded = function(a, c) {
        if (!cp.responsive || !this.drawForResponsive(a, c)) {
            if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID) {
                if (cp.movie.stage.VideoPlaying) return;
                cp.multiAudioTrack || cp.movie.am.pause(cp.ReasonForPause.ONLY_ONE_MEDIUM_CAN_PLAY);
                cp.movie.stage.VideoPlaying = true
            }
            if (!this.isDrawn) {
                this.vdm.verbose &&
                    cp.log("EventVideo " + this.id + " start()");
                var d = this.bounds,
                    e = 0;
                this.tr && (e = cp.getAngleFromRotateStr(this.tr));
                var f;
                if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID) {
                    f = cp.movie.stage.NativeVideoElement;
                    if (!f) {
                        f = this.element;
                        cp.movie.stage.NativeVideoElement = this.element
                    }
                } else f = this.element;
                var g = this.actualParent;
                g.style.left = d.minX + "px";
                g.style.top = d.minY + "px";
                g.style.width = d.maxX - d.minX + "px";
                g.style.height = d.maxY - d.minY + "px";
                var k = f.parentElement;
                k.style.left = "0px";
                k.style.top = "0px";
                k.style.width =
                    cp.D.project.w + "px";
                k.style.height = cp.D.project.h + "px";
                f.rotateAngle = e;
                f.style.left = d.minX + "px";
                f.style.top = d.minY + "px";
                f.style.width = d.maxX - d.minX + "px";
                f.style.height = d.maxY - d.minY + "px";
                f.style.display = "block";
                f.style.position = "absolute";
                if (this.tr) {
                    cp.applyTransform(f, this.tr);
                    cp.applyTransform(g, this.tr);
                    f.tr = this.tr;
                    g.tr = this.tr
                }
                if (this.sh && !this.sh.i) {
                    d = this.sh.a - e;
                    cp.applyShadow(f, this.sh.d * Math.cos(Math.PI * d / 180) + "px " + this.sh.d * Math.sin(
                        Math.PI * d / 180) + "px " + this.sh.b + "px " + cp.ConvertRGBToRGBA(this.sh.c,
                        this.sh.o) + (this.sh.i ? " inset" : ""))
                }
                if (this.re) f.style.webkitBoxReflect = "below " + this.re.d +
                    "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" + (1 -
                        this.re.s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p / 100) +
                    ")))";
                if (this.transIn) f.parentElement.style.opacity = 0;
                this.visible || cp.hide(this.parentDivName);
                this.isDrawn = true
            }
        }
    };
    cp.EventVideo.prototype.addNativeVideoIfNeeded = function() {
        if (this.isDrawn && !this.nativeVideo) {
            var a;
            a = cp.device == cp.IDEVICE || cp.device ==
                cp.ANDROID ? cp.movie.stage.NativeVideoElement : this.element;
            this.vdm.allocVideoChannel(this, cp.IDEVICE != cp.device && cp.device != cp.ANDROID);
            if (this.nativeVideo) {
                var c = this.bounds;
                if (cp.SAFARI === cp.browser && cp.browserVersion >= 7) this.nativeVideo.controls = true;
                this.nativeVideo.style.display = "block";
                if (cp.responsive) {
                    this.nativeVideo.style.width = "100%";
                    this.nativeVideo.style.height = "100%"
                } else {
                    this.nativeVideo.style.width = c.maxX - c.minX + "px";
                    this.nativeVideo.style.height = c.maxY - c.minY + "px"
                }
                if (cp.device == cp.IDEVICE &&
                    cp.IOSMajor >= cp.IOS5 || cp.device == cp.ANDROID) {
                    this.nativeVideo.CPcanPlay = false;
                    this.nativeVideo.from = this.from;
                    this.nativeVideo.to = this.to;
                    this.nativeVideo.style.position = "fixed";
                    this.nativeVideo.style.left = "-99999px"
                }
                if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID)
                    if (this.nativeVideo.parentElement) {
                        cp.movie.stage.correctReWrapZOrder(a.parentElement, this.element.parentElement);
                        cp.movie.stage.correctParentZOrder(cp.movie.stage.VideoElement, this.actualParent)
                    } else a.appendChild(this.nativeVideo);
                else a.appendChild(this.nativeVideo);
                if (this.visible) {
                    a.style.display = "block";
                    a.style.visibility = "visible";
                    if (this.showControls && this.nativeVideo)
                        if (cp.IDEVICE != cp.device || cp.IOSMajor >= cp.IOS8) {
                            a.style.backgroundColor = "#000000";
                            cp.addVideoSkin(this.actualParent, this, this.autoPlay)
                        } else {
                            var d = this;
                            this.nativeVideo.addEventListener("webkitbeginfullscreen", function() {
                                cp.movie.pause()
                            });
                            this.nativeVideo.addEventListener("webkitendfullscreen", function() {
                                d.nativeVideo.ended && cp.movie.play()
                            });
                            this.nativeVideo.controls = true
                        } this.autoPlay &&
                        this.play()
                }
            }
            cp.redrawVideo(this.nativeVideo)
        }
    };
    cp.EventVideo.prototype.load = function() {
        this.nativeVideo && this.nativeVideo.load()
    };
    cp.EventVideo.prototype.play = function() {
        if (!(this.ended == true || this.paused == false))
            if (cp.lastMediaPlayReqTime && (new Date)
                .getTime() - cp.lastMediaPlayReqTime.getTime() < 50) {
                this.vdm.verbose && cp.log("crowded request postponed " + this.id);
                var a = this;
                setTimeout(function() {
                    a.play()
                }, 50)
            } else if (this.isSeekPending()) {
            this.vdm.verbose && cp.log("EventVideo.Play setting revoke " + this.id);
            this.revoke = true;
            this.finishPendingSeek()
        } else if (this.nativeVideo) {
            this.paused = false;
            if (this.nativeVideo.src.indexOf(this.src) == -1) {
                this.nativeVideo.cpSrc = this.src;
                this.nativeVideo.src = this.src;
                this.nativeVideo.load()
            }
            this.vdm.verbose && cp.log("EventVideo.Play " + this.id + " " + this.src);
            if ((cp.device == cp.IDEVICE || cp.device == cp.ANDROID) && cp.multiAudioTrack) cp
                .lastMediaPlayReqTime = new Date;
            this.nativeVideo.play();
            this.started = true
        }
    };
    cp.EventVideo.prototype.pause = function() {
        if (this.isSeekPending()) {
            this.vdm.verbose &&
                cp.log("EventVideo.Pause deleting revoke " + this.id);
            delete this.revoke
        }
        if (!this.paused) {
            this.paused = true;
            this.vdm.verbose && cp.log("EventVideo.Pause " + this.id + " " + this.src);
            if (this.nativeVideo) {
                this.nativeVideo.pause();
                this.nativeVideo.pausedAt = (new Date)
                    .getTime()
            }
        }
    };
    cp.EventVideo.prototype.setLoop = function(a, c) {
        this.loop = a;
        this.loopFrames = c;
        if (cp.IDEVICE == cp.device || cp.device == cp.ANDROID) this.cploop = a;
        else if (this.nativeVideo) a ? this.nativeVideo.loop = true : delete this.nativeVideo.loop
    };
    cp.EventVideo.prototype.setCurrentTime =
        function(a) {
            this.vdm.verbose && cp.log("VideoObject " + this.id + "src " + this.src + " setCurrentTime(" + a + ")");
            if (this.nativeVideo) {
                delete this.seekToTime;
                if (!this.paused) {
                    this.vdm.verbose && cp.log("setting revoke");
                    this.revoke = true;
                    this.pause()
                }
                var c = true;
                try {
                    this.nativeVideo.currentTime = a;
                    var d = Math.abs(this.nativeVideo.currentTime - a);
                    d >= 0.05 && (c = false)
                } catch (e) {
                    d = Math.abs(this.nativeVideo.currentTime - a);
                    c = d >= 0.05 ? false : true
                }
                this.vdm.verbose && cp.log("seekSuccess = " + c);
                if (cp.movie.ms.enabled)
                    if (c) {
                        if (this.revoke) {
                            this.vdm.verbose &&
                                cp.log("revoking play");
                            delete this.revoke;
                            this.play()
                        }
                    } else {
                        this.vdm.verbose && cp.log("pause movie and add to seekQueue");
                        this.seekToTime = a;
                        cp.movie.ms.addToQueue(this)
                    }
                else if (this.revoke) {
                    this.vdm.verbose && cp.log("revoking play");
                    delete this.revoke;
                    this.play()
                }
            } else {
                this.seekToTime = a;
                this.vdm.verbose && cp.log("no native video. Kept in pending...")
            }
        };
    cp.EventVideo.prototype.isSeekPending = function() {
        return void 0 != this.seekToTime
    };
    cp.EventVideo.prototype.finishPendingSeek = function() {
        if (this.nativeVideo &&
            this.isSeekPending()) {
            this.vdm.verbose && cp.log("VideoObject " + this.id + " finishPendingSeek");
            this.setCurrentTime(this.seekToTime)
        }
    };
    cp.EventVideo.prototype.seekTo = function(a) {
        this.vdm.verbose && cp.log("VideoObject " + this.id + " seekTo(" + a + ")");
        if (this.loop && this.loopFrames) {
            if (this.from <= a) {
                this.setCurrentTime((a - this.from) % this.loopFrames / cpInfoFPS);
                this.ended = false;
                return true
            }
        } else {
            if (this.from <= a && this.to >= a) {
                this.setCurrentTime((a - this.from) / cpInfoFPS);
                this.ended = false;
                return true
            }
            if (this.to >= a) {
                this.setCurrentTime(0);
                this.ended = false
            }
        }
        return false
    };
    cp.FMRVideo = function(a) {
        cp.FMRVideo.baseConstructor.call(this, a);
        this.type = cp.kCPFullMotion
    };
    cp.inherits(cp.FMRVideo, cp.EventVideo);
    cp.FMRVideo.prototype.addNativeVideoIfNeeded = function() {
        cp.FMRVideo.superClass.addNativeVideoIfNeeded.call(this);
        this.vdm.demoVideo = this.nativeVideo
    };
    cp.FMRVideo.prototype.reset = function(a) {
        cp.FMRVideo.superClass.reset.call(this, a);
        this.vdm.demoVideo = this.nativeVideo
    };
    cp.FMRVideo.prototype.onEndOfMovie = function() {
        cp.FMRVideo.superClass.onEndOfMovie.call(this);
        this.vdm.demoVideo = this.nativeVideo
    };
    cp.FMRVideo.prototype.updateFrame = function() {
        this.paused && (!cp.movie.paused && this.autoPlay && this.visible) && this.play()
    };
    cp.CPVCVideo = function(a) {
        cp.CPVCVideo.baseConstructor.call(this, a);
        this.type = cp.kCPOTVideoResource
    };
    cp.inherits(cp.CPVCVideo, cp.FMRVideo);
    cp.SlideVideo = function(a) {
        cp.SlideVideo.baseConstructor.call(this, a);
        this.autoPlay = 1;
        this.seek_From = this.getAttribute("vsf");
        this.seek_To = this.getAttribute("vst");
        this.showInTOC = this.getAttribute("sit");
        this.continueToNextSlide =
            this.getAttribute("continueToNextSlide");
        this.continueFromPrevSlide = this.getAttribute("continueFromPrevSlide");
        this.type = cp.kCPOTVideo
    };
    cp.inherits(cp.SlideVideo, cp.EventVideo);
    cp.SlideVideo.prototype.reset = function(a) {
        this.vdm.verbose && cp.log("SlideVideo " + this.id + " reset(" + a + ")");
        if (this.delayStartTimer) {
            clearTimeout(this.delayStartTimer);
            delete this.delayStartTimer
        }
        if (a && this.continueToNextSlide) {
            if (this.nativeVideo) this.nativeVideo = this.nativeVideo.cpVideo = null
        } else {
            this.pause();
            if (this.showInTOC) {
                cp.toc.rootObj.showVideo(false);
                if (this.nativeVideo) {
                    this.nativeVideo.cpVideo = null;
                    if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID) {
                        var c = this.src;
                        this.src = "_cp_n_m_";
                        var d = this.nativeVideo;
                        setTimeout(function() {
                            if (d.cpSrc == c) {
                                d.cpSrc = "_cp_n_m_";
                                try {
                                    d.src = "_cp_n_m_"
                                } catch (a) {}
                                try {
                                    d.load()
                                } catch (f) {}
                            }
                        }, 100)
                    }
                    this.nativeVideo = null
                }
            } else if (this.nativeVideo) {
                this.nativeVideo.cpVideo = null;
                this.nativeVideo.style.display = "none";
                if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID) {
                    c = this.src;
                    this.src = "_cp_n_m_";
                    d = this.nativeVideo;
                    setTimeout(function() {
                        if (d.cpSrc ==
                            c) {
                            d.cpSrc = "_cp_n_m_";
                            try {
                                d.src = "_cp_n_m_"
                            } catch (a) {}
                            try {
                                d.load()
                            } catch (f) {}
                        }
                    }, 100)
                }
                this.nativeVideo = null
            }
        }
        this.isDrawn = false;
        if (!a || !this.continueToNextSlide) {
            this.element.style.width = "0px";
            this.element.style.height = "0px";
            this.element.style.left = "0px";
            this.element.style.top = "0px"
        }
        if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID) cp.movie.stage.VideoPlaying = false;
        this.ended = false;
        delete this.seekToTime
    };
    cp.SlideVideo.prototype.onEndOfMovie = function() {
        this.vdm.verbose && cp.log("SlideVideo " + this.id + " onEndOfMovie()");
        this.pause();
        if (this.nativeVideo) this.nativeVideo = this.nativeVideo.cpVideo = null;
        this.isDrawn = false;
        if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID) cp.movie.stage.VideoPlaying = false;
        this.ended = false;
        delete this.seekToTime
    };
    cp.SlideVideo.prototype.drawForResponsive = function(a, c) {
        if (!this.responsiveCSS) return false;
        if (this.isDrawn && !a) return true;
        var d = cp.getResponsiveCSS(this.responsiveCSS),
            e = false,
            e = this.sh && !this.sh.i,
            f = this.tr != void 0;
        if (this.isDrawn && this.currentCSS == d && !e && !f && (!a || c == cp.ReasonForDrawing.kMoviePaused))
            return true;
        var g = this.currentCSS = d;
        if (!a) {
            if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID) {
                if (cp.movie.stage.VideoPlaying) return false;
                cp.movie.stage.VideoPlaying = true
            }
            this.vdm.verbose && cp.log("SlideVideo " + this.id + " start()")
        }
        if (this.showInTOC) {
            this.isDrawn = true;
            return false
        }
        f = 0;
        this.tr && (f = cp.getAngleFromRotateStr(this.tr));
        if (e = cp.movie.stage.NativeSlideVideoElement) e.parentElement.style.zIndex = cp.D[cp.D[this.element
            .id].dn].zIndex;
        else {
            e = this.element;
            cp.movie.stage.NativeSlideVideoElement = this.element
        }
        this.actualDrawingElement =
            cp.movie.stage.NativeSlideVideoElement;
        var k = this.actualParent;
        cp.applyResponsiveStyles(k, g, true);
        cp.applyResponsiveStyles(e, g, true);
        g = cp.movie.stage.mainSlideDiv.getBoundingClientRect();
        g = cp.createResponsiveStyleObj(d, void 0, "0px", "0px", "0px", "0px", g.width + "px", g.height + "px",
            void 0);
        cp.applyResponsiveStyles(e.parentElement, g);
        this.parentElementClientBoundingRect = e.parentElement.getBoundingClientRect();
        e.rotateAngle = f;
        if (this.tr) {
            cp.applyTransform(e, this.tr);
            cp.applyTransform(k, this.tr);
            e.tr = this.tr;
            k.tr = this.tr
        }
        if (this.sh && !this.sh.i) {
            d = this.sh.a - f;
            cp.applyShadow(e, this.sh.d * Math.cos(Math.PI * d / 180) + "px " + this.sh.d * Math.sin(Math.PI *
                d / 180) + "px " + this.sh.b + "px " + cp.ConvertRGBToRGBA(this.sh.c, this.sh.o) + (this
                .sh.i ? " inset" : ""))
        }
        if (this.re) e.parentElement.style.webkitBoxReflect = "below " + this.re.d +
            "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" + (1 - this.re
                .s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p / 100) + ")))";
        if (this.transIn && c == cp.ReasonForDrawing.kRegularDraw) e.parentElement.style.opacity =
            0;
        this.visible || cp.hide(this.parentDivName);
        return this.isDrawn = true
    };
    cp.SlideVideo.prototype.drawIfNeeded = function(a) {
        if (!cp.responsive || !this.drawForResponsive(a)) {
            if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID) {
                if (cp.movie.stage.VideoPlaying) return;
                cp.movie.stage.VideoPlaying = true
            }
            if (!this.isDrawn) {
                if (!this.showInTOC) {
                    this.vdm.verbose && cp.log("SlideVideo " + this.id + " start()");
                    var c = this.bounds,
                        d = 0;
                    this.tr && (d = cp.getAngleFromRotateStr(this.tr));
                    if (a = cp.movie.stage.NativeSlideVideoElement) a.parentElement.style.zIndex =
                        cp.D[cp.D[this.element.id].dn].zIndex;
                    else {
                        a = this.element;
                        cp.movie.stage.NativeSlideVideoElement = this.element
                    }
                    this.actualDrawingElement = cp.movie.stage.NativeSlideVideoElement;
                    var e = this.actualParent;
                    e.style.left = c.minX + "px";
                    e.style.top = c.minY + "px";
                    e.style.width = c.maxX - c.minX + "px";
                    e.style.height = c.maxY - c.minY + "px";
                    var f = a.parentElement;
                    f.style.left = "0px";
                    f.style.top = "0px";
                    f.style.width = cp.D.project.w + "px";
                    f.style.height = cp.D.project.h + "px";
                    a.rotateAngle = d;
                    a.style.left = c.minX + "px";
                    a.style.top = c.minY +
                        "px";
                    a.style.width = c.maxX - c.minX + "px";
                    a.style.height = c.maxY - c.minY + "px";
                    a.style.display = "block";
                    a.style.position = "absolute";
                    if (this.tr) {
                        cp.applyTransform(a, this.tr);
                        cp.applyTransform(e, this.tr);
                        a.tr = this.tr;
                        e.tr = this.tr
                    }
                    if (this.sh && !this.sh.i) {
                        c = this.sh.a - d;
                        cp.applyShadow(a, this.sh.d * Math.cos(Math.PI * c / 180) + "px " + this.sh.d * Math
                            .sin(Math.PI * c / 180) + "px " + this.sh.b + "px " + cp.ConvertRGBToRGBA(this
                                .sh.c, this.sh.o) + (this.sh.i ? " inset" : ""))
                    }
                    if (this.re) a.parentElement.style.webkitBoxReflect = "below " + this.re.d +
                        "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" + (
                            1 - this.re.s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p /
                            100) + ")))";
                    if (this.transIn) a.parentElement.style.opacity = 0;
                    this.visible || cp.hide(this.parentDivName)
                }
                this.isDrawn = true
            }
        }
    };
    cp.SlideVideo.prototype.addNativeVideoIfNeeded = function() {
        if (this.isDrawn && !this.nativeVideo) {
            if (this.showInTOC) {
                if (!(cp.device == cp.IDEVICE || cp.device == cp.ANDROID)) {
                    this.vdm.tocVideoChannel.cpVideo = null;
                    if (this.vdm.tocVideoChannel0.cpSrc ==
                        this.src) {
                        this.vdm.verbose && cp.log("TOCVideo " + this.id + " found existing @ tocV0");
                        this.vdm.tocVideoChannel = this.vdm.tocVideoChannel0
                    } else if (this.vdm.tocVideoChannel1.cpSrc == this.src) {
                        this.vdm.verbose && cp.log("TOCVideo " + this.id + " found existing @ tocV1");
                        this.vdm.tocVideoChannel = this.vdm.tocVideoChannel1
                    } else this.vdm.tocVideoChannel = this.vdm.tocVideoChannel0
                }
                this.nativeVideo = this.vdm.tocVideoChannel
            } else {
                if (!(cp.device == cp.IDEVICE || cp.device == cp.ANDROID)) {
                    this.vdm.slideVideoChannel0.cpVideo = null;
                    if (this.vdm.slideVideoChannel0.cpSrc == this.src) {
                        this.vdm.verbose && cp.log("SlideVideo " + this.id + " found existing @ SV0");
                        this.vdm.slideVideoChannel = this.vdm.slideVideoChannel0
                    } else if (this.vdm.slideVideoChannel1.cpSrc == this.src) {
                        this.vdm.verbose && cp.log("SlideVideo " + this.id + " found existing @ SV1");
                        this.vdm.slideVideoChannel = this.vdm.slideVideoChannel1
                    } else this.vdm.slideVideoChannel = this.vdm.slideVideoChannel0
                }
                this.nativeVideo = this.vdm.slideVideoChannel
            }
            this.nativeVideo.cpVideo = this;
            this.paused =
                this.nativeVideo.paused;
            var a = false;
            if (this.continueFromPrevSlide) this.nativeVideo.paused && this.seekTo(cpInfoCurrentFrame);
            else if (this.nativeVideo.cpSrc == this.src) this.seekTo(this.from);
            else {
                if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID) {
                    try {
                        this.nativeVideo.src = "_cp_n_m_"
                    } catch (c) {}
                    try {
                        this.nativeVideo.load()
                    } catch (d) {}
                }
                this.nativeVideo.cpSrc = this.src;
                this.nativeVideo.src = this.src;
                this.nativeVideo.load();
                this.seekTo(this.from);
                a = true
            }
            if (this.showInTOC) {
                this.nativeVideo.CPtoc = true;
                if (a && (cp.device ==
                        cp.IDEVICE && cp.IOSMajor >= cp.IOS5 || cp.device == cp.ANDROID)) {
                    this.nativeVideo.CPcanPlay = false;
                    this.nativeVideo.style.position = "fixed";
                    this.nativeVideo.style.left = "-99999px";
                    this.nativeVideo.style.width = "192px";
                    this.nativeVideo.style.height = "144px";
                    this.nativeVideo.from = this.from;
                    this.nativeVideo.to = this.to;
                    cp.toc.rootObj.showVideo(false)
                } else cp.toc.rootObj.showVideo(true)
            } else {
                this.nativeVideo.CPtoc = false;
                var e = this.bounds;
                this.nativeVideo.style.display = "block";
                if (cp.responsive) {
                    this.nativeVideo.style.width =
                        "100%";
                    this.nativeVideo.style.height = "100%"
                } else {
                    this.nativeVideo.style.width = e.maxX - e.minX + "px";
                    this.nativeVideo.style.height = e.maxY - e.minY + "px"
                }
                if (a && (cp.device == cp.IDEVICE && cp.IOSMajor >= cp.IOS5 || cp.device == cp.ANDROID)) {
                    this.nativeVideo.CPcanPlay = false;
                    this.nativeVideo.style.position = "fixed";
                    this.nativeVideo.style.left = "-99999px";
                    this.nativeVideo.from = this.from;
                    this.nativeVideo.to = this.to
                }
                a = cp.movie.stage.NativeSlideVideoElement;
                if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID)
                    if (this.nativeVideo.parentElement) {
                        cp.movie.stage.correctReWrapZOrder(a.parentElement,
                            this.element.parentElement);
                        cp.movie.stage.correctParentZOrder(cp.movie.stage.VideoElement, this.actualParent)
                    } else a.appendChild(this.nativeVideo);
                else a.appendChild(this.nativeVideo);
                this.actualParent.drawingBoard = a.parentElement;
                if (this.visible) {
                    a.style.display = "block";
                    a.style.visibility = "visible"
                }
            }
            if (this.visible) {
                if (a = cp.DESKTOP == cp.device && cp.SAFARI === cp.browser && cp.browserVersion >= 7) this
                    .nativeVideo.controls = true;
                if (this.autoPlay) this.play();
                else if (this.nativeVideo && a) this.nativeVideo.controls =
                    true
            } else this.visible || cp.hide(this.parentDivName);
            cp.redrawVideo(this.nativeVideo)
        }
    };
    cp.SlideVideo.prototype.updateFrame = function() {
        this.paused && (!cp.movie.paused && this.autoPlay && this.visible) && this.play();
        if (!this.effectIsStarted) {
            this.updateEffects(this.hasEffect);
            this.effectIsStarted = true
        }
    };
    cp.SlideVideo.prototype.seekTo = function(a) {
        this.vdm.verbose && cp.log("SlideVideo " + this.id + " seekTo(" + a + ")");
        if (this.loop && this.loopFrames) {
            if (this.from <= a) {
                this.setCurrentTime((a - this.from) % this.loopFrames /
                    cpInfoFPS + this.seek_From);
                this.ended = false;
                return true
            }
        } else {
            if (this.from <= a && this.to >= a) {
                this.setCurrentTime((a - this.from) / cpInfoFPS + this.seek_From);
                this.ended = false;
                return true
            }
            if (this.to >= a) {
                this.setCurrentTime(this.seek_From);
                this.ended = false
            }
        }
        return false
    };
    cp.SlideVideo.prototype.pause = function() {
        var a = this.nativeVideo && !this.nativeVideo.paused && !this.nativeVideo.ended;
        cp.SlideVideo.superClass.pause.call(this);
        if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID)
            if (a && this.nativeVideo && (this.nativeVideo.paused ||
                    this.nativeVideo.ended)) cp.movie.stage.VideoPlaying = false
    };
    cp.SlideVideo.prototype.play = function() {
        var a = this.nativeVideo && !this.nativeVideo.paused && !this.nativeVideo.ended;
        cp.SlideVideo.superClass.play.call(this);
        if ((cp.device == cp.IDEVICE || cp.device == cp.ANDROID) && !a && this.nativeVideo && !this.nativeVideo
            .paused && !this.nativeVideo.ended) cp.movie.stage.VideoPlaying = true
    };
    cp.NativeVideo = function(a) {
        makeItDummyNativeVideo = function(a) {
            a.currentTime = 0;
            a.duration = 0;
            a.paused = true;
            a.ended = true;
            a.defaultPlaybackRate =
                0;
            a.playbackRate = 1;
            a.played = false;
            a.seeking = false;
            a.seekable = false;
            a.fastSeek = false;
            a.src = "";
            a.crossorigin = false;
            a.preload = false;
            a.autoplay = false;
            a.mediagroup = "";
            a.loop = false;
            a.muted = false;
            a.controls = false;
            a.style = {};
            a.load = function() {};
            a.play = function() {};
            a.pause = function() {};
            a.addEventListener = function() {};
            a.removeEventListener = function() {}
        };
        var c = cp.newElem("video");
        if (typeof Video === "undefined" || !Video)(c.load == void 0 || c.play == void 0 || c.pause == void 0 ||
            c.addEventListener == void 0) && makeItDummyNativeVideo(c);
        if (a) c.id = a;
        return c
    };
    cp.VideoManager = function() {
        cp.movie.vdm = this;
        this.viewVideo = this.verbose = this.loaded = false;
        this.errorCallBackFn = function(a) {
            if (-1 == this.src.indexOf("_cp_n_m_")) {
                if (cp.exceptionalLogs) {
                    cp.log("src = " + this.src + " error code = " + (this.error ? this.error.code :
                        "NULL") + " n/w state = " + this.networkState);
                    cp.log(a)
                }
                if (this.cpVideo) {
                    a = cp.D[this.cpVideo.id];
                    if (a.psv) a.pausedOnce = true
                }
                this.waitCount = 0
            }
        };
        this.waitingFn = function() {
            ++this.waitCount;
            cp.movie.vdm.verbose && cp.log("wait " + this.waitCount +
                " " + this.cpSrc + " " + (this.cpVideo ? this.cpVideo.id : ""))
        };
        this.canPlayCallBackFn = function() {
            if (this.CPcanPlay == false) {
                var a = 100;
                if (cp.device == cp.ANDROID) a = 2E3;
                else {
                    this.CPcanPlay = true;
                    this.waitCount = 0
                }
                var c = this;
                setTimeout(function() {
                    c.CPcanPlay = true;
                    c.waitCount = 0;
                    var a = cpInfoCurrentFrame;
                    if (c.from <= a && a <= c.to) {
                        c.style.position = "static";
                        c.style.left = "0px";
                        c.CPtoc && cp.toc.rootObj.showVideo(true)
                    }
                }, a)
            } else this.waitCount = 0;
            if (this.cpVideo && this.cpVideo.displayForDurationOfVideo) cp.D[this.cpVideo.parentDivName]
                .to =
                this.duration * cp.movie.fps;
            cp.movie.vdm.verbose && cp.log("cnPly " + this.cpSrc + " " + (this.cpVideo ? this.cpVideo.id :
                ""))
        };
        this.onEndedCallBackFn = function() {
            this.waitCount = 0;
            if (this.cploop) {
                cp.movie.vdm.verbose && cp.log(this.cpSrc + " loop");
                if (this.cpVideo) {
                    this.cpVideo.pause();
                    this.cpVideo.seekTo(this.cpVideo.from);
                    this.cpVideo.play()
                }
            } else {
                cp.movie.vdm.verbose && cp.log(this.cpSrc + " ended");
                if (this.cpVideo)
                    if (this.cpVideo.autoRewind) {
                        this.cpVideo.pause();
                        this.cpVideo.seekTo(this.cpVideo.from)
                    } else {
                        this.cpVideo.ended =
                            true;
                        this.endedAt = (new Date)
                            .getTime();
                        this.cpVideo.pause()
                    }
                else this.endedAt = (new Date)
                    .getTime();
                if (cp.movie.paused) {
                    if (cp.ReasonForPause.EVENT_VIDEO_PAUSE == cp.movie.reasonForPause) {
                        this.cpVideo.nativeVideo && (document && document.exitFullscreen ? document
                            .exitFullscreen() : document && document.webkitExitFullscreen ? document
                            .webkitExitFullscreen() : this.cpVideo.nativeVideo.exitFullscreen ? this
                            .cpVideo.nativeVideo.exitFullscreen() : this.cpVideo.nativeVideo
                            .msExitFullscreen ? this.cpVideo.nativeVideo.msExitFullscreen() :
                            this.cpVideo.nativeVideo.mozCancelFullScreen ? this.cpVideo.nativeVideo
                            .mozCancelFullScreen() : this.cpVideo.nativeVideo.webkitExitFullscreen &&
                            this.cpVideo.nativeVideo.webkitExitFullscreen());
                        cp.movie.play()
                    }
                } else if (this.cpVideo) this.cpVideo.actualParent.pausedOnce = true;
                this.cpVideo && this.cpVideo.displayForDurationOfVideo && this.cpVideo.reset()
            }
        };
        this.PlayPauseCallBackFn = function() {
            if (this.paused) this.pausedAt = (new Date)
                .getTime();
            if (this.cpVideo) this.cpVideo.paused = this.paused
        };
        if (cp.device == cp.IDEVICE ||
            cp.device == cp.ANDROID) {
            this.slideVideoChannel = new cp.NativeVideo;
            this.slideVideoChannel.cpSrc = "";
            this.slideVideoChannel.cpVideo = null;
            this.slideVideoChannel.ended = false;
            this.slideVideoChannel.addEventListener("error", this.errorCallBackFn, false);
            if (cp.IOSMajor >= cp.IOS5 || cp.device == cp.ANDROID) {
                this.slideVideoChannel.addEventListener("waiting", this.waitingFn, false);
                this.slideVideoChannel.addEventListener("canplay", this.canPlayCallBackFn, false)
            }
            this.slideVideoChannel.addEventListener("play", this.PlayPauseCallBackFn,
                false);
            this.slideVideoChannel.addEventListener("pause", this.PlayPauseCallBackFn, false);
            this.slideVideoChannel.waitCount = 0
        } else {
            this.slideVideoChannel0 = new cp.NativeVideo;
            this.slideVideoChannel0.cpSrc = "";
            this.slideVideoChannel0.cpVideo = null;
            this.slideVideoChannel0.ended = false;
            this.slideVideoChannel0.addEventListener("error", this.errorCallBackFn, false);
            this.slideVideoChannel0.addEventListener("waiting", this.waitingFn, false);
            this.slideVideoChannel0.addEventListener("canplay", this.canPlayCallBackFn, false);
            this.slideVideoChannel0.addEventListener("play", this.PlayPauseCallBackFn, false);
            this.slideVideoChannel0.addEventListener("pause", this.PlayPauseCallBackFn, false);
            this.slideVideoChannel0.waitCount = 0;
            this.slideVideoChannel1 = new cp.NativeVideo;
            this.slideVideoChannel1.cpSrc = "";
            this.slideVideoChannel1.cpVideo = null;
            this.slideVideoChannel1.ended = false;
            this.slideVideoChannel1.addEventListener("error", this.errorCallBackFn, false);
            this.slideVideoChannel1.addEventListener("waiting", this.waitingFn, false);
            this.slideVideoChannel1.addEventListener("canplay",
                this.canPlayCallBackFn, false);
            this.slideVideoChannel1.addEventListener("play", this.PlayPauseCallBackFn, false);
            this.slideVideoChannel1.addEventListener("pause", this.PlayPauseCallBackFn, false);
            this.slideVideoChannel1.waitCount = 0;
            this.slideVideoChannel = this.slideVideoChannel0
        }
        if (cp.loadedModules.toc)
            if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID) {
                this.tocVideoChannel = document.getElementById("tocVideo");
                if (!this.tocVideoChannel) this.tocVideoChannel = new cp.NativeVideo("tocVideo");
                this.tocVideoChannel.cpSrc =
                    "";
                this.tocVideoChannel.cpVideo = null;
                this.tocVideoChannel.ended = false;
                this.tocVideoChannel.addEventListener("error", this.errorCallBackFn, false);
                if (cp.IOSMajor >= cp.IOS5 || cp.device == cp.ANDROID) {
                    this.tocVideoChannel.addEventListener("waiting", this.waitingFn, false);
                    this.tocVideoChannel.addEventListener("canplay", this.canPlayCallBackFn, false)
                }
                this.tocVideoChannel.addEventListener("play", this.PlayPauseCallBackFn, false);
                this.tocVideoChannel.addEventListener("pause", this.PlayPauseCallBackFn, false);
                this.tocVideoChannel.waitCount =
                    0
            } else {
                this.tocVideoChannel0 = document.getElementById("tocVideo");
                if (!this.tocVideoChannel0) this.tocVideoChannel0 = new cp.NativeVideo("tocVideo");
                this.tocVideoChannel0.cpSrc = "";
                this.tocVideoChannel0.cpVideo = null;
                this.tocVideoChannel0.ended = false;
                this.tocVideoChannel0.addEventListener("error", this.errorCallBackFn, false);
                this.tocVideoChannel0.addEventListener("waiting", this.waitingFn, false);
                this.tocVideoChannel0.addEventListener("canplay", this.canPlayCallBackFn, false);
                this.tocVideoChannel0.addEventListener("play",
                    this.PlayPauseCallBackFn, false);
                this.tocVideoChannel0.addEventListener("pause", this.PlayPauseCallBackFn, false);
                this.tocVideoChannel0.waitCount = 0;
                this.tocVideoChannel1 = new cp.NativeVideo("tocVideo");
                this.tocVideoChannel1.cpSrc = "";
                this.tocVideoChannel1.cpVideo = null;
                this.tocVideoChannel1.ended = false;
                this.tocVideoChannel1.addEventListener("error", this.errorCallBackFn, false);
                this.tocVideoChannel1.addEventListener("waiting", this.waitingFn, false);
                this.tocVideoChannel1.addEventListener("canplay", this.canPlayCallBackFn,
                    false);
                this.tocVideoChannel1.addEventListener("play", this.PlayPauseCallBackFn, false);
                this.tocVideoChannel1.addEventListener("pause", this.PlayPauseCallBackFn, false);
                this.tocVideoChannel1.waitCount = 0;
                this.tocVideoChannel = this.tocVideoChannel0
            } this.MAX_VIDEO_CHANNELS = cp.device == cp.IDEVICE || cp.device == cp.ANDROID ? 2 : 10;
        this.videoChannels = [];
        for (var a = 0; a < this.MAX_VIDEO_CHANNELS; ++a) {
            var c = new cp.NativeVideo;
            c.cpSrc = "";
            c.cpVideo = null;
            c.ended = false;
            c.addEventListener("ended", this.onEndedCallBackFn, false);
            c.addEventListener("error", this.errorCallBackFn, false);
            if (cp.device == cp.DESKTOP || cp.device == cp.IDEVICE && cp.IOSMajor >= cp.IOS5 || cp.device == cp
                .ANDROID) {
                c.addEventListener("waiting", this.waitingFn, false);
                c.addEventListener("canplay", this.canPlayCallBackFn, false)
            }
            c.addEventListener("play", this.PlayPauseCallBackFn, false);
            c.addEventListener("pause", this.PlayPauseCallBackFn, false);
            c.waitCount = 0;
            this.videoChannels[a] = c
        }
    };
    cp.VideoManager.prototype = {
        pendingVideos: function() {
            var a = 0,
                c = this.slideVideoChannel;
            c.waitCount > 0 && (!c.endedAt && !c.paused) && ++a;
            (c = this.tocVideoChannel) && (c.waitCount > 0 && !c.endedAt && !c.paused) && ++a;
            for (c = 0; c < this.MAX_VIDEO_CHANNELS; ++c) {
                var d = this.videoChannels[c];
                d.waitCount > 0 && (!d.endedAt && !d.paused) && ++a
            }
            if (a > 0) {
                if (this.numPending != a) {
                    this.numPending = a;
                    cp.verbose && cp.log(a + " videos pending")
                }
            } else {
                this.numPending && cp.verbose && cp.log("no videos pending");
                this.numPending = 0
            }
            return a
        },
        resetAllWaitingVideos: function() {
            for (var a = 0; a < this.MAX_VIDEO_CHANNELS; ++a) this.videoChannels[a].waitCount =
                0
        },
        mute: function(a) {
            var a = a == true || a > 0 ? true : false,
                c;
            for (c in this.videoChannels) this.videoChannels[c].muted = a;
            this.slideVideoChannel.muted = a;
            if (this.tocVideoChannel) this.tocVideoChannel.muted = a;
            this.muted = a
        },
        setVolume: function(a) {
            a < 0 && (a = 0);
            a > 1 && (a = 1);
            this.volume = a;
            for (var c in this.videoChannels) this.videoChannels[c].volume = a;
            this.slideVideoChannel.volume = a;
            if (this.tocVideoChannel) this.tocVideoChannel.volume = a
        },
        LRUVideoIndex: function() {
            for (var a = (new Date)
                    .getTime(), c = -1, d = cpInfoCurrentFrame, e = 0; e <
                this.MAX_VIDEO_CHANNELS; ++e) {
                var f = this.videoChannels[e];
                if (f.ended || f.paused)
                    if (f.endedAt) {
                        if (a > f.endedAt) {
                            a = f.endedAt;
                            c = e
                        }
                    } else if (f.pausedAt) {
                    if (a > f.pausedAt) {
                        a = f.pausedAt;
                        c = e
                    }
                } else c == -1 && d > f.cpTo && (c = e)
            }
            return c
        },
        allocVideoChannel: function(a) {
            this.verbose && cp.log("allocVideoChannel " + a.id + " " + a.src);
            if (cp.IDEVICE == cp.device || cp.device == cp.ANDROID) {
                this._LRUVideoIndex = this._LRUVideoIndex == void 0 ? 0 : 1 - this._LRUVideoIndex;
                this.verbose && cp.log("picking video @ index " + this._LRUVideoIndex);
                var c = this.videoChannels[this._LRUVideoIndex];
                if (c.cpVideo != null) c.cpVideo.nativeVideo = null;
                a.nativeVideo = c;
                c.cpVideo = a;
                c.cploop = a.cploop;
                c.ended = false;
                delete c.endedAt;
                delete c.pausedAt;
                c.waitCount = 0;
                c.cpSrc = a.src;
                c.src = a.src;
                c.load()
            } else {
                for (var d = 0; d < this.MAX_VIDEO_CHANNELS; ++d) {
                    c = this.videoChannels[d];
                    if (c.cpSrc == a.src && (c.ended || c.paused)) {
                        if (c.cpVideo != null) {
                            c.cpVideo.nativeVideo = null;
                            c.cpVideo = null
                        }
                        a.nativeVideo = c;
                        c.cpVideo = a;
                        c.loop = a.loop;
                        c.ended = false;
                        delete c.endedAt;
                        delete c.pausedAt;
                        c.cpTo = a.to;
                        a.isSeekPending() || a.seekTo(a.from);
                        a.finishPendingSeek();
                        this.verbose && cp.log("allocVideoChannel found existing @ " + d);
                        return true
                    }
                }
                for (d = 0; d < this.MAX_VIDEO_CHANNELS; ++d) {
                    c = this.videoChannels[d];
                    if (c.cpSrc == "") {
                        c.waitCount = 0;
                        c.cpSrc = a.src;
                        c.src = a.src;
                        a.nativeVideo = c;
                        c.cpVideo = a;
                        c.loop = a.loop;
                        c.ended = false;
                        delete c.endedAt;
                        delete c.pausedAt;
                        c.cpTo = a.to;
                        a.finishPendingSeek();
                        c.load();
                        this.verbose && cp.log("allocVideoChannel found empty slot @ " + d);
                        return true
                    }
                }
                d = this.LRUVideoIndex();
                if (-1 != d) {
                    c = this.videoChannels[d];
                    if (c.cpVideo != null) {
                        c.cpVideo.nativeVideo =
                            null;
                        c.cpVideo = null
                    }
                    a.nativeVideo = c;
                    c.cpVideo = a;
                    c.loop = a.loop;
                    c.ended = false;
                    delete c.endedAt;
                    delete c.pausedAt;
                    c.cpTo = a.to;
                    if (c.cpSrc != a.src) {
                        c.waitCount = 0;
                        c.cpSrc = a.src;
                        c.src = a.src
                    } else a.isSeekPending() || a.seekTo(a.from);
                    a.finishPendingSeek();
                    c.load();
                    this.verbose && cp.log("allocVideoChannel re-used LRU slot @ " + d);
                    return true
                }
                return false
            }
        },
        preallocVideoChannel: function(a) {
            a = cp.getCorrectMediaPath(a);
            this.verbose && cp.log("preallocVideoChannel " + a);
            for (var c = 0; c < this.MAX_VIDEO_CHANNELS; ++c) {
                var d =
                    this.videoChannels[c];
                if (d.cpSrc == a) {
                    this.verbose && cp.log("preallocVideoChannel found existing @ " + c);
                    return true
                }
            }
            for (c = 0; c < this.MAX_VIDEO_CHANNELS; ++c) {
                d = this.videoChannels[c];
                if (d.cpSrc == "") {
                    d.waitCount = 0;
                    d.cpSrc = a;
                    d.src = a;
                    d.ended = false;
                    delete d.endedAt;
                    delete d.pausedAt;
                    delete d.cpTo;
                    d.load();
                    this.verbose && cp.log("preallocVideoChannel found empty slot @ " + c);
                    return true
                }
            }
            return false
        },
        deviceSpecificInit: function() {
            function a(a) {
                if (!a.cpSrc) try {
                    a.src = "_cp_n_m_"
                } catch (c) {}
                try {
                    a.load()
                } catch (f) {}
            }
            if (cp.IDEVICE == cp.device || cp.device == cp.ANDROID) {
                for (var c = 0; c < this.MAX_VIDEO_CHANNELS; ++c) a(this.videoChannels[c]);
                a(this.slideVideoChannel);
                this.tocVideoChannel && a(this.tocVideoChannel)
            }
        },
        load: function() {
            this.loaded = true
        },
        preload2: function(a) {
            if (this.loaded && 1 == cp.movie.speed) {
                this.verbose && cp.log("video manager preload " + a);
                a = cp.D[a];
                if (a.videos)
                    for (var c = true, d = true, e = true, f = 0; f < a.videos.length; ++f) {
                        var g = cp.D[a.videos[f]];
                        if (g.type == cp.kCPFullMotion || g.type == cp.kCPOTVideoResource || g.type == cp
                            .kCPOTFLVItem) {
                            if (c) {
                                g =
                                    cp.D[g.mdi];
                                c = this.preallocVideoChannel(g.mp4)
                            }
                        } else if (g.type == cp.kCPOTVideo) {
                            g = cp.D[g.mdi];
                            if (g.sit) {
                                if (d) {
                                    g = cp.getCorrectMediaPath(g.mp4);
                                    if (this.tocVideoChannel0.cpSrc == g || this.tocVideoChannel1.cpSrc ==
                                        g) this.verbose && cp.log("vdm preload found existing " + g);
                                    else if (this.tocVideoChannel0.cpVideo)
                                        if (this.tocVideoChannel1.cpVideo) d = false;
                                        else {
                                            this.tocVideoChannel1.cpSrc = g;
                                            this.tocVideoChannel1.src = g;
                                            this.tocVideoChannel1.load();
                                            this.verbose && cp.log("vdm preloaded tocV1 with " + g)
                                        }
                                    else {
                                        this.tocVideoChannel0.cpSrc =
                                            g;
                                        this.tocVideoChannel0.src = g;
                                        this.tocVideoChannel0.load();
                                        this.verbose && cp.log("vdm preloaded tocV0 with " + g)
                                    }
                                }
                            } else if (e) {
                                g = cp.getCorrectMediaPath(g.mp4);
                                if (this.slideVideoChannel0.cpSrc == g || this.slideVideoChannel1.cpSrc ==
                                    g) this.verbose && cp.log("vdm preload found existing " + g);
                                else if (this.slideVideoChannel0.cpVideo)
                                    if (this.slideVideoChannel1.cpVideo) e = false;
                                    else {
                                        this.slideVideoChannel1.cpSrc = g;
                                        this.slideVideoChannel1.src = g;
                                        this.slideVideoChannel1.load();
                                        this.verbose && cp.log("vdm preloaded SV1 with " +
                                            g)
                                    }
                                else {
                                    this.slideVideoChannel0.cpSrc = g;
                                    this.slideVideoChannel0.src = g;
                                    this.slideVideoChannel0.load();
                                    this.verbose && cp.log("vdm preloaded SV0 with " + g)
                                }
                            }
                        }
                    }
            }
        },
        preload: function(a) {
            if (!(cp.device == cp.IDEVICE || cp.device == cp.ANDROID)) return this.preload2(a)
        },
        seekTo: function(a, c) {
            var d, e, f;
            if (this.slideVideoChannel) d = this.slideVideoChannel.cpVideo;
            if (this.tocVideoChannel) e = this.tocVideoChannel.cpVideo;
            if (this.demoVideo) f = this.demoVideo.cpVideo;
            if (c) {
                d && d.pause();
                e && e.pause();
                f && f.pause()
            }
            d && d.seekTo(a);
            e && e.seekTo(a);
            f && f.seekTo(a)
        },
        pause: function(a) {
            this.reasonForPause = a;
            if (a == cp.ReasonForPause.PLAYBAR_ACTION || a == cp.ReasonForPause.CPCMNDPAUSE || a == cp
                .ReasonForPause.MOVIE_REWIND_STOP || a == cp.ReasonForPause.EVENT_VIDEO_PAUSE || a == cp
                .ReasonForPause.PPTX_PAUSE_FOR_ONCLICK_ANIMATION || a == cp.ReasonForPause
                .INTERACTIVE_ITEM || a == cp.ReasonForPause.CPCMNDGOTOFRAME) {
                this.slideVideoChannel && this.slideVideoChannel.cpVideo && this.slideVideoChannel.cpVideo
                    .pause();
                this.tocVideoChannel && this.tocVideoChannel.cpVideo &&
                    this.tocVideoChannel.cpVideo.pause();
                this.demoVideo && this.demoVideo.cpVideo && this.demoVideo.cpVideo.pause()
            }
        },
        pace: function() {
            if ((cp.device == cp.IDEVICE || cp.device == cp.ANDROID) && !cp.movie.stage.VideoPlaying)
            return null;
            var a = this.slideVideoChannel;
            if (a) {
                var c = a.cpVideo;
                if (c && !a.ended && !a.paused && !c.loop && a.currentTime > 0) return c.from + (a
                    .currentTime - c.seek_From) * cpInfoFPS
            }
            if (a = this.tocVideoChannel)
                if ((c = a.cpVideo) && !a.ended && !a.paused && !c.loop && a.currentTime > 0) return c
                    .from + (a.currentTime - c.seek_From) *
                    cpInfoFPS;
            if (a = this.demoVideo)
                if ((c = a.cpVideo) && !a.ended && !a.paused && !c.loop && a.currentTime > 0) return c
                    .from + a.currentTime * cpInfoFPS;
            return null
        },
        updateVideoViews: function() {
            if (this.viewVideo && this.videoViews)
                for (var a in this.videoViews) this.videoViews[a].update()
        }
    };
    cp.ReasonForPause = {};
    cp.ReasonForPause.PLAYBAR_ACTION = 0;
    cp.ReasonForPause.INTERACTIVE_ITEM = 1;
    cp.ReasonForPause.MOVIE_ENDED = 2;
    cp.ReasonForPause.VIDEO_SYNC = 3;
    cp.ReasonForPause.FEEDBACK_ITEM = 4;
    cp.ReasonForPause.CANNOT_MOVE_AHEAD = 5;
    cp.ReasonForPause.WAIT_FOR_RESOURCES =
        6;
    cp.ReasonForPause.MOVIE_REWIND_STOP = 7;
    cp.ReasonForPause.CPCMNDPAUSE = 8;
    cp.ReasonForPause.SHOW_VALUE_AT_FRAME = 9;
    cp.ReasonForPause.DONT_CARE_DEPRECATED_CODE = 10;
    cp.ReasonForPause.EVENT_VIDEO_PAUSE = 11;
    cp.ReasonForPause.ONLY_ONE_MEDIUM_CAN_PLAY = 12;
    cp.ReasonForPause.PPTX_PAUSE_FOR_ONCLICK_ANIMATION = 13;
    cp.ReasonForPause.CPCMNDGOTOFRAME = 14;
    cp.ReasonForPlay = {};
    cp.ReasonForPlay.PLAYBAR_ACTION = 0;
    cp.ReasonForPlay.INTERNAL = 1;
    cp.ReasonForPlay.MOVIE_REWIND = 2;
    cp.Movie = function(a) {
        this.virgin = true;
        this.element = a;
        this.symbols = {};
        this.main = null;
        this.cc = document.getElementById("cc");
        this.cpInfoLastVisitedSlideStartFrame = 0;
        this.fps = cp.D[a.id].fps;
        this.hidePlaybarInQuiz = cp.D.quizzingData.hidePlaybarInQuiz;
        this.offset = (cp.offsetInnerWidth - cp.D[a.id].w + (cp.loadedModules.toc && !cp.D.tocProperties
            .overlay ? cp.D.tocProperties.position == 1 ? cp.D.tocProperties.width : -cp.D.tocProperties
            .width : 0)) / 2;
        this.paused = true;
        this._parseElements();
        this.questions = [];
        this.questionObjs = [];
        this.element.style.backgroundColor = cp.D[this.element.id].prjBgColor;
        this.currAudioType = "bg";
        this.currAudioStopFrame = this.currAudioStartFrame = -1;
        this.counter = 0;
        this.speed = 1;
        this.playKeyTap = cp.D[a.id].pkt;
        this.m_hasIsTrackedBeenSet = false;
        this.MIN_WAIT_TIME_TO_PAUSE_MOVIE = this.waitedForResources = 0;
        this.MIN_WAIT_TIME_TO_BLOCK_UI = 2E3;
        if (cp.device == cp.ANDROID) this.MIN_WAIT_TIME_TO_BLOCK_UI = 4E3;
        this.MAX_WAIT_TIME = 2E4;
        this.mRequestAnimationFrameFunc = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||
            window.mozRequestAnimationFrame || window.oRequestAnimationFrame ||
            window.msRequestAnimationFrame || null;
        this.m_scaleFactor = 1
    };
    cp.Movie.prototype = {
        updateMovie: function() {
            var a = cp.D[this.main.id].questions;
            if (a) {
                this.questions = a.split(",");
                this.questionObjs = []
            }
            this.stage.updateTimeline()
        },
        handleProjectOptions: function() {
            Lc()
        },
        preloadProjectAssets: function() {
            var a = cp.model.projectImages;
            a && a.length != 0 && cp.movie.im.loadImages(-1, a, true, true)
        },
        rewind: function() {
            this.stage.handleRewindForFramesets();
            this.stage.RemoveFeedbacks(cp.FeedbackCloseReason.SLIDE_CHANGE);
            cp.movie.stage.itemsNotLoaded = [];
            this.jumpToFrame(1);
            this.play(cp.ReasonForPlay.MOVIE_REWIND)
        },
        _parseElements: function() {
            for (var a = this.element.firstChild; a; a = a.nextSibling)
                if (a.nodeType == Node.ELEMENT_NODE) {
                    var c = (a.className + "")
                        .split(" ");
                    if (c.indexOf("cp-timeline") != -1) {
                        var d = c.indexOf("cp-main") != -1;
                        c.indexOf("cp-symbol") != -1 && (this.symbols[a.id] = a);
                        if (d) this.main = a
                    }
                } if (this.main != null) this.stage = cp.parseTimeline(this.main)
        },
        resetFPS: function() {
            if (cpInfoFPS != 0) {
                this.POLL_INTERVAL = 1E3 / cpInfoFPS;
                if (!this.useRequestAnimationFrame ||
                    !this.mRequestAnimationFrameFunc) {
                    if (this.interval) {
                        clearInterval(this.interval);
                        this.interval = 0
                    }
                    var a = this;
                    this.interval = setInterval(function() {
                        a._onEnterFrame()
                    }, this.POLL_INTERVAL)
                } else {
                    if (this.interval) {
                        clearInterval(this.interval);
                        this.interval = 0
                    }
                    this.mRequestAnimationFrameFunc.call(window, this.animationLoop)
                }
            }
        },
        resetMovieElapsedTime: function(a) {
            this.startMovieTime = (new Date)
                .getTime() - cpInfoCurrentFrame * 1E3 / (cp.movie.fps * cp.movie.speed);
            if (arguments.length > 0 && this.useRequestAnimationFrame !=
                a) {
                this.useRequestAnimationFrame = a;
                this.resetFPS()
            }
        },
        animationLoop: function() {
            cp.movie.useRequestAnimationFrame && cp.movie.mRequestAnimationFrameFunc.call(window, cp.movie
                .animationLoop);
            cp.movie._onEnterFrame()
        },
        startTimer: function() {
            if (!this.interval) {
                this.stage.start();
                this.element.style.display = "block";
                this.resetFPS()
            }
        },
        stop: function() {
            this.stage.reset();
            this.element.style.display = "none";
            var a = document.getElementById("playbar");
            a.pause != void 0 && a.pause()
        },
        play: function(a) {
            if (!cp.isBlockedForLMS()) {
                cp.verbose &&
                    cp.log("movie.play deleting pendingPlay");
                delete this.pendingPlay;
                this.resetMovieElapsedTime();
                if (this.virgin) {
                    cp.verbose && cp.log("movie virgin play");
                    this.virgin = false;
                    a = cp.getStartFrameOfMovie();
                    1 < a && L(a);
                    this.am.unlockWebAudio();
                    (cp.IDEVICE == cp.device || cp.device == cp.ANDROID) && cp.InitMedia();
                    cp.beginMovie();
                    return true
                }
                if (!this.paused) {
                    a && (a == cp.ReasonForPlay.MOVIE_REWIND && cpInfoCurrentFrame < this.stage
                        .lastFrame) && cp.em.fireEvent("CPMovieStart");
                    return false
                }
                if (this.waitingForResources()) {
                    cp.verbose &&
                        cp.log("set pendingPlay = true. movie cannot play since resources not available");
                    this.pendingPlay = true;
                    return false
                }
                cp.verbose && cp.log("movie play");
                this.am.ssp = 0;
                var c = document.getElementById("playbar");
                c && c.play != void 0 && c.play();
                if (!this.tocPlaybarHandlerSet) {
                    this.tocPlaybarHandlerSet = true;
                    c && c.animator && c.animator.startTimer();
                    if (this.stage.getSlideDiv() && c && c.animator) {
                        cp.mainContainer.onmouseover = cp.handleMouseOver;
                        if (cp.device == cp.DESKTOP) cp.mainContainer.onmousemove = cp.handleMouseMove;
                        cp.mainContainer.onmouseout =
                            cp.handleMouseOut
                    }
                }
                this.now = new Date;
                this.elapsedFramesResidue = 0;
                if (this.startTime == void 0) {
                    this.startTime = this.now;
                    cp.em.fireEvent("CPMovieStart")
                } else this.reasonForPause == cp.ReasonForPause.MOVIE_ENDED && cpInfoCurrentFrame < this
                    .stage.lastFrame ? cp.em.fireEvent("CPMovieStart") : a && a == cp.ReasonForPlay
                    .MOVIE_REWIND && cpInfoCurrentFrame < this.stage.lastFrame ? cp.em.fireEvent(
                        "CPMovieStart") : cp.em.fireEvent("CPMovieResume", a);
                this.paused = false;
                Ca();
                return true
            }
        },
        pause: function(a) {
            if (this.paused && a != cp.ReasonForPause.WAIT_FOR_RESOURCES &&
                (this.waitingForResources() || this.reasonForPause == cp.ReasonForPause.WAIT_FOR_RESOURCES)
                ) {
                cp.verbose && cp.log(
                    "set pendingPause = true. movie cannot pause since resources not available");
                this.pendingPause = true;
                this.pendingReasonForPause = a
            } else if (this.paused) {
                if (this.reasonForPause != a && this.reasonForPause == cp.ReasonForPause.MOVIE_ENDED) {
                    this.reasonForPause = a;
                    cp.em.fireEvent("CPMovieStart")
                }
                this.am && this.am.reasonForPause != a && this.am.pause(a);
                this.vdm && this.vdm.reasonForPause != a && this.vdm.pause(a)
            } else {
                cp.verbose &&
                    cp.log("movie pause " + a);
                this.reasonForPause = a;
                cp.verbose && cp.log("movie.pause deleting pendingPlay");
                delete this.pendingPlay;
                if (a == cp.ReasonForPause.INTERACTIVE_ITEM) this.stage.interactivePauseFrame =
                    cpInfoCurrentFrame;
                var c = document.getElementById("playbar");
                c && c.pause != void 0 && a != cp.ReasonForPause.WAIT_FOR_RESOURCES && c.pause();
                a == cp.ReasonForPause.MOVIE_ENDED && (c && c.animator) && c.animator.showPlaybar(true);
                this.paused = true;
                this.am && this.am.pause(a);
                this.vdm && this.vdm.pause(a);
                cp.em.fireEvent("CPMoviePause",
                    a)
            }
        },
        blockUI: function() {
            if (!this.blockedUI) {
                this.blockedUI = true;
                cp("blockUserInteraction")
                    .style.display = "block";
                cp("blockUserInteraction")
                    .style.width = "100%";
                cp("blockUserInteraction")
                    .style.height = "100%";
                cp("blockUserInteraction")
                    .style["z-index"] = 1E4;
                this.preloadRot = 0
            }
        },
        unblockUI: function() {
            if (this.blockedUI) {
                this.blockedUI = false;
                cp("blockUserInteraction")
                    .style.display = "none"
            }
        },
        jumpToFrame: function(a) {
            if (a == "cpInfoLastVisitedSlide") a = this.cpInfoLastVisitedSlideStartFrame;
            var c = cp.movie.stage.getSlideIndexForFrame(a);
            if (this.waitingForResources()) {
                if (c != cpInfoCurrentSlideIndex) {
                    this.am.resetAllWaitingAudios();
                    this.vdm.resetAllWaitingVideos();
                    cp.verbose && cp.log("movie jumping to another slide. resetting pending audio/video")
                } else cp.verbose && cp.log("movie cannot jumpToFrame since resources not available");
                this.pendingJump = a;
                return false
            }
            if (!this.stage.canUpdateToFrame(a, c)) {
                cp.verbose && cp.log("movie cannotUpdateToFrame " + a);
                return false
            }
            if (this.pm.isLoading()) {
                cp.verbose && cp.log("movie cannot jumpToFrame since prefetchManager is loading");
                this.pendingJump = a;
                return false
            }
            this._jumpFrame = a;
            L(a);
            return true
        },
        executeAction: function(a) {
            cp.verbose && cp.log("execute action str [" + a + "]");
            if (a && a != "") try {
                eval(a)
            } catch (c) {
                cp.log(c)
            }
        },
        frameBasedExecuteAction: function(a) {
            if (this.executedActionOnFrame != this.stage.updatingFrame) {
                this.executedActionOnFrame = this.stage.updatingFrame;
                this.executeAction(a)
            }
        },
        mousePath: function(a, c, d) {
            if (!(c < a.afrom || c > a.ato) || d) {
                var e = a.ato - a.afrom;
                if (e != 0) {
                    e = e - Math.floor(cpInfoFPS * 0.5);
                    e <= 0 && (e = 0);
                    var f = this.motionPathArgs,
                        g = cp.cloneObject(f.b);
                    if (cp.responsive) {
                        g = g[cp.ResponsiveProjWidth];
                        if (!cp.movie.stage.isSlideBGCropped()) {
                            g[0] = cp.project.clientWidth * g[0] / cp.ResponsiveProjWidth;
                            g[2] = cp.project.clientWidth * g[2] / cp.ResponsiveProjWidth
                        }
                    }
                    var k = g[2] - g[0],
                        m = g[3] - g[1],
                        l = c - a.afrom;
                    if (!(l < 0)) {
                        var c = g[0],
                            d = g[1],
                            n = g[2],
                            g = g[3],
                            o = 1;
                        f.s == 1 && (o = 0.5);
                        var q = n,
                            p = g;
                        if (e > 0 && l < e) {
                            q = 0 == f.t || 0 == k || 0 == m;
                            e = Math.pow(l / e, o);
                            if (q) {
                                q = c + k * e;
                                p = d + m * e
                            } else {
                                k = e * e;
                                m = 1 - e;
                                f = m * m;
                                q = c * f + 2 * n * m * e + n * k;
                                p = d * f + 2 * d * m * e + g * k
                            }
                        }
                        a.children[0].element.left = q;
                        a.children[0].element.style.left =
                            q + "px";
                        a.children[0].element.top = p;
                        a.children[0].element.style.top = p + "px"
                    }
                }
            }
        },
        waitingForResources: function() {
            var a = this.im && this.im.imagesNotLoaded(),
                c = this.stage && !this.stage.hasItemsLoaded(),
                d = this.am && this.am.pendingAudios() > 0,
                e = this.vdm && this.vdm.pendingVideos() > 0,
                f = this.ms && this.ms.pendingItems() > 0;
            if (a || c || d || e || f) {
                cp.verbose && cp.log("waiting for " + a + " " + c + " " + d + " " + e + " " + f +
                    " yield = " + this.stage.yield);
                return true
            }
            return false
        },
        resetAllWaitingResources: function() {
            this.im && this.im.reset();
            if (this.stage) this.stage.itemsNotLoaded = [];
            this.am && this.am.resetAllWaitingAudios();
            this.vdm && this.vdm.resetAllWaitingVideos();
            this.ms && this.ms.reset();
            this.waitedForResources = 0
        },
        _onEnterFrame: function() {
            if (!cp.isBlockedForLMS()) {
                this.refreshMovie();
                this.am.updateAudioViews();
                this.vdm.updateVideoViews();
                if (this.waitingForResources()) {
                    this.waitedForResources = this.waitedForResources + this.POLL_INTERVAL;
                    if (this.waitedForResources >= this.MAX_WAIT_TIME) {
                        cp.verbose && cp.log("waited too long...given up waiting! Paused = " + this.paused +
                            " reason = " +
                            this.reasonForPause + " pendingPlay = " + this.pendingPlay);
                        this.resetAllWaitingResources();
                        this.unblockUI();
                        if (!this.paused && this.pendingPause) {
                            this.pause(this.pendingReasonForPause);
                            delete this.pendingPause;
                            delete this.pendingReasonForPause
                        } else(this.paused && this.reasonForPause == cp.ReasonForPause.WAIT_FOR_RESOURCES ||
                            this.pendingPlay) && this.play()
                    } else if (this.waitedForResources >= this.MIN_WAIT_TIME_TO_BLOCK_UI) {
                        this.pause(cp.ReasonForPause.WAIT_FOR_RESOURCES);
                        this.blockUI()
                    } else this.waitedForResources >=
                        this.MIN_WAIT_TIME_TO_PAUSE_MOVIE && this.pause(cp.ReasonForPause
                            .WAIT_FOR_RESOURCES)
                } else {
                    this.waitedForResources > 0 && cp.verbose && cp.log("finished waiting! Paused = " + this
                        .paused + " reason = " + this.reasonForPause + " pendingPlay = " + this
                        .pendingPlay);
                    this.waitedForResources = 0;
                    this.unblockUI();
                    if (!this.paused && this.pendingPause) {
                        this.pause(this.pendingReasonForPause);
                        delete this.pendingPause;
                        delete this.pendingReasonForPause
                    } else if (this.paused && this.reasonForPause == cp.ReasonForPause.WAIT_FOR_RESOURCES ||
                        this.pendingPlay) this.play();
                    else {
                        var a = this.pendingJump;
                        if (a) {
                            cp.verbose && cp.log("jumping to pending jump frame " + a);
                            delete this.pendingJump;
                            this.jumpToFrame(a)
                        } else if (this.paused) {
                            if (cpInfoCurrentFrame == this._jumpFrame) {
                                if (this.stage.fallsOutsideCurrentSlide(cpInfoCurrentFrame)) {
                                    var c = this.stage.getSlideIndexForFrame(cpInfoCurrentFrame);
                                    if (c != -1)
                                        if (this.stage.yield) delete this.stage.yield;
                                        else {
                                            this.stage.loadAssetsForSlideAtIndex(c);
                                            this.stage.yield = 1;
                                            return
                                        }
                                }
                                this._jumpFrame = -1;
                                this.stage.updateFrame(cp.Timeline.ReasonForUpdate.JUMP)
                            }
                            this.stage.UpdateFeedbacks();
                            this.stage.updateFrameCurrentOnPause()
                        } else {
                            this.elapsedMovieTime = ((new Date)
                                .getTime() - this.startMovieTime) * cp.movie.speed;
                            a = new Date;
                            this.stage.UpdateFeedbacks();
                            if (this.stage.fallsOutsideCurrentSlide(cpInfoCurrentFrame)) {
                                c = this.stage.getSlideIndexForFrame(cpInfoCurrentFrame);
                                if (c != -1)
                                    if (this.stage.yield) delete this.stage.yield;
                                    else {
                                        this.stage.loadAssetsForSlideAtIndex(c);
                                        this.stage.yield = 1;
                                        return
                                    }
                            }
                            if (cpInfoCurrentFrame == this._jumpFrame) {
                                this._jumpFrame = -1;
                                this.stage.updateFrame(cp.Timeline.ReasonForUpdate.JUMP)
                            } else this.stage.updateFrame(cp.Timeline.ReasonForUpdate.PROGRESS);
                            if (!this.paused) {
                                var d = new Date,
                                    c = this.now;
                                this.now = d;
                                if (cp.disablePaceMaker) this.framesToSkip = 1;
                                else {
                                    if (this.elapsedFramesResidue == void 0) this.elapsedFramesResidue = 0;
                                    var e = 0;
                                    if (1 == this.speed && this.am.pace) e = this.am.pace -
                                        cpInfoCurrentFrame;
                                    else if (cp.device == cp.IDEVICE && !cp.movie.PPTXSlide) e = this.speed;
                                    else {
                                        a = d.getTime() - a.getTime();
                                        cp.movie.PPTXSlide && (a = 0);
                                        e = (this.now.getTime() - c.getTime() - a) * cpInfoFPS / 1E3
                                    }
                                    this.framesToSkipForPlaybar = this.elapsedFramesResidue = this
                                        .elapsedFramesResidue + e;
                                    this.framesToSkip =
                                        Math.floor(this.framesToSkipForPlaybar);
                                    this.elapsedFramesResidue = this.elapsedFramesResidue - this
                                        .framesToSkip
                                }
                                cp.verbose && cp.log("am.pace = " + this.am.pace +
                                    " elapsedFramesResidue = " + this.elapsedFramesResidue +
                                    " skipping = " + this.framesToSkip);
                                this.stage.attemptToAdvanceCurrentFrameByOffset(this.framesToSkip)
                            }
                        }
                    }
                }
            }
        },
        refreshMovie: function() {
            var a = cp("cpdmtxtn");
            if (!a) {
                var c = cp("cpDocument");
                if (!c) return;
                a = cp.newElem("div");
                a.id = "cpdmtxtn";
                a.style.display = "block";
                c.parentElement.insertBefore(a, c);
                a.style.opacity =
                    0;
                a.style["user-select"] = "none";
                a.style["-ms-user-select"] = "none";
                a.style["-webkit-user-select"] = "none";
                a.style["-moz-user-select"] = "none";
                if (cp.device == cp.ANDROID) {
                    a.style.width = "1px";
                    a.style.height = "1px";
                    a.style.left = "-1000px";
                    a.style.top = "-1000px";
                    a.style.position = "absolute"
                }
                a.setAttribute("aria-hidden", "true")
            }
            a.innerHTML = (new Date)
                .toString()
        },
        registerQuizVariableSetters: function() {
            if (cp.movie.playbackController) {
                var a = cp.movie.playbackController.GetQuizController();
                if (a) {
                    a.quizInScopeSetter =
                        Bc;
                    a.quizScopeSlideSetter = Pa
                }
            }
        },
        initLMS: function() {
            if (this.playbackController) {
                this.playbackController.GetLoadingResumeDataBln();
                if (!this.m_hasIsTrackedBeenSet) {
                    this.playbackController.GetIsTrackedFlag() ? this.playbackController.SetIsTracked(
                        true) : this.playbackController.SetIsTracked(false);
                    this.m_hasIsTrackedBeenSet = true;
                    this.playbackController.GetLoadingResumeDataBln()
                }
                typeof cp.LMSDriverHolder == "undefined" && (!this.playbackController.LMSIsAICC() && !this
                    .playbackController.IsRunningInConnect()) && cp.handleVariablesInURLParams();
                !this.playbackController.IsRunningInConnect() && (typeof cp.LMSDriverHolder !=
                        "undefined" && cp.LMSDriverHolder && cp.LMSDriverHolder.GetStudentName) && cp.vm
                    .setVariableValue("cpQuizInfoStudentName", cp.LMSDriverHolder.GetStudentName(), false)
            }
        },
        resumeMovieSpecificValue: function() {
            if (this.playbackController) {
                var a = this.playbackController.GetRestoredQuizSlide();
                a >= 0 && L(a)
            }
        }
    };
    cp.playPause = function(a) {
        var c;
        if (cp.movie.paused) {
            if (a == true) c = cp.ReasonForPlay.PLAYBAR_ACTION;
            cp.movie.play(c)
        } else {
            if (a == true) c = cp.ReasonForPause.PLAYBAR_ACTION;
            cp.movie.pause(c)
        }
    };
    cp.goToPreviousSlide = function() {
        cp.jumpToPreviousSlide()
    };
    cp.goToNextSlide = function() {
        cp.jumpToNextSlide()
    };
    cp.jumpToSlide = function(a) {
        cpCmndGotoSlideByUIDAndResume = a
    };
    cp.rewind = function() {
        cpCmndRewindAndPlay = 1
    };
    cp.showHideCC = function() {
        cpCmndCC = cpCmndCC ? 0 : 1
    };
    cp.showHideTOC = function() {
        var a = document.getElementById("toc");
        a != void 0 && a.animator && (a.animator.direction == 0 ? a.animator.showTOC() : a.animator.hideTOC())
    };
    cp.fastForward = function() {
        cpCmndFastForward = 1
    };
    cp.shouldMoveTo = function(a) {
        return cp.movie.stage.canUpdateToFrame(a)
    };
    cp.getCpInfoOriginalFPS = function() {
        return cp.movie.fps
    };
    cp.getCpInfoSpeed = function() {
        return cp.movie.speed
    };
    cp.getCpElapsedMovieTime = function() {
        return cp.movie.elapsedMovieTime
    };
    cp.getCpIsPlaying = function() {
        return !cp.movie.paused
    };
    cp.showValue = function(a) {
        cp.showHideElements();
        cp.movie.pause(cp.ReasonForPause.SHOW_VALUE_AT_FRAME);
        cp.movie.jumpToFrame(a)
    };
    cp.showHideFeedbackCaptionsClickHandler = function(a, c, d, e) {
        d || (d = cp.D[a.id].topMostObjectInteractiveObject);
        if (!d) return false;
        return (a = cp.D[d]) &&
            void 0 != a.val ? false : cp.clickFailureHandler(a, c, e)
    };
    cp.vTEB = function(a) {
        var c = cp.D[a];
        if (void 0 == c || c.handled) return false;
        var d = 0,
            e = c.currentAttempt;
        void 0 != e && (d = e);
        e = c.ma;
        d = d + 1;
        c.currentAttempt = d;
        var f = cp.isTEBValueCorrect(a, c),
            g = c.osc,
            k = c.oca,
            m = c.ofc,
            l = c.ofa,
            n = false,
            o = "",
            q = "",
            p = false,
            o = null,
            u = cp.FeedbackType.SUCCESS;
        if (f) {
            o = g;
            q = k;
            p = c.pfc == 1;
            cp.SubmitInteractions(a, cp.QuestionStatusEnum.CORRECT, d - 1)
        } else {
            u = cp.FeedbackType.FAILURE;
            o = m;
            q = l;
            cp.SubmitInteractions(a, cp.QuestionStatusEnum.INCORRECT, d -
                1)
        }
        o.length > 2 && (n = true);
        a = e != -1 && d == e || f;
        g = e == -1 || d <= e || f;
        if (!c.handled) c.handled = e != -1 && d >= e || f;
        if (n) {
            a || (q = "");
            o = new cp.Feedback(o, q, p, u);
            !p && a && cp.movie.executeAction(q);
            g && o.show()
        } else a && cp.movie.executeAction(q);
        return f
    };
    cp.TEBValidator = function(a) {
        (a = cp.D[a.id]) && cp.vTEB(a.vid)
    };
    cp.hyperlinkClick = function(a) {
        if (a = cp.D[a]) {
            a = a.oca;
            cp.movie.paused && (a = a.replace("cpCmndResume = 1;", ""));
            cp.movie.executeAction(a)
        }
    };
    cp.clickHandler = function(a) {
        cp.clickSuccessHandler(cp.D[a.id])
    };
    cp.ch = function(a) {
        return cp.clickHandler(a)
    };
    cp.wch = function(a) {
        return cp.HandleInteractiveWidget(a)
    };
    cp.SubmitInteractions = function(a, c, d, e, f) {
        var g = cp.D[a],
            k = g.type,
            m = c == cp.QuestionStatusEnum.CORRECT || c == cp.QuestionStatusEnum.PARTIAL_CORRECT;
        if (g) {
            var l = g.siq != void 0 && g.siq;
            if (l) {
                var n = cp.getQuestionObject(a);
                if (n) {
                    if (!cp.movie.playbackController) return;
                    var o = cp.movie.playbackController.GetQuizController();
                    if (!o) return;
                    var q = n.isDisabled,
                        p = false;
                    !o.GetIsInReviewMode() && !o.GetIsQuizCompleted() && n.setCurrentAttempt(d + 1);
                    d = e;
                    if (d == void 0 || f ==
                        void 0)
                        if (!n.getIsInteractiveWidget() && n.getInteractionType() == "fill-in") {
                            f = document.getElementById(a + "_inputField");
                            if (!f) return false;
                            d = g.exp;
                            f = f.value
                        } else {
                            d = ["1"];
                            f = m ? "1" : "0"
                        } n.questionData.cal = d;
                    n.setSelectedAnswers(f);
                    c == cp.QuestionStatusEnum.CORRECT || c == cp.QuestionStatusEnum.PARTIAL_CORRECT ? p =
                        true : n.getCurrentAttempt() >= n.getNumberOfAttempts() && (p = true);
                    n.setShouldAddToTotal(g.sat != void 0 && g.sat);
                    if (!o.GetIsInReviewMode() && !o.GetIsQuizCompleted())
                        if (p) {
                            m ? n.setQuestionStatus(n.QuestionStatusEnum.CORRECT) :
                                n.setQuestionStatus(n.QuestionStatusEnum.INCORRECT);
                            q || n.endQuestion(true)
                        } else n.endQuestion(false)
                }
            }
            a = {
                itemname: a,
                frameNumber: cpInfoCurrentFrame,
                objecttype: k,
                issuccess: m,
                slideNumber: cpInfoCurrentSlideIndex + 1,
                includedInQuiz: l
            };
            if (n) a.questioneventdata = n.getQuestionEventData();
            cp.em.fireEvent("CPInteractiveItemSubmit", a)
        }
    };
    cp.hotspotQuestionSlideHandler = function(a) {
        cp.m_gestureHandler.disableGestures();
        var c = a.currentTarget,
            d = cp.getQuestionObject(c.childNodes[0].id);
        d && d.hotspotQuestionHandler(c,
            getPageX(a), getPageY(a));
        cp.m_gestureHandler.enableGestures()
    };
    cp.handleClickExternal = function(a) {
        function c(a) {
            return cp.kCPOTClickBoxItem == a.type || cp.kCPOTScorableButtonItem == a.type || cp
                .kCPOTAutoShape == a.type
        }

        function d(a, d, e) {
            function f() {
                cp.stopClickTimer();
                k = k + 1;
                g.currentAttempt = k;
                var d = g.ma,
                    e = g.mdi,
                    l = cp.D[e].visible,
                    e = cp.showHideFeedbackCaptionsClickHandler(a, d != -1 && k == d && l, cp.D[e].dn, (d == -
                        1 || k <= d) && l);
                if (c(g) && !g.handled) g.handled = d != -1 && k >= d && l;
                return e
            }
            var g = d,
                k = e;
            cp.isClickTimerRunning() ||
                cp.startClickTimer(500, f)
        }

        function e() {
            n = true;
            if (null == q && (m.ofc || m.ma != -1)) {
                p = o;
                q = m;
                x = s;
                v = u;
                w = currElementDivData
            }
        }
        if (cp.isClickTimerRunning()) return false;
        for (var f = cp.getScaledPosition(getPageX(a), getPageY(a)), g = f.X - window.pageXOffset, k = f.Y -
                window.pageYOffset, m = null, l = cp("div_Slide")
                .childNodes, n = false, o = "", q = null, p = "", u = -1, s = 0, v = -1, x = 0, w = null, y = l
                .length - 1; y >= 0; --y) {
            f = l[y];
            if (f.nodeName == "DIV" && f.style.display == "block") {
                f.id == "feedbackClickDiv" && f.remover();
                if (currElementDivData = cp.D[f.id]) {
                    var B =
                        currElementDivData.mdi;
                    if (cp.D[B].visible && currElementDivData.chfn && void 0 == currElementDivData.val) {
                        B = currElementDivData.mdi;
                        drawingItemDivData = cp.D[B];
                        var s = 0,
                            u = -1,
                            z = currElementDivData.currentAttempt;
                        z != void 0 && (s = z);
                        u = currElementDivData.ma;
                        m = currElementDivData;
                        o = f.id;
                        if (void 0 == m.amc || m.amc || !(cp.device != cp.IDEVICE || cp.device == cp.ANDROID))
                            if (currElementDivData && drawingItemDivData && cp.kCPOTWidgetItem ==
                                currElementDivData.type && drawingItemDivData.iiw) cp.HandleInteractiveWidget(a,
                                B);
                            else {
                                var A = z = B =
                                    0,
                                    F = 0;
                                if (f.getBoundingClientRect == void 0) {
                                    B = parseFloat(f.style.left);
                                    z = parseFloat(f.style.top);
                                    A = parseFloat(f.style.left) + parseFloat(f.style.width);
                                    F = parseFloat(f.style.top) + parseFloat(f.style.height)
                                } else {
                                    var C;
                                    if (f.rotateAngle) {
                                        C = f.style.transform || f.style.msTransform || f.style.MozTransform ||
                                            f.style.WebkitTransform || f.style.OTransform;
                                        cp.applyTransform(f, "rotate(0)")
                                    }
                                    f.offsetHeight = f.offsetHeight;
                                    F = cp.getHitTestingRect(f);
                                    f.rotateAngle && cp.applyTransform(f, C);
                                    B = F.minX;
                                    z = F.minY;
                                    A = F.maxX;
                                    F = F.maxY
                                }
                                var G =
                                    0;
                                if (f.rotateAngle) G = f.rotateAngle;
                                var L = g,
                                    M = k,
                                    L = L - (B + A) / 2,
                                    M = M - (z + F) / 2,
                                    O = L * Math.cos(Math.PI * -G / 180) - M * Math.sin(Math.PI * -G / 180),
                                    G = L * Math.sin(Math.PI * -G / 180) + M * Math.cos(Math.PI * -G / 180),
                                    O = O + (B + A) / 2,
                                    G = G + (z + F) / 2,
                                    B = O >= B && O <= A && G >= z && G <= F ? true : false;
                                if (B) {
                                    if (currElementDivData.iqb || currElementDivData.vid) return true;
                                    if (cp.kCPOTAutoShape == m.type && currElementDivData.isCanvasClicked && !
                                        currElementDivData.isCanvasClicked(a, true)) e();
                                    else {
                                        if (currElementDivData.enabled) {
                                            if (m.actionInProgress) return false;
                                            if (m.dclk ||
                                                m.rclk) {
                                                d(f, m, s);
                                                return false
                                            }
                                            l = m;
                                            if (!l || cp.kCPOTAutoShape != l.type) l = true;
                                            else {
                                                var P = cp.movie.stage.currentSlide,
                                                    g = a = false;
                                                C = 0;
                                                if (P) {
                                                    C = P.from;
                                                    if (P.st == "Question Slide" && P.qs) {
                                                        var K = cp.D[P.qs];
                                                        K && K.qtp == "Hotspot" && (a = true);
                                                        (P = cp.getQuestionObject(P.qs)) && P
                                                            .shouldDisableOptions() && (g = true)
                                                    }
                                                }
                                                l = !a || g ? true : !l.rp || !l.rpa || l.from > C ? false :
                                                    true
                                            }
                                            if (!l) return false;
                                            l = currElementDivData.chfn;
                                            cp.SubmitInteractions(f.id, cp.QuestionStatusEnum.CORRECT, s);
                                            a = cp.movie.stage.currentSlide;
                                            l(f);
                                            if (a == cp.movie.stage.currentSlide &&
                                                c(m)) m.handled = true;
                                            return true
                                        }
                                        n = false;
                                        break
                                    }
                                } else currElementDivData.vid || e()
                            }
                    }
                }
            }
        }
        if (n) {
            if (q) {
                m = q;
                o = p;
                s = x;
                u = v;
                currElementDivData = w
            }
            if (m && m.actionInProgress) return false;
            if (m && !m.iqb) {
                s = s + 1;
                m.currentAttempt = s;
                m.mdi && (K = cp.D[m.mdi]);
                if (K) P = K.dn;
                cp.SubmitInteractions(P, cp.QuestionStatusEnum.INCORRECT, s - 1)
            }
            B = currElementDivData.mdi;
            f = cp.D[B].visible;
            a = u != -1 && s == u && f;
            g = (u == -1 || s <= u) && f;
            C = "";
            m && c(m) && (C = o);
            cp.showHideFeedbackCaptionsClickHandler(l[0], a, C, g);
            if (m && c(m) && !m.handled) m.handled = u != -1 && s >= u &&
                f
        }
        return false
    };
    cp.handleCCClick = function(a) {
        if (cp.DESKTOP == cp.device) {
            var c = document.getElementById("div_Slide");
            if (cp.ccdv) {
                document.getElementById("cc")
                    .style.display = "none";
                c = document.elementFromPoint(a.clientX, a.clientY);
                document.getElementById("cc")
                    .style.display = "block";
                if (a.initMouseEvent) {
                    var d = document.createEvent("MouseEvent");
                    d.initMouseEvent("click", true, true, window, 0, a.screenX, a.screenY, a.clientX, a.clientY,
                        a.ctrlKey, a.altKey, a.shiftKey, a.metaKey, 0, null);
                    c.dispatchEvent(d)
                } else if (document.createEventObject) {
                    d =
                        document.createEventObject(window.event);
                    d.button = 1;
                    c.fireEvent("onclick", d)
                }
            }
        }
    };
    cp.handleClick = function(a) {
        a.preventDefault && a.preventDefault();
        a.stopPropagation && a.stopPropagation();
        if (!cp.handleClickExternal(a)) {
            var c = cp("div_Slide")
                .childNodes[0];
            if (c && c.nodeName == "DIV" && c.style.display == "block") {
                if (cp.getQuestionObjectName) {
                    c = cp.getQuestionObjectName(c.id);
                    (c = cp.D[c]) && c.qtp == "Hotspot" && cp.hotspotQuestionSlideHandler(a)
                }
                if (cp.extObjInfo)
                    for (a = 0; a < cp.extObjInfo.length; ++a)
                        if (cp.IsValidObj(cp.extObjInfo[a].chcb) &&
                            cp.extObjInfo[a].chcb()) break
            }
        }
    };
    cp.showInfoDialog = function() {
        var a = false;
        if (!cp.movie.paused) {
            cp.movie.pause(cp.ReasonForPause.PLAYBAR_ACTION);
            a = true
        }
        var c = cp.infoBgImg,
            d = cp.newElem("div");
        cp.project.appendChild(d);
        d.id = "infoDialog";
        d.style.position = "absolute";
        d.style.backgroundImage = "url(" + c.src + ")";
        var e = cp.D.project.w,
            f = cp.D.project.h;
        if (cp.responsive) {
            f = cp("div_Slide");
            e = f.clientWidth;
            f = f.clientHeight > window.innerHeight ? window.innerHeight : f.clientHeight
        }
        d.style.left = (e - c.width) / 2 + "px";
        d.style.top =
            (f - c.height) / 2 + "px";
        d.style.width = c.width + "px";
        d.style.height = c.height + "px";
        d.style.zIndex = 1E4;
        c = cp.newElem("div");
        cp.registerGestureEvent(c, cp.GESTURE_EVENT_TYPES.TAP, function() {
            cp.project.removeChild(d);
            a && cp.movie.play()
        });
        c.style.cursor = "pointer";
        c.style.backgroundColor = "#ffffff";
        c.style.opacity = 0;
        c.style.left = "170px";
        c.style.top = "5px";
        c.style.width = "15px";
        c.style.height = "15px";
        c.style.position = "absolute";
        c.style.display = "block";
        c.style.zIndex = 1E4;
        d.appendChild(c);
        c = cp.newElem("div");
        e = "<ul style='padding-left:15px;padding-right:15px;padding-top:20px;list-style-type: none;text-indent: 0em;'>" +
            ("<li style='overflow:hidden'>" + cpInfoAuthor + "</li>");
        e = e + ("<li style='overflow:hidden'>" + cpInfoCompany + "</li>");
        e = e + ("<li style='overflow:hidden;cursor:pointer;' onclick='cp.sendEmail(\"" + cpInfoEmail +
            "\")'>" + cpInfoEmail + "</li>");
        f = "http://";
        f = cpInfoWebsite.indexOf("://") == -1 ? f + cpInfoWebsite : cpInfoWebsite;
        e = e + ("<li style='overflow:hidden;cursor:pointer;' onclick='cp.openURL(\"" + f + "\")'>" +
            cpInfoWebsite + "</li>");
        e = e + ("<li style='overflow:hidden'>" + cpInfoCopyright + "</li>");
        c.innerHTML = e + "</ul>";
        d.appendChild(c);
        c = cp.newElem("div");
        cp.registerGestureEvent(c, cp.GESTURE_EVENT_TYPES.TAP, function() {
            cp.openURL("http://www.adobe.com/products/captivate")
        });
        c.style.cursor = "pointer";
        c.style.backgroundColor = "#ffffff";
        c.style.opacity = 0;
        c.style.left = "10px";
        c.style.bottom = "10px";
        c.style.width = "170px";
        c.style.height = "25px";
        c.style.position = "absolute";
        c.style.display = "block";
        d.appendChild(c)
    };
    cp.toggleMute = function() {
        cp.movie.am.muted ? cp.movie.am.mute(false) : cp.movie.am.mute(true);
        cp.movie.vdm.muted ? cp.movie.vdm.mute(false) :
            cp.movie.vdm.mute(true);
        cp.em.fireEvent("CPMovieAudioMute", cp.movie.am.muted)
    };
    cp.playbarMoved = function() {
        cpCmndPlaybarMoved = 1
    };
    cp.showHideElements = function() {
        cp("blockUserInteraction")
            .style.display = "none";
        cp.autoplayDiv.style.display = "none";
        cp.autoplayDiv.style.visibility = "hidden";
        if (cp.loadedModules.playbar) document.getElementById("playbar")
            .style.display = "block";
        var a = document.getElementById("firstSlideSnapshot");
        if (a) a.style.display = "none";
        if (cp.gesturesDiv) {
            cp.gesturesDiv.style.display = "none";
            cp.gesturesDiv.parentElement.removeChild(cp.gesturesDiv)
        }
        if (cp("gImage")) cp("gImage")
            .className = "";
        if (cp("gestureHint")) {
            cp("gestureHint")
                .style.position = "absolute";
            cp("gestureHint")
                .style["background-color"] = ""
        }
    };
    cp.beginMovie = function() {
        cp.showHideElements();
        1 == cpInfoCurrentFrame && cp.movie.am.play(1, true);
        cp.movie.play()
    };
    cp.InitMedia = function() {
        cp.movie.vdm.deviceSpecificInit();
        cp.movie.am.deviceSpecificInit()
    };
    cp.playMovie = function() {
        cp.movie.play()
    };
    cp.pauseMovie = function() {
        cp.movie.pause()
    };
    cp.mouse_click_draw = function(a, c) {
        var d = "#000000",
            e = 3;
        if (void 0 != c.c) {
            d = c.c;
            e = c.r
        }
        a.save();
        a.fillStyle = d;
        a.beginPath();
        a.arc(e, e, e, 0, Math.PI * 2, true);
        a.closePath();
        a.fill();
        a.restore();
        return true
    };
    cp.mcd = function(a, c, d, e, f) {
        return cp.mouse_click_draw(a, c, d, e, f)
    };
    cp.tcd = function(a, c, d, e, f, g, k) {
        if (!(f <= 0 || g <= 0)) {
            a.clearRect(d, e, f, g);
            a.translate(d, e);
            var e = c.width,
                d = c.height,
                m = e > f,
                l = d > g,
                n = m ? f : e,
                o = l ? g : d;
            a.drawImage(c, 0, 0, Math.ceil(n / 2), Math.ceil(o / 2), 0, 0, Math.ceil(n / 2), Math.ceil(o / 2));
            a.drawImage(c, Math.floor(e -
                n / 2), 0, Math.ceil(n / 2), Math.ceil(o / 2), Math.floor(f - n / 2), 0, Math.ceil(n /
                2), Math.ceil(o / 2));
            a.drawImage(c, 0, Math.floor(d - o / 2), Math.ceil(n / 2), Math.ceil(o / 2), 0, Math.floor(g - o /
                2), Math.ceil(n / 2), Math.ceil(o / 2));
            a.drawImage(c, Math.floor(e - n / 2), Math.floor(d - o / 2), Math.ceil(n / 2), Math.ceil(o / 2),
                Math.floor(f - n / 2), Math.floor(g - o / 2), Math.ceil(n / 2), Math.ceil(o / 2));
            a.save();
            a.shadowColor = cp.ConvertRGBToRGBA("#ffffff", "1");
            a.shadowOffsetX = 0;
            a.shadowOffsetY = 0;
            a.shadowBlur = 0;
            a.drawImage(c, 0, 0, Math.ceil(n / 2), Math.ceil(o /
                2), 0, 0, Math.ceil(n / 2), Math.ceil(o / 2));
            a.drawImage(c, Math.floor(e - n / 2), 0, Math.ceil(n / 2), Math.ceil(o / 2), Math.floor(f - n / 2),
                0, Math.ceil(n / 2), Math.ceil(o / 2));
            a.drawImage(c, 0, Math.floor(d - o / 2), Math.ceil(n / 2), Math.ceil(o / 2), 0, Math.floor(g - o /
                2), Math.ceil(n / 2), Math.ceil(o / 2));
            a.drawImage(c, Math.floor(e - n / 2), Math.floor(d - o / 2), Math.ceil(n / 2), Math.ceil(o / 2),
                Math.floor(f - n / 2), Math.floor(g - o / 2), Math.ceil(n / 2), Math.ceil(o / 2));
            a.fillStyle = "rgba(" + k[0] + "," + k[1] + "," + k[2] + "," + k[3] + ")";
            k = m ? f : e;
            n = l ? g : d;
            a.fillRect(Math.floor(k /
                2), Math.floor(n / 2), f - k + 1, g - n + 1);
            k = 3;
            m = !m ? e / 2 : f / 2;
            l = !l ? d / 2 : g / 2;
            for (n = Math.floor(d - l - 1) - 1; n < g - l;) {
                o = g - n;
                o < k && (k = o);
                var o = 0,
                    q = l - 1,
                    p = m,
                    k = l - 1 + k,
                    p = Math.ceil(p - o),
                    k = Math.ceil(k - q);
                a.drawImage(c, Math.floor(o), Math.floor(q), p, k, 0, n, p, k);
                o = e - m;
                p = e;
                p = Math.ceil(p - o);
                a.drawImage(c, Math.floor(o), Math.floor(q), p, k, Math.floor(f - m), n, p, k);
                k = g - n < 3 ? g - n : 3;
                k <= 0 && (k = 1);
                n = n + (k - 1)
            }
            k = 3;
            for (e = Math.floor(m) - 1; e < f - m;) {
                n = f - e;
                n < k && (k = n);
                o = m - 1;
                q = 0;
                p = m - 1 + k;
                k = l;
                p = Math.ceil(p - o);
                k = Math.ceil(k - q);
                a.drawImage(c, Math.floor(o), q, p, k,
                    e, 0, p, k);
                q = d - l;
                k = Math.ceil(l);
                a.drawImage(c, Math.floor(o), Math.floor(q), p, k, e, Math.floor(g - l), p, k);
                k = f - e < 3 ? f - e : 3;
                k <= 0 && (k = 1);
                e = e + (k - 1)
            }
            a.restore()
        }
    };
    cp.getIntersectionRect = function(a, c) {
        var d = a[0] + a[2],
            e = a[1] + a[3],
            f = c[0] + c[2],
            g = c[1] + c[3],
            k = {
                l: 0,
                t: 0,
                w: 0,
                h: 0
            };
        if (d < c[0] || e < c[1] || a[0] > f || a[1] > g) return k;
        k.l = a[0] > c[0] ? a[0] : c[0];
        k.t = a[1] > c[1] ? a[1] : c[1];
        k.w = (d < f ? d : f) - k.l;
        k.h = (e < g ? e : g) - k.t;
        return k
    };
    cp.frameset_mc_draw = function(a, c, d, e, f, g, k) {
        if (c == "") return true;
        var m = false;
        a.save();
        var l = cp.D[f];
        if (l.shouldShowDisabledState) a.globalAlpha =
            0.5;
        var n = cp.movie.im.images[c];
        try {
            if (n)
                if (n.complete && n.nativeImage.complete) {
                    cp.verbose && cp.log("drawing completed img " + c);
                    if (a.centreImage && (g || k))
                        if (cp.responsive) {
                            a.clearRect(-a.width, -a.height, 2 * a.width, 2 * a.height);
                            var o = l.clientWidth,
                                q = l.clientHeight;
                            cp.isCaptionItem(l.type) ? cp.tcd(a, n.nativeImage, -o / 2 + a.tex, -q / 2 + a.tey,
                                o, q, l.pixelColor) : a.crop ? a.drawImage(n.nativeImage, a.crop.x, a.crop
                                .y, o, q, -o / 2 + a.tex, -q / 2 + a.tey, o, q) : a.drawImage(n.nativeImage,
                                -o / 2 + a.tex, -q / 2 + a.tey, o, q)
                        } else {
                            a.clearRect(-a.width,
                                -a.height, 2 * a.width, 2 * a.height);
                            a.drawImage(n.nativeImage, -n.nativeImage.width / 2 + a.tex, -n.nativeImage.height /
                                2 + a.tey, n.nativeImage.width, n.nativeImage.height)
                        }
                    else if (cp.responsive)
                        if (cp.isCaptionItem(l.type)) cp.tcd(a, n.nativeImage, 0, 0, l.clientWidth, l
                            .clientHeight, l.pixelColor);
                        else if (a.crop) {
                        var p = [a.crop.x, a.crop.y, l.clientWidth, l.clientHeight],
                            u = cp.getIntersectionRect([0, 0, n.nativeImage.width, n.nativeImage.height], p);
                        p[0] = a.crop.x < 0 ? -a.crop.x : 0;
                        p[1] = a.crop.y < 0 ? -a.crop.y : 0;
                        a.drawImage(n.nativeImage,
                            u.l, u.t, u.w, u.h, p[0], p[1], u.w, u.h)
                    } else a.drawImage(n.nativeImage, 0, 0, l.clientWidth, l.clientHeight);
                    else a.drawImage(n.nativeImage, 0, 0);
                    m = true;
                    if (d) {
                        cp.verbose && cp.log("hiding1 " + c);
                        cp.hide(d)
                    } else if (!e) {
                        cp.verbose && cp.log("hiding2 " + c);
                        cp.hide(f)
                    }
                } else cp.exceptionalLogs && !cp.responsive && console.log(
                    "**** drawing failed. img incomplete " + c);
            else c && cp.exceptionalLogs && !cp.responsive && console.log(
                "***** drawing failed. img not found " + c)
        } catch (s) {
            console.log("***** drawing failed. img not found " +
                c)
        }
        return m
    };
    cp.fd = function(a, c, d, e, f, g, k) {
        return cp.frameset_mc_draw(a, c, d, e, f, g, k)
    };
    cp.setMovieLeftTopRightBottom = function(a, c, d, e) {
        if (!cp.responsive) {
            var f = cp.getProjectContainer();
            f.style.width = parseFloat(f.style.width) + a + d + "px";
            f.style.height = parseFloat(f.style.height) + c + e + "px";
            var g = cp.getMainContainer(),
                k = (cp.getInnerWidth() - parseFloat(g.style.width)) / 2;
            g.style.left = (k > 0 ? k : 0) + "px";
            g = cp.getProject();
            cp.movie.topOffset = cp.movie.topOffset + (c + parseFloat(f.style.top));
            g.style.top = c + "px";
            g.style.left =
                parseFloat(g.style.left) + a + "px";
            cp.loadedModules.toc && cp.tocInit(cp.D, a, c, d, e);
            cp.updateBorderPosition(cp.D);
            cp.adjustWindow()
        }
    };
    cp.setCCPosition = function(a) {
        cp.movie.cc.style["pointer-events"] = "auto";
        cp.movie.cc.style.left = cp.project.style.left;
        cp.responsive ? cp.movie.cc.style.top = cp("project")
            .clientHeight - cp.movie.cc.clientHeight + "px" : cp.movie.cc.style.bottom = a + "px"
    };
    cp.ConvertRGBToRGBA = function(a, c) {
        return a.replace(")", " ," + (c + "") + ")")
            .replace("rgb", "rgba")
    };
    cp.ConvertColorToRGBA = function(a, c) {
        return "rgba(" +
            parseInt(a.substr(1, 2), 16) + " ," + parseInt(a.substr(3, 2), 16) + " ," + parseInt(a.substr(5, 2),
                16) + " ," + c + ")"
    };
    cp.getAngleFromRotateStr = function(a) {
        a = a.replace("rotate(", "");
        return parseFloat(a.replace("deg)", ""))
    };
    cp.applyTransform = function(a, c) {
        a.style.transform = c;
        a.style.msTransform = c;
        a.style.MozTransform = c;
        a.style.WebkitTransform = c;
        a.style.OTransform = c
    };
    cp.applyShadow = function(a, c, d) {
        a.style.mozBoxShadow = c;
        a.style.webkitBoxShadow = c;
        a.style.boxShadow = c;
        if (d) {
            var e = c.a * Math.PI / 180,
                d = cp.getRoundedValue(c.d *
                    Math.cos(e)),
                e = cp.getRoundedValue(c.d * Math.sin(e));
            a.style.textShadow = d + "px " + e + "px " + c.b + "px " + c.c
        }
    };
    cp.setFillStrokeStyle = function(a, c, d, e) {
        var f = c.getContext("2d");
        if (a.gf) {
            if (a.gf.t == 0) switch (a.gf.di) {
                case 0:
                    c = f.createLinearGradient(0, c.height / 2, c.width, c.height / 2);
                    break;
                case 1:
                    c = f.createLinearGradient(c.width, c.height / 2, 0, c.height / 2);
                    break;
                case 2:
                    c = f.createLinearGradient(0, 0, c.width, c.height);
                    break;
                case 3:
                    c = f.createLinearGradient(c.width, c.height, 0, 0);
                    break;
                case 5:
                    c = f.createLinearGradient(c.width /
                        2, c.height, c.width / 2, 0);
                    break;
                case 6:
                    c = f.createLinearGradient(0, c.height, c.width, c.height);
                    break;
                case 7:
                    c = f.createLinearGradient(c.width, c.height, 0, c.height);
                    break;
                default:
                case 4:
                    c = f.createLinearGradient(c.width / 2, 0, c.width / 2, c.height)
            } else {
                var g = 0;
                switch (a.gf.di) {
                    case 0:
                        c = f.createRadialGradient(c.width / 2, c.height / 2, 0, c.width, c.height / 2, c
                            .width / 2);
                        break;
                    case 2:
                        g = c.width < c.height ? c.width : c.height;
                        c = f.createRadialGradient(0, 0, 0, g, 0, g);
                        break;
                    case 3:
                        c = f.createRadialGradient(c.width / 2, 0, 0, c.width / 2, c.height,
                            c.height);
                        break;
                    case 4:
                        g = c.width < c.height ? c.width : c.height;
                        c = f.createRadialGradient(c.width, 0, 0, c.width, g, g);
                        break;
                    case 5:
                        c = f.createRadialGradient(c.width, c.height / 2, 0, 0, c.height / 2, c.width);
                        break;
                    case 6:
                        g = c.width < c.height ? c.width : c.height;
                        c = f.createRadialGradient(c.width, c.height, 0, c.width - g, c.height - g, g);
                        break;
                    case 7:
                        c = f.createRadialGradient(c.width / 2, c.height, 0, c.width / 2, 0, c.height);
                        break;
                    case 8:
                        g = c.width < c.height ? c.width : c.height;
                        c = f.createRadialGradient(0, c.height, 0, g, c.height, g);
                        break;
                    case 9:
                        c =
                            f.createRadialGradient(0, c.height / 2, 0, c.width, c.height / 2, c.width);
                        break;
                    default:
                    case 4:
                        c = f.createRadialGradient(c.width / 2, c.height / 2, 0, c.width, c.height, Math
                            .sqrt(c.width * c.width + c.height * c.height))
                }
            }
            for (g = 0; g < a.gf.cs.length; ++g) {
                var k = a.gf.cs[g],
                    m = cp.getRGBA(k.c, k.o);
                c.addColorStop(k.p / 100, m)
            }
            d ? f.strokeStyle = c : f.fillStyle = c
        } else d ? f.strokeStyle = a.bc : f.fillStyle = a.bc;
        if (!e) f.globalAlpha = a.alpha / 100
    };
    cp.loadjscssfile = function(a, c, d) {
        var e;
        if (c == "js") {
            e = document.createElement("script");
            e.setAttribute("type",
                "text/javascript");
            e.setAttribute("src", a);
            e.onload = d
        } else if (c == "css") {
            e = document.createElement("link");
            e.setAttribute("rel", "stylesheet");
            e.setAttribute("type", "text/css");
            e.setAttribute("href", a);
            e.onload = d;
            var f = document.styleSheets.length,
                g = setInterval(function() {
                    if (document.styleSheets.length > f) {
                        clearInterval(g);
                        d()
                    }
                }, 50)
        }
        e != void 0 && document.getElementsByTagName("head")[0].appendChild(e);
        return e
    };
    cp.CPPlayButtonHandle = function(a) {
        var c;
        if (a.keyCode) c = a.keyCode;
        else if (a.which) c = a.which;
        c ==
            32 && cp.movie.play()
    };
    cp.ccInit = function(a) {
        if (cp.ccdv) {
            var c = cp.ccdv;
            c.style.width = a.w + "px";
            c.style.height = a.h + "px";
            var d = c.firstElementChild;
            d.style.backgroundColor = cp.ConvertColorToRGBA(a.c, a.o / 100);
            d.style.fontFamily = a.f;
            d.style.fontSize = a.fs + "px";
            d.style.color = a.tc;
            cp.movie.ccText = d.firstElementChild;
            cp.movie.ccLines = a.lc;
            a = cp.getProject();
            c.style.left = a.style.left;
            c.style.bottom = "0px"
        }
    };
    cp.handleVariablesInURLParams = function() {
        var a = window.location.toString();
        if (a.indexOf("?") != -1)
            for (var a =
                    a.split("?")[1].split("&"), c = 0; c < a.length; ++c) {
                var d = a[c];
                if (d.indexOf("=") != -1) {
                    d = d.split("=");
                    cp.vm.setVariableValue(d[0], unescape(d[1]), false)
                }
            }
    };
    cp.getInnerWidth = function() {
        cp.offsetInnerWidth = !window.innerWidth || window.innerWidth == 0 ? 640 : window.innerWidth;
        return cp.offsetInnerWidth
    };
    cp.getProjectContainer = function() {
        if (!cp.projectContainer) cp.projectContainer = cp("project_container");
        return cp.projectContainer
    };
    cp.getMainContainer = function() {
        if (!cp.mainContainer) cp.mainContainer = cp("main_container");
        return cp.mainContainer
    };
    cp.getProject = function() {
        if (!cp.project) cp.project = cp("project");
        return cp.project
    };
    cp.adjustProjectHeight = function(a) {
        if (cp.responsive && a) {
            var c = cp.D[a.mdi].css,
                a = c[cp.ResponsiveProjWidth];
            cp.RespDefaultBptH = parseFloat(c[cp.RespDefaultBptW].h);
            if (parseFloat(cp("project")
                    .style.height) != a.h) cp("project")
                .style.height = a.h;
            c = cp("project")
                .clientHeight;
            c = c > 0 ? c : parseFloat(a.h);
            a = cp("playbar")
                .clientHeight;
            cp.PB && (cp.PB.MP && cp.PB.MP.PBP && cp.PB.MP.PBP.showOnHover && cp("playbar")
                    .animator) &&
                (a = 0);
            cp("project_container")
                .style.height = c + a + "px";
            if (cp("project_container")
                .clientHeight > window.innerHeight) {
                cp("main_container")
                    .style.height = c + a + "px";
                cp("cpDocument")
                    .style.height = c + a + "px"
            } else {
                cp("main_container")
                    .style.height = "100%";
                cp("cpDocument")
                    .style.height = "100%"
            }
        }
    };
    cp.adjustSkins = function(a) {
        if (cp.responsive) {
            if (a == void 0) a = cp.ReasonForDrawing.kOrientationChangeOrResize;
            var c = cp("project"),
                d = cp("playbar");
            if (cp.PB && cp.PB.playbarCreated) {
                cp.PB.rootObj && (cp.PB.rootObj.layoutPlaybar && a ==
                    cp.ReasonForDrawing.kOrientationChangeOrResize) && cp.PB.rootObj.layoutPlaybar(true, c
                    .clientWidth);
                if (cp.responsive) {
                    a = c.clientHeight + d.clientHeight;
                    d.style.bottom = a < window.innerHeight && c.clientHeight > 0 ? window.innerHeight - a +
                        "px" : "0px";
                    d.style.left = c.style.left;
                    a = d.animator;
                    if (cp.PB && cp.PB.MP && cp.PB.MP.PBP && cp.PB.MP.PBP.showOnHover && a) {
                        a.resetStartEndValForResponsive();
                        d.style.bottom = "";
                        if (a.playbarHidden) {
                            d.style.bottom = "";
                            d.style.top = cp("div_Slide")
                                .getBoundingClientRect()
                                .bottom + "px"
                        } else {
                            d.style.top =
                                "";
                            d.style.bottom = "0px"
                        }
                        d.style.position = "absolute"
                    } else d.style.position = "fixed";
                    d.style.transform = "scale(1)"
                }
            }
            cp.toc && (cp.toc.tocCreated && cp.toc.rootObj) && cp.toc.rootObj.adjustTOC();
            if (cp.movie.cc) {
                cp("cc")
                    .style.width = c.clientWidth + "px";
                cp.setCCPosition(d.clientHeight)
            }
            if (cp.playImage) {
                c = lPlayButtonT = 0;
                c = cp.project.clientWidth > window.innerWidth ? (window.innerWidth - cp.playImage
                    .clientWidth) / 2 : (cp.project.clientWidth - cp.playImage.clientWidth) / 2;
                lPlayButtonT = cp.project.clientHeight > window.innerHeight ?
                    (window.innerHeight - cp.playImage.clientHeight) / 2 : (cp.project.clientHeight - cp
                        .playImage.clientHeight) / 2;
                cp.playImage.style.left = c + "px";
                cp.playImage.style.top = lPlayButtonT + "px"
            }
            if (cp.autoplayImage) {
                cp.autoplayImage.style.left = (cp.project.clientWidth - cp.movie.autoplayimagew) / 2 + "px";
                cp.autoplayImage.style.top = (cp.project.clientHeight - cp.movie.autoplayimageh) / 2 + "px"
            }
        }
    };
    cp.getCurrentBreakpointWidth = function(a) {
        var c = cp.responsiveWidths.length;
        if (a <= cp.responsiveWidths[0]) return cp.responsiveWidths[0];
        if (a >=
            cp.responsiveWidths[cp.responsiveWidths.length - 1]) return cp.responsiveWidths[cp.responsiveWidths
            .length - 1];
        for (var d = 0; d <= c - 1; ++d)
            if (a <= cp.responsiveWidths[d]) return cp.responsiveWidths[d]
    };
    cp.updateResponsiveGlobals = function() {
        if (cp.responsive && cp.responsiveWidths && !(cp.responsiveWidths.length <= 0)) {
            var a = window.innerWidth;
            cp.RespDefaultBptW = cp.responsiveWidths[cp.responsiveWidths.length - 1];
            cp.ResponsiveProjWidth = cp.getCurrentBreakpointWidth(a);
            if (cp.responsiveMaxWidth == void 0) cp.responsiveMaxWidth =
                cp.D.project.maxWidth
        }
    };
    cp.adjustResponsiveItems = function(a) {
        if (cp.responsive) {
            if (a == void 0) a = cp.ReasonForDrawing.kOrientationChangeOrResize;
            var c = cp.movie.stage.getCurrentSlideInteractionManager();
            c && c.saveResponsiveInteractionState(a);
            var d = cp.ResponsiveProjWidth;
            cp.updateResponsiveGlobals();
            var e = window.innerWidth;
            if (cp.responsiveMaxWidth && window.innerWidth > cp.responsiveMaxWidth) {
                if (parseFloat(cp("project_container")
                        .style.width) != cp.ResponsiveProjWidth) cp("project_container")
                    .style.width = cp.ResponsiveProjWidth +
                    "px";
                cp("project_container")
                    .style.left = (e - cp.ResponsiveProjWidth) / 2 + "px"
            } else {
                cp("project_container")
                    .style.width = "100%";
                cp("project_container")
                    .style.left = "0px"
            }
            var f = cp.movie.stage.currentSlide,
                e = cp.movie.stage.getSlideIndexForFrame(cpInfoCurrentFrame);
            if (!f) {
                f = cp.movie.stage.getSlideNameForIndex(e);
                f = cp.D[f]
            }
            cp.adjustProjectHeight(f);
            cp.setupSlideBGDivAndCanvasInternal(f, cp.movie.stage.getSlideDiv());
            cp.adjustSkins(a);
            y && (y[cp.ITEMDRAWINGCOMPLETEEVENT] = []);
            a == cp.ReasonForDrawing.kOrientationChangeOrResize &&
                cp.movie.pm.loadSlideAssets(cpInfoCurrentSlideIndex);
            var f = true,
                g;
            for (g in G) {
                var k = G[g];
                if (k && k.isStarted && k.drawForResponsive) {
                    k.saveState && k.saveState(d);
                    k.drawForResponsive(true, cp.ReasonForDrawing.kOrientationChangeOrResize);
                    var m = k.element ? cp.D[k.element.id] : void 0;
                    if (m) {
                        var l = k.getAttribute("css");
                        if (!l) continue;
                        l = cp.getResponsiveCSS(l);
                        if (!l) continue;
                        var n = l.ipiv;
                        if (k.visible) {
                            l = cp.D[m.dn];
                            !l && m.actid && (l = cp.D[m.actid]);
                            if (!l) continue;
                            if (n) {
                                if (k.type == cp.kCPOTVideo && k.nativeVideo) k.nativeVideo.style.display =
                                    "block";
                                if (k.element)(m = k.element.firstElementChild) && m.tagName == "VIDEO" && this
                                    .started == true && (this.ended == false && this.paused == false) && k
                                    .play();
                                l.ia && cp.movie.am.showHideObjectAudio(l.ia, true);
                                l.iea && cp.movie.am.playPauseEventAudio(l.iea, true)
                            } else {
                                if (k.type == cp.kCPOTVideo) {
                                    if (k.nativeVideo) k.nativeVideo.style.display = "none";
                                    k.pause && k.pause()
                                }
                                l.ia && cp.movie.am.showHideObjectAudio(l.ia, false);
                                l.iea && cp.movie.am.playPauseEventAudio(l.iea, false)
                            }
                        }
                    }
                    f = f && k.isDrawn
                }
            }
            d = cp.movie.stage.currentSlide;
            g = false;
            if (d)
                if (g = d.st == "Question Slide") {
                    (d = cp.getQuestionObject(d.qs)) && d.adjustCustomObjects && d.adjustCustomObjects();
                    d && d.updateCustomReviewAreaTransforms && d.updateCustomReviewAreaTransforms()
                } cp.movie.stage.forEachChild(cp.updateVariableTextBounds, true);
            cpInfoCurrentFrame && cp.movie.stage.syncMotionToFrame(cpInfoCurrentFrame, true);
            c && c.adjustResponsiveInteraction(a);
            f || cp.movie.pm.loadSlideAssets(e)
        }
    };
    cp.getCurrentSlideResponsiveHeight = function(a) {
        if (cp.responsive) {
            var c = void 0;
            if (!cp.movie || !cp.movie.stage) {
                c =
                    cp.D.project_main.slides.split(",")[0];
                c = cp.D[c]
            } else {
                c = cp.movie.stage.currentSlide;
                if (!c) {
                    c = cp.movie.stage.getSlideIndexForFrame(cpInfoCurrentFrame);
                    c = cp.movie.stage.getSlideNameForIndex(c);
                    c = cp.D[c]
                }
            }
            a = cp.D[c.mdi].css[cp.getCorrectBreakpoint(a)];
            c = cp("playbar")
                .clientHeight;
            cp.PB && (cp.PB.MP && cp.PB.MP.PBP && cp.PB.MP.PBP.showOnHover) && (c = 0);
            return parseFloat(a.h) + c
        }
    };
    cp.adjustWindow = function(a) {
        if (cp.useg && cp.gesturesDiv) cp.gesturesDiv.style.position = cp.responsive || window.innerWidth < cp.D
            .project.w ?
            "fixed" : "absolute";
        if (cp.playImage) {
            cp.playImage.style.left = cp.D.project.w <= window.innerWidth || cp.shouldScale ? (cp.D.project.w -
                96) / 2 + "px" : (window.innerWidth - 96) / 2 + "px";
            cp.playImage.style.top = cp.D.project.h <= window.innerHeight || cp.shouldScale ? (cp.D.project.h -
                96) / 2 + "px" : (window.innerHeight - 96) / 2 + "px"
        }
        if (cp.autoplayImage) {
            cp.autoplayImage.style.left = (cp.D.project.w - cp.movie.autoplayimagew) / 2 + "px";
            cp.autoplayImage.style.top = (cp.D.project.h - cp.movie.autoplayimageh) / 2 + "px"
        }
        var c = cp("playbar");
        if (cp.responsive &&
            cp.device != cp.DESKTOP)
            if (cp.movie && cp.movie.stage) {
                var d = cp.movie.stage.currentSlide;
                if (!d) var e = cp.movie.stage.getSlideIndexForFrame(cpInfoCurrentFrame),
                    e = cp.movie.stage.getSlideNameForIndex(e),
                    d = cp.D[e];
                e = cp.getCurrentBreakpointWidth(window.innerWidth);
                if (d)
                    if (d = cp.D[d.mdi])
                        if (d = d.css)
                            if (e = d[e]) {
                                e = parseFloat(e.h) + c.clientHeight;
                                c.style.position = "fixed";
                                c.style.bottom = e >= window.innerHeight ? "0px" : window.innerHeight - e + "px"
                            }
            } else {
                c.style.bottom = "0px";
                c.style.position = "fixed"
            } a = a ? a.type : a;
        if (a == "resize") {
            cp.em.fireEvent("CPWindowResized");
            if (cp.device != cp.DESKTOP) {
                if (cp.isTextInputInFocus()) {
                    if (cp.device != cp.IDEVICE) {
                        e = document.activeElement;
                        a = cp.getMainContainer();
                        a.style.position = "absolute";
                        document.body.style.overflow = "scroll";
                        e = t = 0;
                        if (!cp.responsive) {
                            e = parseFloat(a.parentElement.parentElement.style.left);
                            t = parseFloat(a.parentElement.parentElement.style.top);
                            window.scrollTo(e, t)
                        }
                        if (cp.responsive) {
                            c.style.top = cp.project.clientHeight + "px";
                            c.style.position = "absolute";
                            c.offsetHeight = c.offsetHeight
                        }
                    } else if (cp.responsive) {
                        var f = document.activeElement.onblur;
                        document.activeElement.onblur = function(a) {
                            setTimeout(
                                "cp.adjustSkins();if(cp.m_gestureHandler){cp.m_gestureHandler.fitMovie();}",
                                500);
                            f && f(a)
                        }
                    }
                    return
                }
                if (cp.responsive) {
                    c.style.top = "";
                    c.style.position = "fixed";
                    c.offsetHeight = c.offsetHeight;
                    if (cp("div_Slide")
                        .scaleFactor != 1) return;
                    setTimeout(
                        "window.scrollTo(0,0);cp.adjustResponsiveItems();cp.em.fireEvent('CPWindowResizeCompleted');",
                        500);
                    return
                }
            }
        } else {
            (e = document.activeElement) && (e.tagName.toLowerCase() == "input" && e.type == "text" || e.tagName
                .toLowerCase() ==
                "textarea") && e.blur();
            cp.em.fireEvent("CPOrientationChanged")
        }
        window.scrollTo(0, 0);
        if (cp.responsive) cp.adjustResponsiveItems();
        else {
            if (!cp.SetScaleAndPosition()) {
                cp.getInnerWidth();
                var c = cp.getMainContainer(),
                    e = cp.getProjectContainer(),
                    d = cp.getProject(),
                    g = (cp.offsetInnerWidth - parseFloat(c.style.width)) / 2;
                c.style.left = (g > 0 ? g : 0) + "px";
                cp.movie.offset = (g > 0 ? g : 0) + (cp.movie.m_scaleFactor ? cp.movie.m_scaleFactor : 1) * (
                    parseFloat(d.style.left) + parseFloat(e.style.left))
            }
            if (cp.useg && cp.gesturesDiv && cp.shouldScale &&
                cp.movie && cp.movie.virgin) {
                cp.gesturesDiv.style.display = "none";
                setTimeout('cp.gesturesDiv.style.display = "block";', 500)
            }
            cp("blockUserInteraction")
                .style.width = "100%";
            cp("blockUserInteraction")
                .style.height = "100%"
        }
        a == "resize" ? cp.em.fireEvent("CPWindowResizeCompleted") : cp.em.fireEvent(
            "CPOrientationChangeCompleted")
    };
    cp.getOffsetPosition = function(a, c) {
        var d = {};
        d.X = a - cp.movie.offset;
        d.Y = c - cp.movie.topOffset;
        return d
    };
    cp.getScaledPosition = function(a, c) {
        if (cp.responsive) return {
            X: a,
            Y: c
        };
        var d = {};
        if (!cp.shouldScale) return cp.getOffsetPosition(a,
            c);
        var e = (c - cp.movie.newMainContainerT) / cp.movie.newMainContainerH,
            f = Math.round(cp.movie.oldMainContainerW * ((a - cp.movie.newMainContainerL) / cp.movie
                .newMainContainerW)),
            e = Math.round(cp.movie.oldMainContainerH * e),
            g = cp.getProjectContainer(),
            k = cp.getProject();
        d.X = f - parseFloat(g.style.left) - parseFloat(k.style.left);
        d.Y = e - parseFloat(g.style.top) - parseFloat(k.style.top);
        return d
    };
    cp.SetScaleAndPosition = function() {
        var a = cp.getMainContainer(),
            c = window,
            d = c.innerWidth,
            c = c.innerHeight;
        cp.movie.oldMainContainerW =
            parseFloat(a.style.width);
        cp.movie.oldMainContainerH = parseFloat(a.style.height);
        var e = cp.movie.oldMainContainerW == void 0 || cp.movie.oldMainContainerW == 0 ? 1 : d / cp.movie
            .oldMainContainerW,
            f = cp.movie.oldMainContainerH == void 0 || cp.movie.oldMainContainerH == 0 ? 1 : c / cp.movie
            .oldMainContainerH;
        cp.movie.m_scaleFactor = 1;
        if (!cp.shouldScale) return false;
        cp.movie.m_scaleFactor = e < f ? e : f;
        if (cp.verbose) {
            cp.log(cp.D.project.shc);
            cp.log(cp.movie.m_scaleFactor);
            cp.log(cp.shouldScale)
        }
        cp.movie.newMainContainerW = Math.round(cp.movie.m_scaleFactor *
            cp.movie.oldMainContainerW);
        cp.movie.newMainContainerH = Math.round(cp.movie.m_scaleFactor * cp.movie.oldMainContainerH);
        cp.movie.oldMainContainerL = parseFloat(a.style.left);
        cp.movie.oldMainContainerT = parseFloat(a.style.top);
        a.style.webkitTransformOrigin = "left top";
        a.style.MozTransformOrigin = "left top";
        a.style.msTransformOrigin = "left top";
        cp.movie.newMainContainerL = Math.round((d - cp.movie.newMainContainerW) / 2 > 0 ? (d - cp.movie
            .newMainContainerW) / 2 : 0);
        cp.movie.newMainContainerT = Math.round((c - cp.movie.newMainContainerH) /
            2 > 0 ? (c - cp.movie.newMainContainerH) / 2 : 0);
        a.style.left = cp.movie.newMainContainerL + "px";
        a.style.top = cp.movie.newMainContainerT + "px";
        cp.getProjectContainer();
        cp.getProject();
        cp.movie.offset = cp.movie.newMainContainerL;
        cp.movie.topOffset = cp.movie.newMainContainerT;
        a.style.webkitTransform = "scale(" + cp.movie.m_scaleFactor + ")";
        a.style.MozTransform = "scale(" + cp.movie.m_scaleFactor + ")";
        a.style.msTransform = "scale(" + cp.movie.m_scaleFactor + ")";
        document.body.style.overflow = "hidden";
        a.style.position = "fixed";
        return true
    };
    cp.trimStartingAndTrailingSpaces = function(a) {
        var c = "",
            c = a.replace(/^[\s|\t|\n]+/g, "");
        return c = c.replace(/[\s|\t|\n]+$/g, "")
    };
    cp.cpJoin = function(a, c) {
        if (a && !(c == "" || c == void 0) && !(a.length <= 0)) {
            for (var d = a[0], e = 1; e < a.length; ++e) d = d + (c + a[e]);
            return d
        }
    };
    cp.getLeftTopAfterTranslate = function(a) {
        var c = new WebKitCSSMatrix(window.getComputedStyle(a)
                .webkitTransform),
            d = {};
        d.L = parseFloat(a.style.left) + c.m41;
        d.T = parseFloat(a.style.top) + c.m42;
        return d
    };
    cp.createAlternativeAccessibleText = function(a, c, d) {
        if (cp.SAFARI ===
            cp.browser) {
            d !== "" && a.setAttribute("role", d);
            a.setAttribute("aria-label", c)
        } else {
            if (cp.D.pref.acc === 0 || c === "") c = " ";
            d = cp.newElem("p");
            d.innerHTML = c;
            c = cp.newElem("div");
            c.id = a.id + "accStr";
            c.className = "cp-accessibility";
            c.appendChild(d);
            a.appendChild(c)
        }
    };
    cp.getRGBA = function(a, c) {
        return "rgba(" + parseInt(a.substring(1, 3), 16) + " , " + parseInt(a.substring(3, 5), 16) + " , " +
            parseInt(a.substring(5, 7), 16) + " , " + c + " )"
    };
    cp.QuizLibraryInit = function() {
        cp.g_ShouldRandomize && cp.NewQuizLibraryInit()
    };
    cp.NewQuizLibraryInit =
        function() {
            if (cp.PlaybackController && !cp.movie.playbackController) {
                cp.movie.playbackController = cp.IsRunningInACAP ? new cp.ACAPPlaybackController : new cp
                    .PlaybackController;
                cp.movie.playbackController.InitializeReportingVariables();
                cp.movie.playbackController.InitializePlaybackController()
            }
            cp.movie.registerQuizVariableSetters();
            if (cp.g_ShouldRandomize) cp.ContinueQuizLibraryInit();
            else if (cp.resumeDataChunk != "" && cp.resumeDataChunk != void 0 && cp.resumeDataChunk != "0") {
                var a = cp.movie.playbackController;
                a &&
                    a.RestoreQuizState()
            }
            cp.movie.initLMS()
        };
    cp.ContinueQuizLibraryInit = function() {
        cp.movie.updateMovie();
        cp.movie.stage.createQuestionObjs();
        cp.movie.playbackController && cp.movie.playbackController.AddQuestionSlideNames();
        cp.movie.stage.initializeGraphManager()
    };
    cp.IsRunningInConnect = function() {
        return !document.location || !document.URL || !document.referrer ? false : document.location.href
            .indexOf("airspeed") != -1 || document.URL.indexOf("airspeed") != -1 || document.referrer.indexOf(
                "airspeed") != -1
    };
    cp.isBlockedForLMS =
        function() {
            return typeof cp.LMSDriverHolder != "undefined" && cp.LMSDriverHolder && cp.LMSDriverHolder
                .blockedForLMS
        };
    cp.unblockFromLMS = function() {
        if (typeof cp.LMSDriverHolder != "undefined" && cp.LMSDriverHolder) cp.LMSDriverHolder.blockedForLMS =
            false;
        cp("blockUserInteraction")
            .style.display = "none"
    };
    cp.closeGesturesHint = function() {
        if (cp("gestureHint")) {
            cp.removeGestureEvent(cp("gestureHint"), cp.GESTURE_EVENT_TYPES.TAP, cp.closeGesturesHint);
            cp("gestureHint")
                .style.display = "none"
        }
    };
    cp.showGesturesHint = function() {
        var a =
            cp("gestureHint");
        if (cp.useg && a) {
            a.style.display = "block";
            a.style.zIndex = 10;
            cp.registerGestureEvent(cp("gestureHint"), cp.GESTURE_EVENT_TYPES.TAP, cp.closeGesturesHint)
        }
    };
    cp.CPPreInit = function() {
        cp.CPProjInit();
        cp.shouldScale = cp.D.project.shc;
        cp.responsive = cp.D.project_main.useResponsive;
        if (cp.IsRunningInACAP || cp.IsRunningInALEC) {
            cp.D.playBarProperties.hasPlayBar = false;
            cp.D.borderProperties.hasBorder = false;
            cp.D.project.hasTOC = false
        }
        cp.loadedModules = {
            playbar: cp.D.playBarProperties.hasPlayBar && cp("playbar") !=
                void 0,
            border: cp.D.borderProperties.hasBorder,
            toc: cp.D.project.hasTOC && cp("toc") != void 0
        };
        if (cp.device == cp.IDEVICE)
            if (cp.mat == void 0) {
                if (cp.IOSMajor <= cp.IOS5) cp.multiAudioTrack = false
            } else cp.multiAudioTrack = false;
        if (cp.device == cp.ANDROID) cp.multiAudioTrack = true;
        var a = cp.D.project_main.pools;
        if (a == void 0 || a.length <= 0) cp.poolManager = void 0;
        else {
            cp.poolManager = new cp.PoolManager;
            cp.poolManager.loadPools();
            cp.g_ShouldRandomize && cp.poolManager.randomizePools()
        }
        PPTXLib.initializePPTXLibrary();
        if (a = cp.D.project_main.slideVideos)
            for (var c =
                    0, d = 1; d < a.length; ++c, ++d) {
                var e = cp.D[a[c]],
                    f = cp.D[a[d]];
                if (e.to + 1 == f.from) {
                    e = cp.D[e.mdi];
                    f = cp.D[f.mdi];
                    if (Math.abs(e.vst - f.vsf) <= 0.1 && e.mp4 == f.mp4) {
                        e.continueToNextSlide = 1;
                        f.continueFromPrevSlide = 1
                    }
                }
            }
        for (var a = (cp.D.project_main.slideAudios || "")
                .split(","), c = (cp.D.project_main.slides || "")
                .split(","), d = a.length, f = c.length, g = e = 0; g < f && e < d; ++g) {
            var k = cp.D[c[g]];
            if (!k) break;
            var m = cp.D[a[e]];
            if (!m) break;
            if (m.from <= k.to) k.audioName = a[e];
            k.to >= m.to && ++e
        }
        a = (cp.D.project_main.slides || "")
            .split(",");
        c = a.length;
        for (d = 0; d < c; ++d) {
            f = cp.D[a[d]];
            if (!f) break;
            for (var l in f.si) {
                e = f.si[l];
                if (cp.kCPOTFLVItem == e.t || cp.kCPOTVideo == e.t || cp.kCPFullMotion == e.t || cp
                    .kCPOTVideoResource == e.t) {
                    if (!f.videos) f.videos = [];
                    f.videos.push(e.n)
                }
            }
        }
        if (cp.responsive) {
            if (cp.responsiveWidths == void 0) cp.responsiveWidths = cp.D.project.cssWidths;
            cp.m_isPreview && cp.parentWindow.initializeResponsivePreview && cp.parentWindow
                .initializeResponsivePreview(cp.D.project.cssWidths, cp.D.project.w, cp.D.project.h + 100, cp.D
                    .project_main.cBW, cp.DESKTOP ==
                    cp.device);
            cp.updateResponsiveGlobals()
        }
        cp.offsetInnerWidth = 0;
        cp.getInnerWidth();
        l = cp.getProjectContainer();
        if (cp.responsive) {
            l.style.width = "100%";
            l.style.height = "100%"
        } else {
            l.style.width = cp.D.project.w + (cp.loadedModules.toc && !cp.D.tocProperties.overlay ? cp.D
                .tocProperties.width : 0) + "px";
            l.style.height = cp.D.project.h + "px"
        }
        l = cp.getMainContainer();
        a = (cp.offsetInnerWidth - parseFloat(l.style.width)) / 2;
        l.style.left = cp.responsive ? "0px" : (a > 0 ? a : 0) + "px";
        if (!cp.playImage) cp.playImage = cp("playImage");
        if (!cp.autoplayImage) cp.autoplayImage =
            cp("autoplayImage");
        if (!cp.autoplayDiv) cp.autoplayDiv = cp("autoplayDiv");
        if (!cp.gesturesDiv) {
            cp.gesturesDiv = cp("gestureIcon");
            if (cp.useg) {
                cp.gesturesDiv.style.display = "block";
                cp.registerGestureEvent(cp.gesturesDiv, cp.GESTURE_EVENT_TYPES.TAP, cp.showGesturesHint)
            } else cp.gesturesDiv.style.display = "none"
        }
        if (cp.device != cp.DESKTOP) {
            cp.playImage.className = "autoPlayButton";
            if (cp.useg) cp.gesturesDiv.style.display = "block"
        } else {
            if (!cp.D.project_main.autoplay) cp.playImage.className = "autoPlayButton";
            cp.gesturesDiv.style.display =
                "none"
        }
        if (!cp.ccdv) {
            cp.ccdv = cp("cc");
            cp.fixWebkitScaling(cp.ccdv)
        }
        if (!cp.pwdv) cp.pwdv = cp("pwdv");
        if (!cp.exdv) cp.exdv = cp("exdv");
        if (!cp.preloaderImage) cp.preloaderImage = cp("preloaderImage");
        if (cp.movie == void 0) {
            cp.movie = new cp.Movie(cp("project"));
            cp.eventManager = new cp.EventManager;
            cp.variablesManager = new cp.VariablesManager;
            cp.movie.audioManager = new cp.AudioManager;
            cp.movie.videoManager = new cp.VideoManager;
            cp.movie.mediaSeeker = new cp.MediaSeeker;
            cp.g_ShouldRandomize || cp.NewQuizLibraryInit();
            cp.movie.vdm.load();
            cp.movie.am.load();
            l = cp.movie.stage.getSlideNameForIndex(0);
            cp.multiAudioTrack && l != "" && cp.movie.am.preload(l);
            l != "" && cp.movie.vdm.preload(l);
            cp.movie.imageManager = new cp.ImageManager;
            cp.movie.prefetchManager = new cp.PrefetchManager;
            cp.movie.handleProjectOptions();
            cp.movie.pm.preloadSlideAssets(0);
            cp.movie.topOffset = 0;
            l = cp.getProject();
            if (!cp.responsive) l.style.left = (cp.loadedModules.toc && !cp.D.tocProperties.overlay && cp.D
                .tocProperties.position == 1 ? cp.D.tocProperties.width : 0) + "px"
        }
        if (l = cp.movie.stage.getSlideDiv()) {
            l.ondblclick =
                cp.handleDblClick;
            l.oncontextmenu = cp.handleRightClick
        }
        cp.ccInit(cp.D.ccProperties);
        cp.loadedModules.border && cp.borderInit(cp.D);
        cp.loadedModules.playbar ? cp.playBarInit(cp.D) : cp.setMovieLeftTopRightBottom(0, 0, 0, 0);
        cp.loadedModules.toc && cp.responsive && cp.tocInit(cp.D, 0, 0, 0, 0);
        cp("project")
            .style["z-index"] = 1;
        cp.loadedModules.toc && (cp("toc")
            .style["z-index"] = 2);
        cp.loadedModules.playbar && (cp("playbar")
            .style["z-index"] = 3);
        cp.ccdv = cp("cc");
        cp.pwdv = cp("pwdv");
        cp.exdv = cp("exdv");
        cp.ccdv && (cp("cc")
            .style["z-index"] =
            4);
        if (cp.gesturesDiv) cp.gesturesDiv.style.zIndex = 4;
        cp.pwdv && (cp("pwdv")
            .style["z-index"] = 5);
        cp.exdv && (cp("exdv")
            .style["z-index"] = 6);
        if (cp.dynamicLogControl) {
            if (cp.consolidateLogs) cp.logArray = [];
            var n = cp.newElem("div");
            n.style.cssText =
                "z-index:100;position:absolute;left:0px; top:0px; width:20px; height:20px;display:block;background-image:url(assets/htmlimages/hotspot_correct_answer_normal.png);opacity:" +
                (cp.consolidateLogs ? 1 : 0.5);
            n.onclick = function() {
                if (!cp.logArray) cp.logArray = [];
                if (cp.consolidateLogs) {
                    for (var a =
                            0; a < cp.logArray.length; ++a) console.log(cp.logArray[a]);
                    cp.logArray.length = 0
                }
                cp.consolidateLogs = !cp.consolidateLogs;
                n.style.opacity = cp.consolidateLogs ? 1 : 0.5
            };
            n.innerHTML = "<font color='#000000' style='font-size:10px'>consolidateLogs</font>";
            document.body.appendChild(n);
            var o = cp.newElem("div");
            o.style.cssText =
                "z-index:100;position:absolute;left:0px; top:30px; width:20px; height:20px;display:block;background-image:url(assets/htmlimages/hotspot_correct_answer_normal.png);opacity:" +
                (cp.movie.im.verbose ?
                    1 : 0.5);
            o.onclick = function() {
                cp.movie.im.verbose = !cp.movie.im.verbose;
                o.style.opacity = cp.movie.im.verbose ? 1 : 0.5
            };
            o.innerHTML = "<font color='#000000' style='font-size:10px'>imageLogs</font>";
            document.body.appendChild(o);
            var q = cp.newElem("div");
            q.style.cssText =
                "z-index:100;position:absolute;left:60px; top:30px; width:20px; height:20px;display:block;background-image:url(assets/htmlimages/arrow_right.gif);opacity:" +
                (cp.movie.pm.viewCache ? 1 : 0.5);
            q.onclick = function() {
                cp.movie.pm.viewCache = !cp.movie.pm.viewCache;
                if (cp.movie.pm.viewCache) {
                    cp.movie.pm.cacheViews = [];
                    for (var a = 0; a < cp.movie.pm.cache.length; ++a) cp.movie.pm.cacheViews[a] = new cp
                        .CacheView(a);
                    cp.movie.pm.showCache()
                } else {
                    for (a in cp.movie.pm.cacheViews) {
                        document.body.removeChild(cp.movie.pm.cacheViews[a].view);
                        --cp.CacheView.NUM_CACHE_VIEWS
                    }
                    delete cp.movie.am.cacheViews
                }
                q.style.opacity = cp.movie.pm.viewCache ? 1 : 0.5
            };
            q.innerHTML = "<font color='#000000' style='font-size:10px'>view</font>";
            document.body.appendChild(q);
            var p = cp.newElem("div");
            p.style.cssText =
                "z-index:100;position:absolute;left:0px; top:60px; width:20px; height:20px;display:block;background-image:url(assets/htmlimages/hotspot_correct_answer_normal.png);opacity:" +
                (cp.movie.am.verbose ? 1 : 0.5);
            p.onclick = function() {
                cp.movie.am.verbose = !cp.movie.am.verbose;
                p.style.opacity = cp.movie.am.verbose ? 1 : 0.5
            };
            p.innerHTML = "<font color='#000000' style='font-size:10px'>audioLogs</font>";
            document.body.appendChild(p);
            var u = cp.newElem("div");
            u.style.cssText =
                "z-index:100;position:absolute;left:60px; top:60px; width:20px; height:20px;display:block;background-image:url(assets/htmlimages/arrow_right.gif);opacity:" +
                (cp.movie.am.viewAudio ? 1 : 0.5);
            u.onclick = function() {
                cp.movie.am.viewAudio = !cp.movie.am.viewAudio;
                u.style.opacity = cp.movie.am.viewAudio ? 1 : 0.5;
                if (cp.movie.am.viewAudio) {
                    cp.movie.am.audioViews = [];
                    for (var a = 0; a < cp.movie.am.MAX_AUDIO_CHANNELS; ++a) {
                        var c = cp.movie.am.audioChannels[a];
                        cp.movie.am.audioViews[a] = new cp.AudioView(c)
                    }
                } else {
                    for (a in cp.movie.am.audioViews) {
                        c = cp.movie.am.audioViews[a];
                        document.body.removeChild(c.view);
                        --cp.MediaView.NUM_MEDIA_VIEWS
                    }
                    delete cp.movie.am.audioViews
                }
            };
            u.innerHTML = "<font color='#000000' style='font-size:10px'>view</font>";
            document.body.appendChild(u);
            l = cp.newElem("div");
            l.style.cssText =
                "z-index:100;position:absolute;left:120px; top:60px; width:20px; height:20px;display:block;background-image:url(assets/htmlimages/hotspot_correct_answer_normal.png);opacity:1";
            l.onclick = function() {
                cp.movie.am.resetAllWaitingAudios()
            };
            l.innerHTML = "<font color='#000000' style='font-size:10px'>!Wait</font>";
            document.body.appendChild(l);
            var s = cp.newElem("div");
            s.style.cssText =
                "z-index:100;position:absolute;left:0px; top:90px; width:20px; height:20px;display:block;background-image:url(assets/htmlimages/hotspot_correct_answer_normal.png);opacity:" +
                (cp.movie.vdm.verbose ? 1 : 0.5);
            s.onclick = function() {
                cp.movie.vdm.verbose = !cp.movie.vdm.verbose;
                s.style.opacity = cp.movie.vdm.verbose ? 1 : 0.5
            };
            s.innerHTML = "<font color='#000000' style='font-size:10px'>videoLogs</font>";
            document.body.appendChild(s);
            var v = cp.newElem("div");
            v.style.cssText =
                "z-index:100;position:absolute;left:60px; top:90px; width:20px; height:20px;display:block;background-image:url(assets/htmlimages/arrow_right.gif);opacity:" +
                (cp.movie.vdm.viewVideo ? 1 : 0.5);
            v.onclick = function() {
                cp.movie.vdm.viewVideo = !cp.movie.vdm.viewVideo;
                v.style.opacity = cp.movie.vdm.viewVideo ? 1 : 0.5;
                if (cp.movie.vdm.viewVideo) {
                    cp.movie.vdm.videoViews = [];
                    if (cp.device == cp.IDEVICE || cp.device == cp.ANDROID) {
                        cp.movie.vdm.slideVideoChannel && cp.movie.vdm.videoViews.push(new cp.VideoView(cp
                            .movie.vdm.slideVideoChannel));
                        cp.movie.vdm.tocVideoChannel && cp.movie.vdm.videoViews.push(new cp.VideoView(cp
                            .movie.vdm.tocVideoChannel))
                    } else {
                        cp.movie.vdm.slideVideoChannel0 && cp.movie.vdm.videoViews.push(new cp.VideoView(cp
                            .movie.vdm.slideVideoChannel0));
                        cp.movie.vdm.slideVideoChannel1 && cp.movie.vdm.videoViews.push(new cp.VideoView(cp
                            .movie.vdm.slideVideoChannel1));
                        cp.movie.vdm.tocVideoChannel0 && cp.movie.vdm.videoViews.push(new cp.VideoView(cp
                            .movie.vdm.tocVideoChannel0));
                        cp.movie.vdm.tocVideoChannel1 && cp.movie.vdm.videoViews.push(new cp.VideoView(cp
                            .movie.vdm.tocVideoChannel1))
                    }
                    for (var a = 0; a < cp.movie.vdm.MAX_VIDEO_CHANNELS; ++a) {
                        var c = cp.movie.vdm.videoChannels[a];
                        cp.movie.vdm.videoViews.push(new cp.VideoView(c))
                    }
                } else {
                    for (a in cp.movie.vdm.videoViews) {
                        c =
                            cp.movie.vdm.videoViews[a];
                        document.body.removeChild(c.view);
                        --cp.MediaView.NUM_MEDIA_VIEWS
                    }
                    delete cp.movie.vdm.videoViews
                }
            };
            v.innerHTML = "<font color='#000000' style='font-size:10px'>view</font>";
            document.body.appendChild(v);
            l = cp.newElem("div");
            l.style.cssText =
                "z-index:100;position:absolute;left:120px; top:90px; width:20px; height:20px;display:block;background-image:url(assets/htmlimages/hotspot_correct_answer_normal.png);opacity:1";
            l.onclick = function() {
                cp.movie.vdm.resetAllWaitingVideos()
            };
            l.innerHTML =
                "<font color='#000000' style='font-size:10px'>!Wait</font>";
            document.body.appendChild(l);
            var x = cp.newElem("div");
            x.style.cssText =
                "z-index:100;position:absolute;left:0px; top:120px; width:20px; height:20px;display:block;background-image:url(assets/htmlimages/hotspot_incorrect_answer_normal.png);opacity:" +
                (cp.exceptionalLogs ? 1 : 0.5);
            x.onclick = function() {
                cp.exceptionalLogs = !cp.exceptionalLogs;
                x.style.opacity = cp.exceptionalLogs ? 1 : 0.5
            };
            x.innerHTML = "<font color='#000000' style='font-size:10px'>ErrorExcpn</font>";
            document.body.appendChild(x);
            var w = cp.newElem("div");
            w.style.cssText =
                "z-index:100;position:absolute;left:0px; top:150px; width:20px; height:20px;display:block;background-image:url(assets/htmlimages/hotspot_correct_answer_normal.png);opacity:" +
                (cp.verbose ? 1 : 0.5);
            w.onclick = function() {
                cp.verbose = !cp.verbose;
                w.style.opacity = cp.verbose ? 1 : 0.5
            };
            w.innerHTML = "<font color='#000000' style='font-size:10px'>verbose</font>";
            document.body.appendChild(w);
            var y = cp.newElem("div");
            y.style.cssText =
                "z-index:100;position:absolute;left:0px; top:180px; width:20px; height:20px;display:block;background-image:url(assets/htmlimages/hotspot_correct_answer_normal.png);opacity:" +
                (cp.disablePaceMaker ? 0.5 : 1);
            y.onclick = function() {
                cp.disablePaceMaker = !cp.disablePaceMaker;
                y.style.opacity = cp.disablePaceMaker ? 0.5 : 1
            };
            y.innerHTML = "<font color='#000000' style='font-size:10px'>PaceMaker</font>";
            document.body.appendChild(y);
            var z = cp.newElem("div");
            z.style.cssText =
                "z-index:100;position:absolute;left:0px; top:210px; width:20px; height:20px;display:block;background-image:url(assets/htmlimages/hotspot_correct_answer_normal.png);opacity:" +
                (cp.movie.ms.verbose ? 1 : 0.5);
            z.onclick = function() {
                cp.movie.ms.verbose = !cp.movie.ms.verbose;
                z.style.opacity = cp.movie.ms.verbose ? 1 : 0.5
            };
            z.innerHTML = "<font color='#000000' style='font-size:10px'>seekLogs</font>";
            document.body.appendChild(z);
            if (cp.device != cp.IDEVICE) {
                var C = cp.newElem("div");
                C.style.cssText =
                    "z-index:100;position:absolute;left:0px; top:240px; width:20px; height:20px;display:block;background-image:url(assets/htmlimages/hotspot_correct_answer_normal.png);opacity:" +
                    (cp.device == cp.IDEVICE ? 0.5 : 1);
                C.onclick = function() {
                    if (cp.origDevice) {
                        cp.device = cp.origDevice;
                        delete cp.origDevice
                    } else {
                        cp.origDevice = cp.device;
                        cp.device = cp.IDEVICE
                    }
                    C.style.opacity = cp.device == cp.IDEVICE ? 0.5 : 1
                };
                C.innerHTML = "<font color='#000000' style='font-size:10px'>emulateiDevice</font>";
                document.body.appendChild(C)
            }
            var A = cp.newElem("div");
            A.style.cssText =
                "z-index:100;position:absolute;left:0px; top:270px; width:20px; height:20px;display:block;background-image:url(assets/htmlimages/hotspot_correct_answer_normal.png);opacity:" +
                (cp.customConsole ? 0.5 : 1);
            A.onclick = function() {
                if (cp.customConsole) {
                    document.body.removeChild(cp.customConsole);
                    delete cp.customConsole
                } else {
                    cp.customConsole = cp.newElem("textarea");
                    cp.customConsole.style.cssText =
                        "z-index:100;position:absolute;left:0px; top:300px; width:300px; height:100px;display:block;";
                    cp.customConsole.readonly = true;
                    document.body.appendChild(cp.customConsole);
                    cp.log("navigator.userAgent = " + navigator.userAgent);
                    cp.log("browser = " + cp.browser);
                    cp.log("browserVersion = " + cp.browserVersion);
                    cp.log("device = " + cp.device);
                    if (cp.device == cp.IDEVICE) {
                        cp.log("device flavor = " + cp.deviceFlavor);
                        cp.log("IOS Version = " +
                            cp.IOSMajor + "_" + cp.IOSMinor + "_" + cp.IOSBuild)
                    }
                }
                A.style.opacity = cp.customConsole ? 0.5 : 1
            };
            A.innerHTML = "<font color='#000000' style='font-size:10px'>customConsole</font>";
            document.body.appendChild(A)
        }
        this.m_gestureHandler && this.m_gestureHandler.addCPEventListeners()
    };
    cp.CPPostInit = function() {
        cp.initObjectFactory();
        cp.loadedModules.playbar && cp.setPlaybarCallback(cp.movie);
        cp.loadedModules.toc && cp.setTOCCallback(cp.movie, cp.em);
        typeof cptb != "undefined" && cptb.PostInit();
        cp.adjustWindow();
        setTimeout("window.scrollTo(0,0);",
            500);
        cp.movie.startTimer();
        window.onorientationchange = window.onresize = cp.adjustWindow;
        cp.responsive && !cp.IsRunningInRoboHelp && (cp.parentWindow && cp.parentWindow.resizeIFrameToHeight) &&
            cp.parentWindow.resizeIFrameToHeight(cp.getCurrentSlideResponsiveHeight(cp.D.project_main.cBW))
    };
    cp.getStartFrameOfMovie = function() {
        return cp.loadedModules.toc && cp.toc.movieProperties.tocProperties.hasSelfPaced && cp.toc
            .tocPersistanceManager.lastVisitedEntry != -1 && cp.toc.movieProperties["Slide" + cp.toc.rootObj
                .tocEntries[cp.toc.tocPersistanceManager.lastVisitedEntry].link] ?
            cp.toc.movieProperties["Slide" + cp.toc.rootObj.tocEntries[cp.toc.tocPersistanceManager
                .lastVisitedEntry].link].from : cpInfoCurrentFrame
    };
    cp.addAndUpdateProjectBackgroundDiv = function(a) {
        var c = cp("proj_bg"),
            d = cp("playbar"),
            e = cp("toc"),
            f = a.playBarProperties;
        if (c == void 0) {
            c = cp.newElem("div");
            c.id = "proj_bg";
            e.parentElement.insertBefore(c, e);
            c.style.display = "none";
            c.style.cssFloat = "left";
            c.style.position = "absolute";
            c.style.backgroundColor = a.project.prjBgColor
        }
        if (f.hasPlayBar && !cp.responsive) {
            if (f.position ==
                0 || f.position == 2) {
                c.style.width = f.playBarHeight + "px";
                c.style.height = a.project.h + "px";
                c.style.top = "0px";
                c.style.left = f.position == 0 ? d.style.left : parseFloat(d.style.left) + a.project.w + "px"
            } else if (f.position == 1 || f.position == 3) {
                c.style.width = a.project.w + "px";
                c.style.height = f.playBarHeight + "px";
                c.style.top = f.position == 1 ? "0px" : a.project.h + "px";
                c.style.left = d.style.left
            }
            if (f.position == 0 && cp.lBorderW == 0 || f.position == 1 && cp.tBorderW == 0 || f.position == 2 &&
                cp.rBorderW == 0 || f.position == 3 && cp.bBorderW == 0) c.style.display =
                "block"
        }
    };
    cp.updateBorderPosition = function(a, c) {
        var d = cp("main_container"),
            e = document.getElementById("projectBorder"),
            f = cp.getProjectContainer(),
            g = a.playBarProperties;
        g.playBarHeight = g.playBarHeight != void 0 ? g.playBarHeight : 0;
        var k = a.borderProperties;
        if (k)
            if (!k.hasBorder && !cp.responsive) {
                d.style.left = parseFloat(f.style.left) + "px";
                d.style.top = parseFloat(f.style.top) + "px";
                d.style.width = parseFloat(f.style.width) + "px";
                d.style.height = parseFloat(f.style.height) + "px"
            } else {
                cp.lBorderW = cp.lBorderW != void 0 ?
                    cp.lBorderW : 0;
                cp.tBorderW = cp.tBorderW != void 0 ? cp.tBorderW : 0;
                cp.rBorderW = cp.rBorderW != void 0 ? cp.rBorderW : 0;
                cp.bBorderW = cp.bBorderW != void 0 ? cp.bBorderW : 0;
                c || cp.addAndUpdateProjectBackgroundDiv(a);
                if (cp.responsive) {
                    cp.project.style.width = "auto";
                    cp.project.style.height = "auto";
                    cp.project.style.left = cp.lBorderW + "%";
                    cp.project.style.right = cp.rBorderW + "%";
                    cp.project.style.top = cp.tBorderW + "%";
                    cp.project.style.bottom = cp.bBorderW + "%"
                } else {
                    if (c) d.style.left = parseFloat(f.style.left) - cp.lBorderW + "px";
                    else if ((g.position ==
                            0 || g.position == 2) && !g.overlay) {
                        if (g.position == 0) {
                            if (g.playBarHeight > cp.lBorderW) {
                                k.w = k.w + (g.playBarHeight - cp.lBorderW);
                                d.style.width = e.style.width = k.w + "px";
                                cp.lBorderW = g.playBarHeight
                            }
                            f.style.left = cp.lBorderW - g.playBarHeight + "px"
                        } else {
                            if (g.playBarHeight > cp.rBorderW) {
                                k.w = k.w + (g.playBarHeight - cp.rBorderW);
                                d.style.width = e.style.width = k.w + "px";
                                cp.rBorderW = g.playBarHeight
                            }
                            f.style.left = cp.lBorderW + "px"
                        }
                        var m = g && g.playBarHeight ? g.playBarHeight : 0,
                            m = g.position == 0 ? m / 2 : -(m / 2);
                        d.style.left = parseFloat(d.style.left) +
                            m + "px"
                    } else f.style.left = cp.lBorderW + "px";
                    if (g.position != 1) {
                        if (g.position == 3 && g.playBarHeight > cp.bBorderW && !g.overlay) {
                            k.h = k.h + (g.playBarHeight - cp.bBorderW);
                            d.style.height = e.style.height = k.h + "px";
                            cp.bBorderW = g.playBarHeight
                        }
                        f.style.top = cp.tBorderW + "px"
                    } else if (g.overlay) f.style.top = cp.tBorderW + "px";
                    else {
                        if (g.playBarHeight > cp.tBorderW) {
                            k.h = k.h + (g.playBarHeight - cp.tBorderW);
                            d.style.height = e.style.height = k.h + "px";
                            cp.tBorderW = g.playBarHeight
                        }
                        f.style.top = cp.tBorderW - g.playBarHeight + "px"
                    }
                }
            }
    };
    document.Captivate =
        window.cp;
    window.m_VarHandle = window;
    cp.cpEIGetValue = function(a) {
        return eval.call(window, a)
    };
    cp.cpEISetValue = function(a, c) {
        eval.call(window, a + '="' + c + '"')
    };
    cp.handleTOCOpenClose = function() {
        var a = cp("toc");
        a && a.animator && (cpCmndTOCVisible ? a.animator.hideTOC() : a.animator.showTOC())
    };
    cp.toggleMoviePlayPause = function() {
        var a = "";
        if (cp.movie.paused) {
            cp.movie.play(cp.ReasonForPause.PLAYBAR_ACTION);
            a = "playAnimation"
        } else {
            cp.movie.pause(cp.ReasonForPause.PLAYBAR_ACTION);
            a = "pauseAnimation"
        }
        cp.useg && cp.showGesturesAnim &&
            cp.showGesturesAnim(a)
    };
    cp.togglePlaybarShowHide = function() {
        if (cpInfoHasPlaybar) {
            var a = cp("playbar");
            if (a) {
                if (cp.movie.playbackController) {
                    var c = cp.movie.playbackController.GetQuizController();
                    c && cp.movie.stage && (cp.movie.stage.currentSlide && cp.movie.stage.currentSlide.st ==
                        "Question Slide") && c.GetHidePlaybarInQuiz()
                }
                if (a.animator) {
                    a.animator.showPlaybar(cpInfoCurrentFrame >= cp.movie.stage.lastFrame ? true : false);
                    a.shown = true
                } else {
                    a.style.display = !a.shown ? "block" : "none";
                    cp.adjustSkins();
                    a.shown = !a.shown
                }
            }
        }
    };
    cp.isTextInputInFocus = function() {
        var a = document.activeElement;
        return a && (a.tagName.toLowerCase() == "input" && a.type == "text" || a.tagName.toLowerCase() ==
            "textarea")
    }
})();
window.cpAPIInterface = void 0;
window.cpAPIEventEmitter = void 0;
cp.EventEmitterClass = function() {
    this.callbackFns = {}
};
cp.EventEmitterClass.prototype.getGenericEventName = function(a) {
    a = a.replace(/^CP/, "");
    a = a.replace(/Event$/, "");
    return a.toUpperCase()
};
cp.EventEmitterClass.prototype.addEventListener = function(a, b, c) {
    void 0 == a && (a = "Default");
    var d = [];
    c && "" != c ? (void 0 == this.callbackFns[a] && (this.callbackFns[a] = {}), void 0 == this.callbackFns[a][c] &&
        (this.callbackFns[a][c] = []), d = this.callbackFns[a][c]) : (void 0 == this.callbackFns[a] && (this
        .callbackFns[a] = []), d = this.callbackFns[a]);
    0 > d.indexOf(b) && d.push(b)
};
cp.EventEmitterClass.prototype.removeEventListener = function(a, b, c) {
    void 0 == a && (a = "Default");
    var d = [];
    if (c && "" != c) {
        if (void 0 == this.callbackFns[a] || void 0 == this.callbackFns[a][c]) return;
        d = this.callbackFns[a][c]
    } else {
        if (void 0 == this.callbackFns[a]) return;
        d = this.callbackFns[a]
    }
    a = d.indexOf(b); - 1 < a && d.splice(a, 1)
};
cp.EventEmitterClass.prototype.trigger = function(a) {
    a.Name = "CPAPI_" + this.getGenericEventName(a.cpName);
    var b = this.callbackFns[a.Name];
    if ("CPAPI_VARIABLEVALUECHANGED" == a.Name) {
        if (!b) return;
        b = b[a.Data.varName]
    }
    if (b)
        for (var c = 0; c < b.length; c++) b[c](a)
};
cp.ACAPEventEmitterClass = function() {
    cp.ACAPEventEmitterClass.baseConstructor.call(this)
};
cp.inherits(cp.ACAPEventEmitterClass, cp.EventEmitterClass);
cp.ACAPEventEmitterClass.prototype.addEventListener = function(a, b) {
    cp.ACAPEventEmitterClass.superClass.addEventListener.call(this, b, a)
};
cp.ACAPEventEmitterClass.prototype.removeEventListener = function(a, b) {
    cp.ACAPEventEmitterClass.superClass.removeEventListener.call(this, b, a)
};
cp.ACAPEventEmitterClass.prototype.trigger = function(a) {
    a.Name = "CAPI_" + this.getGenericEventName(a.cpName);
    var b = this.callbackFns.Default;
    if (b)
        for (var c = 0; c < b.length; c++) b[c](a)
};
cp.ACAPEventEmitterClass.prototype.getEvent = function(a, b, c) {
    b = document.createEvent("Events");
    b.initEvent("getData", !0, !0, null);
    b.data = a;
    b.get = c;
    for (a = 0; a < this.callbackFns.length; a++) this.callbackFns[a](event)
};
cp.CPAPIInterfaceClass = function() {
    this.m_eventEmitter = void 0
};
cp.CPAPIInterfaceClass.prototype = {
    canPlay: function() {
        return cp.isExpired || !cp.passwordAccepted ? !1 : !0
    },
    play: function() {
        this.canPlay() && cp.movie.paused && cp.playPause(!0)
    },
    pause: function() {
        cp.movie.paused || cp.playPause(!0)
    },
    rewind: function() {
        cp.rewind()
    },
    next: function() {
        cp.goToNextSlide()
    },
    previous: function() {
        cp.goToPreviousSlide()
    },
    fastForward: function() {
        cp.fastForward()
    },
    getPlaySpeed: function() {
        return cpInfoFPS
    },
    getDurationInFrames: function() {
        return cpInfoFrameCount
    },
    getDurationInSeconds: function() {
        return this.getDurationInFrames() /
            this.getPlaySpeed()
    },
    getVolume: function() {
        return cpCmndVolume
    },
    setVolume: function(a) {
        cpCmndVolume = a
    },
    navigateToTime: function(a) {
        a = a * cpInfoFPS / 1E3;
        0 <= a && 1 > a && (a = 1);
        cp.movie.jumpToFrame(a)
    },
    canNavigateToTime: function(a) {
        a = a * cpInfoFPS / 1E3;
        0 <= a && 1 > a && (a = 1);
        return cp.shouldMoveTo(a)
    },
    getCurrentFrame: function() {
        return cpInfoCurrentFrame
    },
    getCurrentSlideIndex: function() {
        return cpInfoCurrentSlide
    },
    getEventEmitter: function() {
        void 0 == this.m_eventEmitter && (this.m_eventEmitter = cp.IsRunningInACAP ? new cp
            .ACAPEventEmitterClass :
            new cp.EventEmitterClass);
        return this.m_eventEmitter
    },
    getVariableValue: function(a) {
        return window[a]
    },
    setVariableValue: function(a, b) {
        window[a] = b
    }
};
cp.ACAPInterfaceClass = function() {
    this.ReportingCriteriaMap = {};
    this.ReportingCriteriaMap.user_access = cp.ReportingOptionsEnum.access;
    this.ReportingCriteriaMap.quiz_only = cp.ReportingOptionsEnum.quiz_only;
    this.ReportingCriteriaMap.slideviews_only = cp.ReportingOptionsEnum.views_only;
    this.ReportingCriteriaMap.quiz_and_slideviews = cp.ReportingOptionsEnum.quiz_and_views;
    this.QuizCriteriaMap = {};
    this.QuizCriteriaMap.quiz_passed = cp.QuizCriteriaEnum.QuizIsPassed;
    this.QuizCriteriaMap.quiz_attempted = cp.QuizCriteriaEnum.QuizIsAttempted;
    this.QuizCriteriaMap.quizpassed_or_limitreached = cp.QuizCriteriaEnum.QuizIsPassedOrAttempLimitReached
};
cp.inherits(cp.ACAPInterfaceClass, cp.CPAPIInterfaceClass);
cp.ACAPInterfaceClass.prototype.controlVisibility = function(a, b) {
    "playbar" == a ? cp.D.playBarProperties.hasPlayBar = b : "toc" == a ? cp.D.project.hasTOC = b ? 1 : 0 : "cc" ==
        a && (cp.D.playBarProperties.hasCC = b)
};
cp.ACAPInterfaceClass.prototype.navigateToItem = function(a) {
    cp.movie.jumpToFrame(cp.D[a].from)
};
cp.ACAPInterfaceClass.prototype.canNavigateToItem = function(a) {
    return cp.shouldMoveTo(cp.D[a].from)
};
cp.ACAPInterfaceClass.prototype.enterReviewMode = function() {
    setCpInfoCurrentFrame(0)
};
cp.ACAPInterfaceClass.prototype.prepareForACAPRender = function() {
    this.controlVisibility("playbar", !1);
    this.controlVisibility("cc", !1);
    this.controlVisibility("toc", !1)
};
cp.ACAPInterfaceClass.prototype.stop = function() {
    cpCmndRewindAndStop = !0
};
cp.ACAPInterfaceClass.prototype.setReportingOptions = function(a, b) {
    this.completionCriteria = this.ReportingCriteriaMap[b.criteriaChosen];
    this.quizCriteriaForCompletion = this.QuizCriteriaMap[b.quizCriteria];
    this.slideViewsForCompletion = b.slideviewsValue;
    this.slideViewsTypeForCompletion = cp.SlideViewsTypeEnum.percent;
    b.isPercentageSlideviews || (this.slideViewsTypeForCompletion = cp.SlideViewsTypeEnum.number);
    this.successCriteria = this.ReportingCriteriaMap[a.criteriaChosen];
    this.quizCriteriaForSuccess = this.QuizCriteriaMap[a.quizCriteria];
    this.slideViewsForSuccess = a.slideviewsValue;
    this.slideViewsTypeForSuccess = cp.SlideViewsTypeEnum.percent;
    a.isPercentageSlideviews || (this.slideViewsTypeForSuccess = cp.SlideViewsTypeEnum.number)
};
cp.AutoShape = function(e, g, a) {
    function f(a, e) {
        c.AutoShapeState = 2;
        c.isDrawn = !1;
        if (cp.responsive)
            if (cp.responsive) {
                var d = a.getBoundingClientRect(),
                    i = a.parentElement.getBoundingClientRect(),
                    f = c.actualParent.getBoundingClientRect(),
                    g = cp("div_Slide")
                    .getBoundingClientRect(),
                    j = f.width,
                    k = f.height,
                    l = f = 1,
                    m = 0,
                    n = 0;
                10 < j && (f = (j - 4) / j);
                10 < k && (l = (k - 4) / k);
                1 > f && 1 > l && (j = cp.project.clientWidth, k = cp.project.clientHeight, m = !1, m = c.sh && !c
                    .sh.i, j = (m && j > d.right - g.left ? j : d.right - g.left) - (0 < d.left - g.left && m ?
                        0 : d.left - g.left),
                    k = (m && k > d.bottom - g.top ? k : d.bottom - g.top) - (0 < d.top - g.top && m ? 0 : d
                        .top - g.top), d = i.left - g.left + i.width / 2, i = i.top - g.top + i.height / 2, g =
                    j / 2 - (j / 2 - d) * f, j = k / 2 - (k / 2 - i) * l, m ? (m = g - d, n = j - i) : n = m = 0
                    );
                e = {
                    sx: f,
                    sy: l,
                    tx: -m,
                    ty: -n,
                    p: c.actualParent,
                    old_tr: c.tr
                }
            } else e = void 0;
        f = "translate(" + e.tx / cp("div_Slide")
            .scaleFactor + "px," + e.ty / cp("div_Slide")
            .scaleFactor + "px) scalex(" + e.sx + ") scaley(" + e.sy + ")";
        cp.applyTransform(a, f);
        c.setVBounds();
        (1 == cp("div_Slide")
            .scaleFactor || !cp.responsive) && c.drawIfNeeded(!0, cp.ReasonForDrawing.kMouseEvent)
    }

    function k(a) {
        c.AutoShapeState = 0;
        c.isDrawn = !1;
        cp.applyTransform(a, "");
        c.setVBounds();
        (1 == cp("div_Slide")
            .scaleFactor || !cp.responsive) && c.drawIfNeeded(!0, cp.ReasonForDrawing.kMouseEvent)
    }

    function d(a, e) {
        k(a, e);
        c.parentData && (c.parentData.dep && 0 < c.parentData.dep.length) && (cp.log("hiding hint"), c
            .hintVisible = !1, cp.hideHint(c.parentData.dep[0], a))
    }

    function l() {
        c.AutoShapeState = 1;
        c.isDrawn = !1;
        c.setVBounds();
        c.drawIfNeeded(!0, cp.ReasonForDrawing.kMouseEvent)
    }

    function i(a, e, d) {
        d ? (c.parentData && c.parentData.handCursor &&
            (c.actualParent.style.cursor = "pointer"), !c.hintVisible && (c.parentData && c.parentData.dep &&
                0 < c.parentData.dep.length) && (cp.log("showing hint"), c.hintVisible = !0, cp.showHint(c
                .parentData.dep[0], a)), 0 == c.AutoShapeState && l(a, e)) : (c.actualParent.style.cursor =
            "default", c.parentData && (c.parentData.dep && 0 < c.parentData.dep.length) && (cp.log(
                "hiding hint"), c.hintVisible = !1, cp.hideHint(c.parentData.dep[0], a)), 0 != c
            .AutoShapeState && k(a, e))
    }

    function j(a, e, d, f, g) {
        var i = {
            sx: d.sx,
            sy: d.sy,
            tx: d.tx,
            ty: d.ty,
            p: d.p,
            old_tr: d.old_tr
        };
        return function(a) {
            if (void 0 != a) {
                var d = a.type.toLowerCase(),
                    j = 0 != c.canvasObj.ss || c.is_inside_canvas(a);
                if ("mousemove" != d) c.clicked = "mousedown" == a.type.toLowerCase();
                else {
                    if (c.clicked || q.x == a.clientX && q.y == a.clientY) return;
                    q.x = a.clientX;
                    q.y = a.clientY
                }
                if (("mousemove" == a.type.toLowerCase() || "mousedown" == a.type.toLowerCase() ||
                        "mouseover" == a.type.toLowerCase() || "touch" == a.type.toLowerCase() ||
                        "touchstart" == a.type.toLowerCase()) && !j)(f || cp.device == cp.DESKTOP &&
                    "mousemove" == a.type.toLowerCase()) && f(e, i, j);
                else if (!(c.parentData && void 0 != c.parentData.enabled) || c.parentData.enabled) g && g(),
                    f && f(e, i, j)
            }
        }
    }
    var c = this;
    this.tMatrixMultiplyPoint = function(a, c, e) {
        return [c * a[0] + e * a[2] + a[4], c * a[1] + e * a[3] + a[5]]
    };
    this.tInvertMatrix = function(a) {
        var c = 1 / (a[0] * a[3] - a[1] * a[2]);
        return [a[3] * c, -a[1] * c, -a[2] * c, a[0] * c, c * (a[2] * a[5] - a[3] * a[4]), c * (a[1] * a[4] - a[
            0] * a[5])]
    };
    this.is_inside_canvas = function(a, e) {
        if (void 0 == a) return !1;
        var d;
        if (!c.element) return !1;
        if ((d = c.getCurrentCanvasObj()) && d.ss && 0 != d.ss) return !0;
        var f = d = void 0,
            g = void 0,
            i = void 0,
            j = void 0;
        if (e && (c.sh && !c.sh.i || c.re))(d = c.element.style.transform) && (c.element.style.transform = ""),
            (f = c.element.style.WebkitTransform) && (c.element.style.WebkitTransform = ""), (g = c.element
                .style.MozTransform) && (c.element.style.MozTransform = ""), (i = c.element.style
            .msTransform) && (c.element.style.msTransform = ""), (j = c.element.style.OTransform) && (c.element
                .style.OTransform = "");
        var k = c.element.parentElement.getBoundingClientRect(),
            l = c.element.getBoundingClientRect();
        cp("div_Slide")
            .getBoundingClientRect();
        var m = cp.getScaledPosition(getPageX(a), getPageY(a)),
            n = k.left - cp.movie.offset,
            o = k.top - cp.movie.topOffset,
            p = l.left - cp.movie.offset,
            q = l.top - cp.movie.topOffset,
            s = parseFloat(c.element.style.marginLeft),
            x = parseFloat(c.element.style.marginTop),
            s = !isNaN(s) ? s : 0,
            x = !isNaN(x) ? x : 0,
            z = c.element.getContext("2d");
        if (z) {
            if (cp.responsive) u = m.X - window.pageXOffset - l.left, l = m.Y - window.pageYOffset - l.top, u /=
                cp("div_Slide")
                .scaleFactor, l /= cp("div_Slide")
                .scaleFactor;
            else {
                var u = m.X - window.pageXOffset / cp.movie.m_scaleFactor -
                    (0 > s ? p : n) / cp.movie.m_scaleFactor,
                    l = m.Y - window.pageYOffset / cp.movie.m_scaleFactor - (0 > x ? q : o) / cp.movie
                    .m_scaleFactor;
                cp.shouldScale && (cp.loadedModules.toc && (!cp.toc.movieProperties.tocProperties.overlay &&
                    1 == cp.toc.movieProperties.tocProperties.position) && (u += cp.toc.movieProperties
                    .tocProperties.width), cp.loadedModules.playbar && !cp.PB.MP.PBP.overlay && (0 == cp
                    .PB.MP.PBP.position ? u += cp.PB.playBarHeight : 1 == cp.PB.MP.PBP.position && (l +=
                        cp.PB.playBarHeight)));
                u *= parseFloat(c.element.parentElement.style.width) /
                    k.width * cp.movie.m_scaleFactor;
                l *= parseFloat(c.element.parentElement.style.height) / k.height * cp.movie.m_scaleFactor;
                cp.verbose && (cp.log("lParentOffsetL : " + n + "," + o), cp.log("lElemL : " + p + "," + q), cp
                    .log("lElemMarginL : " + s + x), cp.log("X : " + u + "," + l))
            }
            if (e && (c.sh && !c.sh.i || c.re)) d && (c.element.style.transform = d), f && (c.element.style
                .WebkitTransform = f), g && (c.element.style.MozTransform = g), i && (c.element.style
                .msTransform = i), j && (c.element.style.OTransform = j);
            return d = z.isPointInPath(u, l)
        }
        return !1
    };
    this.setVBounds =
        function() {
            var a = c.getCurrentCanvasObj(),
                d = 0;
            a.sw > c.canvasObj.sw && (d = a.sw - c.canvasObj.sw);
            cp.responsive && (d = 0);
            a = c.canvasObj.vbwr;
            c.wrvBounds = {
                minX: a[0] - 2 * d,
                minY: a[1] - 2 * d,
                maxX: a[2] + 2 * d,
                maxY: a[3] + 2 * d,
                width: a[2] - a[0] + 4 * d,
                height: a[3] - a[1] + 4 * d
            };
            a = c.canvasObj.vb;
            c.vbounds = {
                minX: a[0] - 2 * d,
                minY: a[1] - 2 * d,
                maxX: a[2] + 2 * d,
                maxY: a[3] + 2 * d,
                width: a[2] - a[0] + 4 * d,
                height: a[3] - a[1] + 4 * d
            }
        };
    var q = {};
    cp.AutoShape.baseConstructor.call(this, e);
    this.visible = this.getAttribute("visible");
    this.parentId = cp.D[g].dn;
    this.parentObj =
        cp.D[this.parentId];
    this.canvasObj = null;
    this.transIn = this.parentObj.trin;
    void 0 != this.parentObj && (this.canvasObj = cp.D[this.parentObj.mdi]);
    this.parentDivName = this.getAttribute("dn");
    this.parentData = cp.D[this.parentDivName];
    this.parentData.isCanvasClicked = this.is_inside_canvas;
    this.parentData.canvasPainterObject = this;
    this.actualParent = e = document.getElementById(this.parentDivName);
    1 !== this.parentData.uab && cp.removeAccessibilityOutline(this.actualParent);
    this.canvasObj && (g = this.canvasObj.b, this.bounds = {
            minX: g[0],
            minY: g[1],
            maxX: g[2],
            maxY: g[3],
            width: g[2] - g[0],
            height: g[3] - g[1]
        }, this.args = a, this.setVBounds(), this.sh = this.canvasObj.sh, this.re = this.canvasObj.re, this.tr =
        this.canvasObj.tr, this.normalImage = this.getAttribute("ip"), this.AutoShapeState = 0);
    e && (e.drawingBoard = this.element.parentElement, e.bounds = this.bounds, e.drawingBoard.bounds = this
    .vbounds);
    if (e && void 0 != this.parentData.pa && this.bounds) {
        -1 != this.parentData.pa && this.parentData.immo && (cp.movie.stage.currentSlide && (this.parentData.pa = cp
            .movie.stage.currentSlide.to -
            1), this.setAttribute("clickedOnce", !1));
        var s = this.bounds.maxX - this.bounds.minX,
            o = this.bounds.maxY - this.bounds.minY,
            g = a = 1,
            m = 0,
            n = 0;
        10 < s && (a = (s - 4) / s);
        10 < o && (g = (o - 4) / o);
        if (1 > a && 1 > g) {
            var m = !1,
                m = cp.responsive ? this.sh && !this.sh.i : this.sh && !this.sh.i || this.re,
                p = (m && cp.D.project.w > this.vbounds.maxX ? cp.D.project.w : this.vbounds.maxX) - (0 < this
                    .vbounds.minX && m ? 0 : this.vbounds.minX),
                n = (m && cp.D.project.h > this.vbounds.maxY ? cp.D.project.h : this.vbounds.maxY) - (0 < this
                    .vbounds.minY && m ? 0 : this.vbounds.minY),
                o = (this.vbounds.maxX +
                    this.vbounds.minX) / 2,
                s = (this.vbounds.maxY + this.vbounds.minY) / 2,
                p = p / 2 - (p / 2 - o) * a,
                n = n / 2 - (n / 2 - s) * g;
            m ? (m = p - o, n -= s) : n = m = 0;
            this.oldMouseOver = e.onmouseover;
            this.oldMouseOut = e.onmouseout;
            a = {
                sx: a,
                sy: g,
                tx: -m,
                ty: -n,
                p: e,
                old_tr: this.tr
            };
            g = window.event || Event;
            cp.device == cp.IDEVICE || cp.device == cp.ANDROID ? (this.ontouchstartHandler = j(g, this.element, a,
                f), this.ontouchendHandler = j(g, this.element, a, k), cp.useg ? (cp.registerGestureEvent(e,
                cp.GESTURE_EVENT_TYPES.TOUCH, this.ontouchstartHandler), cp.registerGestureEvent(e, cp
                .GESTURE_EVENT_TYPES.RELEASE,
                this.ontouchendHandler)) : (e.ontouchstart = j(g, this.element, a, f), e.ontouchend = j(g,
                this.element, a, k))) : (e.onmouseover = j(g, this.element, a, l, e.onmouseover), e
                .onmousemove = j(g, this.element, a, i, e.onmousemove), e.onmouseout = j(g, this.element, a, d,
                    e.onmouseout), e.onmousedown = j(g, this.element, a, f), e.onmouseup = j(g, this.element, a,
                    k), this.onmouseoverHandler = e.onmouseover, this.onmousemoveHandler = e.onmousemove, this
                .onmouseoutHandler = e.onmouseout, this.onmousedownHandler = e.onmousedown, this
                .onmouseupHandler = e.onmouseup);
            this.setUpClickHandler()
        }
    }
    this.isDrawn = !1;
    cp.responsive && (this.responsiveCSS = this.getAttribute("css"))
};
cp.inherits(cp.AutoShape, cp.DisplayObject);
cp.AutoShape.prototype.start = function(e, g) {
    this.drawIfNeeded(e, g);
    if (!this.effectIsStarted || e) this.updateEffects(this.hasEffect), this.effectIsStarted = !0
};
cp.AutoShape.prototype.reset = function() {
    delete cp.ropMap[this.element.id];
    this.isDrawn = !1;
    this.element.width = "0";
    this.element.height = "0";
    this.element.style.width = "0px";
    this.element.style.height = "0px";
    this.element.left = "0";
    this.element.top = "0";
    this.element.style.left = "0px";
    this.element.style.top = "0px";
    this.removeMouseHandlers()
};
cp.AutoShape.prototype.getCurrentCanvasObj = function() {
    if (this.canvasObj && this.canvasObj.b && this.canvasObj.p0) {
        var e = this.canvasObj;
        1 == this.AutoShapeState ? e = this.canvasObj.asbos : 2 == this.AutoShapeState && (e = this.canvasObj
        .asbds);
        return e
    }
};
cp.AutoShape.prototype.addMouseHandlers = function() {
    cp.device == cp.IDEVICE || cp.device == cp.ANDROID ? (cp.registerGestureEvent(this.actualParent, cp
        .GESTURE_EVENT_TYPES.TOUCH, this.ontouchstartHandler), cp.registerGestureEvent(this.actualParent, cp
        .GESTURE_EVENT_TYPES.RELEASE, this.ontouchendHandler)) : (this.actualParent.onmouseover = this
        .onmouseoverHandler, this.actualParent.onmousemove = this.onmousemoveHandler, this.actualParent
        .onmouseout = this.onmouseoutHandler, this.actualParent.onmousedown = this.onmousedownHandler,
        this.actualParent.onmouseup = this.onmouseupHandler)
};
cp.AutoShape.prototype.removeMouseHandlers = function() {
    if (this.actualParent)
        if (this.actualParent.onclick = null, cp.device == cp.IDEVICE || cp.device == cp.ANDROID) cp
            .removeGestureEvent(this.actualParent, cp.GESTURE_EVENT_TYPES.TOUCH), cp.removeGestureEvent(this
                .actualParent, cp.GESTURE_EVENT_TYPES.RELEASE);
        else if (this.actualParent.onmouseout = null, this.actualParent.onmousedown = null, this.actualParent
        .onmouseup = null, this.actualParent.onmouseover = null, this.oldMouseOver && (this.actualParent
            .onmouseover = this.oldMouseOver),
        this.oldMouseOut) this.actualParent.onmouseout = this.oldMouseOut
};
cp.AutoShape.prototype.setUpClickHandler = function() {
    var e = this,
        g = !1,
        a = !1,
        f = cp.movie.stage.currentSlide;
    if (this.actualParent && f) {
        if ((g = "Question Slide" == f.st) && f.qs)(f = cp.D[f.qs]) && "Hotspot" == f.qtp && (a = !0);
        g && !a && !this.actualParent.onclick ? cp.registerGestureEvent(this.actualParent, cp.GESTURE_EVENT_TYPES
            .TAP,
            function(a) {
                return function(d) {
                    e.is_inside_canvas(d) && cp.clickSuccessHandler(a)
                }
            }(this.parentData)) : (this.actualParent.onclick = null, cp.removeGestureEvent(this.actualParent, cp
            .GESTURE_EVENT_TYPES.TAP))
    }
};
cp.AutoShape.prototype.restOfProjectDoOnNewSlide = function() {
    this.addMouseHandlers();
    this.setUpClickHandler()
};
cp.AutoShape.prototype.drawForResponsive = function(e, g) {
    if (!this.responsiveCSS) return !1;
    if (this.isDrawn && !e) return !0;
    var a = cp.getResponsiveCSS(this.responsiveCSS),
        f = !1,
        f = this.sh && !this.sh.i,
        k = void 0 != this.tr;
    if (this.currentCSS == a && e && this.isDrawn && g == cp.ReasonForDrawing.kMoviePaused) return cp.verbose && cp
        .log("Returning because this.isDrawn : " + this.isDrawn), !0;
    this.currentCSS = a;
    var d = this.getCurrentCanvasObj(),
        l = this.getAttribute("dn");
    this.parentDivName = l;
    var i = a;
    cp.applyTransform(this.actualParent,
        "rotate(0)");
    cp.applyResponsiveStyles(this.actualParent, a, !0);
    var j = cp.D[l];
    if (j.rpvt && j.autoGrow && (g == cp.ReasonForDrawing.kTextGrow || g == cp.ReasonForDrawing
            .kLinkedToItemAppeared || g == cp.ReasonForDrawing.kMouseEvent || g == cp.ReasonForDrawing.kMoviePaused
            )) {
        if ((l = j.minItemHeight) && this.actualParent.clientHeight < l) this.actualParent.style.height = l + "px";
        cp.createResponsiveStyleObj(a, a.p, a.l, a.t, a.r, a.b, this.actualParent.clientWidth + "px", this
            .actualParent.clientHeight + "px", a.crop)
    }
    j.minItemHeight = this.actualParent.clientHeight;
    this.actualParent.offsetHeight = this.actualParent.offsetHeight;
    this.actualParentClientBoundingRect = this.actualParent.getBoundingClientRect();
    var c = cp.movie.stage.mainSlideDiv.getBoundingClientRect();
    this.HFactor = this.WFactor = 1;
    this.WFactor = Math.round(100 * this.actualParent.clientWidth / this.bounds.width) / 100;
    this.HFactor = Math.round(100 * this.actualParent.clientHeight / this.bounds.height) / 100;
    var q, s, o, m, l = this.wrvBounds.minY - this.bounds.minY;
    q = (this.wrvBounds.minX - this.bounds.minX) * this.WFactor;
    s = l * this.HFactor;
    o = this.wrvBounds.width * this.WFactor;
    m = this.wrvBounds.height * this.HFactor;
    i = cp.createResponsiveStyleObj(a, a.p, this.actualParentClientBoundingRect.left - c.left + q - d.sw / 2 + "px",
        this.actualParentClientBoundingRect.top - c.top + s - d.sw / 2 + "px", "0px", "0px", o + d.sw + "px",
        m + d.sw + "px", a.crop);
    cp.applyResponsiveStyles(this.element.parentElement, i);
    this.parentElementClientBoundingRect = this.element.parentElement.getBoundingClientRect();
    l = 0;
    if (this.tr) {
        l = cp.getAngleFromRotateStr(this.tr);
        this.actualParent.offsetHeight =
            this.actualParent.offsetHeight;
        if (!this.m_centrePoint || g == cp.ReasonForDrawing.kOrientationChangeOrResize || g == cp.ReasonForDrawing
            .kLinkedToItemAppeared) this.m_centrePoint = cp.getCenterForRotation(this.actualParent);
        this.actualParentClientBoundingRect = this.actualParent.getBoundingClientRect();
        var n = cp.getBoundsForRotatedItem1(this.parentElementClientBoundingRect.left - c.left, this
                .parentElementClientBoundingRect.top - c.top, this.parentElementClientBoundingRect.width, this
                .parentElementClientBoundingRect.height,
                this.m_centrePoint, l, d.sw),
            p = t = r = b = void 0;
        "auto" != a.l && (p = n.l);
        "auto" != a.t && (t = n.t);
        "auto" != a.r && (r = n.r);
        "auto" != a.b && (b = n.b);
        i = cp.createResponsiveStyleObj(i, a.p, p, t, r, b, n.w, n.h, a.crop);
        cp.applyResponsiveStyles(this.element.parentElement, i);
        this.parentElementClientBoundingRect = this.element.parentElement.getBoundingClientRect()
    }
    this.parentElementClientBoundingRect = this.element.parentElement.getBoundingClientRect();
    p = n = 0;
    this.m_centrePoint && (n = this.m_centrePoint.X - (this.actualParentClientBoundingRect.left -
        c.left), p = this.m_centrePoint.Y - (this.actualParentClientBoundingRect.top - c.top));
    if (j.rpvt && (j = this.actualParent.id + "_vTxtHandlerHolder", i = cp(j), i || (i = cp.newElem("div"), i.id =
                j, i.style.display = "block", i.style.position = "absolute", i.style.width = this.actualParent
                .clientWidth + "px", i.style.height = this.actualParent.clientHeight + "px", i.style.visibility =
                "hidden", this.actualParent.appendChild(i)), i.style.left = "0px", i.style.top = "0px", i.style
            .width = this.actualParent.clientWidth + "px", i.style.height = this.actualParent.clientHeight +
            "px", i = this.actualParent.id + "_vTxtHolder", j = cp(i), j || (j = cp.newElem("div"), j.id = i, j
                .style.display = "block", j.style.position = "absolute", j.style.width = this.actualParent
                .clientWidth + "px", j.style.height = this.actualParent.clientHeight + "px", this.element
                .parentElement.appendChild(j)), i = this.actualParentClientBoundingRect.top - this
            .parentElementClientBoundingRect.top + this.actualParent.clientHeight / 2, j.style.left = this
            .actualParentClientBoundingRect.left - this.parentElementClientBoundingRect.left + this.actualParent
            .clientWidth /
            2 - this.actualParent.clientWidth / 2 + "px", j.style.top = i - this.actualParent.clientHeight / 2 +
            "px", j.style.width = this.actualParent.clientWidth + "px", j.style.height = this.actualParent
            .clientHeight + "px", g == cp.ReasonForDrawing.kOrientationChangeOrResize && cp.updateVarText(this
                .actualParent, !0, !0), this.tr)) i = "center center", i = n ? 100 * n / j.clientWidth + "%" :
        "center", i += " ", i = p ? i + (100 * p / j.clientHeight + "%") : i + "center", j.style[
            "-ms-transform-origin"] = i, j.style["-moz-transform-origin"] = i, j.style["-webkit-transform-origin"] =
        i, j.style["-o-transform-origin"] = i, j.style["transform-origin"] = i, cp.applyTransform(j, this.tr);
    var j = this.actualParent,
        v = 0,
        w = 0,
        v = o + 2 * d.sw,
        w = m + 2 * d.sw;
    if (f) {
        o = this.element.parentElement.clientWidth;
        m = this.element.parentElement.clientHeight;
        var i = cp("div_Slide")
            .clientWidth,
            y = cp("div_Slide")
            .clientHeight,
            v = v > i ? v : i,
            w = w > y ? w : y,
            v = v > o ? v : o,
            w = w > m ? w : m
    } else v = Math.ceil(parseFloat(this.element.parentElement.style.width)), w = Math.ceil(parseFloat(this.element
        .parentElement.style.height));
    i = cp.createResponsiveStyleObj(a,
        void 0, "0px", "0px", "0px", "0px", v + "px", w + "px", void 0);
    o = this.parentElementClientBoundingRect.left - c.left;
    m = this.parentElementClientBoundingRect.top - c.top;
    i = this.canvas = cp.createResponsiveCanvas(i, v, w, this.element);
    !this.isParentOfTypeSlide && f && (this.element.style["margin-left"] = (0 > o ? 0 : -1) * o + "px", this.element
        .style["margin-top"] = (0 > m ? 0 : -1) * m + "px");
    this.re && (this.element.parentElement.style.webkitBoxReflect = "below " + this.re.d +
        "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" +
        (1 - this.re.s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p / 100) + ")))");
    cp.movie.stage.addToParentChildMap(j.id, this.element.id);
    this.element.originalParent = j;
    c = i.gc;
    c.crop = a.crop ? a.crop : void 0;
    c.save();
    f ? (c.setTransform(1, 0, 0, 1, 0 > o ? -o : 0, 0 > m ? -m : 0), c.translate(o, m), c.shadowOffsetX = this.sh
        .d * Math.cos(Math.PI * this.sh.a / 180), c.shadowOffsetY = this.sh.d * Math.sin(Math.PI * this.sh.a /
            180), c.shadowBlur = this.sh.b, a = this.sh.o, 1 == a && (a = 0.999), c.shadowColor = cp
        .ConvertRGBToRGBA(this.sh.c, a)) : k || (c.translate(-q,
        -s), c.translate(d.sw / 2, d.sw / 2));
    this.element.style.display = "block";
    this.element.style.position = "absolute";
    c = i.gc;
    c.save();
    this.tr && (i = n ? 100 * n / j.clientWidth + "%" : "center", i += " ", i = p ? i + (100 * p / j.clientHeight +
            "%") : i + "center", j.style["-ms-transform-origin"] = i, j.style["-moz-transform-origin"] = i, j
        .style["-webkit-transform-origin"] = i, j.style["-o-transform-origin"] = i, j.style[
        "transform-origin"] = i, cp.applyTransform(j, this.tr), j.tr = this.tr);
    j.rotateAngle = l;
    if (f || k) f = this.element.parentElement.clientWidth / 2, k =
        this.element.parentElement.clientHeight / 2, f = this.actualParentClientBoundingRect.left - this
        .parentElementClientBoundingRect.left + n, k = this.actualParentClientBoundingRect.top - this
        .parentElementClientBoundingRect.top + p, c.translate(f, k), 0 != l ? c.rotate(Math.PI * l / 180) : c
        .rotate(0.02 * Math.PI / 180), c.translate(-n, -p);
    f = 0;
    void 0 != d.ss && (f = d.ss);
    k = 1;
    void 0 != d.fa && (k = d.fa / 100);
    void 0 != this.normalImage && 1 != k && (d = cp.movie.im.images[this.normalImage]) && d.nativeImage.complete &&
        c.drawImage(d.nativeImage, -d.nativeImage.width /
            2, -d.nativeImage.height / 2, d.nativeImage.width, d.nativeImage.height);
    if ((f = this.draw(c, f)) && void 0 != this.normalImage)(d = cp.movie.im.images[this.normalImage]) && d
        .nativeImage.complete ? (this.sh && !this.sh.i && (c.shadowOffsetX = 0, c.shadowOffsetY = 0, c.shadowBlur =
            0, c.shadowColor = "rgba(0,0,0,0)"), c.drawImage(d.nativeImage, -d.nativeImage.width / 2, -d
            .nativeImage.height / 2, d.nativeImage.width, d.nativeImage.height)) : f = !1;
    c.restore();
    this.transIn && g == cp.ReasonForDrawing.kRegularDraw && (this.element.parentElement.style.opacity =
        0);
    this.isDrawn = f;
    !0 == this.isDrawn && this.drawComplete(g);
    void 0 != this.parentData.enabled && !this.parentData.enabled && this.removeMouseHandlers();
    this.visible || cp.hide(this.parentDivName);
    return !0
};
cp.AutoShape.prototype.drawIfNeeded = function(e, g) {
    if ((!cp.responsive || !this.drawForResponsive(e, g)) && !this.isDrawn) {
        this.HFactor = this.WFactor = 1;
        var a = this.getCurrentCanvasObj(),
            f = this.bounds,
            k = a.sw;
        void 0 == k && (k = 1);
        1 != k && (this.vbounds.minX += 3 * k / 2, this.vbounds.minY += 3 * k / 2, this.vbounds.maxX -= 3 * k / 2,
            this.vbounds.maxY -= 3 * k / 2);
        var d = this.vbounds,
            l = f.minX,
            i = f.minY,
            j = f.maxX - f.minX,
            c = f.maxY - f.minY,
            k = this.actualParent;
        k.style.left = l + "px";
        k.style.top = i + "px";
        k.style.width = j + "px";
        k.style.height = c + "px";
        var c = !1,
            c = this.re || this.sh && !this.sh.i,
            l = 0 < d.minX && c ? 0 : d.minX,
            i = 0 < d.minY && c ? 0 : d.minY,
            q = c && cp.D.project.h > d.maxY ? cp.D.project.h : d.maxY,
            j = (c && cp.D.project.w > d.maxX ? cp.D.project.w : d.maxX) - l,
            d = this.canvas = cp.createCanvas(0, 0, j, q - i, this.element);
        this.element.style.display = "block";
        this.element.style.position = "absolute";
        this.element.parentElement.style.left = this.vbounds.minX + "px";
        this.element.parentElement.style.top = this.vbounds.minY + "px";
        this.element.parentElement.style.width = this.vbounds.maxX - this.vbounds.minX +
            "px";
        this.element.parentElement.style.height = this.vbounds.maxY - this.vbounds.minY + "px";
        this.element.style.marginLeft = l - this.vbounds.minX + "px";
        this.element.style.marginTop = i - this.vbounds.minY + "px";
        this.re && (this.element.parentElement.style.webkitBoxReflect = "below " + this.re.d +
            "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" + (1 - this.re
                .s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p / 100) + ")))");
        cp.movie.stage.addToParentChildMap(k.id, this.element.id);
        this.element.originalParent =
            k;
        d = d.gc;
        d.save();
        c ? d.setTransform(1, 0, 0, 1, 0 > l ? -l : 0, 0 > i ? -i : 0) : d.translate(-this.vbounds.minX, -this
            .vbounds.minY);
        this.sh && !this.sh.i && (d.shadowOffsetX = this.sh.d * Math.cos(Math.PI * this.sh.a / 180), d
            .shadowOffsetY = this.sh.d * Math.sin(Math.PI * this.sh.a / 180), d.shadowBlur = this.sh.b, l = this
            .sh.o, 1 == l && (l = 0.999), d.shadowColor = cp.ConvertRGBToRGBA(this.sh.c, l));
        this.element.style.display = "block";
        this.element.style.position = "absolute";
        l = 0;
        this.tr && (cp.applyTransform(k, this.tr), k.tr = this.tr, l = cp.getAngleFromRotateStr(this.tr));
        k.rotateAngle = l;
        if (this.sh || 0 != l) d.translate((f.minX + f.maxX) / 2, (f.minY + f.maxY) / 2), 0 != l ? d.rotate(Math
            .PI * l / 180) : d.rotate(0.02 * Math.PI / 180), d.translate(-(f.minX + f.maxX) / 2, -(f.minY + f
            .maxY) / 2);
        k = 0;
        void 0 != a.ss && (k = a.ss);
        l = 1;
        void 0 != a.fa && (l = a.fa / 100);
        if (void 0 != this.normalImage && 1 != l && (a = cp.movie.im.images[this.normalImage]) && a.nativeImage
            .complete) d.translate((f.minX + f.maxX) / 2, (f.minY + f.maxY) / 2), d.drawImage(a.nativeImage, -a
                .nativeImage.width / 2, -a.nativeImage.height / 2, a.nativeImage.width, a.nativeImage.height),
            d.translate(-(f.minX + f.maxX) / 2, -(f.minY + f.maxY) / 2);
        if ((k = this.draw(d, k)) && void 0 != this.normalImage)(a = cp.movie.im.images[this.normalImage]) && a
            .nativeImage.complete ? (this.sh && !this.sh.i && (d.shadowOffsetX = 0, d.shadowOffsetY = 0, d
                .shadowBlur = 0, d.shadowColor = "rgba(0,0,0,0)"), d.translate((f.minX + f.maxX) / 2, (f.minY +
                f.maxY) / 2), d.drawImage(a.nativeImage, -a.nativeImage.width / 2, -a.nativeImage.height / 2, a
                .nativeImage.width, a.nativeImage.height)) : k = !1;
        d.restore();
        this.transIn && (this.element.parentElement.style.opacity =
            0);
        this.isDrawn = k;
        !0 == this.isDrawn && this.drawComplete(g);
        void 0 != this.parentData.enabled && !this.parentData.enabled && this.removeMouseHandlers();
        this.visible || cp.hide(this.parentDivName)
    }
};
cp.AutoShape.prototype.draw = function(e, g) {
    this.drawFillBoundary(e, !0);
    var a = this.getCurrentCanvasObj();
    if (a) {
        var f = 1;
        void 0 != a.fa && (f = a.fa / 100);
        var k = e.globalAlpha,
            d = !1;
        0 != g && 0 < a.sw && (e.globalAlpha = f, this.setFill(e), e.globalAlpha = k, this.drawBoundary(e, g));
        e.globalAlpha = f;
        d = this.setFill(e);
        e.globalAlpha = k;
        0 == g && 0 < a.sw && this.drawFillBoundary(e, !1);
        0 < a.sw && (e.lineWidth = a.sw, e.strokeStyle = a.sc, e.stroke());
        0 != a.sw && (e.shadowOffsetX = 0, e.shadowOffsetY = 0, e.shadowBlur = 0, e.shadowColor = "rgba(0,0,0,0)", e
            .stroke());
        return d
    }
};
cp.AutoShape.prototype.drawFillBoundary = function(e, g) {
    var a = null,
        f = this.canvasObj.p0,
        k = 0;
    if (f) {
        e.beginPath();
        for (k = 0; k < f.length; ++k)
            if (a = f[k], !(0 >= a.length)) switch (a[0]) {
                case cp.kMoveTo:
                    e.moveTo(a[1] * this.WFactor, a[2] * this.HFactor);
                    break;
                case cp.kLineTo:
                    e.lineTo(a[1] * this.WFactor, a[2] * this.HFactor);
                    break;
                case cp.kBezierTo:
                    e.bezierCurveTo(a[1] * this.WFactor, a[2] * this.HFactor, a[3] * this.WFactor, a[4] * this
                        .HFactor, a[5] * this.WFactor, a[6] * this.HFactor);
                    break;
                case cp.kClosePath:
                    e.closePath();
                    break;
                case cp.kNotClosed:
                    if (!g) break;
                case cp.kNoStroke:
                    k < f.length - 1 && (a = f[++k][0], cp.kBeginPath != a && --k);
                    for (; k < f.length - 1;)
                        if (a = f[++k][0], cp.kNotClosed == a || cp.kNoStroke == a || cp.kBeginPath == a) {
                            --k;
                            break
                        }
            }
    }
};
cp.AutoShape.prototype.drawBoundary = function(e, g) {
    var a = null,
        f = this.canvasObj.p0,
        k = 0,
        d = 0,
        l = 0;
    if (f) {
        var i = new cp.dashStruct,
            j = cp.getPattern(g, 7, 3);
        e.beginPath();
        for (l = 0; l < f.length; ++l)
            if (a = f[l], !(0 >= a.length)) switch (a[0]) {
                case cp.kMoveTo:
                    e.moveTo(a[1] * this.WFactor, a[2] * this.HFactor);
                    k = a[1] * this.WFactor;
                    d = a[2] * this.HFactor;
                    i = new cp.dashStruct;
                    break;
                case cp.kLineTo:
                    cp.drawDashedLineImpl(e, j, i, k, d, a[1] * this.WFactor, a[2] * this.HFactor);
                    k = a[1] * this.WFactor;
                    d = a[2] * this.HFactor;
                    break;
                case cp.kBezierTo:
                    cp.drawDashedBezierCurve(e,
                        j, i, k, d, a[1] * this.WFactor, a[2] * this.HFactor, a[3] * this.WFactor, a[4] *
                        this.HFactor, a[5] * this.WFactor, a[6] * this.HFactor);
                    k = a[5] * this.WFactor;
                    d = a[6] * this.HFactor;
                    break;
                case cp.kClosePath:
                    i = new cp.dashStruct
            }
    }
};
cp.AutoShape.prototype.setFill = function(e) {
    var g = null,
        a = "",
        a = null,
        f = [],
        k = 0,
        d = 0,
        l = 0,
        i = 1,
        g = g = null,
        l = !0,
        j = 0,
        f = j = 1,
        c = !1,
        q = !1;
    if (i = this.getCurrentCanvasObj()) {
        if (i.gf) {
            if (g = cp.getGradientFill(i.gf, e, this.WFactor, this.HFactor)) e.fillStyle = g
        } else if (i.imgf) {
            l = !1;
            g = i.imgf;
            if (void 0 == g.img || void 0 == g.img.ip) return !1;
            a = g.img.ip;
            if ((a = cp.movie.im.images[a]) && a.nativeImage.complete) k = g.img.x, d = g.img.y, cp.responsive ? (
                    k = Math.floor(k * this.WFactor) + i.sw, d = Math.floor(d * this.HFactor) + i.sw) : (k += this
                    .canvasObj.b[0],
                    d += this.canvasObj.b[1]), c = !0, e.translate(k, d), l = g.s, (i = g.t) ? (g = e.createPattern(
                    a.nativeImage, "repeat"), e.fillStyle = g) : l ? void 0 != this.canvasObj.b && 4 == this
                .canvasObj.b.length && (f = this.canvasObj.b, j = f[2] - f[0], h = f[3] - f[1], cp.responsive && (
                        j *= this.WFactor, h *= this.HFactor), j /= g.img.w, f = h / g.img.h, e.scale(j, f), g = e
                    .createPattern(a.nativeImage, "no-repeat"), e.fillStyle = g) : (g = e.globalAlpha, e
                    .globalAlpha = 0, e.fillStyle = "#FFFFFF", e.fill(), e.globalAlpha = g, g = e.createPattern(a
                        .nativeImage, "no-repeat"), e.fillStyle = g),
                l = !0
        } else i.bc ? e.fillStyle = i.bc : this.normalImage && (q = !0, l = !1);
        l && e.fill();
        (1 != j || 1 != f) && e.scale(1 / j, 1 / f);
        c && e.translate(-k, -d);
        return l || q
    }
};
cp.GESTURE_EVENT_TYPES = {};
cp.GESTURE_EVENT_TYPES.TAP = "tap";
cp.GESTURE_EVENT_TYPES.DOUBLE_TAP = "doubletap";
cp.GESTURE_EVENT_TYPES.LONG_TAP = "longtap";
cp.GESTURE_EVENT_TYPES.HOLD = "hold";
cp.GESTURE_EVENT_TYPES.ROTATE = "rotate";
cp.GESTURE_EVENT_TYPES.DRAG = "drag";
cp.GESTURE_EVENT_TYPES.DRAG_START = "dragstart";
cp.GESTURE_EVENT_TYPES.DRAG_END = "dragend";
cp.GESTURE_EVENT_TYPES.SWIPE_UP = "swipeup";
cp.GESTURE_EVENT_TYPES.SWIPE_DOWN = "swipedown";
cp.GESTURE_EVENT_TYPES.SWIPE_LEFT = "swipeleft";
cp.GESTURE_EVENT_TYPES.SWIPE_RIGHT = "swiperight";
cp.GESTURE_EVENT_TYPES.TOUCH = "touch";
cp.GESTURE_EVENT_TYPES.RELEASE = "release";
cp.GESTURE_EVENT_TYPES.PINCH_OUT = "pinchout";
cp.GESTURE_EVENT_TYPES.PINCH_IN = "pinchin";
cp.GESTURE_EVENT_TYPES.TAP_ONE = "tapone";
cp.GESTURE_EVENT_TYPES.TAP_TWO = "taptwo";
cp.GESTURE_EVENT_TYPES.TAP_THREE = "tapthree";
cp.GESTURE_EVENT_TYPES.SWIPE_MOVE = "swipemove";
cp.GESTURE_EVENT_TYPES.SWIPE_ONE = "swipeone";
cp.GESTURE_EVENT_TYPES.SWIPE_TWO = "swipetwo";
cp.GESTURE_EVENT_TYPES.SWIPE_THREE = "swipethree";
cp.GESTURE_EVENT_TYPES.SWIPE_FOUR = "swipefour";
cp.GESTURE_EVENT_TYPES.SWIPE_LEFT_UP = "swipeleftup";
cp.GESTURE_EVENT_TYPES.SWIPE_LEFT_DOWN = "swipeleftdown";
cp.GESTURE_EVENT_TYPES.SWIPE_RIGHT_UP = "swiperightup";
cp.GESTURE_EVENT_TYPES.SWIPE_RIGHT_DOWN = "swiperightdown";
cp.GESTURE_EVENT_TYPES.PINCH = "pinch";
cp.GESTURE_EVENT_TYPES.PINCH_OPEN = "pinchopen";
cp.GESTURE_EVENT_TYPES.PINCH_CLOSE = "pinchclose";
cp.GESTURE_EVENT_TYPES.ROTATECW = "rotatecw";
cp.GESTURE_EVENT_TYPES.ROTATECCW = "rotateccw";
cp.GESTURE_EVENT_TYPES.SHAKE = "shake";
cp.GESTURE_EVENT_TYPES.SHAKE_FRONT_BACK = "shakefrontback";
cp.GESTURE_EVENT_TYPES.SHAKE_LEFT_RIGHT = "shakeleftright";
cp.GESTURE_EVENT_TYPES.SHAKE_UP_DOWN = "shakeupdown";
cp.GestureHandler = function() {
    this.movie = cp.movie;
    this.enabled = !0;
    this.initializeDefaultGestureEvents()
};
cp.GestureHandler.prototype.scaleMovie = function(a, b) {
    a.gesture.stopPropagation();
    a.gesture.preventDefault();
    var c = cp("div_Slide");
    c.style.webkitTransformOrigin = "" + a.gesture.center.pageX + " " + a.gesture.center.pageY + "";
    c.style.MozTransformOrigin = "" + a.gesture.center.pageX + " " + a.gesture.center.pageY + "";
    c.style.msTransformOrigin = "" + a.gesture.center.pageX + " " + a.gesture.center.pageY + "";
    c.style.webkitTransform = "scale(" + !b ? a.gesture.scale : "1)";
    c.style.MozTransform = "scale(" + !b ? a.gesture.scale : "1)";
    c.style.msTransform =
        "scale(" + !b ? a.gesture.scale : "1)"
};
cp.GestureHandler.prototype.addCPEventListeners = function() {
    if (cp.device != cp.DESKTOP) {
        var a = this;
        cp.em.addEventListener(function(b) {
            a.resetZoom.call(a, b);
            a.resetScroll.call(a, b)
        }, cp.SLIDEENTEREVENT);
        cp.em.addEventListener(function(b) {
            a.resetZoom.call(a, b);
            a.resetScroll.call(a, b)
        }, cp.ORIENTATIONCHANGEDEVENT)
    }
};
cp.GestureHandler.prototype.registerGestureEvent = function(a, b, c) {
    if (!cp.IsGestureSupportedDevice() || !cp.useg) a.onclick = c
};
cp.GestureHandler.prototype.removeGestureEvent = function(a) {
    if (!cp.IsGestureSupportedDevice() || !cp.useg) a.onclick = void 0
};
cp.GestureHandler.prototype.enableGestures = function() {
    this.enabled = !0;
    "undefined" != typeof Hammer && (Hammer && Hammer.detection) && (Hammer.detection.current = null)
};
cp.GestureHandler.prototype.disableGestures = function() {
    this.enabled = !1
};
cp.GestureHandler.prototype.addScaleEvent = function() {};
cp.GestureHandler.prototype.changeClickEventsToTouch = function() {
    this.registerGestureEvent(cp("playImage"), cp.GESTURE_EVENT_TYPES.TAP, function() {
        cp.movie.play()
    });
    this.registerGestureEvent(cp("ccClose"), cp.GESTURE_EVENT_TYPES.TAP, function() {
        cp.showHideCC()
    })
};
cp.GestureHandler.prototype.scrollH = function(a) {
    var b = cp.responsive ? cp("project") : cp("main_container"),
        a = b.getBoundingClientRect()
        .left + a;
    b.style.left = a + "px"
};
cp.GestureHandler.prototype.scrollV = function(a) {
    var b = cp.responsive ? cp("project") : cp("main_container"),
        a = b.getBoundingClientRect()
        .top + a;
    b.style.top = a + "px"
};
cp.GestureHandler.prototype.getDefaultGestureHandler = function(a) {
    switch (a) {
        case cp.GESTURE_EVENT_TYPES.TAP_TWO:
            return function() {
                cp.m_gestureHandler.enabled && cp.handlePlaybarShowHide()
            };
        case cp.GESTURE_EVENT_TYPES.LONG_TAP:
            return function() {
                cp.m_gestureHandler.enabled && cp.toggleMoviePlayPause()
            };
        case cp.GESTURE_EVENT_TYPES.HOLD:
            return function() {
                cp.m_gestureHandler.enabled && cp.handlePlaybarShowHide()
            };
        case cp.GESTURE_EVENT_TYPES.DOUBLE_TAP:
            return function() {
                cp.m_gestureHandler.enabled && cp.handleTOCOpenClose()
            };
        case cp.GESTURE_EVENT_TYPES.SWIPE_UP:
            return function(a) {
                if (cp.m_gestureHandler.enabled) {
                    if (cp.canScroll("up", cp.GESTURE_EVENT_TYPES.SWIPE_UP)) return !1;
                    50 > a.gesture.distance || (a.gesture.stopPropagation(), a.gesture.preventDefault(), cp(
                            "div_Slide")
                        .scaleFactor && 1 != cp("div_Slide")
                        .scaleFactor || cp.togglePlaybarShowHide())
                }
            };
        case cp.GESTURE_EVENT_TYPES.SWIPE_DOWN:
            return function(a) {
                if (cp.m_gestureHandler.enabled) {
                    if (cp.canScroll("down", cp.GESTURE_EVENT_TYPES.SWIPE_DOWN)) return !1;
                    50 > a.gesture.distance ||
                        (a.gesture.stopPropagation(), a.gesture.preventDefault(), cp("div_Slide")
                            .scaleFactor && 1 != cp("div_Slide")
                            .scaleFactor || cp.togglePlaybarShowHide())
                }
            };
        case cp.GESTURE_EVENT_TYPES.SWIPE_LEFT:
            return function(a) {
                if (cp.m_gestureHandler.enabled) {
                    if (!cp.responsive && cp.canScroll("left", cp.GESTURE_EVENT_TYPES.SWIPE_LEFT)) return !1;
                    if (!(50 > a.gesture.distance) && (a.gesture.stopPropagation(), a.gesture.preventDefault(),
                            !(cp("div_Slide")
                                .scaleFactor && 1 != cp("div_Slide")
                                .scaleFactor) && (!cp.D || !cp.D.baq))) {
                        var a = cp.goToNextSlide,
                            c = window;
                        if (cp.movie.stage && cp.movie.stage.currentSlide && "Question Slide" == cp.movie.stage
                            .currentSlide.st) {
                            var d = cp.getQuestionObject(cp.D[cp.movie.stage.currentSlide.mdi].dn);
                            d && (a = d.moveForward, c = d)
                        }
                        a.call(c, void 0)
                    }
                }
            };
        case cp.GESTURE_EVENT_TYPES.SWIPE_RIGHT:
            return function(a) {
                if (cp.m_gestureHandler.enabled) {
                    if (!cp.responsive && cp.canScroll("right", cp.GESTURE_EVENT_TYPES.SWIPE_RIGHT)) return !1;
                    if (!(50 > a.gesture.distance) && (a.gesture.stopPropagation(), a.gesture.preventDefault(),
                            !(cp("div_Slide")
                                .scaleFactor &&
                                1 != cp("div_Slide")
                                .scaleFactor) && (!cp.D || !cp.D.baq))) {
                        var a = cp.goToPreviousSlide,
                            c = window;
                        if (cp.movie.stage && cp.movie.stage.currentSlide && "Question Slide" == cp.movie.stage
                            .currentSlide.st) {
                            var d = cp.getQuestionObject(cp.D[cp.movie.stage.currentSlide.mdi].dn);
                            d && (a = d.moveBackward, c = d)
                        }
                        a.call(c, void 0)
                    }
                }
            }
    }
};
cp.GestureHandler.prototype.initializeDefaultGestureEvents = function() {
    cp("div_Slide")
        .scaleFactor = 1;
    if (cp.IsGestureSupportedDevice() && cp.useg) {
        this.changeClickEventsToTouch();
        var a = cp("div_Slide");
        cp("main_container");
        cp.D.project.shc || this.addScaleEvent();
        this.registerGestureEvent(a, cp.GESTURE_EVENT_TYPES.LONG_TAP, this.getDefaultGestureHandler(cp
            .GESTURE_EVENT_TYPES.LONG_TAP));
        this.registerGestureEvent(a, cp.GESTURE_EVENT_TYPES.DOUBLE_TAP, this.getDefaultGestureHandler(cp
            .GESTURE_EVENT_TYPES.DOUBLE_TAP));
        this.registerGestureEvent(a, cp.GESTURE_EVENT_TYPES.SWIPE_UP, this.getDefaultGestureHandler(cp
            .GESTURE_EVENT_TYPES.SWIPE_UP));
        this.registerGestureEvent(a, cp.GESTURE_EVENT_TYPES.SWIPE_DOWN, this.getDefaultGestureHandler(cp
            .GESTURE_EVENT_TYPES.SWIPE_DOWN));
        this.registerGestureEvent(a, cp.GESTURE_EVENT_TYPES.SWIPE_LEFT, this.getDefaultGestureHandler(cp
            .GESTURE_EVENT_TYPES.SWIPE_LEFT));
        this.registerGestureEvent(a, cp.GESTURE_EVENT_TYPES.SWIPE_RIGHT, this.getDefaultGestureHandler(cp
            .GESTURE_EVENT_TYPES.SWIPE_RIGHT))
    }
};
cp.GestureHandler.prototype.resetZoom = function() {};
cp.GestureHandler.prototype.resetScroll = function() {};
cp.GestureHandler.prototype.initializeProjectGestures = function() {
    if (cp.useg) {
        var a = cp.D.project.GestureData;
        if (a)
            for (var b in a) cp.registerGestureEvent(cp("project"), b, a[b])
    }
};
cp.GestureHandler.prototype.getEventPageX = function(a) {
    var b = a;
    a.changedTouches && 0 < a.changedTouches.length && (b = a.changedTouches[0]);
    if (!b) return 0;
    if (b.pageX) return b.pageX;
    var a = document.documentElement,
        c = document.body;
    return b.clientX + (a && a.scrollLeft || c && c.scrollLeft || 0) - (a && a.clientLeft || c && c.clientLeft || 0)
};
cp.GestureHandler.prototype.getEventPageY = function(a) {
    var b = a;
    a.changedTouches && 0 < a.changedTouches.length && (b = a.changedTouches[0]);
    if (!b) return 0;
    if (b.pageY) return b.pageY;
    var a = document.documentElement,
        c = document.body;
    return b.clientY + (a && a.scrollTop || c && c.scrollTop || 0) - (a && a.clientTop || c && c.clientTop || 0)
};
cp.registerGestureEvent = function(a, b, c) {
    a && (b && c) && cp.m_gestureHandler.registerGestureEvent(a, b, c)
};
cp.removeGestureEvent = function(a, b, c) {
    a && b && cp.m_gestureHandler.removeGestureEvent(a, b, c)
};
cp.IsGestureSupportedDevice = function() {
    return cp.device == cp.IDEVICE || cp.device == cp.ANDROID
};
cp.initializeGestureEvents = function() {
    cp.m_gestureHandler || (cp.IsGestureSupportedDevice() && (cp("cpDocument")
            .style.overflow = "auto"), cp.m_gestureHandler = !cp.IsGestureSupportedDevice() || !cp.useg ? new cp
        .GestureHandler : new cp.HammerGestureHandler, cp.m_gestureHandler.initializeProjectGestures())
};
cp.canScroll = function(a, b) {
    if (!cp.m_gestureHandler.enabled || cp.D.project.shc || 1 != cp("div_Slide")
        .scaleFactor) return !1;
    if (b != cp.GESTURE_EVENT_TYPES.DRAG && cp.m_gestureHandler.isScrolling) return !0;
    var c = cp.responsive ? cp("project")
        .getBoundingClientRect() : cp("main_container")
        .getBoundingClientRect();
    switch (a) {
        case "up":
            return c.bottom > window.innerHeight;
        case "down":
            return 0 > c.top;
        case "left":
            return c.right > window.innerWidth;
        case "right":
            return 0 > c.left;
        default:
            return !1
    }
};
cp.user_responseIdentifierArr = [];
cp.correct_responseIdentifierArr = [];
cp.ConvertToInteractionResultConstant = function(a) {
    if (!cp.IsRunningInACAP) {
        var b;
        switch (a.toLowerCase()) {
            case "correct":
                b = !0;
                break;
            case "wrong":
                b = !1;
                break;
            case "unanticipated":
                b = cp.LMSDriverHolder.INTERACTION_RESULT_UNANTICIPATED;
                break;
            case "neutral":
                b = cp.LMSDriverHolder.INTERACTION_RESULT_NEUTRAL;
                break;
            case "incorrect":
                b = !1;
                break;
            default:
                cp.verbose && cp.log("Could not find appropriate token for interaction result! -" + a)
        }
        return b
    }
};
cp.quizContinueButtonClickHandler = function() {
    cp.movie.play()
};
cp.qcnch = function(a) {
    return cp.quizContinueButtonClickHandler(a)
};
cp.defaultHandlerForRuntimeMessageBox = function() {
    var a = cp.movie.playbackController.GetQuizController();
    a && a.DefaultHandlerForRuntimeMessageBox()
};
cp.returnToQuiz = function() {
    var a = cp.movie.playbackController.GetQuizController();
    a && a.ReturnToQuiz()
};
cp.forceSubmitAll = function() {
    var a = cp.movie.playbackController.GetQuizController();
    a && a.ForceSubmitAll()
};
cp.quizReviewButtonClickHandler = function(a) {
    var a = cp.D[a.id],
        b = cp.movie.playbackController.GetQuizController();
    b && cp.movie.playbackController.HasQuiz() && (b.SetIsInReviewMode(!0), a && (cp.movie.playbackController
        .GetSlideNames(), a = b.GetFirstSlideInQuizIndex(), void 0 != a && (cpCmndGotoSlideAndResume = a)))
};
cp.qrch = function(a) {
    return cp.quizReviewButtonClickHandler(a)
};
cp.resetQuizData = function() {
    var a = cp.movie.playbackController.GetQuizController();
    if (a) {
        var b = cp.movie.questionObjs;
        if (!b) return 0;
        var c = b.length;
        if (!(0 >= c)) {
            for (var d = 0; d < c; ++d) b[d] && (b[d].getIsPretest() || b[d].resetQuestionData());
            a.GetScore()
        }
    }
};
cp.quizRetakeButtonClickHandler = function(a) {
    var b = cp.movie.playbackController.GetQuizController();
    if (b && (cp.movie.playbackController.HasQuiz() && cp.D[a.id]) && (a = cp.movie.playbackController
            .GetSlideNames(), b = b.GetFirstSlideInQuizIndex(), 0 <= b && (a = cp.D[a[b]]))) {
        var c = cp.movie.playbackController.GetGraphManager();
        void 0 != c && c.resetCurrentBranch(b);
        cp.resetQuizData();
        cpCmndGotoFrameAndResume = a.from
    }
};
cp.qrtch = function(a) {
    return cp.quizRetakeButtonClickHandler(a)
};
cp.quizPostResultButtonClickHandler = function() {
    cp.movie.playbackController.PostQuizResults()
};
cp.qprch = function(a) {
    return cp.quizPostResultButtonClickHandler(a)
};
cp.quizClearButtonClickHandler = function(a) {
    var b = cp.movie.playbackController.GetQuizController();
    if (b) {
        var c = cp.D[a.id];
        c && (c = cp.getQuestionObject(c.sn)) && (!c.getIsPretest() || !b.GetIsPretestQuestionsDisabled()) && c
            .clearButtonClickHandler(a)
    }
};
cp.qcch = function(a) {
    return cp.quizClearButtonClickHandler(a)
};
cp.quizSkipButtonClickHandler = function(a) {
    var b = cp.movie.playbackController.GetQuizController();
    if (b) {
        var c = cp.D[a.id];
        if (c && (c = cp.getQuestionObject(c.sn))) {
            if (!b.GetIsInReviewMode()) {
                if (c.getIsLastPretestQuestion()) return b.ExecutePretestAction(cp.movie.playbackController
                    .GetCurrentSlideIndex());
                var d = b.GetIsSubmitAll();
                if ("mustAnswer" == b.GetQuestionAdvanceType() && !d && !c.m_answersDisabled && !c.getIsPretest())
                    return;
                var e = c.getSlideIndex();
                if (0 <= e && !c.getIsPretest() && !d) {
                    d = !1;
                    b = b.GetGraphManager();
                    if (void 0 != b) {
                        var f = b.getNextSlideList(e);
                        if (void 0 != f)
                            if (1 == f.length) d = !1;
                            else if (d = !0, f = b.getBranchHistory(), void 0 != f)
                            for (var g = f.length - 1; 0 <= g; --g) {
                                var i = f[g];
                                if (i == e && g != f.length - 1 && b.getIsJumpValid(i, f[g + 1])) {
                                    d = !1;
                                    break
                                }
                            }
                    }
                    if (d) return
                }
                if ("" != cp.movie.playbackController.AllowedToGoToSlide(cpInfoCurrentSlideIndex,
                        cpInfoCurrentSlideIndex + 1)) return
            }
            cpQuizInfoTotalUnansweredQuestions += 1;
            c.skipButtonClickHandler(a)
        }
    }
};
cp.qskch = function(a) {
    return cp.quizSkipButtonClickHandler(a)
};
cp.quizBackButtonClickHandler = function(a) {
    var b = cp.movie.playbackController.GetQuizController();
    if (b) {
        var c = cp.D[a.id];
        c && (c = cp.getQuestionObject(c.sn)) && (b.GetIsInReviewMode() || "" == cp.movie.playbackController
                .AllowedToGoToSlide(cpInfoCurrentSlideIndex, cpInfoCurrentSlideIndex - 1)) && c
            .backButtonClickHandler(a)
    }
};
cp.qbch = function(a) {
    return cp.quizBackButtonClickHandler(a)
};
cp.quizSubmitButtonClickHandler = function(a) {
    var b = cp.movie.playbackController.GetQuizController();
    if (b && (a = cp.D[a.id]))
        if ((a = cp.getQuestionObject(a.sn)) && (!a.getIsPretest() || !b.GetIsPretestQuestionsDisabled())) a
            .getWasJudged() || a.judge(!1, !1), cpQuizInfoTotalUnansweredQuestions -= 1
};
cp.qsbch = function(a) {
    return cp.quizSubmitButtonClickHandler(a)
};
cp.quizSubmitAllButtonClickHandler = function() {
    var a = cp.movie.playbackController.GetQuizController();
    a && a.SubmitAllQuestions(!0, !1)
};
cp.qsabch = function(a) {
    return cp.quizSubmitAllButtonClickHandler(a)
};
cp.intTimeoutID = "";
cp.CallFunctionAfterAPIIsLoaded = function(a) {
    if (IsLoaded()) return "" != intTimeoutID && (window.clearTimeout(intTimeoutID), intTimeoutID = ""), eval(a);
    intTimeoutID = window.setTimeout("CallFunctionAfterAPIIsLoaded(" + a + ")", 100)
};
cp.UnloadActivties = function() {
    if (!(cp.LMSUnloaded || void 0 == cp.LMSDriverHolder && !cp.IsRunningInACAP)) {
        var a = cp.movie.playbackController;
        a && (a.GetIsTracked() && "EMAIL" != a.m_lmsType.toUpperCase() && "ACROBAT" != a.m_lmsType.toUpperCase() &&
            "INTERNALSERVER" != a.m_lmsType.toUpperCase()) && (cp.movie.virgin && a.RestoreQuizState(), a
            .IsRunningInConnect() ? a.ExitCourse() : a.SendCourseData(!0), a.ClearPendingCalls());
        cp.LMSDriverHolder && (cp.LMSDriverHolder.CommitData && cp.LMSDriverHolder.CommitData(), cp.LMSDriverHolder
            .Unload &&
            cp.LMSDriverHolder.Unload());
        cp.LMSUnloaded = !0
    }
};
cp.intQuestionSymbolCounter = 0;
cp.ASCII_QUESTION = 63;
cp.CheckForDebugCommand = function(a) {
    if (!cp.IsRunningInACAP) {
        var b = 0,
            b = window.event ? window.event.keyCode : a.which;
        b == cp.ASCII_QUESTION ? (cp.intQuestionSymbolCounter++, 3 == cp.intQuestionSymbolCounter && (cp
            .intQuestionSymbolCounter = 0, cp.LMSDriverHolder.ShowDebugWindow())) : 0 != b && (cp
            .intQuestionSymbolCounter = 0)
    }
};
cp.CheckForDebugCommandOnDevices = function(a) {
    cp.IsRunningInACAP || 30 < a.rotation && cp.LMSDriverHolder.ShowDebugWindow()
};
cp.topWindowBeforeUnloadHandler = void 0;
cp.topWindowUnloadHandler = void 0;

function RegisterForCloseOnTopWindow() {
    if (!cp.IsRunningInACAP && cp.MSIE == cp.browser && void 0 != cp.topWindow && cp.topWindow != cp.LMSDriverHolder
        .self) {
        var a = cp.topWindow;
        a.onbeforeunload && void 0 != a.onbeforeunload && (cp.topWindowBeforeUnloadHandler = a.onbeforeunload);
        a.onunload && void 0 != a.onunload && (cp.topWindowUnloadHandler = a.onunload);
        a.onbeforeunload = cp.CPDoBeforeUnload;
        a.onunload = cp.CPDoUnload
    }
}
cp.CPDoBeforeUnload = function() {
    var a = window.onbeforeunload;
    a && a();
    topWindowBeforeUnloadHandler && topWindowBeforeUnloadHandler()
};
cp.CPDoUnload = function() {
    cp.UnloadActivties();
    topWindowUnloadHandler && topWindowUnloadHandler()
};
cp.g_ShouldRandomize = !0;
cp.startBlnStr = !1;
cp.handleACAPResumeData = function(a) {
    cp.IsRunningInACAP && a.then(function(a) {
        cp.resumeDataChunk = unescape(a);
        "" != cp.resumeDataChunk && void 0 != cp.resumeDataChunk && "0" != cp.resumeDataChunk ? (cp
            .g_ShouldRandomize = !1, a = void 0, cp.movie && (a = cp.movie.playbackController), a && a
            .RestoreQuizState()) : cp.g_ShouldRandomize = !0;
        cp.ContinueCPInit();
        cp.unblockFromLMS()
    }, function() {
        cp.g_ShouldRandomize = !0;
        cp.ContinueCPInit();
        cp.unblockFromLMS()
    })
};
cp.fireResumeDataEvent = function(a) {
    cp.IsRunningInACAP && cp.em.fireEvent("CPSet_ResumeData", {
        ResumeData: a
    })
};
cp.LoadActivities = function() {
    if (!cp.IsRunningInACAP)
        if (cp.IsRunningInConnect()) cp.DoConnectRelatedLMSLoad();
        else if (!cp.IsRunningInALEC && "undefined" != typeof cp.LMSDriverHolder) {
        var a = cp.D.quizReportingData;
        a && (cp.LMSDriverHolder.blnDebug = a.lWriteDebugInfo);
        cp.LMSDriverHolder.blockedForLMS || (cp.LMSDriverHolder.blockedForLMS = !0, cp("blockUserInteraction")
            .style.display = "block", cp("blockUserInteraction")
            .style.width = "100%", cp("blockUserInteraction")
            .style.height = "100%", cp("blockUserInteraction")
            .style["z-index"] =
            1E4);
        var b = cp.LMSDriverHolder.confirm;
        cp.LMSDriverHolder.confirm = function(a) {
            cp.LMSDriverHolder.confirm = b;
            LoadContent();
            return b(a)
        };
        RegisterForCloseOnTopWindow();
        cp.LMSDriverHolder.Start()
    }
};

function LoadContent() {
    cp.verbose && cp.log("LoadContent called...IsContentLoaded : " + cp.IsContentLoaded);
    if (!cp.IsRunningInACAP && !cp.IsContentLoaded) {
        try {
            var a = cp.LMSDriverHolder.IsLoaded();
            cp.startBlnStr = a;
            if (!a) {
                cp.log("LMS Driver not loaded.");
                cp.ContinueCPInit();
                cp.unblockFromLMS();
                return
            }
            document.onkeypress = cp.CheckForDebugCommand;
            cp.DESKTOP != cp.device && (document.ongesturechange = cp.CheckForDebugCommandOnDevices)
        } catch (b) {
            cp.log("LMS Driver not found.");
            cp.ContinueCPInit();
            cp.unblockFromLMS();
            return
        }
        if (cp.LMSDriverHolder.GetEntryMode() == cp.LMSDriverHolder.ENTRY_FIRST_TIME) cp.resumeDataChunk = unescape(cp
                .LMSDriverHolder.GetDataChunk()), "" != cp.resumeDataChunk && void 0 != cp.resumeDataChunk && "0" != cp
            .resumeDataChunk ? (cp.g_ShouldRandomize = !1, a = void 0, cp.movie && (a = cp.movie.playbackController),
                a && a.RestoreQuizState()) : (cp.LMSDriverHolder.SetBookmark("0"), cp.LMSDriverHolder.SetDataChunk(
            "0"));
        else if (cp.LMSDriverHolder.GetBookmark(), cp.resumeDataChunk = unescape(cp.LMSDriverHolder.GetDataChunk()),
            "" !=
            cp.resumeDataChunk && void 0 != cp.resumeDataChunk && "0" != cp.resumeDataChunk) {
            if (cp.g_ShouldRandomize = !1, a = void 0, cp.movie && (a = cp.movie.playbackController), a && a
                .RestoreQuizState(), cp.verbose) cp.log(cp.resumeDataChunk), cp.log("Unblocking UI")
        } else cp.g_ShouldRandomize = !0;
        cp.ContinueCPInit();
        cp.unblockFromLMS();
        cp.IsContentLoaded = !0
    }
}
cp.resumeValuesFromDataChunk = function() {
    if (cp.resumeDataChunk && "0" != cp.resumeDataChunk) {
        var a = cp.D.quizReportingData;
        !(a && !0 != a.trackingSendResumeData) && cp.movie.playbackController && (a = new cp.QuizState, a.init(), a
            .fromString(cp.resumeDataChunk), cp.movie.playbackController.restoreQuizFromState(a))
    }
};
cp.createAndGetDataChunk = function() {
    if (!cp.movie.playbackController) return "";
    var a = new cp.QuizState;
    a.init();
    cp.movie.playbackController.saveQuizState(a);
    return a.toString()
};
cp.getQuestionNumberInQuiz = function(a) {
    var b = -1,
        a = cp.D[a];
    void 0 != a && (b = a.qnq);
    return b
};
cp.getQuestionObjectName = function(a) {
    var b, a = cp.getQuestionNumberInQuiz(a); - 1 != a && (b = cp.movie.questions[a]);
    return b
};
cp.getQuestionObject = function(a) {
    var b, a = cp.getQuestionNumberInQuiz(a); - 1 != a && (b = cp.movie.questionObjs[a]);
    return b
};
cp.QuizState = function() {
    this.m_curReadPos = 0;
    this.m_b64Alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_-";
    this.m_to64 = [];
    this.m_from64 = [];
    this.m_escAlphabet = "$.!*+";
    this.m_doubleEsc = "~";
    this.m_esc = [];
    this.m_mask = [63, 4095, 262143, 16777215, 1073741823];
    this.m_fromEsc = [];
    this.m_state = ""
};
cp.QuizState.prototype = {
    init: function() {
        for (var a = 0; a < this.m_b64Alphabet.length; a++) this.m_to64[a] = this.m_b64Alphabet.charAt(a), this
            .m_from64[this.m_b64Alphabet.charCodeAt(a)] = a;
        for (a = 0; a < this.m_escAlphabet.length; ++a) this.m_esc[a] = this.m_escAlphabet.charAt(a), this
            .m_fromEsc[this.m_escAlphabet.charAt(a)] = a + 1
    },
    toString: function() {
        return escape(this.m_state)
    },
    fromString: function(a) {
        this.m_state = a;
        this.m_curReadPos = 0
    },
    writeNumber: function(a) {
        var b, c, d, a = Math.floor(a);
        if (a > this.m_mask[this.m_mask.length -
                1]) this.m_state = this.m_state.concat(this.m_doubleEsc), this.writeNumber(a / (this.m_mask[this
            .m_mask.length - 1] + 1)), this.writeNumber(a & this.m_mask[this.m_mask.length - 1]);
        else
            for (b = 0; b < this.m_esc.length; b++)
                if ((a & this.m_mask[b]) == a) {
                    0 < b && (this.m_state = this.m_state.concat(this.m_esc[b - 1]));
                    for (var e = c = 0; e <= b; e++) d = a >> c & 63, this.m_state = this.m_state.concat(this
                        .m_to64[d]), c += 6;
                    break
                }
    },
    readNumber: function() {
        var a = this.m_state.charAt(this.m_curReadPos),
            b = this.m_state.charCodeAt(this.m_curReadPos++),
            c, d = 0,
            e;
        if (a == this.m_doubleEsc) return d = this.readNumber(), a = this.readNumber(), d * (this.m_mask[this
            .m_mask.length - 1] + 1) + a;
        a = this.m_fromEsc[a];
        if (0 == a || void 0 == a) d = this.m_from64[b];
        else
            for (b = e = 0; b <= a; b++) c = this.m_from64[this.m_state.charCodeAt(this.m_curReadPos++)], d |=
                c << e, e += 6;
        return d
    },
    writeBoolean: function(a) {
        this.m_state = this.m_state.concat(a ? "1" : "0")
    },
    readBoolean: function() {
        return "1" == this.m_state.charAt(this.m_curReadPos++)
    },
    writeString: function(a) {
        this.writeNumber(a.length);
        this.m_state = this.m_state.concat(a)
    },
    readString: function() {
        var a = this.readNumber(),
            b = this.m_state.substr(this.m_curReadPos, a);
        this.m_curReadPos += a;
        return b
    },
    getReadPos: function() {
        return this.m_curReadPos
    },
    setReadPos: function(a) {
        this.m_curReadPos = a
    },
    getWritePos: function() {
        return this.m_curReadPos
    },
    setWritePos: function(a) {
        this.m_curReadPos = a
    },
    getData: function() {
        return this.toString()
    },
    setData: function(a) {
        this.fromString(a)
    }
};
cp.QuizController = function() {
    this.m_showPlaybar = !0;
    this.quizInProgress = !1;
    this.quizNumFinishes = this.quizNumStarts = 0;
    this.sawAnyScoreSlide = !1;
    this.m_QuizzingData = void 0;
    this.m_questionSlideNames = [];
    this.m_playbackController = void 0;
    this.m_scoreDisplay = {};
    this.m_GoToQuizScopeActionExecuted = !1;
    this.m_RunTimeMsgBox = void 0;
    this.m_ExecutingPretestAction = this.m_PretestQuestionsDisabled = this.m_FirstNonPretestQuestionEncountered =
        this.m_forceAbsoluteProgressType = this.verbose = this.m_submittedAllQuestions = this.m_HandledSubmitAll = !
        1
};
cp.QuizController.prototype = {
    GetIsCurrentSlideLastPrestest: function() {
        if (!this.m_playbackController) return !1;
        var a = this.m_playbackController.GetCurrentSlideIndex();
        if (0 > a || a >= cp.movie.stage.slides.length) return !1;
        a = this.GetQuestionsOnSlide(a);
        return !a || 0 >= a.length ? !1 : (a = a[0]) ? a.getIsLastPretestQuestion() : !1
    },
    GetIsPretestQuestionsDisabled: function() {
        return this.m_PretestQuestionsDisabled
    },
    GetForceAbsoluteProgressType: function() {
        return this.m_forceAbsoluteProgressType
    },
    SetForceAbsoluteProgressType: function(a) {
        this.m_forceAbsoluteProgressType = a
    },
    GetFirstNonPretestQuestionEncountered: function() {
        return this.m_FirstNonPretestQuestionEncountered
    },
    SetFirstNonPretestQuestionEncountered: function(a) {
        this.m_FirstNonPretestQuestionEncountered = a
    },
    GetQuestionScoresToSend: function() {
        var a = [],
            b = cp.movie.stage.slides;
        if (!b) return [];
        for (var c = 0; c < b.length; ++c)
            if (cp.D[b[c]].v)
                for (var d = this.GetQuestionsOnSlide(c), e = 0; e < d.length; ++e) {
                    var f = d[e];
                    f && a.push(f.getQuestionScore())
                }
        return a
    },
    saveState: function(a) {
        a.writeBoolean(this.GetIsInReviewMode());
        a.writeBoolean(!1);
        a.writeBoolean(this.quizInProgress);
        a.writeNumber(this.quizNumStarts);
        a.writeNumber(this.quizNumFinishes);
        a.writeBoolean(this.sawAnyScoreSlide);
        a.writeBoolean(this.m_submittedAllQuestions);
        a.writeBoolean(this.m_PretestQuestionsDisabled);
        a.writeBoolean(cpInQuizScope);
        a.writeString("" + cpQuizScopeSlide);
        var b = this.GetQuestionScoresToSend();
        a.writeNumber(b.length);
        for (whichQuestionScore in b) {
            var c = b[whichQuestionScore];
            c && c.saveState(a)
        }
        this.saveBranchInfo(a)
    },
    saveBranchInfo: function(a) {
        var b = "",
            c = this.GetGraphManager();
        a.writeBoolean(void 0 != c);
        if (c) {
            var d = c.getCompletionBranch();
            a.writeNumber(d.length);
            for (var e = 0; e < d.length; ++e) a.writeNumber(d[e]);
            d = c.getCurrentBranch();
            a.writeNumber(d.length);
            for (e = 0; e < d.length; ++e) a.writeNumber(d[e]);
            if (void 0 != c.m_SlideNumToQuestionNumMap)
                for (var f in c.m_SlideNumToQuestionNumMap) b += f + "_" + c.m_SlideNumToQuestionNumMap[f] +
                ",";
            a.writeString(b)
        }
    },
    restoreState: function(a) {
        if (a) {
            this.SetIsInReviewMode(a.readBoolean());
            a.readBoolean();
            this.quizInProgress = a.readBoolean();
            this.quizNumStarts =
                a.readNumber();
            this.quizNumFinishes = a.readNumber();
            this.sawAnyScoreSlide = a.readBoolean();
            this.m_submittedAllQuestions = a.readBoolean();
            this.m_PretestQuestionsDisabled = a.readBoolean();
            svvi("cpInQuizScope", a.readBoolean(), ["cpInQuizScope"]);
            this.quizScopeSlideSetter(parseFloat(a.readString()));
            for (var b = a.readNumber(), c = 0; c < b; ++c)(new cp.QuestionScore)
                .restoreState(a);
            this.restoreBranchInfo(a)
        }
    },
    restoreBranchInfo: function(a) {
        if (a) {
            var b = [],
                c = [],
                d = "";
            if (a.readBoolean()) {
                for (var d = a.readNumber(), e = 0; e <
                    d; ++e) b.push(a.readNumber());
                d = a.readNumber();
                for (e = 0; e < d; ++e) c.push(a.readNumber());
                d = a.readString()
            }
            if (a = this.GetGraphManager()) a.restoreCompletionBranchState(b), a.restoreCurrentBranchState(c),
                this.RestoreGraphProgressIndicatorMap(d)
        }
    },
    ResumeState: function(a, b) {
        this.verbose && cp.log("QuizController :: ResumeState()");
        switch (a) {
            case "isInReviewMode":
                this.SetIsInReviewMode("true" == b);
                break;
            case "quizInProgress":
                this.quizInProgress = "true" == b;
                break;
            case "quizNumStarts":
                this.quizNumStarts = parseFloat(b);
                break;
            case "quizNumFinishes":
                this.quizNumFinishes = parseFloat(b);
                break;
            case "sawAnyScoreSlide":
                this.sawAnyScoreSlide = "true" == b;
                break;
            case "submittedAllQuestions":
                this.m_submittedAllQuestions = "true" == b;
                break;
            case "quizScopeSlide":
                this.quizScopeSlideSetter(parseFloat(b));
                break;
            case "completionBranch":
                this.RestoreCompletionBranchState(b);
                break;
            case "currentBranch":
                this.RestoreCurrentBranchState(b);
                break;
            case "qpiMap":
                this.RestoreGraphProgressIndicatorMap(b)
        }
    },
    RestoreGraphProgressIndicatorMap: function(a) {
        if (!(void 0 ==
                a || "" == a)) {
            for (var b = a.split(","), a = {}, c = 0, d = 0; d < b.length; ++d) {
                var e = b[d].split("_");
                if (2 == e.length) {
                    var f = parseInt(e[0]),
                        e = parseInt(e[1]);
                    a[f] = e;
                    c < e && (c = e)
                }
            }
            b = this.GetGraphManager();
            void 0 != b && (void 0 != b.m_SlideNumToQuestionNumMap && void 0 != b.m_progressNumber) && (b
                .m_SlideNumToQuestionNumMap = a, b.m_progressNumber = c)
        }
    },
    RestoreCompletionBranchState: function(a) {
        if (void 0 != a) {
            for (var b = a.split(","), a = [], c = 0; c < b.length; ++c) a.push(parseInt(b[c]));
            b = this.GetGraphManager();
            void 0 != b && b.restoreCompletionBranchState(a)
        }
    },
    RestoreCurrentBranchState: function(a) {
        if (void 0 != a) {
            for (var b = a.split(","), a = [], c = 0; c < b.length; ++c) a.push(parseInt(b[c]));
            b = this.GetGraphManager();
            void 0 != b && b.restoreCurrentBranchState(a)
        }
    },
    SaveQuestionScore: function(a) {
        this.GetIsInReviewMode() || (this.AddQuestionScore(a.GetQuestionScore()), a.SetQuestionScore(void 0))
    },
    AddQuestionScore: function(a) {
        for (var b in this.questionScores)
            if (this.questionScores[b].questionNumInQuiz == a.questionNumInQuiz) {
                this.questionScores[b] = a;
                return
            } - 1 != a.questionNumInQuiz ?
            questionScores[a.questionNumInQuiz] = a : questionScores.push(a)
    },
    HasQuiz: function() {
        return void 0 != this.m_QuizzingData ? !0 : !1
    },
    InitializeQuizController: function() {
        this.verbose && cp.log("QuizController :: InitializeQuizController()");
        this.m_QuizzingData = cp.D.quizzingData
    },
    GetGraphManager: function() {
        var a = void 0;
        this.m_playbackController && (a = this.m_playbackController.GetGraphManager());
        return a
    },
    GetGoToQuizScopeActionExecuted: function() {
        return this.m_GoToQuizScopeActionExecuted
    },
    SetGoToQuizScopeActionExecuted: function(a) {
        this.m_GoToQuizScopeActionExecuted =
            a
    },
    GetIsInReviewMode: function() {
        return !this.m_QuizzingData ? !1 : this.m_QuizzingData.isInReviewMode
    },
    SetIsInReviewMode: function(a) {
        this.m_QuizzingData && (this.m_QuizzingData.isInReviewMode = a)
    },
    SetQuizInProgress: function(a) {
        a && !this.quizInProgress ? (this.m_HandledSubmitAll = !1, cp.resetQuizData(), this
            .m_playbackController && (this.m_playbackController.GetIsTracked() && "EMAIL" != this
                .m_playbackController.m_lmsType.toUpperCase() && "ACROBAT" != this.m_playbackController
                .m_lmsType.toUpperCase() && "INTERNALSERVER" != this.m_playbackController.m_lmsType
                .toUpperCase() ?
                this.m_playbackController.SendCourseData(!this.m_playbackController.LMSIsAICC() || !this
                    .m_playbackController.IsRunningInConnect()) : this.m_playbackController.SendCourseData(!
                    1)), this.m_submittedAllQuestions = !1, this.IncrementCurrentAttempt(), this
            .sawAnyScoreSlide = !1) : !a && this.quizInProgress && (this.quizNumFinishes += 1);
        this.quizInProgress = a;
        this.quizInScopeSetter(a)
    },
    GetIsAttemptFinished: function() {
        return 0 < this.quizNumStarts && this.quizNumStarts == this.quizNumFinishes || this.sawAnyScoreSlide ? !
            0 : !1
    },
    GetCurrentSlideType: function() {
        this.m_playbackController.GetCurrentSlide();
        var a = this.m_playbackController.GetCurrentSlideIndex(),
            b = this.GetQuestionsOnSlide(a);
        return b && 0 < b.length ? "Question" : this.GetAnyScoreSlideIndex() == a ? "AnyScoreSlide" : ""
    },
    IsNonPretestQuestionSlide: function(a) {
        if ((a = this.GetQuestionsOnSlide(a)) && 0 < a.length) {
            for (var b = !1, c = 0; c < a.length; ++c) {
                var d = a[c];
                if (d && d.getIsPretest()) {
                    b = !0;
                    break
                }
            }
            return !b
        }
        return !1
    },
    getQuizSlideMaxScore: function(a) {
        var b = 0;
        if ((a = this.GetQuestionsOnSlide(a)) && 0 < a.length)
            for (var c = 0; c < a.length; ++c) {
                var d = a[c];
                d && !d.getIsPretest() &&
                    (b += d.getWeighting())
            }
        return b
    },
    getQuizSlideMinScore: function(a) {
        var b = 0;
        if ((a = this.GetQuestionsOnSlide(a)) && 0 < a.length)
            for (var c = 0; c < a.length; ++c) {
                var d = a[c];
                d && !d.getIsPretest() && (b += d.getNegativeWeight())
            }
        return b
    },
    getQuizSlideScore: function(a) {
        var b = 0;
        if ((a = this.GetQuestionsOnSlide(a)) && 0 < a.length)
            for (var c = 0; c < a.length; ++c) {
                var d = a[c];
                d && !d.getIsPretest() && (b += d.getScore())
            }
        return b
    },
    GetSlideType: function(a) {
        if (!cp.movie.stage) return "";
        var b = this.GetQuestionsOnSlide(a);
        return b && 0 < b.length ? "Question" :
            this.GetAnyScoreSlideIndex() == a ? "AnyScoreSlide" : ""
    },
    GetTotalUnansweredQuestions: function() {
        if (!cp.movie) return 0;
        var a = cp.movie.questionObjs;
        if (!a) return 0;
        for (var b = 0, c = 0; c < a.length; ++c) {
            var d = a[c];
            void 0 == d ? b++ : d.getIsIncomplete() ? b++ : d.getWasJudged() || b++
        }
        return b
    },
    GetTotalQuestionsInProject: function() {
        if (!cp.movie) return 0;
        var a = cp.movie.questionObjs;
        return !a ? 0 : a.length
    },
    GetNumQuestions: function() {
        var a = this.GetGraphManager();
        return void 0 != a ? a.getNumQuestions() : this.GetTotalQuestionsInProject()
    },
    GotoQuizScopeSlide: function(a) {
        if (cp.movie && cp.movie.stage)
            if (0 > a || a >= cpInfoSlideCount) cpCmndResume = !0;
            else if ("Question" == this.GetCurrentSlideType()) cpCmndResume = !0;
        else {
            var b = !1;
            this.GetIsInReviewMode() && (b = !0);
            b ? cpCmndResume = !0 : (this.m_GoToQuizScopeActionExecuted = !0, cpCmndGotoSlideAndResume = a)
        }
    },
    EnterCurrentSlide: function() {
        var a = !1,
            b = this.GetCurrentSlideType(),
            c = this.m_playbackController.GetCurrentSlideIndex(),
            d = this.GetQuizScopeEndSlideIndex();
        if (cpInfoHasPlaybar && this.GetHidePlaybarInQuiz() &&
            !this.GetIsInReviewMode()) {
            var e = !1;
            "Question" == b ? e = !0 : 0 <= c && (c == d && "AnyScoreSlide" != b) && (e = !0);
            e && (this.m_showPlaybar = !1)
        }
        cpCmndShowPlaybar = this.m_showPlaybar;
        "Question" == b && (!this.quizInProgress && !this.GetIsInReviewMode()) && (this.SetQuizInProgress(!0),
            cpQuizInfoTotalProjectPoints = this.GetMaxScore(), cpQuizInfoAttempts = this.quizNumStarts,
            cpQuizInfoTotalQuestionsPerProject = this.GetTotalQuestionsInProject());
        "AnyScoreSlide" == b && ("INTERNALSERVER" == this.m_playbackController.m_lmsType.toUpperCase() && !a &&
            this.m_playbackController.PostQuizResults(), this.quizInScopeSetter(!1), this.sawAnyScoreSlide =
            a = !0);
        if (b = this.GetQuestionsOnSlide(c))
            for (a = 0; a < b.length; ++a) this.StartQuestion(b[a]);
        else a && (this.m_scoreDisplay = {}, this.m_scoreDisplay.score = this.GetScore(), this.m_scoreDisplay
            .maxScore = this.GetMaxScore(), this.m_scoreDisplay.numQuestions = this.GetNumQuestions(), this
            .m_scoreDisplay.numRetries = this.GetTotalRetries(), this.m_scoreDisplay.numQuizAttempts = this
            .quizNumStarts, this.m_scoreDisplay.percentCorrect =
            this.GetPercentCorrect(), this.m_scoreDisplay.numQuestionsCorrect = this
            .GetTotalCorrectQuestions(), this.m_scoreDisplay.passed = this.GetIsPassed(), this
            .m_scoreDisplay.feedback = this.GetIsPassed() ? this.GetPassedScoreFeedback() : this
            .GetFailedScoreFeedback(), this.m_scoreDisplay.quizController = this);
        this.m_playbackController && (this.m_playbackController.GetIsTracked() && "EMAIL" != this
            .m_playbackController.m_lmsType.toUpperCase() && "ACROBAT" != this.m_playbackController
            .m_lmsType.toUpperCase() && this.m_playbackController.m_lmsType.toUpperCase(),
            this.m_playbackController.SendCourseData(!1));
        cp.IsRunningInACAP && (a = this.GetScore(), b = this.GetMaxScore(), c = this.GetMinScore(), void 0 !=
            b && (void 0 != a && void 0 != c) && cp.em.fireEvent("SCORE", {
                score: a,
                maxScore: b,
                minScore: c,
                quizId: cp.D.quizzingData.quizID
            }))
    },
    LeaveSlide: function(a, b) {
        var c = !1;
        if (!this.m_QuizzingData) return c;
        var d = this.m_QuizzingData.quizScopeEndSlide;
        if (void 0 == d) return c;
        this.verbose && cp.log("Inside Leave Slide");
        0 <= b ? c = 0 <= a && b > a && a == d : 0 <= a && a == d && (c = !0);
        0 <= a && (a == this.GetAnyScoreSlideIndex() &&
            !this.GetIsInReviewMode()) && (c = !0);
        var e = this.GetSlideType(a);
        if ("Question" == e) {
            var f = this.GetQuestionsOnSlide(a);
            if (f)
                for (var g = 0; g < f.length; ++g) {
                    var i = f[g];
                    i && (i.endQuestion(!1), this.GetIsSubmitAll() || i.clearAnswers())
                }
        }
        if (!this.m_playbackController || !this.m_playbackController.HasQuiz()) c = !1;
        f = this.quizInProgress;
        c && this.SetQuizInProgress(!1);
        c && (!this.GetIsInReviewMode() && (this.quizNumStarts >= this.GetNumberOfQuizAttempts() && this
                .GetIsAllowReviewMode()) && this.SetIsInReviewMode(!0), this.SetQuizInProgress(!1),
            void 0 == b && f && (f = this.GetDefaultActionType(), f = this.GetIsPassed() ? this
                .GetPassingGradeAction() : this.GetFailingGradeAction(), cp.movie.frameBasedExecuteAction(f)
                ));
        cpInfoHasPlaybar && this.GetHidePlaybarInQuiz() && (f = !1, "Question" == e ? f = !0 : 0 <= a && (a ==
            d && "AnyScoreSlide" != e) && (f = !0), f && (this.m_showPlaybar = !0));
        return c
    },
    ExecutePretestAction: function(a) {
        if (this.m_ExecutingPretestAction || void 0 == a || 0 > a || a >= cp.movie.stage.slides.length) return !
            1;
        var b = this.GetQuestionsOnSlide(a);
        if (void 0 == b || 0 >= b.length || void 0 ==
            b[0]) return !1;
        var c = b[0],
            b = a + 1;
        b >= cp.movie.stage.slides.length && (b = -1);
        var d = void 0; - 1 != b && (d = this.GetQuestionsOnSlide(b));
        var e = !1;
        void 0 != d && (0 < d.length && void 0 != d[0]) && (e = d[0].getIsPretest());
        c = c.getIsPretest();
        if (!c || -1 != b && e) return !1;
        for (; void 0 != a && 0 <= a;) {
            b = this.GetQuestionsOnSlide(a);
            if (void 0 == b || 0 >= b.length || void 0 == b[0] || !b[0].getIsPretest()) break;
            a -= 1
        }
        this.m_PretestQuestionsDisabled = !0;
        a = this.GetPretestAction();
        void 0 != a && (this.m_ExecutingPretestAction = !0, cp.movie.executeAction(a), this
            .m_ExecutingPretestAction = !1);
        return !0
    },
    GetProgressType: function() {
        return !this.m_QuizzingData ? 0 : this.m_QuizzingData.progressIndicatorType
    },
    GetProgressTemplateString: function() {
        return !this.m_QuizzingData ? "" : this.m_QuizzingData.progressIndicatorString
    },
    GetIsReportingEnabled: function() {
        return !this.m_QuizzingData ? !1 : this.m_QuizzingData.reportingEnabled
    },
    GetParameterValueByName: function(a) {
        if (!this.m_QuizzingData || !this.m_playbackController || !this.m_playbackController.HasQuiz())
        return "";
        var b = "";
        switch (a) {
            case "quizInfoPointsScored":
                b =
                    this.GetScore();
                break;
            case "quizInfoTotalQuizPoints":
                b = this.GetMaxScore();
                break;
            case "quizInfoTotalCorrectAnswers":
                b = this.GetTotalCorrectQuestions();
                break;
            case "numQuestionsInQuiz":
                b = this.GetNumQuestions();
                break;
            case "quizInfoPercentScored":
                b = this.GetPercentCorrect();
                break;
            case "quizInfoCurrentAttempt":
                b = this.quizNumStarts;
                break;
            default:
                b = this.m_scoreDisplay.feedback
        }
        return b
    },
    GetPassedScoreFeedback: function() {
        return !this.m_QuizzingData ? "" : this.m_QuizzingData.passedScoreFeedback
    },
    GetFailedScoreFeedback: function() {
        return !this.m_QuizzingData ?
            "" : this.m_QuizzingData.failedScoreFeedback
    },
    GetIsAllowReviewMode: function() {
        return !this.m_QuizzingData ? !1 : this.m_QuizzingData.allowReviewMode
    },
    GetIsQuizCompleted: function() {
        return !this.m_QuizzingData ? !1 : this.m_QuizzingData.quizCompleted
    },
    SetIsQuizCompleted: function(a) {
        this.m_QuizzingData && (this.m_QuizzingData.quizCompleted = a)
    },
    GetAnyScoreSlideIndex: function() {
        if (!this.m_QuizzingData) return -1;
        var a = this.m_QuizzingData.anyScoreSlide;
        return void 0 != a ? a : -1
    },
    GetPretestAction: function() {
        var a = void 0;
        this.m_QuizzingData &&
            (a = this.m_QuizzingData.pretestAction);
        return a
    },
    GetQuizScopeEndSlideIndex: function() {
        if (!this.m_QuizzingData) return -1;
        var a = this.m_QuizzingData.quizScopeEndSlide;
        return void 0 != a ? a : -1
    },
    GetFirstSlideInQuizIndex: function() {
        var a = this.GetGraphManager();
        if (void 0 != a) {
            a = a.getReviewFirstQuestionSlideIndex();
            if (void 0 == a || 0 > a || "NaN" == a) a = -1;
            return a
        }
        if (!this.m_QuizzingData) return -1;
        a = this.m_QuizzingData.firstSlideInQuiz;
        return void 0 != a ? a : -1
    },
    GetLastSlideInQuizIndex: function() {
        var a = this.GetGraphManager();
        if (void 0 != a) {
            a = a.getLastQuestionSlideIndex();
            if (void 0 == a || 0 > a || "NaN" == a) a = -1;
            return a
        }
        if (!this.m_QuizzingData) return -1;
        a = this.m_QuizzingData.lastSlideInQuiz;
        return void 0 != a ? a : -1
    },
    GetLastQuestionSlideInQuiz: function() {
        if (!cp.movie || !cp.movie.stage) return -1;
        var a = -1,
            b = cp.movie.playbackController.GetSlideNames(),
            c = this.GetFirstSlideInQuizIndex(),
            d = this.GetLastSlideInQuizIndex();
        if (-1 == c || -1 == d) return -1;
        for (var e = 0; e < b.length; ++e)
            if ("Question" == this.GetSlideType(e) && (e >= c && e <= d) && (-1 != a || e > a)) a = e;
        return a
    },
    GetNumberOfQuizAttempts: function() {
        return !this.m_QuizzingData ? 0 : this.m_QuizzingData.numQuizAttemptsAllowed
    },
    GetIsPassed: function() {
        if (!this.m_QuizzingData) return !1;
        var a = parseFloat(this.GetScore()),
            b = parseFloat(this.GetPassingScore());
        return a >= b
    },
    GetScore: function() {
        if (!this.m_QuizzingData) return 0;
        var a = this.GetGraphManager(),
            b = cp.movie.questionObjs,
            c = 0;
        if (!b) return 0;
        for (var d = 0; d < b.length; ++d) b[d] && (b[d].getIsPretest() || (void 0 != a ? a
            .isSlidePartOfCurrentBranch(b[d].getSlideIndex()) &&
            (c += b[d].getScore()) : c += b[d].getScore()));
        this.m_QuizzingData.quizInfoPointsScored = c;
        this.m_QuizzingData.quizInfoPercentScored = (100 * this.m_QuizzingData.quizInfoPointsScored / this
                .m_QuizzingData.quizInfoTotalQuizPoints)
            .toFixed(2) + "%";
        return this.m_QuizzingData.quizInfoPointsScored
    },
    GetMaxScore: function() {
        if (!this.m_QuizzingData) return 0;
        var a = this.GetGraphManager();
        return void 0 != a ? a.getMaxQuizScore() : this.m_QuizzingData.maxScore
    },
    GetMinScore: function() {
        if (!this.m_QuizzingData) return 0;
        var a = this.GetGraphManager();
        return void 0 != a ? a.getMinQuizScore() : this.m_QuizzingData.minScore
    },
    GetMaxPretestScore: function() {
        return !this.m_QuizzingData ? 0 : this.m_QuizzingData.maxPretestScore
    },
    GetPretestScore: function() {
        if (!this.m_QuizzingData) return 0;
        var a = cp.movie.questionObjs,
            b = 0;
        if (!a) return 0;
        for (var c = 0; c < a.length; ++c) a[c] && a[c].getIsPretest() && (b += a[c].getScore());
        return b
    },
    GetCurrentAttempt: function() {
        return this.quizNumStarts
    },
    GetIsSubmitAll: function() {
        return !this.m_QuizzingData ? !1 : this.m_QuizzingData.submitAll
    },
    GetHidePlaybarInQuiz: function() {
        return !this.m_QuizzingData ?
            !1 : this.m_QuizzingData.hidePlaybarInQuiz
    },
    GetQuizBranchAware: function() {
        return !this.m_QuizzingData ? !1 : this.m_QuizzingData.quizBranchAware
    },
    GetPassFailPassingScoreTypeInPrecent: function() {
        return !this.m_QuizzingData ? !1 : this.m_QuizzingData.passFailPassingScoreTypeInPrecent
    },
    GetPassFailPassingScoreValue: function() {
        return !this.m_QuizzingData ? 0 : this.m_QuizzingData.passFailPassingScoreValue
    },
    IncrementCurrentAttempt: function() {
        this.m_QuizzingData && (this.quizNumStarts += 1, this.m_QuizzingData.quizInfoCurrentAttempt +=
            1)
    },
    CanShowRetakeButton: function() {
        return this.GetCurrentAttempt() >= this.GetNumberOfQuizAttempts() || this.GetIsPassed() || this
            .GetIsInReviewMode() ? !1 : !0
    },
    GetQuizAdvanceType: function() {
        return !this.m_QuizzingData ? "optional" : this.m_QuizzingData.quizAdvance
    },
    GetQuestionAdvanceType: function() {
        return !this.m_QuizzingData ? "optional" : this.m_QuizzingData.questionAdvance
    },
    GetDefaultActionType: function() {
        return !this.m_QuizzingData ? "" : this.m_QuizzingData.defaultActionType
    },
    GetDefaultActionArgument: function() {
        return !this.m_QuizzingData ?
            "" : this.m_QuizzingData.defaultActionArg1
    },
    GetPassingGradeAction: function() {
        return !this.m_QuizzingData ? "" : this.m_QuizzingData.passingGradeAction
    },
    GetFailingGradeAction: function() {
        return !this.m_QuizzingData ? "" : this.m_QuizzingData.failingGradeAction
    },
    GetTotalCorrectAnswers: function() {
        return !this.m_QuizzingData ? 0 : this.m_QuizzingData.quizInfoTotalCorrectAnswers
    },
    GetNumberOfQuestionsInQuiz: function() {
        return !this.m_QuizzingData ? 0 : this.m_QuizzingData.numQuestionsInQuiz
    },
    GetAllowSkipAnyScoreSlide: function() {
        return !this.m_QuizzingData ?
            !0 : this.m_QuizzingData.allowSkipAnyScoreSlide
    },
    GetPassingScore: function() {
        if (!this.m_QuizzingData) return 0;
        if (this.GetPassFailPassingScoreTypeInPrecent()) {
            var a = this.GetGraphManager();
            if (void 0 != a) return a = a.getMaxQuizScore(), "NaN" == a ? "NaN" : 0 >= a ? 0 : this
                .GetPassFailPassingScoreValue() / 100 * a
        }
        return this.m_QuizzingData.passingScore
    },
    GetAllowBackwardMovementInQuiz: function() {
        return !this.m_QuizzingData ? !1 : this.m_QuizzingData.allowBackwardMovement
    },
    GetIsSlideJudged: function(a) {
        a = this.GetQuestionsOnSlide(a);
        if (!a || 0 >= a.length) return !1;
        for (var b = !0, c = 0; c < a.length; ++c) {
            var d = a[c],
                b = b && d.getWasJudged();
            if (!b) return !1
        }
        return b
    },
    GetQuestionsOnSlide: function(a) {
        var b = [];
        if (!cp.movie.stage) return "";
        a = this.m_playbackController.GetSlideNameAtIndex(a);
        if (void 0 == a) return "";
        a = cp.D[a].qs;
        if (0 >= a.length || "" == a) return "";
        if ((lQuestionsOnSlide = a.split(",")) && "" != lQuestionsOnSlide && 0 < lQuestionsOnSlide.length)
            for (a = 0; a < lQuestionsOnSlide.length; ++a) {
                var c = cp.getQuestionObject(lQuestionsOnSlide[a]);
                c && b.push(c)
            }
        return b
    },
    GetTotalRetries: function() {
        var a = 0,
            b = cp.movie.questionObjs;
        if (!b) return 0;
        var c = b.length;
        if (0 >= c) return 0;
        for (var d = 0; d < c; ++d) b[d] && (a += b[d].currentAttempt);
        return a
    },
    CanDoSubmitAll: function() {
        if ("mustTake" == this.GetQuizAdvanceType() && 1 >= this.GetCurrentAttempt()) {
            var a = !1,
                a = this.GetQuizBranchAware() ? this.GetAnyQuestionInBranchAnswered() : this
                .GetAnyQuestionsAnswered();
            if (!a) return "QUIZ_ERROR_MUST_TAKE_QUIZ"
        }
        return ""
    },
    GetAnyQuestionInBranchAnswered: function() {
        var a = this.GetGraphManager();
        if (!a) return !1;
        a = a.getCompletionBranch();
        if (void 0 == a || 0 >= a.length) return !1;
        for (var b = 0; b < a.length; ++b) {
            var c = this.GetQuestionsOnSlide(a[b]);
            if (c && 0 < c.length)
                for (var d = 0; d < c.length; ++d) {
                    var e = c[d];
                    if (!e.getIsPretest() && e.getWasJudged() && !e.getIsIncomplete()) return !0
                }
        }
        return !1
    },
    GetAnyQuestionsAnswered: function() {
        var a = cp.movie.questionObjs;
        if (!a) return !1;
        var b = a.length;
        if (0 >= b) return !1;
        for (var c = 0; c < b; ++c)
            if (a[c] && a[c].getWasJudged() && !a[c].getIsIncomplete()) return !0;
        return !1
    },
    GetAnyNonPreTestQuestionAnswered: function() {
        var a =
            cp.movie.questionObjs;
        if (!a) return !1;
        var b = a.length;
        if (0 >= b) return !1;
        for (var c = 0; c < b; ++c)
            if (a[c] && !a[c].getIsPretest() && a[c].getWasJudged() && !a[c].getIsIncomplete()) return !0;
        return !1
    },
    CanEnterSlide: function(a) {
        if (!this.m_playbackController || !this.m_playbackController.HasQuiz()) return "";
        var a = this.GetSlideType(a),
            b = !1;
        if (cpInfoCurrentSlideIndex == this.GetAnyScoreSlideIndex() && "Question" == a && !this
            .GetIsInReviewMode() && this.GetCurrentAttempt() >= this.GetNumberOfQuizAttempts()) return this
            .GetIsAllowReviewMode() ?
            "" : "QUIZ_ERROR_TOO_MANY_QUIZ_ATTEMPTS";
        if (!this.quizInProgress || "optional" == this.GetQuestionAdvanceType() && 0 < this.GetTotalRetries()) {
            switch (a) {
                case "Question":
                    if (!this.GetIsInReviewMode() && !this.quizInProgress && this.GetCurrentAttempt() >= this
                        .GetNumberOfQuizAttempts()) return this.GetIsAllowReviewMode() ? "" :
                        "QUIZ_ERROR_TOO_MANY_QUIZ_ATTEMPTS";
                    break;
                case "AnyScoreSlide":
                    b = !0
            }
            if (b && !this.quizInProgress && !this.GetIsInReviewMode())
            return "QUIZ_ERROR_MUST_START_QUIZ_TO_SEE_SCORE_SLIDE"
        }
        return ""
    },
    CanLeavePretestQuestionSlide: function() {
        return ""
    },
    CanLeaveQuestionSlide: function(a, b) {
        var c = this.GetQuestionsOnSlide(a);
        if (c)
            for (var d = 0; d < c.length; d++) {
                var e = c[d];
                if (e && e.getIsPretest()) return this.CanLeavePretestQuestionSlide(b, e)
            }
        c = this.GetIsSubmitAll();
        d = this.GetQuizBranchAware();
        if ("mustAnswer" == this.GetQuestionAdvanceType() && !this.GetIsInReviewMode() && !c && !d) {
            c = this.GetQuestionsOnSlide(a);
            if (!c) return "";
            for (d = 0; d < c.length; d++)
                if (e = c[d], !b && e && 0 == e.currentAttempt) return "QUIZ_ERROR_MUST_ANSWER_QUESTION"
        }
        if (!b && a == this.GetLastQuestionSlideInQuiz()) {
            if ("mustTake" ==
                this.GetQuizAdvanceType() && !this.GetAnyQuestionsAnswered() && 1 >= this.GetCurrentAttempt())
                return "QUIZ_ERROR_MUST_TAKE_QUIZ"
        } else if (b && !this.GetIsInReviewMode() && !this.GetAllowBackwardMovementInQuiz() &&
            cpInfoCurrentSlideIndex == a) return "QUIZ_ERROR_CANNOT_MOVE_BACKWARD_IN_QUIZ";
        return ""
    },
    CanLeaveSlide: function(a, b) {
        if (!this.m_playbackController || !this.m_playbackController.HasQuiz()) return "";
        var c = "",
            d = this.GetSlideType(a),
            e = this.GetQuizScopeEndSlideIndex();
        if ("Question" == d && (c = this.CanLeaveQuestionSlide(a,
                b), "" != c)) return c;
        if (0 <= a && a == e) {
            if ("AnyScoreSlide" == d && !this.GetAllowSkipAnyScoreSlide() && !this.sawAnyScoreSlide && this
                .quizInProgress) return "QUIZ_ERROR_MUST_SEE_SCORE_SLIDE";
            d = this.GetPassingScore();
            if (!b && "mustPass" == this.GetQuizAdvanceType() && "NaN" != d && this.GetScore() < d)
            return "QUIZ_ERROR_MUST_PASS_QUIZ";
            if (this.GetIsSubmitAll() && "mustAnswer" == this.GetQuestionAdvanceType() && !b && !this
                .m_submittedAllQuestions) return "QUIZ_ERROR_MUST_ANSWER_QUESTION"
        }
        return c
    },
    GetPreviousQuestionSlideNumber: function() {
        var a = -1;
        if (!cp.movie || !cp.movie.stage) return -1;
        var b = cpInfoCurrentSlideIndex,
            c = this.GetGraphManager();
        if (void 0 != c) {
            for (var c = c.getCompletionBranch(), d = 0; d < c.length; ++d) {
                var e = c[d],
                    f = "",
                    g = this.GetQuestionsOnSlide(e);
                g && 0 < g.length ? f = "Question" : this.GetAnyScoreSlideIndex() == e && (f = "AnyScoreSlide");
                if (("AnyScoreSlide" == f || "Question" == f) && e < b)
                    if (-1 == a || e > a) a = e
            } - 1 == a && (b = c.indexOf(b), 0 < b && (a = c[b - 1]))
        } else {
            c = this.m_playbackController.GetSlideNames();
            for (e = 0; e < c.length; ++e)
                if (f = "", (g = this.GetQuestionsOnSlide(e)) &&
                    0 < g.length ? f = "Question" : this.GetAnyScoreSlideIndex() == e && (f = "AnyScoreSlide"),
                    ("AnyScoreSlide" == f || "Question" == f) && e < b)
                    if (-1 == a || e > a) a = e
        }
        return a
    },
    GetNextQuestionSlideNumber: function() {
        var a = -1;
        if (!cp.movie || !cp.movie.stage) return -1;
        var b = cpInfoCurrentSlideIndex,
            c = this.GetGraphManager();
        if (void 0 != c)
            for (var d = c.getCurrentBranch(), e = 0; e < d.length; ++e) {
                var c = d[e],
                    f = "",
                    g = this.GetQuestionsOnSlide(c);
                g && 0 < g.length ? f = "Question" : this.GetAnyScoreSlideIndex() == c && (f = "AnyScoreSlide");
                if (("AnyScoreSlide" == f ||
                        "Question" == f) && c > b)
                    if (-1 == a || c < a || a == b) a = c
            } else {
                d = this.m_playbackController.GetSlideNames();
                for (c = 0; c < d.length; ++c)
                    if (f = "", (g = this.GetQuestionsOnSlide(c)) && 0 < g.length ? f = "Question" : this
                        .GetAnyScoreSlideIndex() == c && (f = "AnyScoreSlide"), ("AnyScoreSlide" == f ||
                            "Question" == f) && c > b)
                        if (-1 == a || c < a) a = c
            }
        return a
    },
    GetPercentCorrect: function() {
        var a = this.GetMaxScore();
        return 0 == a || !a ? " " : Math.round(100 * (100 * this.GetScore() / a)) / 100 + "%"
    },
    GetTotalPretestCorrectQuestions: function() {
        if (!this.m_QuizzingData) return 0;
        var a = cp.movie.questionObjs;
        if (!a) return 0;
        for (var b = 0, c = 0; c < a.length; ++c) a[c] && a[c].getWasJudged() && (a[c].getAnsweredCorrectly() &&
            a[c].getIsPretest()) && (b += 1);
        return b
    },
    GetTotalCorrectQuestions: function() {
        if (!this.m_QuizzingData) return 0;
        var a = this.GetGraphManager(),
            b = cp.movie.questionObjs;
        if (!b) return 0;
        for (var c = 0, d = 0; d < b.length; ++d) b[d] && (b[d].getIsPretest() || (void 0 != a ? a
            .isSlidePartOfCurrentBranch(b[d].getSlideIndex()) && (b[d].getWasJudged() && b[d]
                .getAnsweredCorrectly()) && (c += 1) : b[d].getWasJudged() &&
            b[d].getAnsweredCorrectly() && (c += 1)));
        return c
    },
    StartQuestion: function(a) {
        void 0 != a && (a.slide = this.m_playbackController.GetCurrentSlide(), a.startQuestion())
    },
    GetFailingGradeActionString: function() {
        return !this.m_QuizzingData ? !1 : this.m_QuizzingData.failingGradeActionString
    },
    GetFailingGradeActionParam: function() {
        return !this.m_QuizzingData ? !1 : this.m_QuizzingData.failingGradeActionParam
    },
    GetIsTracked: function() {
        return !this.m_QuizzingData ? !1 : this.m_QuizzingData.it
    },
    GetQuestionSlidesNames: function() {
        return this.m_questionSlideNames
    },
    AddQuestionSlideNames: function(a) {
        this.m_questionSlideNames || (this.m_questionSlideNames = []);
        this.m_questionSlideNames.push(a)
    },
    GetAllQuestionsInBranchAnswered: function() {
        var a = this.GetGraphManager();
        if (!a) return !1;
        a = a.getCompletionBranch();
        if (void 0 == a || 0 >= a.length) return !1;
        for (var b = 0; b < a.length; ++b) {
            var c = this.GetQuestionsOnSlide(a[b]);
            if (c && 0 < c.length)
                for (var d = 0; d < c.length; ++d) {
                    var e = c[d];
                    if (!e.getIsPretest() || !this.m_PretestQuestionsDisabled) {
                        var f = this.GetIsSubmitAll() && !e.getIsPretest();
                        if (0 <=
                            e.getWeighting() && (!e.getWasJudged() && !f || e.getIsIncomplete() || 0 == e
                                .getCurrentAttempt())) return !1
                    }
                }
        }
        return !0
    },
    GetAllQuestionsAnswered: function() {
        if (!0 == this.GetQuizBranchAware() && this.GetAllQuestionsInBranchAnswered()) return !0;
        var a = this.GetQuestionScoresToSend(),
            b = [];
        for (whichQuestionScore in a) {
            var c = a[whichQuestionScore];
            c && (b[c.getslideNum()] = !0)
        }
        var d = this.m_QuizzingData.firstSlideInQuiz,
            c = this.m_QuizzingData.lastSlideInQuiz;
        if (void 0 == d || -1 == d || void 0 == c || -1 == c) return !0;
        for (; d <= c; d++)
            if (!b[d]) {
                var e =
                    this.GetQuestionsOnSlide(d);
                if (e && 0 < e.length) return !1
            } for (whichQuestionScore in a)
            if ((c = a[whichQuestionScore]) && (!c.getIsPretest() || !this.m_PretestQuestionsDisabled))
                if (b = this.GetIsSubmitAll() && !c.getIsPretest(), 0 <= c.getweighting() && (!c
                    .getwasJudged() && !b || c.getAnswersIncomplete() || 0 == c.getNumTries())) return !1;
        return !0
    },
    SendInteractionData: function(a, b) {
        if (!this.m_QuizzingData) return !1;
        this.verbose && cp.log("QuizController::SendInteraction()");
        this.GetIsTracked() && this.m_playbackController.SendInteractionData(a,
            b)
    },
    SendQuestionEventDataForSubmitAll: function() {
        var a = this.GetQuestionScoresToSend();
        for (whichQuestionScore in a) {
            var b = a[whichQuestionScore];
            b && (b.getisPretestQuestion() || this.m_playbackController.SendQuestionEventData(b))
        }
    },
    SendInteractionsForSubmitAll: function() {
        var a = this.GetQuestionScoresToSend();
        for (whichQuestionScore in a) {
            var b = a[whichQuestionScore];
            if (b) {
                var c = b.getdescriptionText(),
                    d = cp.movie.questionObjs[b.m_questionNumInQuiz];
                d && d.shouldReportAnswers && (b.getisPretestQuestion() || b.getanswersIncomplete() ||
                    (d.sendInteractionDataForEachAnswer ? d.sendInteractionDataForEachAnswer(c) : this
                        .SendInteractionData(b, c)))
            }
        }
    },
    DoSubmitAll: function(a) {
        if (void 0 == a || 0 > a) return !1;
        var b = this.GetQuizScopeEndSlideIndex();
        if (void 0 == b || 0 > b || a != b || void 0 != this.m_RunTimeMsgBox || this.m_HandledSubmitAll || !1 ==
            this.GetIsSubmitAll()) return !1;
        this.SubmitAllQuestions(!0, !1);
        return !0
    },
    SubmitAllDialogShown: function(a, b) {
        if (void 0 == a || 0 > a || void 0 == b || 0 > b) return !1;
        if (void 0 != this.m_RunTimeMsgBox) return !0;
        if (a >= b || this.m_HandledSubmitAll ||
            this.GetIsInReviewMode() || !1 == this.GetIsSubmitAll()) return !1;
        var c = this.GetAnyScoreSlideIndex(),
            d = this.GetQuizScopeEndSlideIndex();
        if (0 <= c) {
            if (b == c) return this.SubmitAllQuestions(!0, !1), !0
        } else if (0 <= d && a == d) return this.SubmitAllQuestions(!0, !1), !0;
        return !1
    },
    ReturnToQuiz: function() {
        if (void 0 != this.m_RunTimeMsgBox) {
            this.m_RunTimeMsgBox.hide();
            this.m_RunTimeMsgBox = void 0;
            var a = this.m_playbackController.GetCurrentSlideIndex();
            if (a = this.GetQuestionsOnSlide(a))
                for (var b = 0; b < a.length; ++b) {
                    var c = a[b];
                    c.state =
                        c.StateEnum.PAUSED
                }
        }
        a = this.GetFirstSlideInQuizIndex();
        0 <= a && (cpCmndGotoSlideAndResume = a, this.m_HandledSubmitAll = !1)
    },
    ForceSubmitAll: function() {
        if (this.m_playbackController) {
            if (void 0 != this.m_RunTimeMsgBox) {
                this.m_RunTimeMsgBox.hide();
                this.m_RunTimeMsgBox = void 0;
                var a = this.m_playbackController.GetCurrentSlideIndex();
                if (a = this.GetQuestionsOnSlide(a))
                    for (var b = 0; b < a.length; ++b) {
                        var c = a[b];
                        c.state = c.StateEnum.PAUSED
                    }
            }
            a = this.GetAnyScoreSlideIndex();
            b = this.GetQuizScopeEndSlideIndex();
            if (0 <= a) cpCmndGotoSlideAndResume =
                a;
            else if (0 <= b) {
                var a = -1,
                    c = this.m_playbackController.GetSlideNames(),
                    d = c.length;
                if (0 < d && b < d && (b = c[b]))
                    if (b = cp.D[b]) a = b.to;
                cpCmndGotoFrameAndResume = a - 1;
                !this.GetIsInReviewMode() && (this.GetCurrentAttempt() >= this.GetNumberOfQuizAttempts() && this
                    .GetIsAllowReviewMode()) && this.SetIsInReviewMode(!0)
            }
            this.m_submittedAllQuestions = !0;
            this.m_playbackController && this.m_playbackController.GetSendCourseDataWithInteractionData() && (
                this.SendInteractionsForSubmitAll(), this.SendQuestionEventDataForSubmitAll(), a = this
                .m_playbackController.GetLMSType()
                .toUpperCase(),
                this.m_playbackController.GetIsTracked() && "EMAIL" != a && "ACROBAT" != a &&
                "INTERNALSERVER" != a ? this.m_playbackController.SendCourseData(!0) : "INTERNALSERVER" ==
                a ? this.m_playbackController.PostQuizResults() : this.m_playbackController.SendCourseData(!
                    1));
            a = this.GetPassingScore();
            b = this.GetMaxScore();
            isNaN(a) || (cpQuizInfoQuizPassPoints = a);
            0 != b && (!isNaN(b) && !isNaN(a)) && (cpQuizInfoQuizPassPercent = 100 * a / b);
            cpQuizInfoTotalProjectPoints = b
        }
    },
    DefaultHandlerForRuntimeMessageBox: function() {
        if (this.m_playbackController &&
            void 0 != this.m_RunTimeMsgBox) {
            this.m_RunTimeMsgBox.hide();
            this.m_RunTimeMsgBox = void 0;
            var a = this.m_playbackController.GetCurrentSlideIndex(),
                b = this.GetQuestionsOnSlide(a);
            if (b)
                for (var c = 0; c < b.length; ++c) {
                    var d = b[c];
                    d.state = d.StateEnum.PAUSED
                }
            this.m_HandledSubmitAll = !1;
            b = this.GetQuizScopeEndSlideIndex();
            0 <= a && (0 <= b && a == b) && (b = this.m_playbackController.GetCurrentSlide(), (b = cp.D[b]) &&
                cpInfoCurrentFrame >= b.to && (cpCmndGotoSlideAndResume = a))
        }
    },
    SubmitAllQuestions: function(a, b) {
        this.m_HandledSubmitAll = !0;
        if (!1 == a) return ForceSubmitAll();
        void 0 != this.m_RunTimeMsgBox && (this.m_RunTimeMsgBox.hide(), this.m_RunTimeMsgBox = void 0);
        var c = "mustAnswer" == this.GetQuestionAdvanceType(),
            d = this.m_playbackController.GetCurrentSlideIndex();
        if (d = this.GetQuestionsOnSlide(d))
            for (var e = 0; e < d.length; ++e) {
                var f = d[e];
                f && f.endQuestion(!1)
            }
        var g = cp.D.rtDialog,
            d = g.rtbgfc,
            e = g.rtbgsc,
            f = g.rtbtnfc,
            i = g.rtbtnsc,
            j = g.rtsc,
            h = g.rttc,
            m = g.rttsc,
            k = g.rtfn,
            l = g.rtt,
            o = g.rtsam,
            n = g.rtiqm,
            p = g.rtsiqm,
            q = g.rtsanym,
            r = g.rtokb,
            u = g.rtyb,
            v = g.rtnb,
            w = g.rtsab,
            x = g.rtsanyb,
            s = g.rtrtqb,
            g = g.rtmtqm,
            t = this.GetAllQuestionsAnswered();
        "QUIZ_ERROR_MUST_TAKE_QUIZ" == this.CanDoSubmitAll() ? (this.m_RunTimeMsgBox = new cp.RuntimeMessageBox(
                document.getElementById("cpDocument"), 1, d, e, f, i, j, h, m, k), this.m_RunTimeMsgBox
            .setTitleText(l), this.m_RunTimeMsgBox.setMessageText(g), this.m_RunTimeMsgBox
            .setFirstButtonText(r), this.m_RunTimeMsgBox.registerFirstButtonHandler(cp
                .defaultHandlerForRuntimeMessageBox)) : c && !t ? (this.m_RunTimeMsgBox = new cp
            .RuntimeMessageBox(document.getElementById("cpDocument"),
                1, d, e, f, i, j, h, m, k), this.m_RunTimeMsgBox.setTitleText(l), this.m_RunTimeMsgBox
            .setMessageText(n), this.m_RunTimeMsgBox.setFirstButtonText(r), this.m_RunTimeMsgBox
            .registerFirstButtonHandler(cp.defaultHandlerForRuntimeMessageBox)) : t ? (this
            .m_RunTimeMsgBox = new cp.RuntimeMessageBox(document.getElementById("cpDocument"), 2, d, e, f,
                i, j, h, m, k), this.m_RunTimeMsgBox.setTitleText(l), this.m_RunTimeMsgBox.setMessageText(
            o), this.m_RunTimeMsgBox.setFirstButtonText(w), this.m_RunTimeMsgBox.registerFirstButtonHandler(
                cp.forceSubmitAll),
            this.m_RunTimeMsgBox.setSecondButtonText(s), this.m_RunTimeMsgBox.registerSecondButtonHandler(cp
                .returnToQuiz)) : (this.m_RunTimeMsgBox = new cp.RuntimeMessageBox(document.getElementById(
                "cpDocument"), 2, d, e, f, i, j, h, m, k), this.m_RunTimeMsgBox.setTitleText(l), b ? (this
                .m_RunTimeMsgBox.setMessageText(q), this.m_RunTimeMsgBox.setFirstButtonText(x), this
                .m_RunTimeMsgBox.setSecondButtonText(s), this.m_RunTimeMsgBox.registerSecondButtonHandler(cp
                    .returnToQuiz)) : (this.m_RunTimeMsgBox.setMessageText(p), this.m_RunTimeMsgBox
                .setFirstButtonText(u),
                this.m_RunTimeMsgBox.setSecondButtonText(v), this.m_RunTimeMsgBox
                .registerSecondButtonHandler(cp.defaultHandlerForRuntimeMessageBox)), this.m_RunTimeMsgBox
            .registerFirstButtonHandler(cp.forceSubmitAll));
        this.m_RunTimeMsgBox.show()
    },
    GetPlaybackController: function() {
        return this.m_playbackController
    },
    SetPlaybackController: function(a) {
        this.m_playbackController = a
    }
};
cp.ACAPQuizController = function() {
    cp.ACAPQuizController.baseConstructor.call(this)
};
cp.inherits(cp.ACAPQuizController, cp.QuizController);
cp.ACAPQuizController.prototype.GetIsReportingEnabled = function() {
    return !0
};
cp.PlaybackController = function() {
    this.m_QuizReportingData = cp.D.quizReportingData;
    this.ReportingOptionsEnum = cp.ReportingOptionsEnum;
    this.SlideViewsTypeEnum = cp.SlideViewsTypeEnum;
    this.QuizCriteriaEnum = cp.QuizCriteriaEnum;
    this.m_sendCourseDataWithInteractionData = !0;
    this.m_completionValueToSend = "default";
    this.m_successSlideViewsType = this.m_completionSlideViewsType = this.m_completionQuizCriteria = this
        .m_successQuizCriteria = this.m_successCriteria = this.m_completionCriteria = this
        .m_slideViewsForCompletion = this.m_slideViewsForSuccess =
        this.m_completionTrigger = -1;
    this.m_sendIncompleteToPassedOrFailed = !1;
    this.m_beginSendingSuccessStatus = !0;
    this.m_VarHandle = void 0;
    this.m_GoToQuizScopeActionExeuted = !1;
    this.m_UseRusticiAdapter = !0;
    this.m_lmsType = "";
    this.m_AuthorwareDelimeter = void 0;
    this.m_sendScoreAsPercent = !1;
    this.m_trackingLevel = 0;
    this.m_completionSlideViewPercentage = 100;
    this.m_reportingOption = 0;
    this.m_courseNode = this.m_courseName = this.m_departmentName = this.m_companyName = this.m_internalServerURL =
        this.m_emailAddress = "";
    this.m_isTrackedFlag = !1;
    this.m_trackingUrlEncodeVersionAndSession = !0;
    this.m_trackingCharsToNotUrlEncode = "";
    this.m_commitDataOnEverySlide = !1;
    this.m_CmiExitNormalAfterCompletion = this.m_trackingSendResumeData = !0;
    this.m_loadingResumeData = this.m_trackingIsOn = !1;
    this.m_quizController = void 0;
    this.currentSlide = "";
    this.currentSlideIndex = 0;
    this.m_slideNames = [];
    this.verbose = this.m_isTracked = this.m_lastCourseDataSent = !1;
    this.m_GraphManager = void 0
};
cp.PlaybackController.prototype = {
    InitializePlaybackController: function() {
        var a = cp.movie.stage.slides;
        if (a) {
            this.GetQuizController();
            for (var b = 0; b < a.length; ++b) this.AddSlideInfo(a[b])
        }
    },
    GetTotalUnansweredQuestions: function() {
        var a = this.GetQuizController();
        return !a ? -1 : a.GetTotalUnansweredQuestions()
    },
    AddQuestionSlideNames: function() {
        var a = cp.movie.stage.slides;
        if (a) {
            var b = this.GetQuizController();
            if (b)
                for (var c = 0; c < a.length; ++c) {
                    var d = b.GetQuestionsOnSlide(c);
                    d && 0 < d.length && b.AddQuestionSlideNames(a[c])
                }
        }
    },
    HasQuiz: function() {
        var a = !1,
            b = this.GetQuizController();
        b && (b = b.GetQuestionSlidesNames(), void 0 != b && 0 < b.length && (a = !0));
        return a
    },
    InitializeReportingVariables: function() {
        if (this.m_QuizReportingData) {
            var a = this.m_QuizReportingData.lmsInitializationString;
            a && "" != a && (eval(a), (cp.IsRunningInACAP || cp.NotRunningInLMS) && this
            .ResetReportingOptions())
        }
    },
    GetGraphManager: function() {
        if (cp.D.baq && void 0 != cp.D.sgMgr) {
            if (void 0 == this.m_GraphManager) {
                var a = void 0,
                    b = this.GetQuizController();
                b && (a = b.GetQuestionSlidesNames());
                void 0 != a && 0 < a.length && (this.m_GraphManager = new cp.QuizSlideGraphManager)
            }
            return this.m_GraphManager
        }
    },
    GetLoadingResumeDataBln: function() {
        return this.m_loadingResumeData
    },
    SetLoadingResumeData: function(a) {
        this.m_loadingResumeData = a
    },
    saveQuizState: function(a) {
        a.writeNumber(cpInfoCurrentSlideIndex);
        for (var b = 0; b < this.m_slideNames.length; ++b) {
            var c = this.m_slideNames[b],
                d = cp.D[c];
            if (d)
                if (a.writeBoolean(d.v), void 0 != d.pn) {
                    var e = cp.D[d.qs];
                    a.writeString(d.pn);
                    var f = 999,
                        d = cp.D[d.pn].pqs;
                    if (e)
                        for (e = 0; e < d.length; ++e) c ==
                            d[e] && (f = e);
                    a.writeNumber(f)
                } else a.writeString(""), a.writeNumber(999)
        }
        e = cp.movie.playbackController.GetQuizController();
        b = cp.movie.playbackController.HasQuiz();
        e && b && e.saveState(a);
        c = [];
        f = cp.vm.varInfos.length;
        for (e = 0; e < f; ++e)(b = cp.vm.varInfos[e]) && !b.systemDefined && c.push(b);
        e = 0;
        f = c.length;
        a.writeNumber(f);
        for (e = 0; e < f; ++e) b = c[e], d = cp.vm.getVariableValue(b.name), null == d && void 0 == d && (d =
            0), a.writeString(b.name), isNaN(d) ? (a.writeNumber(0), a.writeString(d)) : (a.writeNumber(1),
            a.writeNumber(d))
    },
    restoreQuizFromState: function(a) {
        if (a &&
            !(0 >= a.toString()
                .length)) {
            for (var b = a.readNumber(), c = 0; c < this.m_slideNames.length; ++c) {
                var d = cp.D[this.m_slideNames[c]];
                if (d) {
                    d.v = a.readBoolean();
                    a.readString();
                    var e = a.readNumber(),
                        f = d.pn;
                    f && "" != f && (e = cp.D[f].pqs[e], this.m_slideNames[c] = e, f = cp.movie.stage.slides[c],
                        cp.movie.stage.slides[c] = e, -1 != f.indexOf("rq") && (f = f.split("rq")[1], "" !=
                            f && (cp.D[f] = cp.D[e])), cp.poolManager && cp.poolManager.updateSlideData(e,
                            c, d))
                }
            }
            cp.poolManager && cp.poolManager.updateMainMovieData();
            cp.ContinueQuizLibraryInit();
            c =
                cp.movie.playbackController.GetQuizController();
            d = cp.movie.playbackController.HasQuiz();
            c && d && c.restoreState(a);
            f = c = 0;
            e = a.readNumber();
            for (c = 0; c < e; ++c) d = a.readString(), f = a.readNumber(), f = 0 == f ? a.readString() : a
                .readNumber(), cp.vm.hasOwnProperty(d) && cp.vm.setVariableValue(d, f, !1);
            this.UpdateRestoredSlideIndex(b)
        }
    },
    UpdateRestoredSlideIndex: function(a) {
        var b = !1;
        a >= cp.movie.stage.slides.length - 1 && (b = !0);
        var c = cp.movie.playbackController.GetQuizController(),
            d = !1,
            e = !1;
        c && (d = c.GetIsSlideJudged(a), e = c.GetIsSubmitAll());
        !b && (!e && d) && (a += 1);
        b = cp.D.project_main;
        if (0 <= a && (a < cp.movie.stage.slides.length && b) && (a = cp.movie.stage.slides[a]))
            if (a = cp.D[a]) a = a.from, void 0 != a && (b.currentFrame = a)
    },
    AddSlideInfo: function(a) {
        this.m_slideNames || (this.m_slideNames = []);
        this.m_slideNames.push(a)
    },
    GetNumSlides: function() {
        return !this.m_slideNames ? 0 : this.m_slideNames.length
    },
    GetSlideNameAtIndex: function(a) {
        if (this.m_slideNames && 0 <= a && a < this.m_slideNames.length) return this.m_slideNames[a]
    },
    GetSlideNames: function() {
        return this.m_slideNames
    },
    LeaveCurrentSlide: function(a) {
        this.verbose && cp.log("CPQuizLibrary :: PlaybackController :: Calling LeaveCurrentSlide");
        this.m_quizController && (void 0 == a || 0 > a || this.currentSlideIndex != a && this.m_quizController
            .LeaveSlide(this.currentSlideIndex, a))
    },
    SetCurrentSlide: function(a) {
        this.verbose && cp.log("CPQuizLibrary :: QuizController :: inside SetCurrentSlide - " + a);
        var b = this.GetSlideNameAtIndex(a);
        b != this.currentSlide && (b != this.currentSlide && 0 <= a && a < this.m_slideNames.length && this
            .m_trackingAdapter && this.GetIsTracked() &&
            ("EMAIL" != this.m_lmsType.toUpperCase() && "ACROBAT" != this.m_lmsType.toUpperCase() &&
                "INTERNALSERVER" != this.m_lmsType.toUpperCase()) && this.m_trackingAdapter.SendSlideView(
            a), this.currentSlide = b, this.currentSlideIndex = a, b = this.GetGraphManager(), void 0 !=
            b && b.updateCurrentBranch(a), this.m_quizController && this.m_quizController.EnterCurrentSlide(
                a))
    },
    GetCurrentSlideIndex: function() {
        return this.currentSlideIndex
    },
    GetCurrentSlide: function() {
        return this.currentSlide
    },
    GetQuizController: function() {
        this.m_quizController ||
            (this.m_quizController = cp.IsRunningInACAP ? new cp.ACAPQuizController : new cp.QuizController,
                this.m_quizController.InitializeQuizController(), this.m_quizController.SetPlaybackController(
                    this));
        return this.m_quizController
    },
    IsRunningInConnect: function() {
        var a = cp.IsRunningInConnect();
        a && (this.m_lmsType = "BREEZE");
        return a
    },
    ClearPendingCalls: function() {
        this.m_trackingAdapter && this.m_trackingAdapter.ClearPendingCalls()
    },
    LMSIsBreeze: function() {
        return this.IsRunningInConnect()
    },
    LMSIsAICC: function() {
        return "AICC" ==
            this.m_lmsType.toUpperCase()
    },
    LMSIsAlternateReporting: function() {
        return "ACROBAT" == this.m_lmsType.toUpperCase() || "INTERNALSERVER" == this.m_lmsType.toUpperCase()
    },
    GetTrackingData: function() {
        if (this.IsRunningInConnect())
            if (this.verbose && cp.log("Playback controller :: GetTrackingData()"), cp
                .BreezeTrackingAdapterObj && !cp.BreezeTrackingAdapterObj.IsTrackingDataLoaded()) this
                .TurnOffTracking();
            else if (this.m_trackingAdapter && this.m_trackingAdapter.GetTrackingData(), this
            .m_trackingAdapter && this.m_trackingAdapter.IsTrackingDataLoaded()) {
            this.m_trackingAdapter.GetLessonLocation();
            var a = this.m_trackingAdapter.GetLessonData();
            this.verbose && cp.log("Playback controller :: GetTrackingData() :: quizStateStr :: " + a)
        } else this.TurnOffTracking()
    },
    CreateTrackingAdapter: function() {
        this.verbose && cp.log("Playback controller :: CreateTrackingAdapter() :" + this.m_lmsType);
        var a = {},
            b = -1 != this.m_lmsType.toUpperCase()
            .indexOf("SCORM");
        b && (a.exitNormal = this.m_CmiExitNormalAfterCompletion, a.reportingOption = this.m_reportingOption);
        var c = !0,
            d = cp.D.quizReportingData;
        d && (c = d.trackingSendResumeData);
        cp.IsRunningInACAP ? (this.m_trackingAdapter = new cp.TrackingAdapter, this.m_trackingAdapter
            .SetLessonDataTracked(c), this.m_trackingAdapter.SetAdapterSpecificData(a), this
            .m_trackingAdapter.Initialize(), window.onbeforeunload = cp.UnloadActivties) : (this
            .m_trackingAdapter = this.IsRunningInConnect() ? cp.BreezeTrackingAdapterObj ? cp
            .BreezeTrackingAdapterObj : new cp.Breeze : this.LMSIsAlternateReporting() ? new cp
            .InternalServerAdapter : new cp.SCORM_Rustici(b), window.onbeforeunload = cp.UnloadActivties,
            this.m_trackingAdapter ?
            this.m_trackingAdapter != cp.BreezeTrackingAdapterObj && (void 0 != c && this.m_trackingAdapter
                .SetLessonDataTracked(c), this.m_trackingAdapter.SetAdapterSpecificData(a), this
                .m_trackingAdapter.Initialize(), this.m_trackingAdapter.IsInitialized() && this
                .IsRunningInConnect() && this.GetTrackingData()) : this.m_trackingIsOn = this
            .m_loadingResumeData = !1)
    },
    TurnOnTracking: function() {
        this.verbose && cp.log("Playback controller :: TurnOnTracking()");
        if (!this.m_trackingIsOn || cp.IsRunningInACAP) this.m_trackingIsOn = this.m_loadingResumeData = !0,
            this.CreateTrackingAdapter()
    },
    TurnOffTracking: function() {
        this.verbose && cp.log("Playback controller :: TurnOffTracking()");
        this.m_trackingIsOn && (this.m_trackingIsOn = this.m_loadingResumeData = !1)
    },
    GetIsTracked: function() {
        return this.m_isTracked
    },
    SetIsTracked: function(a) {
        if (cp.IsRunningInACAP) return this.TurnOnTracking();
        this.IsRunningInConnect() ? a = !0 : this.LMSIsAlternateReporting() || "undefined" == typeof cp
            .LMSDriverHolder && (a = !1);
        this.verbose && cp.log("Playback controller :: SetIsTracked()");
        a && a != this.m_isTracked ?
            this.TurnOnTracking() : a || (a != this.m_isTracked ? this.TurnOffTracking() : this
                .m_loadingResumeData = !1);
        this.m_isTracked = a
    },
    AllowedToGoToSlide: function(a, b) {
        if (!this.m_quizController || a == b) return "";
        if (0 > a || 0 > b) return "QUIZ_ERROR_BAD_SLIDE_NUM";
        var c = b < a;
        if (this.m_quizController.SubmitAllDialogShown(a, b)) return "QUIZ_ERROR_SUBMIT_ALL";
        for (var d = a < b ? 1 : -1, e = "", f = a;;) {
            if (f == b) return this.m_quizController.CanEnterSlide(b);
            e = this.m_quizController.CanLeaveSlide(f, c);
            if ("" != e) return e;
            f += d
        }
    },
    GetTotalQuizScore: function() {
        if (this.m_quizController) return this.m_quizController.GetScore()
    },
    GetTotalQuizMaxScore: function() {
        if (this.m_quizController) return this.m_quizController.GetMaxScore()
    },
    GetTotalQuizMinScore: function() {
        if (this.m_quizController) return this.m_quizController.GetMinScore()
    },
    GetTotalQuizLocation: function() {
        return this.currentSlideIndex
    },
    HasQuizzes: function() {
        return !this.m_quizController ? !1 : this.m_quizController.HasQuiz()
    },
    GetAllQuestionsAnswered: function() {
        return !this.m_quizController || !this.m_quizController.GetAllQuestionsAnswered() ? !1 : !0
    },
    GetAllQuizAttemptsFinished: function() {
        return !this.m_quizController ||
            !this.m_quizController.GetIsAttemptFinished() ? !1 : !0
    },
    GetAllQuizzesPassed: function() {
        return !this.m_quizController || !this.m_quizController.GetIsPassed() ? !1 : !0
    },
    GetNumberOfSlidesSeen: function() {
        var a = 0;
        if (!this.m_slideNames) return !1;
        for (var b = 0; b < this.m_slideNames.length; ++b) cp.D[this.m_slideNames[b]].v && a++;
        return a
    },
    GetPercentageSlidesSeen: function() {
        var a = this.GetGraphManager();
        if (void 0 != a) return a = a.getSlideViewPercentage(), "NaN" == a ? 0 : a;
        if (!this.m_slideNames) return !1;
        a = this.m_slideNames.length;
        if (0 < a) return 100 * (this.GetNumberOfSlidesSeen() / a)
    },
    GetAllSlidesSeen: function() {
        if (!this.m_slideNames) return !1;
        for (var a = 0; a < this.m_slideNames.length; ++a)
            if (!cp.D[this.m_slideNames[a]].v) return !1;
        return !0
    },
    GetAllQuizzesPassingScore: function() {
        return !this.m_quizController ? !1 : this.m_quizController.GetPassingScore()
    },
    GetIsQuizAttempted: function() {
        var a = !1;
        if (this.m_quizController) return a = this.m_quizController.GetQuizBranchAware() ? this.m_quizController
            .GetAnyNonPreTestQuestionAnswered() : this.m_quizController.GetAnyQuestionsAnswered()
    },
    EvaluateQuizStatus: function(a) {
        var b = !1;
        switch (a) {
            case this.QuizCriteriaEnum.QuizIsPassed:
                this.GetAllQuizzesPassed() && (b = !0);
                break;
            case this.QuizCriteriaEnum.QuizIsAttempted:
                b = this.GetIsQuizAttempted();
                break;
            case this.QuizCriteriaEnum.QuizIsPassedOrAttempLimitReached:
                if (this.GetAllQuizzesPassed()) return !0;
                if (this.m_quizController && this.m_quizController.quizNumStarts < this.m_quizController
                    .GetNumberOfQuizAttempts()) break;
                return !0;
            default:
                this.verbose && cp.log("Illegal parameter to EvaluateQuizStatus: " +
                    a)
        }
        return b
    },
    EvaluateViewStatus: function(a, b) {
        var c = !1,
            d = this.GetNumberOfSlidesSeen();
        if (this.m_slideNames && 0 < this.m_slideNames.length) totalSlides = this.m_slideNames.length;
        else return this.verbose && cp.log(
            "In EvaluateViewStatus,totalSlides not obtained or found to be zero. Returning."), !1;
        switch (b) {
            case this.SlideViewsTypeEnum.percent:
                this.GetPercentageSlidesSeen() >= a && (c = !0);
                break;
            case this.SlideViewsTypeEnum.number:
                d >= a && (c = !0);
                break;
            default:
                this.verbose && cp.log("Illegal arg to EvaluateViewStatus:" +
                    a + "," + b)
        }
        return c
    },
    EvaluateStatus: function(a) {
        var b = !1,
            c = this.QuizCriteriaEnum,
            d = this.SlideViewsTypeEnum,
            e = 0,
            f = this.ReportingOptionsEnum;
        if ("completion" == a) c = this.m_completionQuizCriteria, d = this.m_completionSlideViewsType, e = this
            .m_slideViewsForCompletion, f = this.m_completionCriteria;
        else if ("success" == a) c = this.m_successQuizCriteria, d = this.m_successSlideViewsType, e = this
            .m_slideViewsForSuccess, f = this.m_successCriteria;
        else return this.verbose && cp.log("Illegal status type to evaluateStatus:" + a), !1;
        switch (f) {
            case this.ReportingOptionsEnum.quiz_only:
                b =
                    this.EvaluateQuizStatus(c);
                break;
            case this.ReportingOptionsEnum.quiz_and_views:
                this.EvaluateQuizStatus(c) && this.EvaluateViewStatus(e, d) && (b = !0);
                break;
            case this.ReportingOptionsEnum.views_only:
                b = this.EvaluateViewStatus(e, d);
                break;
            case this.ReportingOptionsEnum.access:
                b = 1 <= this.GetNumberOfSlidesSeen();
                break;
            default:
                this.verbose && cp.log("Illegal value of criteria in evaluateStatus():" + a)
        }
        return b
    },
    IsSlideVisited: function(a) {
        if (a = cp.D[a]) return a.v
    },
    ShouldSendSuccessStatus: function() {
        var a = !1;
        if (this.m_successCriteria ==
            this.ReportingOptionsEnum.access) a = 1 <= this.GetNumberOfSlidesSeen();
        else if (this.m_successCriteria == this.ReportingOptionsEnum.quiz_only) {
            if (a = !0, this.m_quizController) {
                var b = this.m_slideNames[this.m_quizController.GetLastSlideInQuizIndex()];
                this.IsSlideVisited(b) || (a = !1)
            }
        } else if (this.m_successCriteria == this.ReportingOptionsEnum.quiz_and_views) {
            if (this.m_quizController && (b = this.m_slideNames[this.m_quizController
                .GetLastSlideInQuizIndex()], !this.IsSlideVisited(b))) return a;
            if (!this.GetAllQuizzesPassed() ||
                this.IsSlideVisited(this.m_slideNames[this.m_slideNames.length - 1])) a = !0
        } else this.m_successCriteria == this.ReportingOptionsEnum.views_only && (a = this.IsSlideVisited(this
            .m_slideNames[this.m_slideNames.length - 1]));
        return a
    },
    GetTotalQuizStatusAll: function() {
        var a = {
                isPassed: !1,
                isCompleted: !1,
                sendCompletion: !0,
                sendNothing: !1
            },
            b = this.ReportingOptionsEnum,
            b = this.LMSIsBreeze() ? this.ReportingOptionsEnum.breeze : this.GetReportingOption();
        switch (b) {
            case this.ReportingOptionsEnum.breeze:
                this.HasQuiz() ? this.GetAllQuizAttemptsFinished() ?
                    (a.isPassed = this.GetAllQuizzesPassed() ? !0 : !1, a.isCompleted = !0, a.sendCompletion = !
                        1) : (a.isPassed = !1, a.isCompleted = !1, a.sendCompletion = !0) : (this
                        .GetAllSlidesSeen() ? (a.isPassed = !0, a.isCompleted = !0) : (a.isPassed = !1, a
                            .isCompleted = !1), a.sendCompletion = !0);
                break;
            case this.ReportingOptionsEnum.completion_success:
                a.sendCompletion = !1;
                a.isCompleted = this.EvaluateStatus("completion");
                a.isPassed = this.EvaluateStatus("success");
                break;
            case this.ReportingOptionsEnum.completion_only:
                a.sendCompletion = !0;
                a.isCompleted =
                    this.EvaluateStatus("completion");
                break;
            case this.ReportingOptionsEnum.incompleteToPassedOrFailed:
                a.isPassed = this.EvaluateStatus("success");
                this.m_beginSendingSuccessStatus = this.ShouldSendSuccessStatus();
                break;
            case this.ReportingOptionsEnum.access:
                break;
            default:
                1 > this.GetNumberOfSlidesSeen() ? (a.isPassed = !1, a.isCompleted = !1) : (a.isPassed = !0, a
                    .isCompleted = !0), a.sendCompletion = !0
        }
        return a
    },
    GetTotalQuizPassed: function() {
        return this.GetTotalQuizStatusAll()
            .isPassed ? "passed" : "failed"
    },
    GetTotalQuizCompleted: function() {
        return this.GetTotalQuizStatusAll()
            .isCompleted ?
            "completed" : "incomplete"
    },
    GetTotalQuizSendCompletion: function() {
        var a = !0;
        switch (this.m_completionValueToSend) {
            case "completion":
                a = !0;
                break;
            case "passed":
                a = !1;
                break;
            default:
                a = this.GetTotalQuizStatusAll()
                    .sendCompletion
        }
        return a
    },
    GetTotalQuizState: function() {
        return ""
    },
    GetProgressMeasure: function() {
        return 0 == this.m_slideNames.length ? 0 : this.GetNumberOfSlidesSeen() / this.m_slideNames.length
    },
    ShouldFlushCourseData: function(a, b) {
        a ? a.printCourseData() : this.verbose && cp.log("lastData is undefined");
        b ? (this.verbose &&
            cp.log("thisData "), b.printCourseData()) : this.verbose && cp.log("thisData is undefined");
        if ("EMAIL" == this.m_lmsType.toUpperCase() || "ACROBAT" == this.m_lmsType.toUpperCase() ||
            "INTERNALSERVER" == this.m_lmsType.toUpperCase()) return this.verbose && cp.log("return false0"), !
        1;
        if (void 0 == b) return this.verbose && cp.log("return false1"), !1;
        if (void 0 == a) return this.verbose && cp.log("return true0"), !0;
        if (b.quizMinScore != a.quizMinScore || b.quizMaxScore != a.quizMaxScore || b.sendScoreAsPercent != a
            .sendScoreAsPercent || b.quizSendCompletion !=
            a.quizSendCompletion) return this.verbose && cp.log("return true1"), !0;
        if (b.quizScore != a.quizScore || b.quizCompleted != a.quizCompleted || b.quizPassed != a.quizPassed)
            return this.verbose && cp.log("return true2"), !0;
        this.verbose && cp.log("return false2");
        return !1
    },
    ShouldSendCourseData: function(a, b) {
        a ? (this.verbose && cp.log("lastData "), a.printCourseData()) : this.verbose && cp.log(
            "lastData is undefined");
        b ? (this.verbose && cp.log("thisData "), b.printCourseData()) : this.verbose && cp.log(
            "thisData is undefined");
        if ("EMAIL" ==
            this.m_lmsType.toUpperCase() || "ACROBAT" == this.m_lmsType.toUpperCase() || "INTERNALSERVER" ==
            this.m_lmsType.toUpperCase()) return this.verbose && cp.log("return false -2"), !1;
        if (void 0 == b) return this.verbose && cp.log("return false -1"), !1;
        if (void 0 == a) return this.verbose && cp.log("return true0"), !0;
        this.verbose && cp.log("function shouldSendCourseData 33");
        if (b.slideCount >= a.slideCount + 10) return this.verbose && cp.log("return true1"), !0;
        if (b.quizMinScore != a.quizMinScore || b.quizMaxScore != a.quizMaxScore || b.sendScoreAsPercent !=
            a.sendScoreAsPercent || b.quizSendCompletion != a.quizSendCompletion) return this.verbose && cp.log(
            "return true2"), !0;
        if (b.quizScore != a.quizScore || b.quizCompleted != a.quizCompleted || b.quizPassed != a.quizPassed)
            return this.verbose && cp.log("return true3"), !0;
        if (b.quizLocation != a.quizLocation) return !0;
        this.verbose && cp.log("return false4");
        return !1
    },
    SendSuspendDataOnly: function() {
        this.verbose && cp.log("PlaybackController::SendSuspendDataOnly()");
        var a = cp.createAndGetDataChunk();
        this.GetIsTracked() && this.m_trackingAdapter &&
            this.m_trackingAdapter.SendSuspendData(a)
    },
    CanSendCourseData: function() {
        return !0
    },
    GetCourseData: function() {
        var a = {
            printCourseData: function() {}
        };
        a.slideCount = this.GetCurrentSlideIndex();
        a.quizScore = this.GetTotalQuizScore();
        a.quizMinScore = this.GetTotalQuizMinScore();
        a.quizMaxScore = this.GetTotalQuizMaxScore();
        a.sendScoreAsPercent = this.GetSendScoreAsPercent();
        a.quizLocation = "" + this.GetTotalQuizLocation() + "";
        a.quizCompleted = this.GetTotalQuizCompleted();
        a.quizPassed = this.GetTotalQuizPassed();
        a.quizSendCompletion =
            this.GetTotalQuizSendCompletion();
        a.quizTime = void 0;
        a.quizState = this.GetTotalQuizState();
        a.progressMeasure = this.GetProgressMeasure();
        a.sendIncompleteToPassedOrFailed = this.m_sendIncompleteToPassedOrFailed;
        a.beginSendingSuccessStatus = this.m_beginSendingSuccessStatus;
        return a
    },
    SendCourseData: function(a) {
        var b = this.GetQuizController();
        b && b.GetIsSubmitAll() && b.quizInProgress && !b.m_submittedAllQuestions ? this.SendSuspendDataOnly() :
            this.CanSendCourseData() && (this.SetBreezeDefaults(), this.m_trackingAdapter &&
                this.GetIsTracked() && (b = this.GetCourseData(), a = a || this.ShouldFlushCourseData(this
                        .m_lastCourseDataSent, b), this.verbose && cp.log("sendCourseData flush " + a), a ||
                    this.ShouldSendCourseData(this.m_lastCourseDataSent, b) ? (this.m_lastCourseDataSent = b,
                        this.verbose && cp.log("sending course data flush " + a), this.m_trackingAdapter
                        .SendTrackingData(b.quizScore, b.quizMinScore, b.quizMaxScore, b.sendScoreAsPercent, b
                            .quizLocation, b.quizCompleted, b.quizPassed, b.quizSendCompletion, b.quizTime, b
                            .quizState, b.progressMeasure,
                            b.sendIncompleteToPassedOrFailed, b.beginSendingSuccessStatus), a && this
                        .m_trackingAdapter.Flush()) : this.verbose && cp.log("NOT sending course data")))
    },
    SendQuestionEventData: function(a) {
        this.verbose && cp.log("PlaybackController::SendQuestionData()");
        var b = 0,
            c = this.GetQuizController();
        c && (b = c.GetMaxScore());
        b = {
            slideNumber: a.getslideNum(),
            questionNumber: a.getquestionNumInQuiz(),
            questionScoringType: a.getQuestionScoringType(),
            interactionType: a.getinteractionType(),
            weighting: a.getWeighting(),
            questionAnswered: !1 ==
                a.getanswersIncomplete(),
            questionAnsweredCorrectly: a.getansweredCorrectly(),
            questionMaxScore: b,
            questionScore: a.getscoredPoints(),
            questionMaxAttempts: a.getmaxTries(),
            infiniteAttempts: 9999 == a.getmaxTries(),
            questionAttempts: a.getnumTries(),
            interactionID: a.getinteractionID(),
            quizName: "QuizName",
            objectiveID: a.getobjectiveID(),
            selectedAnswer: a.m_chosenAnswersAsString
        };
        cp.IsRunningInACAP && (b.descriptionData = a.m_descriptionTexts);
        cp.em.fireEvent("CPQuestionSubmit", b)
    },
    SetBreezeDefaults: function() {
        this.LMSIsBreeze() &&
            (this.m_completionValueToSend = "default", this.m_completionTrigger = this.ReportingOptionsEnum
                .breeze, this.m_completionSlideViewPercentage = 100, this.m_sendScoreAsPercent = !1, this
                .m_trackingLevel = "interactions", this.m_trackingUrlEncodeVersionAndSession = !0, this
                .m_trackingCharsToNotUrlEncode = "", this.m_trackingSendResumeData = !0)
    },
    SendInteractionData: function(a, b) {
        this.verbose && cp.log("PlaybackController::SendInteraction()");
        this.SetBreezeDefaults();
        if (this.GetIsTracked() && "interactions" == this.m_trackingLevel) {
            var c =
                this.GetQuizController();
            c && c.GetScore();
            if (this.LMSIsAICC() || this.IsRunningInConnect()) this.m_trackingAdapter && this.m_trackingAdapter
                .SendInteractionData(a.m_interactionID, a.m_objectiveID, a.m_interactionType, a
                    .m_correctAnswersAsString, a.m_chosenAnswersAsString, a.m_isCorrectAsString, a.m_weighting,
                    a.m_latencyAsSeconds, a.m_curDateAsString2, a.m_curTimeAsSecondsSinceMidnight, b);
            else {
                this.LMSIsAlternateReporting() && (escapeAnswers = !1);
                var d = a.m_correctAnswersAsString;
                if (this.LMSIsAlternateReporting() &&
                    c) {
                    var e = c.GetQuestionsOnSlide(this.currentSlide);
                    e && 0 != e.length && (e = e[0]) && e.GetIsSurvey() && (d = " ");
                    this.m_trackingAdapter && this.m_trackingAdapter.SetCurrentAttempt(c.quizNumStarts)
                }
                this.m_trackingAdapter && this.m_trackingAdapter.SendInteractionData(a.m_interactionID, a
                    .m_objectiveID, a.m_interactionType, d, a.m_chosenAnswersAsString, a
                    .m_isCorrectAsString, a.m_weighting, a.m_latencyAsSeconds, a.m_curDateAsString, a
                    .m_curTimeAsSecondsSinceMidnight, b)
            }
        }
    },
    OnEndQuiz: function() {
        this.GetIsTracked() && ("EMAIL" !=
            this.m_lmsType.toUpperCase() && "ACROBAT" != this.m_lmsType.toUpperCase() && "INTERNALSERVER" !=
            this.m_lmsType.toUpperCase()) && this.SendCourseData(!0)
    },
    SendEmailResults: function() {
        this.GetIsTracked() && "EMAIL" == this.m_lmsType.toUpperCase() && (this.verbose && cp.log(
            "sending course data from sendEmailResults"), this.SendCourseData(!0))
    },
    PostQuizResults: function() {
        if (this.GetIsTracked() && ("ACROBAT" == this.m_lmsType.toUpperCase() || "INTERNALSERVER" == this
                .m_lmsType.toUpperCase())) this.verbose && cp.log("sending course data from PostQuizResults"),
            this.CanPostResults() && this.SendCourseData(!0)
    },
    CanPostResults: function() {
        return this.GetAllQuizzesPassed() || this.m_quizController && (this.m_quizController.m_numStarts >= this
                .m_quizController.m_numQuizAttemptsAllowed || this.m_quizController.GetIsInReviewMode()) ? !0 :
            !1
    },
    DoSendLMSTrackingData: function() {
        this.GetIsTracked() && "EMAIL" != this.m_lmsType.toUpperCase() && "ACROBAT" != this.m_lmsType
            .toUpperCase() && "INTERNALSERVER" != this.m_lmsType.toUpperCase() ? this.SendCourseData(!this
                .LMSIsAICC() || !this.m_playbackController.IsRunningInConnect()) :
            this.SendCourseData(!1)
    },
    RestoreQuizState: function() {
        this.verbose && cp.log("PlaybackController :: RestoreQuizState()");
        var a = this.GetQuizController();
        a && a.GetIsReportingEnabled() && (cp.resumeValuesFromDataChunk(), cp.movie.resumeMovieSpecificValue())
    },
    GetRestoredQuizSlide: function() {
        this.verbose && cp.log("PlaybackController :: GoToRestoredQuizSlide()");
        var a = cp.D.project_main.currentFrame;
        this.verbose && cp.log("Restoring frame :: " + a);
        return a
    },
    DoPollLMSGetTrackingDataLoaded: function() {
        this.GetIsTracked() &&
            (this.m_trackingAdapter ? this.m_trackingAdapter.IsTrackingDataLoaded() && (this.m_trackingAdapter
                .GetLessonLocation(), this.m_trackingAdapter.GetLessonData()) : (this.verbose && cp.log(
                "_doPollLMSGetTrackingDataLoaded else"), turnOffTracking()))
    },
    ExitCourse: function() {
        this.verbose && cp.log("function exitCourse 1 " + isTracked);
        this.m_trackingAdapter && this.GetIsTracked() ? (this.verbose && cp.log(
                "function exitCourse isTracked "), "EMAIL" != this.m_lmsType.toUpperCase() && ("ACROBAT" !=
                this.m_lmsType.toUpperCase() && "INTERNALSERVER" !=
                this.m_lmsType.toUpperCase()) && (this.verbose && cp.log(
                "function exitCourse sendCourseData "), this.SendCourseData(!0)), this.m_trackingAdapter
            .Finish()) : this.verbose && cp.log("doFinalExit();")
    },
    GetSendCourseDataWithInteractionData: function() {
        return this.m_sendCourseDataWithInteractionData
    },
    GetLMSType: function() {
        return this.m_lmsType
    },
    SetLMSType: function() {
        this.verbose && cp.log("SetLMSType");
        switch (this.m_QuizReportingData.lmsType) {
            case 1:
                this.m_lmsType = "SCORM2004";
                break;
            case 2:
                this.m_lmsType = "SCORM12";
                break;
            case 3:
                this.m_lmsType = "Authorware";
                break;
            case 4:
                this.m_lmsType = "AICC";
                break;
            case 5:
                this.m_lmsType = "Questionmark";
                break;
            case 6:
                this.m_lmsType = "email";
                break;
            case 7:
                this.m_lmsType = "AICC";
                break;
            case 8:
                this.m_lmsType = "Acrobat";
                break;
            case 9:
                this.m_lmsType = "InternalServer";
                break;
            default:
                this.m_lmsType = ""
        }
    },
    SetAuthorwareDelimeter: function() {
        this.verbose && cp.log("SetAuthorwareDelimeter");
        this.m_AuthorwareDelimeter = this.m_QuizReportingData.authorwareDelimeter
    },
    SetSendScoreAsPercent: function() {
        this.verbose &&
            cp.log("SetSendScoreAsPercent");
        this.m_sendScoreAsPercent = this.m_QuizReportingData.sendScoreAsPercent ? !0 : !1
    },
    GetSendScoreAsPercent: function() {
        return this.IsRunningInConnect() ? !1 : this.m_sendScoreAsPercent
    },
    SetSendCompletionFlag: function() {
        this.m_completionValueToSend = this.m_QuizReportingData.sendCompletionFlag ? "completion" : "passed"
    },
    GetSendCompletionFlag: function() {
        return this.m_completionValueToSend
    },
    SetTrackingLevel: function() {
        this.verbose && cp.log("SetTrackingLevel");
        switch (this.m_QuizReportingData.trackingLevel) {
            case 0:
                this.m_trackingLevel =
                    "interactions";
                break;
            case 2:
                this.m_trackingLevel = "score"
        }
    },
    SetSlideViewPercentage: function() {
        this.verbose && cp.log("SetSlideViewPercentage");
        this.m_completionSlideViewPercentage = this.m_QuizReportingData.slideViewPercentage
    },
    SetReportingOption: function() {
        this.verbose && cp.log("SetReportingOption");
        switch (this.m_QuizReportingData.reportingOption) {
            case 0:
                this.m_reportingOption = this.ReportingOptionsEnum.completion_success;
                break;
            case 1:
                this.m_reportingOption = this.ReportingOptionsEnum.completion_only;
                break;
            case 2:
                this.m_reportingOption = this.ReportingOptionsEnum.incompleteToPassedOrFailed;
                this.m_sendIncompleteToPassedOrFailed = !0;
                break;
            case 4:
                this.m_reportingOption = this.ReportingOptionsEnum.breeze;
                break;
            default:
                this.m_reportingOption = ""
        }
        this.m_completionTrigger = this.m_reportingOption
    },
    GetReportingOption: function() {
        return this.m_reportingOption
    },
    SetSlideViewsForSuccess: function() {
        this.verbose && cp.log("SetSlideViewsForSuccess");
        this.m_slideViewsForSuccess = this.m_QuizReportingData.slideViewsForSuccess;
        switch (this.m_QuizReportingData.slideViewsTypeForSuccess) {
            case 0:
                this.m_successSlideViewsType =
                    this.SlideViewsTypeEnum.percent;
                break;
            case 1:
                this.m_successSlideViewsType = this.SlideViewsTypeEnum.number;
                break;
            default:
                this.m_successSlideViewsType = this.SlideViewsTypeEnum.percent
        }
    },
    SetSlideViewsForCompletion: function() {
        this.verbose && cp.log("SetSlideViewsForCompletion");
        this.m_slideViewsForCompletion = this.m_QuizReportingData.slideViewsForCompletion;
        switch (this.m_QuizReportingData.slideViewsTypeForCompletion) {
            case 0:
                this.m_completionSlideViewsType = this.SlideViewsTypeEnum.percent;
                break;
            case 1:
                this.m_completionSlideViewsType =
                    this.SlideViewsTypeEnum.number;
                break;
            default:
                this.m_completionSlideViewsType = this.SlideViewsTypeEnum.percent
        }
    },
    SetQuizCriteriaForCompletion: function() {
        this.verbose && cp.log("SetQuizCriteriaForCompletion");
        switch (this.m_QuizReportingData.quizCriteriaForCompletion) {
            case 0:
                this.m_completionQuizCriteria = this.QuizCriteriaEnum.QuizIsPassed;
                break;
            case 1:
                this.m_completionQuizCriteria = this.QuizCriteriaEnum.QuizIsAttempted;
                break;
            case 2:
                this.m_completionQuizCriteria = this.QuizCriteriaEnum.QuizIsPassedOrAttempLimitReached;
                break;
            default:
                this.verbose && cp.log("Value of quizCriteria not valid in setQuizCriteriaForCompletion()!"),
                    this.m_completionQuizCriteria = this.QuizCriteriaEnum.QuizIsPassed
        }
    },
    SetQuizCriteriaForSuccess: function() {
        this.verbose && cp.log("SetQuizCriteriaForSuccess");
        switch (this.m_QuizReportingData.quizCriteriaForSuccess) {
            case 0:
                this.m_successQuizCriteria = this.QuizCriteriaEnum.QuizIsPassed;
                break;
            case 1:
                this.m_successQuizCriteria = this.QuizCriteriaEnum.QuizIsAttempted;
                break;
            case 2:
                this.m_successQuizCriteria =
                    this.QuizCriteriaEnum.QuizIsPassedOrAttempLimitReached;
                break;
            default:
                this.verbose && cp.log("Value of quizCriteria not valid in setQuizCriteriaForSuccess()!"), this
                    .m_successQuizCriteria = this.QuizCriteriaEnum.QuizIsPassed
        }
    },
    SetCompletionCriteria: function() {
        this.verbose && cp.log("SetCompletionCriteria");
        switch (this.m_QuizReportingData.completionCriteria) {
            case 0:
                this.m_completionCriteria = this.ReportingOptionsEnum.breeze;
                break;
            case 1:
                this.m_completionCriteria = this.ReportingOptionsEnum.quiz_only;
                break;
            case 2:
                this.m_completionCriteria =
                    this.ReportingOptionsEnum.quiz_and_views;
                break;
            case 3:
                this.m_completionCriteria = this.ReportingOptionsEnum.views_only;
                break;
            case 4:
                this.m_completionCriteria = this.ReportingOptionsEnum.access;
                break;
            case 5:
                this.m_completionCriteria = this.ReportingOptionsEnum.completion_success;
                break;
            case 6:
                this.m_completionCriteria = this.ReportingOptionsEnum.incompleteToPassedOrFailed;
                break;
            default:
                this.verbose && cp.log("Invalid criteria recd in setOnlySuccessCriteria")
        }
    },
    SetSuccessCriteria: function() {
        this.verbose && cp.log("SetSuccessCriteria");
        switch (this.m_QuizReportingData.successCriteria) {
            case 0:
                this.m_successCriteria = this.ReportingOptionsEnum.breeze;
                break;
            case 1:
                this.m_successCriteria = this.ReportingOptionsEnum.quiz_only;
                break;
            case 2:
                this.m_successCriteria = this.ReportingOptionsEnum.quiz_and_views;
                break;
            case 3:
                this.m_successCriteria = this.ReportingOptionsEnum.views_only;
                break;
            case 4:
                this.m_successCriteria = this.ReportingOptionsEnum.access;
                break;
            case 5:
                this.m_successCriteria = this.ReportingOptionsEnum.completion_success;
                break;
            case 6:
                this.m_successCriteria =
                    this.ReportingOptionsEnum.incompleteToPassedOrFailed;
                break;
            default:
                this.verbose && cp.log("Invalid criteria recd in setOnlySuccessCriteria")
        }
    },
    SetEmailAddress: function() {
        this.verbose && cp.log("SetEmailAddress");
        this.m_emailAddress = this.m_QuizReportingData.emailAddress
    },
    SetInternalServerURL: function() {
        this.verbose && cp.log("SetInternalServerURL");
        this.m_internalServerURL = this.m_QuizReportingData.internalServerURL
    },
    SetDirectory: function() {
        this.verbose && cp.log("SetDirectory");
        this.m_companyName = this.m_QuizReportingData.companyName;
        this.m_departmentName = this.m_QuizReportingData.departmentName;
        this.m_courseName = this.m_QuizReportingData.courseName
    },
    SetCourseNode: function() {
        this.verbose && cp.log("SetCourseNode");
        this.m_courseNode = this.m_QuizReportingData.courseNode
    },
    GetIsTrackedFlag: function() {
        return this.m_isTrackedFlag
    },
    SetIsTrackedFlag: function() {
        this.verbose && cp.log("SetIsTrackedFlag");
        this.m_isTrackedFlag = this.m_QuizReportingData.isTrackedFlag
    },
    SetTrackingUrlEncodeVersionAndSession: function() {
        this.verbose && cp.log("SetTrackingUrlEncodeVersionAndSession");
        this.m_trackingSendResumeData = this.m_QuizReportingData.trackingUrlEncodeVersionAndSession ? !0 : !1
    },
    SetTrackingCharsToNotUrlEncode: function() {
        this.verbose && cp.log("SetTrackingCharsToNotUrlEncode");
        this.m_trackingCharsToNotUrlEncode = this.m_QuizReportingData.trackingCharsToNotUrlEncode
    },
    SetCommitDataOnEverySlide: function() {
        this.verbose && cp.log("SetOptimizeCommitData");
        this.m_commitDataOnEverySlide = this.m_QuizReportingData.commitDataOnEverySlide ? !0 : !1
    },
    SetTrackingSendResumeData: function() {
        this.verbose &&
            cp.log("SetTrackingSendResumeData");
        this.m_trackingSendResumeData = this.m_QuizReportingData.trackingSendResumeData ? !0 : !1
    },
    SetCmiExitNormalAfterCompletion: function() {
        this.verbose && cp.log("SetCmiExitNormalAfterCompletion");
        this.m_CmiExitNormalAfterCompletion = this.m_QuizReportingData.cmiExitNormalAfterCompletion
    },
    ResetReportingOptions: function() {
        this.m_sendCourseDataWithInteractionData = !1;
        this.m_completionValueToSend = "default";
        this.m_completionTrigger = cp.ReportingOptionsEnum.completion_success;
        this.m_slideViewsForCompletion =
            this.m_slideViewsForSuccess = 0;
        this.m_successCriteria = this.m_completionCriteria = cp.ReportingOptionsEnum.access;
        this.m_completionQuizCriteria = this.m_successQuizCriteria = cp.QuizCriteriaEnum.QuizIsPassed;
        this.m_successSlideViewsType = this.m_completionSlideViewsType = cp.SlideViewsTypeEnum.percent;
        this.m_UseRusticiAdapter = this.m_beginSendingSuccessStatus = this.m_sendIncompleteToPassedOrFailed = !
        1;
        this.m_lmsType = "";
        this.m_sendScoreAsPercent = !1;
        this.m_trackingLevel = 0;
        this.m_completionSlideViewPercentage = 100;
        this.m_reportingOption = cp.ReportingOptionsEnum.completion_success;
        this.m_courseNode = this.m_courseName = this.m_departmentName = this.m_companyName = this
            .m_internalServerURL = this.m_emailAddress = "";
        this.m_isTrackedFlag = !1;
        this.m_trackingUrlEncodeVersionAndSession = !0;
        this.m_trackingCharsToNotUrlEncode = "";
        this.m_isTracked = this.m_loadingResumeData = this.m_trackingIsOn = this
            .m_CmiExitNormalAfterCompletion = this.m_trackingSendResumeData = this.m_commitDataOnEverySlide = !1
    }
};
cp.ACAPPlaybackController = function() {
    cp.ACAPPlaybackController.baseConstructor.call(this);
    this.ResetReportingOptions()
};
cp.inherits(cp.ACAPPlaybackController, cp.PlaybackController);
cp.ACAPPlaybackController.prototype.ResetReportingOptions = function() {
    this.m_sendCourseDataWithInteractionData = !0;
    this.m_completionValueToSend = "default";
    this.m_completionTrigger = cp.ReportingOptionsEnum.completion_success;
    this.m_slideViewsForSuccess = window.cpAPIInterface.slideViewsForSuccess;
    this.m_slideViewsForCompletion = window.cpAPIInterface.slideViewsForCompletion;
    this.m_completionCriteria = window.cpAPIInterface.completionCriteria;
    this.m_successCriteria = window.cpAPIInterface.successCriteria;
    this.m_successQuizCriteria =
        window.cpAPIInterface.quizCriteriaForSuccess;
    this.m_completionQuizCriteria = window.cpAPIInterface.quizCriteriaForCompletion;
    this.m_completionSlideViewsType = window.cpAPIInterface.slideViewsTypeForCompletion;
    this.m_successSlideViewsType = window.cpAPIInterface.slideViewsTypeForSuccess;
    this.m_sendIncompleteToPassedOrFailed = !1;
    this.m_beginSendingSuccessStatus = !0;
    this.m_UseRusticiAdapter = !1;
    this.m_lmsType = "";
    this.m_sendScoreAsPercent = !1;
    this.m_trackingLevel = 0;
    this.m_completionSlideViewPercentage = 100;
    this.m_reportingOption =
        cp.ReportingOptionsEnum.completion_success;
    this.m_courseNode = this.m_courseName = this.m_departmentName = this.m_companyName = this.m_internalServerURL =
        this.m_emailAddress = "";
    this.m_trackingUrlEncodeVersionAndSession = this.m_isTrackedFlag = !0;
    this.m_trackingCharsToNotUrlEncode = "";
    this.m_isTracked = this.m_loadingResumeData = this.m_trackingIsOn = this.m_CmiExitNormalAfterCompletion = this
        .m_commitDataOnEverySlide = !0
};
cp.TrackingAdapter = function() {
    this.m_trackingAdapterType = {};
    this.m_trackingDataLoaded_bln = this.m_initialized = !1;
    this.m_escapeAICCvs_bln = this.m_lessonDataTracked_bln = this.m_interactionDataTracked_bln = !0;
    this.m_ignoreEscapeList_str = "";
    this.m_timer_int = this.m_currentAttempt = 0;
    this.m_timer_str = "";
    this.m_score_tot = this.m_score_pass = this.m_score_scaled_cp = this.m_score_max = this.m_score_min = this
        .m_score_raw = 0;
    this.m_success_status = this.m_time = "";
    this.m_statusType_int = 1;
    this.m_exit = this.m_entry = this.m_credit =
        this.m_student_name = this.m_student_id = this.m_lesson_mode = "";
    this.m_progressMeasure = 0;
    this.m_interaction_ary = [];
    this.m_comments = this.m_comments_from_lms = this.m_launch_data = this.m_vendor_data = this.m_suspend_data =
        this.m_lesson_data = this.m_lessonLocation = "";
    this.m_lesson_status = void 0;
    this.m_lesson_status_array = [];
    this.m_score_array = [];
    this.m_mastery_score = 0;
    this.m_time_limit_action = this.m_max_time_allowed = "";
    this.m_isRDStandAlone = this.m_isRDPreview = !1;
    this.m_adapterReportingVariables = cp.ReportingVariables.split(",");
    this.verbose = !1
};
cp.TrackingAdapter.prototype = {
    GetInteractionArray: function() {
        return this.m_interaction_ary
    },
    GetCurrentAttempt: function() {
        return this.m_currentAttempt
    },
    SetCurrentAttempt: function(a) {
        this.m_currentAttempt = a
    },
    Initialize: function() {
        this.IsInitialized() || this.SetInitialized("true")
    },
    SetInitialized: function(a) {
        "true" == a ? a = !0 : "false" == a && (a = !1);
        this.m_initialized = a
    },
    IsInitialized: function() {
        return this.m_initialized
    },
    IsInteractionDataTracked: function() {
        return this.m_interactionDataTracked_bln
    },
    IsLessonDataTracked: function() {
        return this.m_lessonDataTracked_bln
    },
    IsTrackingDataLoaded: function() {
        return this.m_trackingDataLoaded_bln
    },
    IsAICCvsEscaped: function() {
        return this.m_escapeAICCvs_bln
    },
    GetTrackingAdapterType: function() {
        return this.m_trackingAdapterType
    },
    SetTrackingAdapterType: function(a, b) {
        this.m_trackingAdapterType.type_int = a;
        this.m_trackingAdapterType.type_str = b
    },
    Flush: function() {},
    Finish: function() {},
    GetInteractionDataTracked: function() {
        return this.m_interactionDataTracked_bln
    },
    GetLessonDataTracked: function() {
        return this.m_lessonDataTracked_bln
    },
    GetEscapeAICCvs: function() {
        return this.m_escapeAICCvs_bln
    },
    GetIgnoreEscapeList: function() {
        return this.m_ignoreEscapeList_str
    },
    SetInteractionDataTracked: function(a) {
        this.m_interactionDataTracked_bln = a
    },
    SetLessonDataTracked: function(a) {
        this.m_lessonDataTracked_bln = a
    },
    SetEscapeAICCvs: function(a) {
        this.m_escapeAICCvs_bln = a
    },
    SetIgnoreEscapeList: function(a) {
        this.m_ignoreEscapeList_str = a
    },
    SetTrackingDataLoaded: function(a) {
        return this.m_trackingDataLoaded_bln = a
    },
    SetTrackingFinished: function() {
        this.SetInitialized(!1);
        this.SetTrackingDataLoaded(!1)
    },
    SetStatusType: function(a) {
        this.m_statusType_int =
            a
    },
    GetStatusType: function() {
        return this.m_statusType_int
    },
    GetScore: function(a) {
        var b = this.GetScoreRaw();
        "" == b && (b = " ");
        if (void 0 == a || !1 == a) "" != this.GetScoreMax() && "" != this.GetScoreMin() && (b = b + "," + this
            .GetScoreMax() + "," + this.GetScoreMin());
        return b
    },
    GetScoreRaw: function() {
        void 0 == this.m_score_raw && (this.m_score_raw = "");
        return this.m_score_raw
    },
    GetScoreMax: function() {
        if (void 0 == this.m_score_max || "" == this.m_score_max || " " == this.m_score_max) this.m_score_max =
            "";
        return this.m_score_max
    },
    GetScoreMin: function() {
        if (void 0 ==
            this.m_score_min || "" == this.m_score_min || " " == this.m_score_min) this.m_score_min = "";
        return this.m_score_min
    },
    GetScoreScaled: function() {
        if (void 0 == this.m_score_scaled_cp || "" == this.m_score_scaled_cp || " " == this.m_score_scaled_cp)
            this.m_score_scaled_cp = 1;
        return this.m_score_scaled_cp
    },
    GetScorePass: function() {
        return this.m_score_pass
    },
    GetScoreTot: function() {
        return this.m_score_tot
    },
    GetTimeInSession: function() {
        return this.m_time
    },
    GetLessonLocation: function() {
        if (void 0 == this.m_lessonLocation || "" == this.m_lessonLocation) this.m_lessonLocation =
            " ";
        return this.m_lessonLocation
    },
    GetLessonStatus: function() {
        void 0 == this.m_lesson_status && (this.m_lesson_status = "incomplete");
        return this.m_lesson_status
    },
    GetSuccessStatus: function() {
        return this.m_success_status
    },
    GetLessonMode: function() {
        return this.m_lesson_mode
    },
    GetStudentID: function() {
        return this.m_student_id
    },
    GetStudentName: function() {
        return this.m_student_name
    },
    GetCredit: function() {
        return this.m_credit
    },
    GetEntry: function() {
        return this.m_entry
    },
    GetProgressMeasure: function() {
        return this.m_progressMeasure
    },
    SetScore: function(a, b, c) {
        void 0 != a && this.SetScoreRaw(a);
        void 0 != b && this.SetScoreMin(b);
        void 0 != c && this.SetScoreMax(c);
        void 0 != c && 0 != c && void 0 != a ? this.SetScoreScaled(a / c) : void 0 != a && this.SetScoreScaled(
            a / 100)
    },
    ValidateScore: function(a) {
        switch (typeof a) {
            case "null":
                a = void 0;
                break;
            case "string":
                a = Number(a) == a ? Number(a) : void 0;
                break;
            case "number":
                a = isNaN(a) ? void 0 : a;
                break;
            default:
                a = void 0
        }
        void 0 != a ? (a = this.RoundDecimals(a, 2), a = a.toString()) : a = " ";
        return a
    },
    SetScoreRaw: function(a) {
        this.m_score_raw = this.ValidateScore(a)
    },
    SetScoreMax: function(a) {
        this.m_score_max = this.ValidateScore(a)
    },
    SetScoreMin: function(a) {
        this.m_score_min = this.ValidateScore(a)
    },
    SetScoreScaled: function(a) {
        this.m_score_scaled_cp = this.ValidateScore(a)
    },
    SetScorePass: function(a) {
        this.m_score_pass = a
    },
    SetScoreTot: function(a) {
        this.m_score_tot = a
    },
    SetProgressMeasure: function(a) {
        0 > a || 1 < a || (this.m_progressMeasure = a)
    },
    SetTimeInSession: function(a) {
        void 0 == a || "" == a || null == a ? (a = (new Date)
                .getTime() - cp.movie.startTime.getTime(), a = this.FormatTime(Math.floor(a / 1E3))) :
            typeof("number" == a) && (a = this.FormatTime(a));
        this.timer_str = this.m_time = a
    },
    SetLessonLocation: function(a) {
        this.m_lessonLocation = a
    },
    SetLessonStatus: function(a, b) {
        this.m_lesson_status = !a || "n" == a.substring(0, 1) || "" == a || void 0 == a || " " == a ?
            "incomplete" : a;
        void 0 != b && (this.m_success_status = b)
    },
    SetStudentID: function(a) {
        this.m_student_id = a
    },
    SetStudentName: function(a) {
        this.m_student_name = a
    },
    SetCredit: function(a) {
        this.m_credit = a
    },
    GetLessonData: function() {
        (void 0 == this.m_lesson_data || !1 == this.IsLessonDataTracked()) &&
        this.SetLessonData("");
        return this.m_lesson_data
    },
    SetLessonMode: function(a) {
        this.m_lesson_mode = a
    },
    SetLessonData: function(a) {
        this.m_lesson_data = a
    },
    GetVendorData: function() {
        return this.m_vendor_data
    },
    SetVendorData: function(a) {
        this.m_vendor_data = a
    },
    GetLessonStatusArray: function() {
        return this.m_lesson_status_array
    },
    GetScoreArray: function() {
        return this.m_score_array
    },
    GetMasteryScore: function() {
        return this.m_mastery_score
    },
    GetMaxTimeAllowed: function() {
        return this.m_max_time_allowed
    },
    GetTimeLimitAction: function() {
        return this.m_time_limit_action
    },
    AddToLessonStatusArray: function(a) {
        this.m_lesson_status_array.push(a)
    },
    AddToScoreArray: function(a) {
        this.m_score_array.push(a)
    },
    SetMasteryScore: function(a) {
        this.m_mastery_score = a
    },
    SetMaxTimeAllowed: function(a) {
        this.m_max_time_allowed = a
    },
    SetTimeLimitAction: function(a) {
        this.m_time_limit_action = a
    },
    SetSlideView: function() {},
    SendSlideView: function() {},
    SendSuspendData: function(a) {
        void 0 != a && this.SetLessonData(a)
    },
    SendTrackingData: function(a, b, c, d, e, f, g, i, j, h, m, k, l) {
        void 0 == j && (j = "");
        this.SetTrackingData(a,
            b, c, d, e, f, g, i, j, h);
        if (k) {
            if (a = {
                    quizId: cp.D.quizzingData.quizID
                }, cp.movie.playbackController && (b = cp.movie.playbackController.GetQuizController()) && b
                .GetIsPassed()) "passed" == this.GetSuccessStatus() ? (cp.em.fireEvent("PASSED", a), cp.em
                .fireEvent("COMPLETED")) : l && cp.em.fireEvent("FAILED", a)
        } else "completed" == this.GetLessonStatus() && (cp.em.fireEvent("COMPLETED"), this
        .GetSuccessStatus() && (a = {
                    quizId: cp.D.quizzingData.quizID
                }, "passed" == this.GetSuccessStatus() ? cp.em.fireEvent("PASSED", a) : "failed" == this
                .GetSuccessStatus() &&
                cp.em.fireEvent("FAILED", a)));
        this.IsLessonDataTracked() && (l = cp.createAndGetDataChunk(), cp.fireResumeDataEvent(l))
    },
    SetTrackingData: function(a, b, c, d, e, f, g, i, j, h) {
        !0 == d ? void 0 != a && void 0 != c && !isNaN(Math.round(100 * (a / c))) && 0 != c ? this.SetScore(Math
                .round(100 * (100 * a / c)) / 100) : this.SetScore(Math.round(100 * a) / 100) : void 0 != a &&
            void 0 != b && void 0 != c ? this.SetScore(a, b, c) : void 0 != a && void 0 != c ? this.SetScore(a,
                0, c) : void 0 != a && this.SetScore(a);
        void 0 != e && this.SetLessonLocation(e);
        void 0 != i ? !0 == i && void 0 != f ? this.SetLessonStatus(f) :
            void 0 != g && void 0 != f && this.SetLessonStatus(f, g) : void 0 != f ? this.SetLessonStatus(f) :
            void 0 != g && this.SetLessonStatus(g);
        void 0 != j && this.SetTimeInSession(j);
        void 0 != h && this.SetLessonData(h)
    },
    GetTrackingData: function() {
        this.IsTrackingDataLoaded() || this.SetTrackingDataLoaded(!0)
    },
    GetTrackingDataCore: function() {
        this.IsTrackingDataLoaded() || this.SetTrackingDataLoaded(!0)
    },
    SetInteractionData: function(a, b, c, d, e, f, g, i, j, h, m) {
        this.m_interaction_ary || (this.m_interaction_ary = []);
        var k = this.m_interaction_ary.length;
        this.m_interaction_ary[k] = [];
        this.m_interaction_ary[k].interactionID_str = a;
        this.m_interaction_ary[k].objectiveID_str = b;
        this.m_interaction_ary[k].type_str = c;
        this.m_interaction_ary[k].correctResponse_str = d;
        this.m_interaction_ary[k].studentResponse_str = e;
        this.m_interaction_ary[k].result_bln = f;
        this.m_interaction_ary[k].weight_int = g;
        this.m_interaction_ary[k].description_texts = m;
        void 0 == i || "" == i || "0" == i ? i = this.FormatTime(0) : "number" == typeof i && (i = this
            .FormatTime(i));
        this.m_interaction_ary[k].latency_str =
            i;
        if (void 0 == j || "" == j) j = this.FormatDate();
        this.m_interaction_ary[k].date_str = j;
        void 0 == h || "" == h ? h = this.FormatTime(0) : "number" == typeof h && (h = this.FormatTime(h));
        this.m_interaction_ary[k].time_str = h
    },
    SendInteractionData: function(a, b, c, d, e, f, g, i, j, h, m) {
        void 0 != a && "" != a && this.SetInteractionData(a, b, c, d, e, f, g, i, j, h, m)
    },
    ClearPendingCalls: function() {},
    RoundDecimals: function(a, b) {
        b = !b && 0 != b ? 2 : b;
        return Math.round(a * Math.pow(10, b)) / Math.pow(10, b)
    },
    FormatNum: function(a, b) {
        var c = "",
            d = 0,
            e = "'" + a + "'";
        if (!(e.length >
                b))
            for (d = 1; d <= b - e.length; d++) c += "0";
        return c + a
    },
    FormatTime: function(a, b, c) {
        var d;
        d = b = "00";
        c = this.FormatNum(Math.floor(a), 2);
        59 < c && (b = Math.floor(c / 60), c -= 60 * b, b = this.FormatNum(b, 2), c = this.FormatNum(c, 2));
        59 < b && (d = Math.floor(b / 60), b -= 60 * d, d = this.FormatNum(d, 2), b = this.FormatNum(b, 2));
        return d + ":" + b + ":" + c
    },
    FormatDate: function(a, b, c, d) {
        void 0 == a ? (c = new Date, a = this.FormatNum(c.getMonth() + 1, 2), b = this.FormatNum(c.getDate(),
            2), c = c.getFullYear()) : "string" == typeof a && -1 < a.indexOf("/") && (c = a.split("/"), a =
            this.FormatNum(c[0],
                2), b = this.FormatNum(c[1], 2), c = this.FormatNum(c[2], 4));
        return 1 == d ? c + "/" + a + "/" + b : a + "/" + b + "/" + c
    },
    SetAdapterSpecificData: function() {}
};
cp.SCORM_Rustici = function(a) {
    cp.SCORM_Rustici.baseConstructor.call(this);
    this.m_cmiEntryValue = this.m_cmiExitValue = "";
    this.verbose = this.m_ExitNormal = !1;
    this.m_isScorm = a
};
cp.inherits(cp.SCORM_Rustici, cp.TrackingAdapter);
cp.SCORM_Rustici.prototype.SetAdapterSpecificData = function(a) {
    this.SetExitNormal(a.exitNormal);
    this.SetReportingOption(a.reportingOption)
};
cp.SCORM_Rustici.prototype.SetExitNormal = function(a) {
    this.m_ExitNormal = a
};
cp.SCORM_Rustici.prototype.GetExitNormal = function() {
    return this.m_ExitNormal
};
cp.SCORM_Rustici.prototype.SetReportingOption = function(a) {
    this.m_ReportingOption = a
};
cp.SCORM_Rustici.prototype.GetReportingOption = function() {
    switch (this.m_reportingOption) {
        case 5:
            return "completion_success";
        case 7:
            return "completion_only";
        case 6:
            return "incompleteToPassedOrFailed";
        case 0:
            return "breeze";
        default:
            return ""
    }
};
cp.SCORM_Rustici.prototype.Initialize = function() {
    if (!this.IsInitialized()) {
        if ((!cp.LMSDriverHolder || !cp.LMSDriverHolder.IsLoaded()) && !cp.IsRunningInACAP) return;
        this.SetInitialized(cp.startBlnStr)
    }
    this.m_isScorm && !cp.IsRunningInACAP && ("incompleteToPassedOrFailed" == this.GetReportingOption() ? this
        .m_ExitNormal ? (cp.LMSDriverHolder.EXIT_SUSPEND_IF_COMPLETED = !1, cp.LMSDriverHolder
            .EXIT_NORMAL_IF_PASSED = !0) : (cp.LMSDriverHolder.EXIT_SUSPEND_IF_COMPLETED = !1, cp
            .LMSDriverHolder.EXIT_NORMAL_IF_PASSED = !1) : (cp.LMSDriverHolder.EXIT_SUSPEND_IF_COMPLETED =
            this.m_ExitNormal ? !1 : !0, cp.LMSDriverHolder.EXIT_NORMAL_IF_PASSED = !1));
    return this.IsInitialized()
};
cp.SCORM_Rustici.prototype.GetTrackingData = function() {
    this.IsTrackingDataLoaded() || (this.GetTrackingDataCore(), cp.LMSDriverHolder && cp.LMSDriverHolder
        .GetLaunchData(this.GetVendorData()))
};
cp.SCORM_Rustici.prototype.GetTrackingDataCore = function() {
    this.verbose && cp.log("cp.SCORM_Rustici :: function getTrackingDataCore ");
    void 0 != cp.LMSDriverHolder && (this.m_cmiEntryValue = cp.LMSDriverHolder.GetEntryMode(), this.SetLessonData(cp
        .LMSDriverHolder.GetDataChunk()), this.SetLessonLocation(cp.LMSDriverHolder.GetBookMark()))
};
cp.SCORM_Rustici.prototype.SetTrackingData = function(a, b, c, d, e, f, g, i, j, h, m, k) {
    this.verbose && cp.log("function setTrackingData ");
    !0 == d ? void 0 != a && void 0 != c && !isNaN(Math.round(100 * (a / c))) && 0 != c ? this.SetScore(Math.round(
            100 * (100 * a / c)) / 100, 0, 100) : this.SetScore(Math.round(100 * a) / 100) : void 0 != a &&
        void 0 != b && void 0 != c ? this.SetScore(a, b, c) : void 0 != a && void 0 != c ? this.SetScore(a, 0, c) :
        void 0 != a ? this.SetScore(a) : this.SetScore();
    void 0 != m && this.SetProgressMeasure(m);
    void 0 != e && this.SetLessonLocation(e);
    k ? this.SetLessonStatus(f,
        g) : void 0 != i && !0 == i ? this.SetLessonStatus(f) : this.SetLessonStatus(f, g);
    this.SetTimeInSession(j);
    void 0 != h && this.SetLessonData(h)
};
cp.SCORM_Rustici.prototype.SendSuspendData = function(a) {
    void 0 != a && this.SetLessonData(a);
    if (this.IsLessonDataTracked() && (a = cp.createAndGetDataChunk(), "" != a)) {
        var b = [];
        b.push(a);
        this.SCORMbuild("SetDataChunk", b)
    }
};
cp.SCORM_Rustici.prototype.SendTrackingData = function(a, b, c, d, e, f, g, i, j, h, m, k, l) {
    this.verbose && cp.log("function sendTrackingData ");
    this.SetTrackingData(a, b, c, d, e, f, g, i, j, h, m, k);
    k ? (a = {
        quizId: cp.D.quizzingData.quizID
    }, "passed" == this.GetSuccessStatus() ? (cp.em.fireEvent("PASSED", a), cp.em.fireEvent("COMPLETED"),
        l = [], l.push(""), this.SCORMbuild("SetPassed", l)) : l && (cp.em.fireEvent("FAILED", a), l = [], l
        .push(""), this.SCORMbuild("SetFailed", l))) : "completed" == this.GetLessonStatus() && (l = [], l.push(
        ""), this.SCORMbuild("SetReachedEnd",
        l), cp.em.fireEvent("COMPLETED"), this.GetSuccessStatus() && (a = {
        quizId: cp.D.quizzingData.quizID
    }, "passed" == this.GetSuccessStatus() ? (l = [], l.push(""), this.SCORMbuild("SetPassed", l), cp.em
        .fireEvent("PASSED", a)) : "failed" == this.GetSuccessStatus() && (l = [], l.push(""), this
        .SCORMbuild("SetFailed", l), cp.em.fireEvent("FAILED", a))));
    l = [];
    l.push(this.GetScoreRaw());
    l.push(this.GetScoreMax());
    l.push(this.GetScoreMin());
    this.SCORMbuild("SetPointBasedScore", l);
    l = [];
    l.push(this.GetLessonLocation());
    this.SCORMbuild("SetBookmark",
        l);
    this.IsLessonDataTracked() && (a = cp.createAndGetDataChunk(), "" != a && (this.verbose && cp.log(
        "Calling SCORM_Rustici::SendTrackingData::SetDataChunk"), l = [], l.push(a), this.SCORMbuild(
        "SetDataChunk", l), cp.fireResumeDataEvent(a)))
};
cp.SCORM_Rustici.prototype.SetLessonLocation = function(a) {
    var b = cpInfoCurrentSlideLabel;
    this.m_lessonLocation = "" != b ? escape(b) : "Slide_" + (parseInt(a) + 1)
};
cp.SCORM_Rustici.prototype.Flush = function() {
    this.verbose && cp.log("function flush ");
    var a = [];
    a.push("");
    cp.movie.playbackController.m_commitDataOnEverySlide || this.SCORMbuild("CommitData", a)
};
cp.SCORM_Rustici.prototype.SetFinishedBln = function(a) {
    var b = typeof a;
    "boolean" != b && ("string" == b ? "true" == a.toLowerCase() ? a = !0 : "false" == a.toLowerCase() && (a = !1) :
        a = !1);
    this.SetInitialized(!a)
};
cp.SCORM_Rustici.prototype.Finish = function() {
    var a = [];
    a.push("");
    cp.movie.playbackController.m_commitDataOnEverySlide || this.SCORMbuild("CommitData", a);
    this.SetFinishedBln(cp.LMSDriverHolder.Finish())
};
cp.SCORM_Rustici.prototype.SetTrackingComplete = function() {
    this.Finish()
};
cp.SCORM_Rustici.prototype.AICCTokenToSCORMToken = function(a, b) {
    for (var c = a.split(","), d = b.substr(0, 1)
            .toLowerCase(), e = 0; e < c.length; e++)
        if (d == c[e].substr(0, 1)) return c[e];
    return b
};
cp.SCORM_Rustici.prototype.NormalizeStatus = function(a) {
    return this.AICCTokenToSCORMToken("completed,incomplete,not attempted,failed,passed", a)
};
cp.SCORM_Rustici.prototype.NormalizeInteractionType = function(a) {
    a = "long-fill-in" == a.toLowerCase() ? "long-fill-in" : this.AICCTokenToSCORMToken(
        "true-false,choice,fill-in,matching,performance,sequencing,likert,numeric", a);
    if ("" == a || void 0 == a) a = "other";
    return a
};
cp.SCORM_Rustici.prototype.NormalizeInteractionResult = function(a) {
    a = this.AICCTokenToSCORMToken("correct,wrong,unanticipated,neutral", a);
    return "wrong" == a ? "incorrect" : a
};
cp.SCORM_Rustici.prototype.NormalizeRespose = function(a) {
    return this.AICCTokenToSCORMToken("true,false", a)
};
cp.SCORM_Rustici.prototype.FormatTimestamp = function(a) {
    return this.FormatDate() + "T" + this.FormatTime(a, void 0, void 0, 2)
};
cp.SCORM_Rustici.prototype.SetInteractionData = function(a, b, c, d, e, f, g, i, j, h, m) {
    this.verbose && cp.log("function setInteractionData ");
    this.m_interaction_ary || (this.m_interaction_ary = []);
    d = this.m_interaction_ary.length;
    this.m_interaction_ary[d] = [];
    this.m_interaction_ary[d].interactionID_str = a;
    this.m_interaction_ary[d].objectiveID_str = b;
    this.m_interaction_ary[d].type_str = this.NormalizeInteractionType(c);
    this.m_interaction_ary[d].correctResponse_str = correct_responseIdentifierArr;
    this.m_interaction_ary[d].studentResponse_str =
        user_responseIdentifierArr;
    this.m_interaction_ary[d].result_str = this.NormalizeInteractionResult(f);
    this.m_interaction_ary[d].weight_int = g;
    this.m_interaction_ary[d].latency_str = parseFloat(i);
    this.m_interaction_ary[d].description_texts = m;
    j = void 0 == j || "" == j ? this.FormatDate() : this.FormatDate(j);
    this.m_interaction_ary[d].date_str = j;
    h = void 0 == h || "" == h ? this.FormatTimestamp(0) : this.FormatTimestamp(h);
    this.m_interaction_ary[d].time_str = h
};
cp.SCORM_Rustici.prototype.SendInteractionData = function(a, b, c, d, e, f, g, i, j, h, m) {
    this.verbose && cp.log("Rustici SCORM:: SendInteractionData ");
    if (!(void 0 == cp.LMSDriverHolder || cp.IsRunningInACAP) && this.IsInteractionDataTracked()) {
        if (void 0 != a && "" != a) {
            user_responseIdentifierArr = [];
            correct_responseIdentifierArr = [];
            var k = [],
                l = [];
            0 < e.length && (-1 != e.indexOf(";") ? k = e.split(";") : k.push(e));
            0 < d.length && (-1 != d.indexOf(";") ? l = d.split(";") : l.push(d));
            this.SetInteractionData(a, b, c, d, e, f, g, i, j, h, m)
        }
        c = m.questionText;
        f = this.m_interaction_ary.length - 1;
        switch (this.m_interaction_ary[f].type_str) {
            case "choice":
            case "hotspot":
            case "widget":
                e = m.answerTexts.answerTextMap;
                j = "hotspot" == this.m_interaction_ary[f].type_str;
                for (d = 0; d < k.length; ++d) m = j ? k[d] : e ? e[k[d]] : k[d], user_responseIdentifierArr.push(cp
                    .LMSDriverHolder.CreateResponseIdentifier(k[d], m));
                for (k = 0; k < l.length; ++k) m = j ? l[k] : e ? e[l[k]] : l[k], correct_responseIdentifierArr
                    .push(cp.LMSDriverHolder.CreateResponseIdentifier(l[k], m));
                h = [];
                h.push(a);
                h.push(user_responseIdentifierArr);
                h.push(cp.ConvertToInteractionResultConstant(this.m_interaction_ary[f].result_str));
                h.push(correct_responseIdentifierArr);
                h.push(c);
                h.push(g);
                h.push(i);
                h.push(b);
                this.SCORMbuild("RecordMultipleChoiceInteraction", h);
                break;
            case "true-false":
                h = [];
                h.push(a);
                h.push(Boolean(e));
                h.push(cp.ConvertToInteractionResultConstant(this.m_interaction_ary[f].result_str));
                h.push(Boolean(d));
                h.push(c);
                h.push(g);
                h.push(i);
                h.push(b);
                h.push(j);
                this.SCORMbuild("RecordTrueFalseInteraction", h);
                break;
            case "fill-in":
            case "long-fill-in":
                h = [];
                h.push(a);
                h.push(e);
                h.push(cp.ConvertToInteractionResultConstant(this.m_interaction_ary[f].result_str));
                h.push(d);
                h.push(c);
                h.push(g);
                h.push(i);
                h.push(b);
                h.push(j);
                this.SCORMbuild("RecordFillInInteraction", h);
                break;
            case "matching":
                for (var j = m.answerTexts.left, m = m.answerTexts.right, l = [], k = [], d = d.split(","), h = 0,
                        o, n, h = 0; h < d.length; ++h) {
                    o = d[h];
                    n = o.split(".");
                    o = n[0];
                    n = n[1];
                    var p = j[o],
                        q = m[n];
                    if (void 0 == p || "" == p) p = o;
                    if (void 0 == q || "" == q) q = n;
                    o = cp.LMSDriverHolder.CreateResponseIdentifier(o, p);
                    n = cp.LMSDriverHolder.CreateResponseIdentifier(n,
                        q);
                    l.push(new cp.LMSDriverHolder.MatchingResponse(o, n))
                }
                d = e.split(",");
                for (h = 0; h < d.length; ++h) {
                    o = d[h];
                    n = o.split(".");
                    o = n[0];
                    n = n[1];
                    p = j[o];
                    q = m[n];
                    if (void 0 == p || "" == p) p = o;
                    if (void 0 == q || "" == q) q = n;
                    o = cp.LMSDriverHolder.CreateResponseIdentifier(o, p);
                    n = cp.LMSDriverHolder.CreateResponseIdentifier(n, q);
                    k.push(new cp.LMSDriverHolder.MatchingResponse(o, n))
                }
                f = cp.ConvertToInteractionResultConstant(this.m_interaction_ary[f].result_str);
                h = [];
                h.push(a);
                h.push(k);
                h.push(f);
                h.push(l);
                h.push(c);
                h.push(g);
                h.push(i);
                h.push(b);
                this.SCORMbuild("RecordMatchingInteraction", h);
                break;
            case "sequencing":
                h = [];
                h.push(a);
                h.push(cp.LMSDriverHolder.CreateResponseIdentifier(e.substring(0, 1), m.answerTexts
                    .learner_response));
                h.push(cp.ConvertToInteractionResultConstant(this.m_interaction_ary[f].result_str));
                h.push(cp.LMSDriverHolder.CreateResponseIdentifier(d.substring(0, 1), m.answerTexts
                    .correct_response));
                h.push(c);
                h.push(g);
                h.push(i);
                h.push(b);
                this.SCORMbuild("RecordSequencingInteraction", h);
                break;
            case "likert":
                cp.ConvertToInteractionResultConstant(this.m_interaction_ary[f].result_str),
                    h = [], h.push(a), h.push(cp.LMSDriverHolder.CreateResponseIdentifier(e.substring(0, 1), e)), h
                    .push("true"), h.push(null), h.push(c), h.push(g), h.push(i), h.push(b), this.SCORMbuild(
                        "RecordLikertInteraction", h)
        }
        this.m_interaction_ary = []
    }
};
cp.SCORM_Rustici.prototype.ClearPendingCalls = function() {
    if (!(void 0 == cp.LMSDriverHolder || cp.IsRunningInACAP) && this.AICCQueue && !(0 >= this.AICCQueue.length)) {
        this.AICCLMSCallTimer = void 0;
        clearInterval(this.AICCLMSCallTimer);
        for (var a = this.AICCQueue.length, b = 0; b < a; ++b) {
            var c = this.AICCQueue.shift();
            this.ProcessLMSCalls(c.function_str, c.argsArr)
        }
    }
};
cp.SCORM_Rustici.prototype.SCORMbuild = function(a, b) {
    void 0 == cp.LMSDriverHolder || cp.IsRunningInACAP || (cp.movie.playbackController.LMSIsAICC() ? this
        .AddToQueue(a, b) : this.ProcessLMSCalls(a, b))
};
cp.SCORM_Rustici.prototype.ProcessLMSCalls = function(a, b) {
    var c = "cp.LMSDriverHolder." + a + "(" + function() {
        var a = "";
        if (0 < b.length)
            for (var a = "string" == typeof b[0] ? "'" + b[0] + "'" : b[0], c = 1; c < b.length; ++c) a += ",",
                a = "string" == typeof b[c] ? a + ("'" + b[c] + "'") : a + b[c];
        return a
    }() + ")";
    cp.verbose && cp.log(c);
    try {
        switch (a) {
            case "RecordMultipleChoiceInteraction":
                cp.LMSDriverHolder.RecordMultipleChoiceInteraction(b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7]);
                break;
            case "RecordTrueFalseInteraction":
                cp.LMSDriverHolder.RecordTrueFalseInteraction(b[0],
                    b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8]);
                break;
            case "RecordSequencingInteraction":
                cp.LMSDriverHolder.RecordSequencingInteraction(b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7]);
                break;
            case "RecordFillInInteraction":
                cp.LMSDriverHolder.RecordFillInInteraction(b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7]);
                break;
            case "RecordMatchingInteraction":
                cp.LMSDriverHolder.RecordMatchingInteraction(b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7]);
                break;
            case "RecordLikertInteraction":
                cp.LMSDriverHolder.RecordLikertInteraction(b[0],
                    b[1], b[2], b[3], b[4], b[5], b[6], b[7]);
                break;
            default:
                eval(c)
        }
    } catch (d) {
        console.log(d)
    }
};
cp.SCORM_Rustici.prototype.AddToQueue = function(a, b) {
    this.AICCQueue || (this.AICCQueue = []);
    var c = {};
    c.function_str = a;
    c.argsArr = b;
    this.AICCQueue.push(c);
    var d = this;
    this.AICCLMSCallTimer || (this.AICCLMSCallTimer = setInterval(function() {
        if (d.AICCQueue.length <= 0) {
            clearInterval(d.AICCLMSCallTimer);
            d.AICCLMSCallTimer = void 0
        } else {
            var a = d.AICCQueue.shift();
            d.ProcessLMSCalls(a.function_str, a.argsArr)
        }
    }, 100))
};
cp.InternalServerAdapter = function() {
    cp.InternalServerAdapter.baseConstructor.call(this);
    this.m_cmiEntryValue = this.m_cmiExitValue = "";
    this.verbose = this.m_ExitNormal = !1;
    this.m_StudentID = this.m_StudentName = "";
    this.m_resultsAlreadyPosted = !1;
    var a = cp.D.quizReportingData;
    this.m_strings = {};
    this.m_strings.ISRUnknownErrorStr = a.ISRUnknownErrorStr;
    this.m_strings.ISRNoConnectionErrorStr = a.ISRNoConnectionErrorStr;
    this.m_strings.ISRWrongURLErrorStr = a.ISRWrongURLErrorStr;
    this.m_strings.ISRLoginErrorStr = a.ISRLoginErrorStr;
    this.m_strings.ISRConnectingStr = a.ISRConnectingStr;
    this.m_strings.ISRResultPostedStr = a.ISRResultPostedStr;
    this.m_strings.ISRPostResultStr = a.ISRPostResultStr;
    this.m_strings.ISRResultCalculatedStr = a.ISRResultCalculatedStr;
    this.m_strings.ISREnterNameStr = a.ISREnterNameStr;
    this.m_strings.ISREmailIDStr = a.ISREmailIDStr;
    this.m_strings.ISRSendStr = a.ISRSendStr;
    this.m_strings.ISRStatusStr = a.ISRStatusStr;
    this.m_strings.ISRErrorStr = a.ISRErrorStr;
    this.m_strings.ISROkStr = a.ISROkStr
};
cp.inherits(cp.InternalServerAdapter, cp.TrackingAdapter);
cp.InternalServerAdapter.prototype.SetAdapterSpecificData = function(a) {
    this.SetExitNormal(a.exitNormal);
    this.SetReportingOption(a.reportingOption)
};
cp.InternalServerAdapter.prototype.SetExitNormal = function(a) {
    this.m_ExitNormal = a
};
cp.InternalServerAdapter.prototype.GetExitNormal = function() {
    return this.m_ExitNormal
};
cp.InternalServerAdapter.prototype.SetReportingOption = function(a) {
    this.m_ReportingOption = a
};
cp.InternalServerAdapter.prototype.GetReportingOption = function() {
    switch (this.m_reportingOption) {
        case 5:
            return "completion_success";
        case 7:
            return "completion_only";
        case 6:
            return "incompleteToPassedOrFailed";
        case 0:
            return "breeze";
        default:
            return ""
    }
};
cp.InternalServerAdapter.prototype.Initialize = function() {
    this.IsInitialized() || this.SetInitialized(!0);
    return this.IsInitialized()
};
cp.InternalServerAdapter.prototype.GetTrackingData = function() {
    this.IsTrackingDataLoaded() || this.SetTrackingDataLoaded(!0)
};
cp.InternalServerAdapter.prototype.GetTrackingDataCore = function() {
    this.GetTrackingData()
};
cp.InternalServerAdapter.prototype.SetTrackingData = function(a, b, c, d, e, f, g, i, j, h, m, k, l) {
    this.verbose && cp.log("function setTrackingData ");
    !0 == d ? void 0 != a && void 0 != c && !isNaN(Math.round(100 * (a / c))) && 0 != c ? this.SetScore(Math.round(
            100 * (100 * a / c)) / 100, 0, 100) : this.SetScore(Math.round(100 * a) / 100) : void 0 != a &&
        void 0 != b && void 0 != c ? this.SetScore(a, b, c) : void 0 != a && void 0 != c ? this.SetScore(a, 0, c) :
        void 0 != a ? this.SetScore(a) : this.SetScore();
    void 0 != m && this.SetProgressMeasure(m);
    void 0 != e && this.SetLessonLocation(e);
    k ? "passed" == g ? this.SetLessonStatus(g) : l ? this.SetLessonStatus(g) : this.SetLessonStatus(f) : this
        .SetLessonStatus(f);
    this.SetTimeInSession(j);
    void 0 != h && this.SetLessonData(h)
};
cp.InternalServerAdapter.prototype.SendTrackingData = function(a, b, c, d, e, f, g, i, j, h, m, k, l) {
    this.verbose && cp.log("function sendTrackingData ");
    this.m_sendScoreAsPercent = d;
    this.SetTrackingData(a, b, c, d, e, f, g, i, j, h, m, k, l);
    this.dataModified_bln = !0
};
cp.InternalServerAdapter.prototype.Flush = function() {
    this.PostQuizResults()
};
cp.InternalServerAdapter.prototype.Finish = function() {
    this.IsInitialized();
    this.SetInitialized(!1)
};
cp.InternalServerAdapter.prototype.SetTrackingComplete = function() {
    this.Finish()
};
cp.InternalServerAdapter.prototype.SetInteractionData = function(a, b, c, d, e, f, g, i, j, h, m) {
    this.verbose && cp.log("function setInteractionData ");
    this.m_interaction_ary || (this.m_interaction_ary = []);
    var k = this.m_interaction_ary.length;
    this.m_interaction_ary[k] = [];
    "likert" == c && (d = " ", a = a.split(" ")
        .join("_"));
    this.m_interaction_ary[k].interactionID_str = a;
    this.m_interaction_ary[k].objectiveID_str = b;
    "hotspot" == c && (c = "choice");
    this.m_interaction_ary[k].type_str = c;
    "sequencing" == c && (d = m.answerTexts.correct_response,
        e = m.answerTexts.learner_response);
    this.m_interaction_ary[k].correctResponse_str = d;
    this.m_interaction_ary[k].studentResponse_str = e;
    this.m_interaction_ary[k].result_str = f;
    this.m_interaction_ary[k].weight_int = g;
    i = void 0 == i || "" == i ? this.FormatTime(0) : this.FormatTime(i / 1E3);
    this.m_interaction_ary[k].latency_str = i;
    this.m_interaction_ary[k].description_texts = m;
    j = void 0 == j || "" == j ? this.FormatDate() : this.FormatDate(j);
    this.m_interaction_ary[k].date_str = j;
    h = void 0 == h || "" == h ? this.FormatTime(0) : this.FormatTime(h);
    this.m_interaction_ary[k].time_str = h;
    this.m_interaction_ary[k].currentAttempt = this.GetCurrentAttempt()
};
cp.InternalServerAdapter.prototype.FormatTimestamp = function(a) {
    return this.FormatDate() + "T" + this.FormatTime(a, void 0, void 0, 2)
};
cp.InternalServerAdapter.prototype.SendInteractionData = function(a, b, c, d, e, f, g, i, j, h, m) {
    this.verbose && cp.log("Rustici SCORM:: SendInteractionData ");
    this.IsInteractionDataTracked() && (void 0 != a && "" != a) && (this.SetInteractionData(a, b, c, d, e, f, g, i,
        j, h, m), this.dataModified_bln = !0)
};
cp.InternalServerAdapter.prototype.ShowResultDialog = function(a) {
    this.m_errorDialog = new cp.RuntimeMessageBoxDefault(document.getElementById("div_Slide"), 1);
    this.m_errorDialog.setMessageText(a ? this.m_strings.ISRResultPostedStr : this.m_strings.ISRUnknownErrorStr);
    this.m_errorDialog.setFirstButtonText(this.m_strings.ISROkStr);
    var b = this;
    this.m_errorDialog.registerFirstButtonHandler(function() {
        b.m_errorDialog.hide();
        cpCmndShowPlaybar = !0;
        cpLockTOC = !1
    });
    this.m_errorDialog.show()
};
cp.InternalServerAdapter.prototype.CreateInputDialog = function() {
    this.m_inputDialog = new cp.PostResultsMessageBox(this.m_strings);
    var a = this;
    this.m_inputDialog.registerFirstButtonHandler(function() {
        a.m_inputDialog.hide();
        cpCmndShowPlaybar = !0;
        cpLockTOC = !1
    });
    this.m_inputDialog.registerSecondButtonHandler(function() {
        a.HandleInputDialog();
        cpCmndShowPlaybar = !0;
        cpLockTOC = !1
    })
};
cp.InternalServerAdapter.prototype.HandleInputDialog = function() {
    this.m_StudentName = this.m_inputDialog.getLearnerName();
    this.m_StudentID = this.m_inputDialog.getLearnerID();
    "" == this.m_StudentName && "" == this.m_StudentID || (this.m_inputDialog.hide(), this.SendDataToURL())
};
cp.InternalServerAdapter.prototype.PostQuizResults = function() {
    if (!this.m_resultsAlreadyPosted) {
        cp.log("Post results");
        this.m_resultXML = "<Course>\r\t";
        var a = !1;
        cp.vm && (a = !cp.vm.hasOwnProperty("cpQuizInfoStudentID") || "" == cp.vm.getVariableValue(
            "cpQuizInfoStudentID"));
        a ? (this.CreateInputDialog(), this.m_inputDialog.show()) : (this.m_StudentName = cp.vm.hasOwnProperty(
                "cpQuizInfoStudentName") ? cpQuizInfoStudentName : "", this.m_StudentID = cpQuizInfoStudentID,
            this.SendDataToURL());
        cpCmndShowPlaybar = !1;
        cpLockTOC = !0;
        this.dataModified_bln = !1
    }
};
cp.InternalServerAdapter.prototype.SendDataToURL = function() {
    if (!this.m_StudentName || "" == this.m_StudentName) this.m_StudentName = this.m_StudentID;
    if (!this.m_StudentID || "" == this.m_StudentID) this.m_StudentID = this.m_StudentName;
    this.m_resultXML += '<CompanyName value="' + cp.movie.playbackController.m_companyName + '"/>\r\t';
    this.m_resultXML += '<DepartmentName value="' + cp.movie.playbackController.m_departmentName + '"/>\r\t';
    this.m_resultXML += '<CourseName value="' + cp.movie.playbackController.m_courseName + '"/>\r\t';
    this.m_resultXML += '<LearnerName value="' + this.m_StudentName + '"/>\r\t';
    this.m_resultXML += '<LearnerID value="' + this.m_StudentID + '"/>\r\t';
    var a = cpInfoProjectName;
    "" == a && (a = cp.D.project.pN);
    this.m_resultXML += '<LessonName value="' + a + '"/>\r\t';
    this.m_resultXML += '<QuizAttempts value="' + cpQuizInfoAttempts + '"/>\r\t';
    this.m_resultXML += '<TotalQuestions value="' + cpQuizInfoTotalQuestionsPerProject + '"/>\r\t';
    0 < this.m_adapterReportingVariables.length && (this.m_resultXML += this.BuildReportingVariablesXML());
    this.m_resultXML +=
        this.BuildResultXML();
    this.m_resultXML += "</Course>";
    this.PostNormalRequest(this.m_resultXML, a + "_" + this.m_StudentName + "_" + cpInfoEpochMS + ".xml")
};
cp.InternalServerAdapter.prototype.PostNormalRequest = function(a, b) {
    var c = new XMLHttpRequest,
        d = cp.movie.playbackController.m_internalServerURL,
        e;
    e = "CompanyName=" + cp.movie.playbackController.m_companyName;
    e += "&DepartmentName=" + cp.movie.playbackController.m_departmentName;
    e += "&CourseName=" + cp.movie.playbackController.m_courseName;
    e = e + ("&Filename=" + b) + ("&Filedata=" + escape(a));
    try {
        c.open("POST", d, !1);
        c.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        var f = this;
        c.onreadystatechange =
            function() {
                4 == c.readyState && 200 == c.status ? (f.m_resultsAlreadyPosted = !0, f.ShowResultDialog(!0)) : f
                    .ShowResultDialog(!1)
            };
        c.send(e)
    } catch (g) {
        this.ShowResultDialog(!1)
    }
};
cp.InternalServerAdapter.prototype.BuildXMLRootNode = function() {
    return escape("")
};
cp.InternalServerAdapter.prototype.BuildReportingVariablesXML = function() {
    for (var a = "<Variables>\r\t", b = this.m_adapterReportingVariables.length, c = 0; c < b; ++c) {
        var d = this.m_adapterReportingVariables[c];
        d && "" != d && (a += "<" + d + ' value="' + m_VarHandle[d] + '"/>\r\t')
    }
    return a + "</Variables>\r\t"
};
cp.InternalServerAdapter.prototype.BuildResultXML = function() {
    var a;
    a = "<Result>\r\t" + this.BuildResultXMLBodyCore();
    a += this.BuildResultXMLBodyInteraction();
    return a + "</Result>\r\t"
};
cp.InternalServerAdapter.prototype.BuildResultXMLBodyCore = function() {
    var a;
    a = "<CoreData>\r\t" + ('<Status value="' + this.GetLessonStatus() + '"/>\r\t');
    a += '<Location value="' + this.GetLessonLocation() + '"/>\r\t';
    this.m_sendScoreAsPercent ? a += '<Score value="' + this.GetScore(this.m_sendScoreAsPercent) + '"/>\r\t' : (a +=
        '<RawScore value="' + this.GetScoreRaw() + '"/>\r\t', a += '<MaxScore value="' + this.GetScoreMax() +
        '"/>\r\t', a += '<MinScore value="' + this.GetScoreMin() + '"/>\r\t');
    a += '<SessionTime value="' + this.GetTimeInSession() +
        '"/>\r\t';
    return a + "</CoreData>\r\t"
};
cp.InternalServerAdapter.prototype.BuildResultXMLBodyInteraction = function() {
    var a = "<InteractionData>\r\t";
    if (this.IsInteractionDataTracked() && 0 < this.m_interaction_ary.length)
        for (var b = 0; b < this.m_interaction_ary.length; b++) a += this.BuildInteractionsNode(b);
    return a + "</InteractionData>\r\t"
};
cp.InternalServerAdapter.prototype.BuildInteractionsNode = function(a) {
    var b;
    b = "<Interactions>\r\t" + ('<Date value="' + this.m_interaction_ary[a].date_str + '"/>\r\t');
    b += '<InteractionTime value="' + this.m_interaction_ary[a].time_str + '"/>\r\t';
    b += '<InteractionID value="' + this.m_interaction_ary[a].interactionID_str + '"/>\r\t';
    b += '<ObjectiveID value="' + this.m_interaction_ary[a].objectiveID_str + '"/>\r\t';
    b += '<InteractionType value="' + this.m_interaction_ary[a].type_str + '"/>\r\t';
    b += '<CorrectResponse value="' +
        this.m_interaction_ary[a].correctResponse_str + '"/>\r\t';
    b += '<StudentResponse value="' + this.m_interaction_ary[a].studentResponse_str + '"/>\r\t';
    b += '<Result value="' + this.m_interaction_ary[a].result_str + '"/>\r\t';
    b += '<Weight value="' + this.m_interaction_ary[a].weight_int + '"/>\r\t';
    b += '<Latency value="' + this.m_interaction_ary[a].latency_str + '"/>\r\t';
    b += '<Attempt value="' + this.m_interaction_ary[a].currentAttempt + '"/>\r\t';
    return b + "</Interactions>\r\t"
};
cp.AnswerScore = function() {
    this.m_correctAnswer = this.m_chosenAnswer = this.m_answerID = ""
};
cp.ChoiceQuestionSpecificScore = function() {
    this.m_answerOrderArrayAsString = ""
};
cp.ChoiceQuestionSpecificScore.prototype = {
    saveState: function(a) {
        void 0 == this.m_answerOrderArrayAsString || "" == this.m_answerOrderArrayAsString ? a.writeString("") :
            a.writeString(this.m_answerOrderArrayAsString)
    },
    restoreState: function(a) {
        this.m_answerOrderArrayAsString = a.readString()
    },
    reset: function() {
        this.m_answerOrderArrayAsString = ""
    }
};
cp.HotSpotQuestionSpecificScore = function() {
    this.m_BreakPointWidth = this.m_hotSpotIsCorrect = this.m_hotSpot_ychordsAsString = this
        .m_hotSpot_xchordsAsString = this.m_hotSpotNamesArrayAsString = ""
};
cp.HotSpotQuestionSpecificScore.prototype = {
    saveState: function(a) {
        void 0 == this.m_hotSpotNamesArrayAsString || "" == this.m_hotSpotNamesArrayAsString ? a.writeString(
            "nil") : a.writeString(this.m_hotSpotNamesArrayAsString);
        void 0 == this.m_hotSpot_xchordsAsString || "" == this.m_hotSpot_xchordsAsString ? a.writeString(
            "nil") : a.writeString(this.m_hotSpot_xchordsAsString);
        void 0 == this.m_hotSpot_ychordsAsString || "" == this.m_hotSpot_ychordsAsString ? a.writeString(
            "nil") : a.writeString(this.m_hotSpot_ychordsAsString);
        cp.responsive &&
            (void 0 == this.m_hotSpotIsCorrect || "" == this.m_hotSpotIsCorrect ? a.writeString("nil") : a
                .writeString(this.m_hotSpotIsCorrect), a.writeString(this.m_BreakPointWidth))
    },
    restoreState: function(a) {
        this.m_hotSpotNamesArrayAsString = a.readString();
        "nil" == this.m_hotSpotNamesArrayAsString && (this.m_hotSpotNamesArrayAsString = "");
        this.m_hotSpot_xchordsAsString = a.readString();
        "nil" == this.m_hotSpot_xchordsAsString && (this.m_hotSpot_xchordsAsString = "");
        this.m_hotSpot_ychordsAsString = a.readString();
        "nil" == this.m_hotSpot_ychordsAsString &&
            (this.m_hotSpot_ychordsAsString = "");
        cp.responsive && (this.m_hotSpotIsCorrect = a.readString(), "nil" == this.m_hotSpotIsCorrect && (this
            .m_hotSpotIsCorrect = ""), this.m_BreakPointWidth = a.readString())
    },
    reset: function() {
        this.m_answerOrderArrayAsString = ""
    }
};
cp.QuestionScore = function() {
    this.m_weighting = this.m_interactionID = this.m_objectiveID = this.m_interactionType = this.m_endTime = this
        .m_startTime = this.m_slideNum = void 0;
    this.m_negativeWeight = 0;
    this.m_answerScores = [];
    this.m_numTries = 0;
    this.m_answersIncomplete = !0;
    this.m_answeredCorrectly = !1;
    this.m_pausedMsecs = 0;
    this.m_questionNumInQuiz = -1;
    this.m_wasJudged = void 0;
    this.m_isPretestQuestion = !1;
    this.m_escapeAnswers = !0;
    this.m_questionSpecificScore = void 0;
    this.m_restoredFromLMS = !1;
    this.m_scoringType = this.m_scoredPoints =
        0;
    this.m_maxTries = -1;
    this.m_descriptionTexts = this.m_isCorrectAsString = this.m_correctAnswersAsString = this
        .m_chosenAnswersAsString = "";
    this.m_latencyAsSeconds = 0;
    this.m_curDateAsString = this.m_latencyAsString = "";
    this.m_curTimeAsSecondsSinceMidnight = 0;
    this.m_partiallyCorrect = this.m_isShuffled = !1
};
cp.QuestionScore.prototype = {
    getdescriptionText: function() {
        return this.m_descriptionTexts
    },
    getrestoredFromLMS: function() {
        return this.m_restoredFromLMS
    },
    setrestoredFromLMS: function(a) {
        this.m_restoredFromLMS = a
    },
    getslideNum: function() {
        return this.m_slideNum
    },
    setslideNum: function(a) {
        this.m_slideNum = a
    },
    getstartTime: function() {
        return this.m_startTime
    },
    setstartTime: function(a) {
        this.m_startTime = a
    },
    getendTime: function() {
        return this.m_endTime
    },
    getQuestionScoringType: function() {
        return this.m_scoringType
    },
    setendTime: function(a) {
        this.m_endTime =
            a
    },
    getpausedMsecs: function() {
        return this.m_pausedMsecs
    },
    setpausedMsecs: function(a) {
        this.m_pausedMsecs = a
    },
    getinteractionType: function() {
        return this.m_interactionType
    },
    setinteractionType: function(a) {
        this.m_interactionType = a;
        this.createQuestionSpecificScore()
    },
    getobjectiveID: function() {
        return this.m_objectiveID
    },
    setobjectiveID: function(a) {
        this.m_objectiveID = a
    },
    getquestionNumInQuiz: function() {
        return this.m_questionNumInQuiz
    },
    setquestionNumInQuiz: function(a) {
        this.m_questionNumInQuiz = a
    },
    getlatency: function() {
        return (startTime ?
            this.m_endTime.getTime() - this.m_startTime.getTime() - this.m_pausedMsecs : 0) / 1E3
    },
    getanswerScores: function() {
        return this.m_answerScores
    },
    setanswerScores: function(a) {
        this.m_answerScores = a
    },
    getanswersIncomplete: function() {
        return this.m_answersIncomplete
    },
    setanswersIncomplete: function(a) {
        this.m_answersIncomplete = a
    },
    getescapeAnswers: function() {
        return this.m_escapeAnswers
    },
    setescapeAnswers: function(a) {
        this.m_escapeAnswers = a
    },
    setquestionSpecificScore: function(a) {
        this.m_questionSpecificScore = a
    },
    getquestionSpecificScore: function() {
        return this.m_questionSpecificScore
    },
    answersAsString: function() {},
    getcorrectAnswersAsString: function() {
        return this.answersAsString("correctAnswer", !1)
    },
    getchosenAnswersAsString: function() {
        return this.answersAsString("chosenAnswer", !1)
    },
    getcorrectAnswersForReview: function() {
        return this.answersAsString("correctAnswer", !0)
    },
    getchosenAnswersForReview: function() {
        return this.answersAsString("chosenAnswer", !0)
    },
    getansweredCorrectly: function() {
        return this.m_answeredCorrectly
    },
    setansweredCorrectly: function(a) {
        this.m_answeredCorrectly = a
    },
    getisCorrectAsString: function() {
        return this.m_answeredCorrectly ?
            "C" : "W"
    },
    getnumTries: function() {
        return this.m_numTries
    },
    getmaxTries: function() {
        return this.m_maxTries
    },
    setnumTries: function(a) {
        this.m_numTries = a
    },
    getweighting: function() {
        return this.m_weighting
    },
    setweighting: function(a) {
        this.m_weighting = a
    },
    getnegativeWeight: function() {
        return this.m_negativeWeight
    },
    setnegativeWeight: function(a) {
        this.m_negativeWeight = a
    },
    getscoredPoints: function() {
        return this.m_scoredPoints
    },
    setscoredPoints: function(a) {
        this.m_scoredPoints = a
    },
    addLeadingZero: function(a) {
        return 10 > a ? "0" +
            String(a) : String(a)
    },
    getlatencyAsString: function() {
        return addLeadingZero(Math.round(latency / 3600)) + ":" + addLeadingZero(Math.round(latency % 3600 /
            60)) + ":" + addLeadingZero(Math.round(latency) % 60)
    },
    getlatencyAsSeconds: function() {
        return latency
    },
    getcurDateAsString: function() {
        var a = new Date;
        return addLeadingZero(a.getMonth() + 1) + "/" + addLeadingZero(a.getDate()) + "/" + a.getFullYear()
    },
    getcurDateAsString2: function() {
        var a = new Date;
        return a.getFullYear() + "/" + addLeadingZero(a.getMonth() + 1) + "/" + addLeadingZero(a.getDate())
    },
    getcurTimeAsString: function() {
        var a = new Date;
        return addLeadingZero(a.getHours()) + ":" + addLeadingZero(a.getMinutes()) + ":" + addLeadingZero(a
            .getSeconds())
    },
    getcurTimeAsSecondsSinceMidnight: function() {
        return 3600 * (void 0)
            .getHours() + 60 * (void 0)
            .getMinutes() + (void 0)
            .getSeconds()
    },
    getscore: function() {
        return this.m_wasJudged ? this.m_scoredPoints : 0
    },
    getwasJudged: function() {
        return this.m_wasJudged
    },
    setwasJudged: function(a) {
        this.m_wasJudged = a
    },
    getisPretestQuestion: function() {
        return this.m_isPretestQuestion
    },
    setisPretestQuestion: function(a) {
        this.m_isPretestQuestion = a
    },
    saveState: function(a) {
        a.writeNumber(this.m_slideNum);
        a.writeNumber(this.m_questionNumInQuiz);
        void 0 != this.m_startTime && 0 != this.m_startTime ? a.writeNumber(this.m_startTime.getTime()) : a
            .writeNumber(0);
        void 0 != this.m_endTime && 0 != this.m_endTime ? a.writeNumber(this.m_endTime.getTime()) : a
            .writeNumber(0);
        a.writeBoolean(this.m_wasJudged);
        a.writeBoolean(this.m_partiallyCorrect);
        a.writeBoolean(this.m_answeredCorrectly);
        a.writeBoolean(this.m_answersIncomplete);
        a.writeNumber(this.m_numTries);
        a.writeBoolean(this.m_isShuffled);
        var b = !1,
            c = this.m_scoredPoints;
        0 > c && (b = !0, c = -c);
        a.writeBoolean(b);
        a.writeNumber(c);
        a.writeNumber(this.m_answerScores.length);
        b = 0;
        switch (this.m_interactionType) {
            case "choice":
                b = 0;
                break;
            case "true-false":
                b = 1;
                break;
            case "fill-in":
                b = 2;
                break;
            case "matching":
                b = 4;
                break;
            case "sequencing":
                b = 5;
                break;
            case "hotspot":
                b = 6;
                break;
            case "likert":
                b = 7;
                break;
            case "widget":
                b = 8
        }
        a.writeNumber(b);
        this.m_questionSpecificScore && this.m_questionSpecificScore.saveState(a);
        for (b = 0; b < this.m_answerScores.length; b++) a.writeString(this.m_answerScores[b].m_answerID), a
            .writeString(this.m_answerScores[b].m_chosenAnswer), a.writeString(this.m_answerScores[b]
                .m_correctAnswer)
    },
    restoreState: function(a) {
        if (a) {
            this.m_slideNum = a.readNumber();
            this.m_questionNumInQuiz = a.readNumber();
            if (void 0 == this.m_startTime || 0 == this.m_startTime) this.m_startTime = new Date;
            this.m_startTime.setTime(a.readNumber());
            if (void 0 == this.m_endTime || 0 == this.m_endTime) this.m_endTime = new Date;
            this.m_endTime.setTime(a.readNumber());
            this.m_wasJudged = a.readBoolean();
            this.m_partiallyCorrect = a.readBoolean();
            this.m_answeredCorrectly = a.readBoolean();
            this.m_answersIncomplete = a.readBoolean();
            this.m_numTries = a.readNumber();
            this.m_isShuffled = a.readBoolean();
            var b = a.readBoolean();
            this.m_scoredPoints = a.readNumber();
            b && (this.m_scoredPoints = -this.m_scoredPoints);
            var b = a.readNumber(),
                c = "choice";
            switch (a.readNumber()) {
                case 0:
                    c = "choice";
                    break;
                case 1:
                    c = "true-false";
                    break;
                case 2:
                    c = "fill-in";
                    break;
                case 5:
                    c = "sequencing";
                    break;
                case 6:
                    c = "hotspot";
                    break;
                case 7:
                    c = "likert";
                    break;
                case 8:
                    c = "widget"
            }
            this.setinteractionType(c);
            this.m_questionSpecificScore && this.m_questionSpecificScore.restoreState(a);
            for (c = 0; c < b; ++c) {
                var d = new cp.AnswerScore;
                d.m_answerID = a.readString();
                d.m_chosenAnswer = a.readString();
                d.m_correctAnswer = a.readString();
                this.m_answerScores.push(d)
            }
            this.restoreQuestionProperties()
        }
    },
    restoreQuestionProperties: function() {
        if (cp.movie.questionObjs && !(0 > this.m_questionNumInQuiz || this.m_questionNumInQuiz >= cp.movie
                .questionObjs.length)) {
            var a =
                cp.movie.questionObjs[this.m_questionNumInQuiz];
            a && (a.questionNumberInQuiz = this.m_questionNumInQuiz, a.startTime = this.m_startTime, a.endTime =
                this.m_endTime, a.wasJudged = this.m_wasJudged, a.currentAttempt = this.m_numTries, a
                .setScore(this.m_scoredPoints), a.m_isShuffled = this.m_isShuffled, a.m_QuestionStatus =
                this.m_partiallyCorrect ? a.QuestionStatusEnum.PARTIAL_CORRECT : this.m_answersIncomplete ?
                a.QuestionStatusEnum.INCOMPLETE : this.m_answeredCorrectly ? a.QuestionStatusEnum.CORRECT :
                a.QuestionStatusEnum.INCORRECT,
                a.restoreFromQuestionSpecificScoreProperties(this.m_questionSpecificScore), a
                .resumeSelectedAnswers(this.m_answerScores.slice(0)), a.m_questionScore = this)
        }
    },
    getinteractionID: function() {
        return this.m_interactionID
    },
    setinteractionID: function(a) {
        this.m_interactionID = a
    },
    setQuestionDatafromQuestion: function(a, b, c, d) {
        this.m_objectiveID = a;
        this.m_interactionID = b;
        this.m_weighting = c;
        this.m_negativeWeight = d
    },
    createQuestionSpecificScore: function() {
        this.m_questionSpecificScore || (this.m_questionSpecificScore = "hotspot" ==
            this.m_interactionType ? new cp.HotSpotQuestionSpecificScore : new cp
            .ChoiceQuestionSpecificScore)
    },
    getSlideNum: function() {
        return this.m_slideNum
    },
    setSlideNum: function(a) {
        this.m_slideNum = a
    },
    getStartTime: function() {
        return this.m_startTime
    },
    setStartTime: function(a) {
        this.m_startTime = a
    },
    getEndTime: function() {
        return this.m_endTime
    },
    setEndTime: function(a) {
        this.m_endTime = a
    },
    getInteractionTypeForLMS: function() {
        var a;
        switch (this.m_interactionType) {
            case cpInteractionTypeEnum.Choice:
            case cpInteractionTypeEnum.HotSpot:
                a =
                    "choice";
                break;
            case cpInteractionTypeEnum.TrueFalse:
                a = "true-false";
                break;
            case cpInteractionTypeEnum.FillIn:
                a = "fill-in";
                break;
            case cpInteractionTypeEnum.LongFillIn:
                a = "long-fill-in";
                break;
            case cpInteractionTypeEnum.Matching:
                a = "matching";
                break;
            case cpInteractionTypeEnum.Sequence:
                a = "sequencing";
                break;
            case cpInteractionTypeEnum.Likert:
                a = "likert";
                break;
            case cpInteractionTypeEnum.Widget:
                a = "widget"
        }
        return a
    },
    getInteractionType: function() {
        var a;
        switch (this.m_interactionType) {
            case cpInteractionTypeEnum.Choice:
                a =
                    "choice";
                break;
            case cpInteractionTypeEnum.TrueFalse:
                a = "true-false";
                break;
            case cpInteractionTypeEnum.FillIn:
                a = "fill-in";
                break;
            case cpInteractionTypeEnum.LongFillIn:
                a = "long-fill-in";
                break;
            case cpInteractionTypeEnum.Matching:
                a = "matching";
                break;
            case cpInteractionTypeEnum.Sequence:
                a = "sequencing";
                break;
            case cpInteractionTypeEnum.Likert:
                a = "likert";
                break;
            case cpInteractionTypeEnum.HotSpot:
                a = "hotspot";
                break;
            case cpInteractionTypeEnum.Widget:
                a = "widget"
        }
        return a
    },
    setInteractionType: function(a) {
        var b;
        switch (a) {
            case "choice":
                b =
                    cpInteractionTypeEnum.Choice;
                break;
            case "true-false":
                b = cpInteractionTypeEnum.TrueFalse;
                break;
            case "fill-in":
                b = cpInteractionTypeEnum.FillIn;
                break;
            case "long-fill-in":
                b = cpInteractionTypeEnum.LongFillIn;
                break;
            case "matching":
                b = cpInteractionTypeEnum.Matching;
                break;
            case "sequencing":
                b = cpInteractionTypeEnum.Sequence;
                break;
            case "hotspot":
                b = cpInteractionTypeEnum.HotSpot;
                break;
            case "likert":
                b = cpInteractionTypeEnum.Likert;
                break;
            case "widget":
                b = cpInteractionTypeEnum.Widget
        }
        this.m_interactionType = b
    },
    getObjectiveID: function() {
        return this.m_objectiveID
    },
    setObjectiveID: function(a) {
        this.m_objectiveID = a
    },
    getInteractionID: function() {
        return this.m_interactionID
    },
    setInteractionID: function(a) {
        this.m_interactionID = a
    },
    getWeighting: function() {
        return this.m_weighting
    },
    setWeighting: function(a) {
        this.m_weighting = a
    },
    getNegativeWeight: function() {
        return this.m_negativeWeight
    },
    setNegativeWeight: function(a) {
        this.m_negativeWeight = a
    },
    getAnswerScores: function() {
        return this.m_answerScores
    },
    setAnswerScores: function(a) {
        this.m_answerScores = a
    },
    getNumTries: function() {
        return this.m_numTries
    },
    setNumTries: function(a) {
        this.m_numTries = a
    },
    getAnswersIncomplete: function() {
        return this.m_answersIncomplete
    },
    setAnswersIncomplete: function(a) {
        this.m_answersIncomplete = a
    },
    getAnsweredCorrectly: function() {
        return this.m_answeredCorrectly
    },
    setAnsweredCorrectly: function(a) {
        this.m_answeredCorrectly = a
    },
    getPausedMsecs: function() {
        return this.m_pausedMsecs
    },
    setPausedMsecs: function(a) {
        this.m_pausedMsecs = a
    },
    getQuestionNumInQuiz: function() {
        return this.m_questionNumInQuiz
    },
    setQuestionNumInQuiz: function(a) {
        this.m_questionNumInQuiz =
            a
    },
    getWasJudged: function() {
        return this.m_wasJudged
    },
    setIsPretest: function(a) {
        this.m_isPretestQuestion = a
    },
    getIsPretest: function() {
        return this.m_isPretestQuestion
    },
    setWasJudged: function(a) {
        this.m_wasJudged = a
    },
    resetScore: function() {
        this.m_answerScores = [];
        this.m_numTries = 0;
        this.m_endTime = this.m_startTime = void 0;
        this.m_answeredCorrectly = this.m_answersIncomplete = !1;
        this.m_pausedMsecs = 0;
        this.m_wasJudged = !1;
        this.m_questionSpecificScore && this.m_questionSpecificScore.reset()
    }
};
cp.QuizSlideGraphManager = function() {
    cp.QuizSlideGraphManager.baseConstructor.call(this);
    this.m_CompletionBranchMinQuizScore = this.m_CompletionBranchMaxQuizScore = 0;
    this.m_CompletionBranchMinQuizScoreSet = this.m_CompletionBranchMaxQuizScoreSet = !1;
    this.m_SlideNumToQuestionNumMap = {};
    this.m_progressNumber = 0;
    this.m_startSlideIndex = -1
};
cp.inherits(cp.QuizSlideGraphManager, cp.SlideGraphManager);
cp.QuizSlideGraphManager.prototype.getPlaybackController = function() {
    return cp.movie.playbackController
};
cp.QuizSlideGraphManager.prototype.countQuizSlides = function(a) {
    for (var b = {}, c = 0, d = 0; d < a.length; ++d) {
        var e = a[d];
        void 0 == b[e] && (b[e] = e, this.IsNonPretestQuestionSlide(e) && ++c)
    }
    return c
};
cp.QuizSlideGraphManager.prototype.countQuizMaxScore = function(a) {
    var b = this.getPlaybackController();
    if (void 0 == b) return "NaN";
    b = b.GetQuizController();
    if (!b) return 0;
    for (var c = {}, d = 0, e = 0; e < a.length; ++e) {
        var f = a[e];
        void 0 == c[f] && (c[f] = f, d += b.getQuizSlideMaxScore(f))
    }
    return d
};
cp.QuizSlideGraphManager.prototype.countQuizMinScore = function(a) {
    var b = this.getPlaybackController();
    if (void 0 == b) return "NaN";
    b = b.GetQuizController();
    if (!b) return 0;
    for (var c = {}, d = 0, e = 0; e < a.length; ++e) {
        var f = a[e];
        void 0 == c[f] && (c[f] = f, d += b.getQuizSlideMinScore(f))
    }
    return d
};
cp.QuizSlideGraphManager.prototype.countQuizScore = function(a) {
    var b = this.getPlaybackController();
    if (void 0 == b) return "NaN";
    b = b.GetQuizController();
    if (!b) return 0;
    for (var c = {}, d = 0, e = 0; e < a.length; ++e) {
        var f = a[e];
        void 0 == c[f] && (c[f] = f, d += b.getQuizSlideScore(f))
    }
    return d
};
cp.QuizSlideGraphManager.prototype.findCompletionBranchTraverse = function(a, b, c) {
    var d = !1,
        e = -1;
    !d && void 0 == this.m_SlideGraphObj[a] && (e = this.BranchEnum.kBranchFound, d = !0);
    !d && void 0 != c[a] && (e = this.BranchEnum.kLoopBranchFound, d = !0);
    e != this.BranchEnum.kLoopBranchFound && (b.push(a), c[a] = a);
    if (d) {
        ++this.m_BranchNumber;
        if (1 == this.m_BranchNumber) {
            var e = [],
                e = this.m_CurrentBranch.length,
                f = b.length;
            0 < e && 0 < f && this.m_CurrentBranch[e - 1] == b[0] ? (e = this.m_CurrentBranch.slice(0, e - 1), e = e
                .concat(b), this.m_CompletionBranch =
                e.slice()) : this.m_CompletionBranch = this.m_CurrentBranch.concat(b);
            this.m_CompletionBranchSet = !0;
            this.m_CompletionBranchMaxQuizScore = this.countQuizMaxScore(this.m_CompletionBranch);
            this.m_CompletionBranchMaxQuizScoreSet = !0;
            this.m_CompletionBranchMinQuizScore = this.countQuizMinScore(this.m_CompletionBranch);
            this.m_CompletionBranchMinQuizScoreSet = !0;
            b.pop();
            delete c[a];
            return this.BranchEnum.kBranchFound
        }
        if (2 <= this.m_BranchNumber) {
            this.m_CompletionBranchSet = !1;
            if (this.m_CompletionBranchMaxQuizScoreSet) {
                if (this.countQuizMaxScore(this.m_CurrentBranch.concat(b)) ==
                    this.m_CompletionBranchMaxQuizScore) return e != this.BranchEnum.kLoopBranchFound && (b.pop(),
                    delete c[a]), this.BranchEnum.kBranchFound;
                this.m_CompletionBranchMaxQuizScoreSet = !1;
                e != this.BranchEnum.kLoopBranchFound && (b.pop(), delete c[a]);
                return this.BranchEnum.kMultipleBranchFound
            }
            e != this.BranchEnum.kLoopBranchFound && (b.pop(), delete c[a]);
            return this.BranchEnum.kMultipleBranchFound
        }
    }
    var d = this.m_SlideGraphObj[a],
        g = !1;
    for (f in d) switch (this.findCompletionBranchTraverse(Number(f), b, c)) {
        case this.BranchEnum.kBranchFound:
            g = !0;
        case this.BranchEnum.kBranchNotFound:
            break;
        case this.BranchEnum.kMultipleBranchFound:
            return this.BranchEnum.kMultipleBranchFound
    }
    e != this.BranchEnum.kLoopBranchFound && (b.pop(), delete c[a]);
    return g ? this.BranchEnum.kBranchFound : this.BranchEnum.kBranchNotFound
};
cp.QuizSlideGraphManager.prototype.findCompletionBranch = function() {
    var a = 1 <= this.m_CurrentBranch.length ? this.m_CurrentBranch[this.m_CurrentBranch.length - 1] : this
        .m_RootSlideIndex;
    this.m_startSlideIndex = a;
    this.m_CompletionBranch = [];
    this.m_CompletionBranchSet = !1;
    this.m_BranchNumber = 0;
    this.findCompletionBranchTraverse(a, [], {})
};
cp.QuizSlideGraphManager.prototype.IsNonPretestQuestionSlide = function(a) {
    var b = this.getPlaybackController();
    return b && (b = b.GetQuizController()) ? b.IsNonPretestQuestionSlide(a) : !1
};
cp.QuizSlideGraphManager.prototype.findFirstNonPretestQuestionSlide = function() {
    for (var a = this.m_CurrentBranch.length, b = 0; b < a; ++b)
        if (this.IsNonPretestQuestionSlide(this.m_CurrentBranch[b])) return this.m_CurrentBranch[b];
    return -1
};
cp.QuizSlideGraphManager.prototype.getMaxQuizScore = function() {
    !this.m_CompletionBranchSet && !this.m_CompletionBranchMaxQuizScoreSet && this.findCompletionBranch();
    if (!this.m_CompletionBranchSet && !this.m_CompletionBranchMaxQuizScoreSet) return "NaN";
    var a = -1;
    return a = this.m_CompletionBranchMaxQuizScoreSet ? this.m_CompletionBranchMaxQuizScore : this
        .countQuizMaxScore(this.m_CompletionBranch)
};
cp.QuizSlideGraphManager.prototype.getMinQuizScore = function() {
    !this.m_CompletionBranchSet && !this.m_CompletionBranchMinQuizScoreSet && this.findCompletionBranch();
    if (!this.m_CompletionBranchSet && !this.m_CompletionBranchMinQuizScoreSet) return "NaN";
    var a = "NaN";
    return a = this.m_CompletionBranchMinQuizScoreSet ? this.m_CompletionBranchMinQuizScore : this
        .countQuizMinScore(this.m_CompletionBranch)
};
cp.QuizSlideGraphManager.prototype.getQuizScorePercentage = function() {
    !this.m_CompletionBranchSet && !this.m_CompletionBranchMaxQuizScoreSet && this.findCompletionBranch();
    if (!this.m_CompletionBranchSet && !this.m_CompletionBranchMaxQuizScoreSet) return "NaN";
    var a = this.countQuizScore(this.m_CurrentBranch),
        b = -1,
        b = this.m_CompletionBranchSlideCountSet ? this.m_CompletionBranchSlideCount : this.countQuizMaxScore(this
            .m_CompletionBranch);
    return 0 >= b ? "NaN" : 100 * a / b
};
cp.QuizSlideGraphManager.prototype.getNextAttemptFirstQuestionSlideIndex = function() {
    return this.findFirstNonPretestQuestionSlide()
};
cp.QuizSlideGraphManager.prototype.getReviewFirstQuestionSlideIndex = function() {
    return this.findFirstNonPretestQuestionSlide()
};
cp.QuizSlideGraphManager.prototype.getNumQuestions = function() {
    !this.m_CompletionBranchSet && !this.m_CompletionBranchMaxQuizScoreSet && this.findCompletionBranch();
    return !this.m_CompletionBranchSet && !this.m_CompletionBranchMaxQuizScoreSet ? "NaN" : this.countQuizSlides(
        this.m_CompletionBranch)
};
cp.QuizSlideGraphManager.prototype.getQuestionSlideProgressNumber = function(a) {
    return this.m_SlideNumToQuestionNumMap && void 0 != this.m_SlideNumToQuestionNumMap[a] ? this
        .m_SlideNumToQuestionNumMap[a] : "NaN"
};
cp.QuizSlideGraphManager.prototype.setQuestionSlideProgressNumber = function(a) {
    this.m_SlideNumToQuestionNumMap || (this.m_SlideNumToQuestionNumMap = {});
    void 0 == this.m_SlideNumToQuestionNumMap[a] && (this.m_SlideNumToQuestionNumMap[a] = ++this.m_progressNumber)
};
cp.QuizSlideGraphManager.prototype.getLastQuestionSlideIndex = function() {
    if (!this.getPlaybackController()) return -1;
    this.m_CompletionBranchSet || this.findCompletionBranch();
    if (!this.m_CompletionBranchSet) return -1;
    for (var a = -1, b = this.m_CompletionBranch.length, c = 0; c < b; ++c) {
        var d = this.m_CompletionBranch[c];
        this.IsNonPretestQuestionSlide(d) && d > a && (a = d)
    }
    return a
};
cp.QuizSlideGraphManager.prototype.resetCurrentBranch = function(a) {
    if (!(0 > a)) {
        for (var b = -1, c = 0; c < this.m_CurrentBranch.length; ++c)
            if (this.m_CurrentBranch[c] == a) {
                b = a;
                break
            } 0 <= b && b + 1 < this.m_CurrentBranch.length && this.m_CurrentBranch.splice(b + 1);
        a = {};
        for (c = b = 0; c < this.m_CurrentBranch.length; ++c) {
            var d = this.m_CurrentBranch[c];
            this.m_SlideNumToQuestionNumMap.hasOwnProperty(d) && (a[d] = this.m_SlideNumToQuestionNumMap[d], b <
                this.m_SlideNumToQuestionNumMap[d] && (b = this.m_SlideNumToQuestionNumMap[d]))
        }
        this.m_SlideNumToQuestionNumMap =
            a;
        this.m_progressNumber = b;
        this.m_CompletionBranchMinQuizScore = this.m_CompletionBranchMaxQuizScore = 0;
        this.m_CompletionBranchMinQuizScoreSet = this.m_CompletionBranchMaxQuizScoreSet = !1;
        this.findCompletionBranch()
    }
};
cp.QuizSlideGraphManager.prototype.findLastContinousBranchFromHistory = function(a, b) {
    for (var c = [], d = this.m_BranchHistory.length - 1; 0 <= d; --d)
        if (c = [], this.m_BranchHistory[d] == a) {
            for (var e = -1, f = !0, g = d; g < this.m_BranchHistory.length; ++g) {
                c.push(this.m_BranchHistory[g]);
                if (this.m_BranchHistory[g] == b) {
                    e = g;
                    break
                }
                if (g != this.m_BranchHistory.length - 1 && !this.getIsJumpValid(this.m_BranchHistory[g], this
                        .m_BranchHistory[g + 1])) {
                    f = !1;
                    break
                }
            }
            if (-1 != e && f) return c
        } return c = []
};
cp.QuizSlideGraphManager.prototype.updateCurrentBranch = function(a) {
    if (!(0 > a)) {
        var b = this.getPlaybackController();
        if (b && ((b = b.GetQuizController()) || !b.GetIsInReviewMode())) {
            for (var c = this.m_CurrentBranch.length, d = -1, e = 0; e < this.m_CurrentBranch.length; ++e)
                if (this.m_CurrentBranch[e] == a) {
                    d = e;
                    break
                } if (-1 != d && d + 1 < c) {
                this.m_CurrentBranch.splice(d + 1);
                b = {};
                for (c = a = 0; c < this.m_CurrentBranch.length; ++c) d = this.m_CurrentBranch[c], this
                    .m_SlideNumToQuestionNumMap.hasOwnProperty(d) && (b[d] = this.m_SlideNumToQuestionNumMap[d],
                        a < this.m_SlideNumToQuestionNumMap[d] && (a = this.m_SlideNumToQuestionNumMap[d]));
                this.m_SlideNumToQuestionNumMap = b;
                this.m_progressNumber = a
            } else if (0 < this.m_CurrentBranch.length && -1 == d) {
                a = this.findLastContinousBranchFromHistory(this.m_CurrentBranch[this.m_CurrentBranch.length - 1],
                    a);
                for (c = 0; c < a.length; ++c) this.m_CurrentBranch.push(a[c]), this.m_BranchHistory.push(a[c]),
                    b && "Question" == b.GetSlideType(a[c]) && this.setQuestionSlideProgressNumber(a[c])
            }
            this.m_CompletionBranchMinQuizScore = this.m_CompletionBranchMaxQuizScore =
                0;
            this.m_CompletionBranchMinQuizScoreSet = this.m_CompletionBranchMaxQuizScoreSet = !1;
            this.findCompletionBranch()
        }
    }
};
cp.PoolManager = function() {
    this.m_framesAddedSoFar = 0
};
cp.PoolManager.prototype = {
    updateQuestionData: function(a, b) {
        var c = cp.D[a];
        c && (c.w = b.w, c.it = b.it, c.oid = b.oid, c.sra = b.sra, c.nw = b.nw, c.oca = b.oca, c.ofa = b.ofa)
    },
    updateModelDataForSlides: function(a, b) {
        var c = -1,
            d = -1,
            e = cp.D.project_main.slides;
        if (e && !(0 >= e.length)) {
            var e = e.split(","),
                f = e[a],
                g = cp.D[f];
            g.w = b.w;
            g.oca = b.oca;
            g.ofa = b.ofa;
            g.v = b.v;
            this.updateQuestionData(g.qs, b);
            var i = g.to - g.from + 1;
            this.m_framesAddedSoFar += i;
            var j = -1;
            0 == a ? (c = 1, d = g.to, j = 0) : (j = cp.D[e[a - 1]], c = j.to + 1, d = c + i - 1, j = j.to);
            cp.poolVerbose && cp.log("Slide Name : " +
                f + ", from : " + g.from + ", pauseAt : " + g.pa + ", to : " + g.to);
            g.from = c;
            g.pa += c;
            g.to = d;
            g.audioName && (d = cp.D[g.audioName], cp.poolVerbose && cp.log("Random : " + g.audioName + " : " +
                    d.from + ", " + d.to + ". Adding : " + (c - 1)), d.from += c - 1, d.to += c - 1, cp
                .poolVerbose && cp.log("Random : " + g.audioName + " after addition : " + d.from + ", " + d
                    .to));
            cp.poolVerbose && cp.log("Slide Name : " + f + ", from : " + g.from + ", pauseAt : " + g.pa +
                ", to : " + g.to);
            this.updateStartEndFramesForSlideItems(j, f, g.to);
            cp.poolVerbose && cp.log("Adding : " + i);
            for (c =
                a + 1; c < e.length; ++c) f = e[c], d = cp.D[f], j = d.pn, j && "" != j || (cp.poolVerbose && cp
                .log(f + " : " + d.from + ", " + d.to + ". Adding : " + i), d.from += i, d.to += i, cp
                .poolVerbose && cp.log(f + " after addition : " + d.from + ", " + d.to), d.pa += i, this
                .updateStartEndFramesForSlideItems(i, f, d.to));
            this.updateStartEndFramesForSlideAudios(i, g.rsi, g.audioName)
        }
    },
    updateStartEndFramesForSlideAudios: function(a, b, c) {
        var d = cp.D.project_main.slideAudios;
        d || (d = "");
        for (var e = [], d = d.split(","), f = 0; f < b; ++f) e.push(d[f]);
        c && e.push(c);
        for (f = b; f < d.length; ++f)
            if (e.push(d[f]),
                b = cp.D[d[f]]) cp.poolVerbose && cp.log(d[f] + " : " + b.from + ", " + b.to + ". Adding : " +
                a), b.from += a, b.to += a, cp.poolVerbose && cp.log(d[f] + " after addition : " + b.from +
                ", " + b.to);
        cp.D.project_main.slideAudios = e.toString()
    },
    updateStartEndFramesForSlideItems: function(a, b, c) {
        var d = cp.D[b],
            e = d.si;
        if (e && !(0 >= e.length)) {
            for (var f in e) {
                var g = cp.D[e[f].n];
                if (void 0 != g && (!0 == g.immo ? g.to = c : 1 != g.rp && 1 != g.rpa || g.apsn == b ? (g
                        .from += a, g.pa && (g.pa += a), g.to += a) : g.to = c, void 0 != g.ia)) {
                    var i = cp.D[g.ia];
                    i && (1 != g.rp && 1 != g.rpa && g.apsn ==
                        b) && (i.from += a - 1, i.to += a)
                }
            }
            if ((b = d.iph) && 0 < b.length)
                for (var j in b) void 0 != b[j] && (c = cp.D[b[j].n], void 0 != c && c.pa && (c.pa += a))
        }
    },
    updateSlideDataFromRandomSlideData: function(a, b) {
        var c = b.qnq;
        if (void 0 != c) {
            var d = cp.D[a];
            cp.D[d.qs + c] = cp.D[d.qs];
            cp.D[d.qs + c].qnq = c;
            cp.D[d.qs + c].oid = b.oid;
            d.qnq = c;
            d.pn = b.pn;
            d.rsi = b.rsi;
            this.updateQuestionNameAtIndex(d.qs, c)
        }
    },
    loadPools: function() {
        var a = cp.D.project_main.pools;
        if (!(void 0 == a || 0 >= a.length))
            for (var b = 0; b < a.length; ++b) this.loadPoolDataIntoModel(a[b])
    },
    loadPoolDataIntoModel: function(a) {
        for (var b =
                cp.model[a + "Data"], c = cp.D[a].pqs, d = 0; d < c.length; ++d) {
            var e = b[c[d] + "Data"],
                f;
            for (f in e) cp.D[f] = e[f]
        }
        if (cp.poolResources) {
            if (b = cp.poolResources[a + "Images"])
                for (d = 0; d < b.length; ++d) cp.model.images.push(b[d]);
            if (d = cp.poolResources[a + "Videos"])
                for (b = 0; b < d.length; ++b) cp.model.videos.push(d[b]);
            if (a = cp.poolResources[a + "SlideVideos"])
                for (d = 0; d < a.length; ++d) cp.model.slideVideos.push(a[d])
        }
    },
    updateSlideNameAtIndex: function(a, b) {
        var c = cp.D.project_main.slides;
        0 >= c.length || (c = c.split(","), b > c.length - 1 || (c[b] =
            a, cp.D.project_main.slides = c.toString()))
    },
    updateQuestionNameAtIndex: function(a, b) {
        var c = cp.D.project_main.questions;
        0 >= c.length || (c = c.split(","), b > c.length - 1 || (c[b] = a, cp.movie && (cp.movie.questions = c),
            cp.D.project_main.questions = c.toString()))
    },
    removeAllReferences: function(a) {
        var b = cp.D.project_main.questions;
        if (0 < b.length) {
            for (var c = b.split(","), d = [], b = 0; b < c.length; ++b) c[b] != a && d.push(c[b]);
            cp.D.project_main.questions = d.toString()
        }
        b = cp.D.project_main.slides;
        if (0 < b.length) {
            c = b.split(",");
            d = [];
            for (b =
                0; b < c.length; ++b) c[b] != a && d.push(c[b]);
            cp.D.project_main.slides = d.toString()
        }
    },
    updateSlidesAndQuestionsFromPool: function() {
        var a = cp.D.project_main.pools;
        if (!(void 0 == a || 0 >= a.length))
            if (a = cp.D.project_main.slides, !(void 0 == a || 0 >= a.length)) {
                for (var a = a.split(","), b = 0, c = 0; c < a.length; ++c) {
                    var d = a[c],
                        e = cp.D[d],
                        f = e.pn;
                    if (f && "" != f) {
                        var g = cp.D[f],
                            f = g.pqs,
                            i = -1;
                        if (e.is) {
                            g = g.rsqs;
                            if (0 >= g.length) {
                                this.removeAllReferences(d);
                                b++;
                                continue
                            }
                            void 0 == f.sindex ? f.sindex = 0 : f.sindex++;
                            i = Number(g[f.sindex])
                        } else {
                            g = g.rgqs;
                            if (0 >= g.length) {
                                this.removeAllReferences(d);
                                b++;
                                continue
                            }
                            void 0 == f.gindex ? f.gindex = 0 : f.gindex++;
                            i = Number(g[f.gindex])
                        }
                        f = f[i];
                        this.updateSlideNameAtIndex(f, c - b);
                        e.qnq -= b;
                        this.updateSlideDataFromRandomSlideData(f, e);
                        this.updateModelDataForSlides(c - b, e); - 1 != d.indexOf("rq") && (d = d.split("rq")[
                            1], "" != d && (cp.D[d] = cp.D[f]))
                    }
                }
                this.updateMainMovieData()
            }
    },
    updateMainMovieData: function() {
        var a = cp.D.project_main.slides;
        0 >= a.length || (a = a.split(","), cp.D.project_main.to = cp.D[a[a.length - 1]].to)
    },
    updateSlideData: function(a,
        b, c) {
        this.updateSlideNameAtIndex(a, b);
        this.updateSlideDataFromRandomSlideData(a, c);
        this.updateModelDataForSlides(b, c)
    },
    randomizePools: function() {
        if (!("" != cp.resumeDataChunk && void 0 != cp.resumeDataChunk && "0" != cp.resumeDataChunk)) {
            var a = cp.D.project_main.pools;
            if (a) {
                var b = a.length;
                if (!(0 >= b)) {
                    cp.poolVerbose && cp.log("Randomizing");
                    for (var c = 0; c < b; ++c) {
                        for (var d = cp.D[a[c]], e = d.rsqs, f = e.length, g = f; g--;) {
                            var i = parseInt(Math.random() * f),
                                j = e[g];
                            e[g] = e[i];
                            e[i] = j
                        }
                        d.rsqs = e;
                        e = d.rgqs;
                        for (g = f = e.length; g--;) i = parseInt(Math.random() *
                            f), j = e[g], e[g] = e[i], e[i] = j;
                        d.rgqs = e
                    }
                    this.updateSlidesAndQuestionsFromPool()
                }
            }
        }
    }
};
cp.QuizButtonCH = function(a) {
    a.stopPropagation && a.stopPropagation();
    var c = cp.D[a.target.id].chfn;
    c(a.target)
};
cp.QuestionSlideReviewLabel = function(a, c) {
    cp.QuestionSlideReviewLabel.baseConstructor.call(this, a);
    this.textAlign = this.getAttribute("ta");
    this.bold = this.getAttribute("B");
    this.color = this.getAttribute("c");
    this.font = this.getAttribute("f");
    this.italic = this.getAttribute("i");
    this.size = this.getAttribute("sz");
    this.underline = this.getAttribute("u");
    this.id = this.getAttribute("id");
    this.visible = this.getAttribute("visible");
    this.re = this.getAttribute("re");
    this.sh = this.getAttribute("sh");
    var b = this.getAttribute("b");
    this.parentDivName = this.getAttribute("dn");
    this.relatedQuestionSlide = this.getAttribute("rqs");
    cp.responsive && (this.responsiveCSS = this.getAttribute("css"));
    if (void 0 != this.relatedQuestionSlide) {
        var d = cp.getQuestionObject(this.relatedQuestionSlide);
        void 0 != d && (d.m_correctFeedbackText = this.getAttribute("cf"), d.m_partialCorrectFeedbackText = this
            .getAttribute("pcf"), d.m_incorrectDisplayChosenText = this.getAttribute("idc"), d
            .m_incorrectDisplayCorrectText = this.getAttribute("ict"))
    }
    this.bounds = {
        minX: b[0],
        minY: b[1],
        maxX: b[2],
        maxY: b[3]
    };
    b = this.getAttribute("vb");
    this.vbounds = {
        minX: b[0],
        minY: b[1],
        maxX: b[2],
        maxY: b[3]
    };
    this.args = c;
    this.element && (this.element.parentElement.drawingBoard = this.element.parentElement, this.element
        .parentElement.bounds = this.bounds);
    this.isDrawn = !1
};
cp.inherits(cp.QuestionSlideReviewLabel, cp.DisplayObject);
cp.QuestionSlideReviewLabel.prototype.start = function(a) {
    this.addIfNeeded();
    if (!this.effectIsStarted || a) this.updateEffects(this.hasEffect), this.effectIsStarted = !0
};
cp.QuestionSlideReviewLabel.prototype.reset = function() {
    delete cp.ropMap[this.element.id];
    this.isDrawn = !1;
    this.element.width = "0";
    this.element.height = "0";
    this.element.style.width = "0px";
    this.element.style.height = "0px";
    this.element.left = "0";
    this.element.top = "0";
    this.element.style.left = "0px";
    this.element.style.top = "0px"
};
cp.QuestionSlideReviewLabel.prototype.drawForResponsive = function(a, c) {
    var b = cp.getQuestionObject(this.relatedQuestionSlide);
    if (!b || !b.getIsStarted() || !this.responsiveCSS) return !1;
    if (this.isDrawn && !a) return !0;
    var d = cp.getResponsiveCSS(this.responsiveCSS),
        e = !1,
        e = this.re || this.sh && !this.sh.i || this.fillOuterArea,
        f = void 0 != this.tr;
    if (this.currentCSS == d && !e && !f && !a) return !0;
    this.currentCSS = d;
    if (!cp.movie.playbackController) return !1;
    e = cp.movie.playbackController.GetQuizController();
    if (!e || !1 == e.GetIsInReviewMode()) return !1;
    this.actualParent = cp(this.parentDivName);
    if (!b.getIsIncomplete() || b.getIsSurvey() || b.getIsPretest()) return this.isDrawn = b.showCustomReviewArea(
        this.element.id), this.drawComplete(c), !0 == this.isDrawn;
    this.zIndex = cp.D[this.parentDivName].zIndex;
    cp.applyResponsiveStyles(this.element.parentElement, d, !0);
    this.element.parentElement.offsetHeight = this.element.parentElement.offsetHeight;
    this.actualParentClientBoundingRect = this.element.parentElement.getBoundingClientRect();
    e = cp("re-" + this.element.id);
    e || (e =
        cp.newElem("div"), e.id = "re-" + this.element.id, cp.fixWebkitScaling(e), cp
        .addRewrapObjectAsPerRestOfProjectItem(e));
    cp.applyResponsiveStyles(e, d, !0);
    e.offsetHeight = e.offsetHeight;
    this.parentElementClientBoundingRect = e.getBoundingClientRect();
    this.element.style.left = "0px";
    this.element.style.top = "0px";
    this.element.style.width = "100%";
    this.element.style.height = "100%";
    this.isDrawn || (this.sh && (this.element.style.textShadow = (this.sh.i ? "inset " : "") + this.sh.d * Math.cos(
            Math.PI * this.sh.a / 180) + "px " + this.sh.d * Math.sin(Math.PI *
            this.sh.a / 180) + "px " + this.sh.b + "px " + cp.ConvertRGBToRGBA(this.sh.c, this.sh.o)), this
        .re && (e.style.webkitBoxReflect = "below " + this.re.d +
            "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" + (1 - this.re
                .s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p / 100) + ")))"), this
        .element.style.position = "absolute", this.visible = 1, this.text = b.getIsIncomplete() ? this
        .getAttribute("icf") : "", void 0 != this.getAttribute("accstr") && (this.element.setAttribute(
            "tabIndex", "-1"), this.element.setAttribute("aria-label",
            this.text), cp.removeAccessibilityOutline(this.element), this.element.setAttribute("role",
            "img")), "" == this.element.innerHTML && (this.element.innerHTML += this.text), this.element
        .parentNode.removeChild(this.element), e.setAttribute("class", "cp-rewrap"), e.style.zIndex = this
        .zIndex, e.appendChild(this.element));
    b = this.getAttribute("rpfont")[cp.ResponsiveProjWidth].font;
    this.element.style.fontWeight = b.B ? "bold" : "normal";
    this.element.style.fontStyle = b.i ? "italic" : "normal";
    this.element.style.textDecoration = b.u ? "underline" :
        "none";
    this.element.style.color = b.c;
    this.element.style.fontFamily = b.n;
    this.element.style.fontSize = b.s + "px";
    this.element.style.textAlign = this.textAlign;
    this.element.style.verticalAlign = "middle";
    this.isDrawn = !0;
    this.drawComplete(c);
    this.visible || cp.hide(this.parentDivName);
    return !0
};
cp.QuestionSlideReviewLabel.prototype.addIfNeeded = function(a, c) {
    if ((!cp.responsive || !this.drawForResponsive(a)) && !this.isDrawn) {
        var b = cp.getQuestionObject(this.relatedQuestionSlide);
        if (b && b.getIsStarted() && cp.movie.playbackController) {
            var d = cp.movie.playbackController.GetQuizController();
            d && !1 != d.GetIsInReviewMode() && ((this.actualParent = cp(this.parentDivName), !b
            .getIsIncomplete() || b.getIsSurvey() || b.getIsPretest()) ? (this.isDrawn = b
                .showCustomReviewArea(this.element.id), this.drawComplete(c)) : (this.zIndex =
                cp.D[this.parentDivName].zIndex, d = cp.newElem("div"), d.id = "re-" + this.element.id, cp
                .fixWebkitScaling(d), d.style.position = "absolute", d.style.left = this.vbounds.minX +
                "px", d.style.top = this.vbounds.minY + "px", d.style.width = this.vbounds.maxX - this
                .vbounds.minX + "px", d.style.height = this.vbounds.maxY - this.vbounds.minY + "px", this
                .element.parentElement.style.position = "absolute", this.element.parentElement.style.left =
                this.bounds.minX + "px", this.element.parentElement.style.top = this.bounds.minY + "px",
                this.element.parentElement.style.width =
                this.bounds.maxX - this.bounds.minX + "px", this.element.parentElement.style.height = this
                .bounds.maxY - this.bounds.minY + "px", this.element.style.left = "0px", this.element.style
                .top = "0px", this.element.style.width = "100%", this.element.style.height = "100%", this
                .sh && (this.element.style.textShadow = (this.sh.i ? "inset " : "") + this.sh.d * Math.cos(
                        Math.PI * this.sh.a / 180) + "px " + this.sh.d * Math.sin(Math.PI * this.sh.a /
                    180) + "px " + this.sh.b + "px " + cp.ConvertRGBToRGBA(this.sh.c, this.sh.o)), this
                .re && (d.style.webkitBoxReflect = "below " +
                    this.re.d +
                    "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" + (
                        1 - this.re.s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p /
                        100) + ")))"), this.element.style.position = "absolute", this.element.style
                .textAlign = this.textAlign, this.element.style.verticalAlign = "middle", this.visible = 1,
                this.text = b.getIsIncomplete() ? this.getAttribute("icf") : "", void 0 != this
                .getAttribute("accstr") && (this.element.setAttribute("tabIndex", "-1"), this.element
                    .setAttribute("aria-label", this.text),
                    cp.removeAccessibilityOutline(this.element), this.element.setAttribute("role", "img")),
                this.element.style.color = this.color, this.element.style.fontFamily = this.font, this
                .element.style.fontSize = this.size + "px", this.element.style.fontWeight = this.bold ?
                "bold" : "normal", this.element.style.fontStyle = this.italic ? "italic" : "normal", this
                .element.style.textDecoration = this.underline ? "underline" : "none", "" == this.element
                .innerHTML && (this.element.innerHTML += this.text), this.element.parentNode.removeChild(
                    this.element),
                cp.addRewrapObjectAsPerRestOfProjectItem(d), d.setAttribute("class", "cp-rewrap"), d
                .appendChild(this.element), d.style.zIndex = this.zIndex, this.isDrawn = !0, this
                .drawComplete(c), this.visible || cp.hide(this.parentDivName)))
        }
    }
};
cp.ProgressSlideLabel = function(a, c) {
    cp.ProgressSlideLabel.baseConstructor.call(this, a);
    this.id = this.getAttribute("id");
    this.visible = this.getAttribute("visible");
    this.textAlign = this.getAttribute("ta");
    this.bold = this.getAttribute("B");
    this.color = this.getAttribute("c");
    this.font = this.getAttribute("f");
    this.italic = this.getAttribute("i");
    this.size = this.getAttribute("sz");
    this.underline = this.getAttribute("u");
    this.quizParam = this.getAttribute("qp");
    if (cp.movie.playbackController) {
        var b = cp.movie.playbackController.GetQuizController();
        b && (b.GetParameterValueByName(this.quizParam), this.relatedQuestionSlide = this.getAttribute("rqs"), cp
            .responsive && (this.responsiveCSS = this.getAttribute("css")), this.parentDivName = this
            .getAttribute("dn"), b = this.getAttribute("b"), this.bounds = {
                minX: b[0],
                minY: b[1],
                maxX: b[2],
                maxY: b[3]
            }, this.tr = this.getAttribute("tr"), this.re = this.getAttribute("re"), this.sh = this
            .getAttribute("sh"), b = this.getAttribute("vb"), this.vbounds = {
                minX: b[0],
                minY: b[1],
                maxX: b[2],
                maxY: b[3]
            }, this.element && (this.element.parentElement.drawingBoard =
                this.element.parentElement, this.element.parentElement.bounds = this.bounds), this.args = c,
            this.isDrawn = !1)
    }
};
cp.inherits(cp.ProgressSlideLabel, cp.DisplayObject);
cp.ProgressSlideLabel.prototype.start = function(a) {
    this.addIfNeeded();
    if (!this.effectIsStarted || a) this.updateEffects(this.hasEffect), this.effectIsStarted = !0
};
cp.ProgressSlideLabel.prototype.reset = function() {
    delete cp.ropMap[this.element.id];
    this.isDrawn = !1;
    this.element.width = "0";
    this.element.height = "0";
    this.element.style.width = "0px";
    this.element.style.height = "0px";
    this.element.left = "0";
    this.element.top = "0";
    this.element.style.left = "0px";
    this.element.style.top = "0px"
};
cp.ProgressSlideLabel.prototype.drawForResponsive = function(a) {
    var c = cp.getQuestionObject(this.relatedQuestionSlide);
    if (!c || !c.getIsStarted() || !this.responsiveCSS) return !1;
    if (this.isDrawn && !a) return !0;
    var b = cp.getResponsiveCSS(this.responsiveCSS),
        d = !1,
        d = this.re || this.sh && !this.sh.i || this.fillOuterArea,
        e = void 0 != this.tr;
    if (this.currentCSS == b && !d && !e && !a) return !0;
    this.currentCSS = b;
    var f = !0,
        a = cp.D[this.parentDivName],
        e = cp.D[a.mdi],
        d = cp("re-" + this.element.id);
    d || (d = cp.newElem("div"), d.id = "re-" + this.element.id,
        cp.fixWebkitScaling(d), cp.addRewrapObjectAsPerRestOfProjectItem(d));
    var h = b;
    this.getAttribute("useV") && (h = cp.createResponsiveStyleObj(b, b.p, b.vl, b.vt, b.vr, b.vb, b.vw, b.vh, b
        .crop));
    cp.applyResponsiveStyles(this.element.parentElement, b, f);
    this.element.parentElement.offsetHeight = this.element.parentElement.offsetHeight;
    this.parentElementClientBoundingRect = this.element.parentElement.getBoundingClientRect();
    var g = 0;
    this.tr && (g = cp.getAngleFromRotateStr(this.tr), f = cp.getCenterForRotation(this.element.parentElement),
        g = cp.getBoundsForRotatedItem(this.element.parentElement.clientWidth, this.element.parentElement
            .clientHeight, f, g), h = cp.createResponsiveStyleObj(b, b.p, g.l, g.t, g.r, g.b, g.w, g.h, b.crop),
        cp.applyTransform(this.element, this.tr), g = cp.getAngleFromRotateStr(this.tr), this.element.tr = this
        .tr, this.element.parentElement.tr = this.tr, cp.applyTransform(this.element.parentElement, this.tr),
        f = !1);
    cp.applyResponsiveStyles(d, h, f);
    this.element.rotateAngle = g;
    this.element.parentElement.rotateAngle = g;
    this.element.style.left =
        "0px";
    this.element.style.top = "0px";
    this.element.style.width = "100%";
    this.element.style.height = "100%";
    this.element.style.display = "block";
    this.element.style.position = "absolute";
    this.isDrawn || (this.text = this.getAttribute("text"), this.text = c ? c.getProgressString(this.text) : "", !
        0 === e.hasOwnProperty("accstr") && (c = document.getElementById(this.parentDivName), cp
            .createAlternativeAccessibleText(c, this.text, "img"), cp.removeAccessibilityOutline(c)), this
        .zIndex = a.zIndex, this.sh && (this.element.style.textShadow = this.sh.d *
            Math.cos(Math.PI * this.sh.a / 180) + "px " + this.sh.d * Math.sin(Math.PI * this.sh.a / 180) +
            "px " + this.sh.b + "px " + cp.ConvertRGBToRGBA(this.sh.c, this.sh.o) + (this.sh.i ? " inset" : "")
            ), this.re && (d.style.webkitBoxReflect = "below " + this.re.d +
            "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" + (1 - this.re
                .s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p / 100) + ")))"), "" ==
        this.element.innerHTML && (this.element.innerHTML +=
            "<table style='width=100%;height:100%;'><tr style='width=100%;height:100%;'><td  style='width=100%;height:100%;vertical-align:middle;'>" +
            this.text + "</td></tr></table>"), this.element.parentNode.removeChild(this.element), d
        .setAttribute("class", "cp-rewrap"), d.appendChild(this.element), d.style.zIndex = this.zIndex);
    c = this.getAttribute("rpfont")[cp.ResponsiveProjWidth].font;
    this.element.style.fontWeight = c.B ? "bold" : "normal";
    this.element.style.fontStyle = c.i ? "italic" : "normal";
    this.element.style.textDecoration = c.u ? "underline" : "none";
    this.element.style.color = c.c;
    this.element.style.fontFamily = c.n;
    this.element.style.fontSize = c.s + "px";
    this.element.style.textAlign =
        this.textAlign;
    this.element.style.verticalAlign = "middle";
    this.isDrawn = !0;
    this.visible || cp.hide(this.parentDivName);
    return !0
};
cp.ProgressSlideLabel.prototype.addIfNeeded = function(a) {
    if (!cp.responsive || !this.drawForResponsive(a))
        if ((a = cp.getQuestionObject(this.relatedQuestionSlide)) && a.getIsStarted() && !this.isDrawn) {
            this.text = this.getAttribute("text");
            this.text = a ? a.getProgressString(this.text) : "";
            var a = this.bounds,
                c = cp.D[this.parentDivName];
            if (!0 === cp.D[c.mdi].hasOwnProperty("accstr")) {
                var b = document.getElementById(this.parentDivName);
                cp.createAlternativeAccessibleText(b, this.text, "img");
                cp.removeAccessibilityOutline(b)
            }
            this.zIndex =
                c.zIndex;
            this.element.style.width = a.maxX - a.minX + "px";
            this.element.style.height = a.maxY - a.minY + "px";
            c = cp.newElem("div");
            c.id = "re-" + this.element.id;
            cp.fixWebkitScaling(c);
            this.element.style.textAlign = this.textAlign;
            this.element.style.verticalAlign = "middle";
            b = 0;
            this.tr && (cp.applyTransform(this.element, this.tr), b = cp.getAngleFromRotateStr(this.tr), this
                .element.tr = this.tr, this.element.parentElement.tr = this.tr, cp.applyTransform(this.element
                    .parentElement, this.tr));
            this.element.rotateAngle = b;
            this.element.parentElement.rotateAngle =
                b;
            this.sh && (this.element.style.textShadow = this.sh.d * Math.cos(Math.PI * this.sh.a / 180) + "px " +
                this.sh.d * Math.sin(Math.PI * this.sh.a / 180) + "px " + this.sh.b + "px " + cp
                .ConvertRGBToRGBA(this.sh.c, this.sh.o) + (this.sh.i ? " inset" : ""));
            this.re && (c.style.webkitBoxReflect = "below " + this.re.d +
                "px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(" + (1 - this
                    .re.s / 100) + ", transparent), to(rgba(255, 255, 255, " + (1 - this.re.p / 100) + ")))");
            this.element.parentElement.style.position = "absolute";
            this.element.parentElement.style.left =
                this.bounds.minX + "px";
            this.element.parentElement.style.top = this.bounds.minY + "px";
            this.element.parentElement.style.width = this.bounds.maxX - this.bounds.minX + "px";
            this.element.parentElement.style.height = this.bounds.maxY - this.bounds.minY + "px";
            c.style.position = "absolute";
            c.style.left = this.vbounds.minX + "px";
            c.style.top = this.vbounds.minY + "px";
            c.style.width = this.vbounds.maxX - this.vbounds.minX + "px";
            c.style.height = this.vbounds.maxY - this.vbounds.minY + "px";
            this.element.style.marginLeft = -(this.vbounds.minX - a.minX) +
                "px";
            this.element.style.marginTop = -(this.vbounds.minY - a.minY) + "px";
            this.element.style.display = "block";
            this.element.style.position = "absolute";
            this.element.style.color = this.color;
            this.element.style.fontFamily = this.font;
            this.element.style.fontSize = this.size + "px";
            this.element.style.fontWeight = this.bold ? "bold" : "normal";
            this.element.style.fontStyle = this.italic ? "italic" : "normal";
            this.element.style.textDecoration = this.underline ? "underline" : "none";
            "" == this.element.innerHTML && (this.element.innerHTML +=
                "<table style='width=100%;height:100%;'><tr style='width=100%;height:100%;'><td  style='width=100%;height:100%;vertical-align:middle;'>" +
                this.text + "</td></tr></table>");
            this.element.parentNode.removeChild(this.element);
            cp.addRewrapObjectAsPerRestOfProjectItem(c);
            c.setAttribute("class", "cp-rewrap");
            c.appendChild(this.element);
            c.style.zIndex = this.zIndex;
            this.isDrawn = !0;
            this.visible || cp.hide(this.parentDivName)
        }
};
cp.Answer = function(a) {
    cp.Answer.baseConstructor.call(this, a);
    this.id = this.getAttribute("id");
    this.type = this.getAttribute("type");
    this.visible = this.getAttribute("visible");
    this.answerID = this.getAttribute("aid");
    this.relatedQuestionSlide = this.getAttribute("rqs");
    this.m_questionObj = cp.getQuestionObject(this.relatedQuestionSlide);
    if (cp.responsive && (a = cp.D[this.element.id])) this.answerAreaItemName = a.aan;
    this.isDrawn = !1
};
cp.inherits(cp.Answer, cp.DisplayObject);
cp.Answer.prototype.start = function(a) {
    this.addIfNeeded();
    if (!this.effectIsStarted || a) this.updateEffects(this.hasEffect), this.effectIsStarted = !0
};
cp.Answer.prototype.reset = function() {
    delete cp.ropMap[this.element.id];
    this.isDrawn = !1;
    this.element.width = "0";
    this.element.height = "0";
    this.element.style.width = "0px";
    this.element.style.height = "0px";
    this.element.left = "0";
    this.element.top = "0";
    this.element.style.left = "0px";
    this.element.style.top = "0px"
};
cp.adjustPositionWithAnswerArea = function(a, c, b, d) {
    if (cp.responsive && a && c && b) {
        var e = cp(b),
            f = cp.D[b],
            b = 0;
        f && !d && (b = cp.D[f.mdi].sw);
        d = e.getBoundingClientRect();
        e = cp.movie.stage.mainSlideDiv.getBoundingClientRect();
        cp.applyResponsiveStyles(c, a);
        var f = a.l,
            h = a.t,
            g = a.r,
            a = a.b;
        "auto" != f && (f = -1 != f.indexOf("%") ? cp.getRoundedValue(parseFloat(f) * e.width / 100) : parseFloat(
            f), d && (f += d.left + b - e.left), c.style.left = f + "px");
        "auto" != h && (h = -1 != h.indexOf("%") ? cp.getRoundedValue(parseFloat(h) * e.height / 100) : parseFloat(
                h),
            d && (h += d.top - e.top), c.style.top = h + "px");
        "auto" != g && (g = -1 != g.indexOf("%") ? cp.getRoundedValue(parseFloat(g) * e.width / 100) : parseFloat(
            g), d && (g += e.right - d.right - b), c.style.right = g + "px");
        "auto" != a && (a = -1 != a.indexOf("%") ? cp.getRoundedValue(parseFloat(a) * e.height / 100) : parseFloat(
            a), d && (a += e.bottom - d.bottom), c.style.bottom = a + "px")
    }
};
cp.Answer.prototype.adjustPositionWithAnswerArea = function(a, c, b) {
    cp.adjustPositionWithAnswerArea(a, c, this.answerAreaItemName, b)
};
cp.Answer.prototype.addIfNeeded = function() {};
cp.Answer.prototype.linkedItemDrawingCompleteHandler = function(a) {
    if (cp.responsive && this.drawForResponsive)
        if (this.answerAreaItemName) {
            var c = cp.D[this.answerAreaItemName];
            c && (c = cp.D[c.mdi], a.cpData && a.cpData.uid && a.cpData.uid == c.uid && (cp.verbose && cp.log(
                "drawing " + this.element.id + ", for " + a.cpData.uid), this.drawForResponsive(!0, cp
                .ReasonForDrawing.kLinkedToItemAppeared)))
        } else cp.Answer.superClass.linkedItemDrawingCompleteHandler.call(this, a)
};
cp.Answer.prototype.subscribeToItemDrawingCompleteHandler = function(a) {
    if (cp.responsive)
        if (this.answerAreaItemName) {
            if (a = cp.D[this.answerAreaItemName])
                if (a = cp.D[a.mdi]) {
                    var c = this;
                    (a = cp.getResponsiveCSS(a.css)) && (-1 != a.lhID || -1 != a.lvID) && cp.em.addEventListener(
                        function(a) {
                            c.linkedItemDrawingCompleteHandler(a)
                        }, cp.ITEMDRAWINGCOMPLETEEVENT)
                }
        } else cp.Answer.superClass.subscribeToItemDrawingCompleteHandler.call(this, a)
};
cp.Question = function(a, c) {
    if (cp.movie.playbackController && (this.m_quizController = cp.movie.playbackController.GetQuizController()))
        this.m_questionScore = void 0, this.wasJudged = !1, this.m_isSurvey = this.m_isTracked = !0, this
        .associatedObjName = c, this.m_slideIndex = -1, cp.movie.stage && (this.m_slideIndex = cp.movie.stage
            .getSlideIndexForName(c)), this.questionObjName = a, this.progressString = "", this.questionData = cp.D[
            this.questionObjName], this.latencyTimer = void 0, this.latency = 0, this.timer = void 0, this.score =
        this.timeBeforePause =
        this.pausedMsecs = this.endTime = this.startTime = 0, this.m_selectedAnswersArr = [], this.isPartialScore =
        this.questionData.ips, this.timeLimit = this.questionData.tl, this.questionTextCanvasName = this
        .questionData.qtc, this.feedbackCaptionToBeShown = "", this.currentAttempt = 0, this.numberOfAttempts = this
        .questionData.noa, this.incorrectFeedbackCaptions = this.questionData.ifc, this.backButtonDivElement = this
        .skipButtonDivElement = this.clearButtonDivElement = this.submitAllButtonDivElement = this
        .submitButtonDivElement = void 0,
        this.shouldReportAnswers = this.questionData.sra, this.lastFeedbackShown = void 0, this
        .QuestionStatusEnum || (this.QuestionStatusEnum = {}, this.QuestionStatusEnum.INCOMPLETE = cp
            .QuestionStatusEnum.INCOMPLETE, this.QuestionStatusEnum.INCORRECT = cp.QuestionStatusEnum.INCORRECT,
            this.QuestionStatusEnum.CORRECT = cp.QuestionStatusEnum.CORRECT, this.QuestionStatusEnum
            .PARTIAL_CORRECT = cp.QuestionStatusEnum.PARTIAL_CORRECT), this.m_QuestionStatus = this
        .QuestionStatusEnum.INCOMPLETE, this.StateEnum || (this.StateEnum = {}, this.StateEnum.INIT =
            0, this.StateEnum.PLAYING = 1, this.StateEnum.PAUSED = 2, this.StateEnum.ENDED = 3), this.state = this
        .StateEnum.INIT, this.QuestionScoringTypeEnum || (this.QuestionScoringTypeEnum = {}, this
            .QuestionScoringTypeEnum.SURVEY = 0, this.QuestionScoringTypeEnum.PRETEST = 1, this
            .QuestionScoringTypeEnum.GRADED = 2), this.m_scoringType = this.QuestionScoringTypeEnum.SURVEY, !0 ==
        this.getIsPretest() ? this.m_scoringType = this.QuestionScoringTypeEnum.PRETEST : !0 == this.getIsSurvey() ?
        this.m_scoringType = this.QuestionScoringTypeEnum.SURVEY : this.m_scoringType =
        this.QuestionScoringTypeEnum.GRADED, this.verbose = !1, this.shouldAddToTotal = !0, this.m_answersDisabled =
        this.m_isShuffled = !1, this.m_answerOrderArray = [], this.m_eachAnswerIsSeparateInteraction = this
        .m_isStarted = this.m_areButtonsDisabled = !1
};
cp.Question.prototype = {
    shouldDisableOptions: function() {
        var a = !1,
            c = this.m_quizController.GetIsInReviewMode(),
            a = this.m_quizController.GetIsSubmitAll() && !this.getIsPretest(),
            a = !this.m_quizController.GetIsAttemptFinished() && this.getWasJudged() && !a;
        this.getIsPretest() && this.m_quizController.GetIsPretestQuestionsDisabled() && (a = !0);
        return this.m_answersDisabled = a || c
    },
    showCustomReviewArea: function() {
        return !1
    },
    getIsLastPretestQuestion: function() {
        if (!this.getIsPretest()) return !1;
        var a = this.m_slideIndex + 1;
        return a >=
            cp.movie.stage.slides.length ? !0 : this.m_quizController ? (a = this.m_quizController
                .GetQuestionsOnSlide(a)) && 0 < a.length ? !a[0].getIsPretest() : !0 : !1
    },
    getAnswerOptions: function() {
        var a = [],
            c = this.questionData.ao;
        if (!c || 0 >= c.length) return "";
        for (var b = 0; b < c.length; ++b) {
            var d = c[b].split(":");
            a.push(d[0])
        }
        return a
    },
    setShouldAddToTotal: function(a) {
        this.shouldAddToTotal = a
    },
    setQuestionStatus: function(a) {
        this.m_QuestionStatus = a
    },
    getQuestionStatus: function() {
        return this.m_QuestionStatus
    },
    getQuestionScoringType: function() {
        return this.m_scoringType
    },
    getIsCorrect: function() {
        return this.getQuestionStatus() == this.QuestionStatusEnum.CORRECT
    },
    getIsPartiallyCorrect: function() {
        return this.getQuestionStatus() == this.QuestionStatusEnum.PARTIAL_CORRECT
    },
    getIsIncomplete: function() {
        return this.getQuestionStatus() == this.QuestionStatusEnum.INCOMPLETE
    },
    getIsIncorrect: function() {
        return this.getQuestionStatus() == this.QuestionStatusEnum.INCORRECT
    },
    registerSubmitButton: function(a) {
        this.submitButtonDivElement = a;
        this.m_areButtonsDisabled ? this.disableButton(this.submitButtonDivElement) :
            this.enableButton(this.submitButtonDivElement)
    },
    registerSubmitAllButton: function(a) {
        this.submitAllButtonDivElement = a;
        this.m_areButtonsDisabled ? this.disableButton(this.submitAllButtonDivElement) : this.enableButton(this
            .submitAllButtonDivElement)
    },
    registerSkipButton: function(a) {
        this.skipButtonDivElement = a;
        this.shouldDisableSkipButton() ? (cp.disable(this.skipButtonDivElement.id), a = cp.D[this
                .skipButtonDivElement.id], a.shouldShowDisabledState = !0, this.skipButtonDivElement
            .disabled = "disabled", this.skipButtonDivElement.tabIndex = -1, this.skipButtonDivElement
            .onclick = "", cp.removeGestureEvent(this.skipButtonDivElement, cp.GESTURE_EVENT_TYPES.TAP),
            this.skipButtonDivElement.style.cursor = "default") : (cp.enable(this.skipButtonDivElement.id),
            a = cp.D[this.skipButtonDivElement.id], a.shouldShowDisabledState = !1, this
            .skipButtonDivElement.disabled = !1, this.skipButtonDivElement.style.cursor = "pointer", cp
            .registerGestureEvent(this.skipButtonDivElement, cp.GESTURE_EVENT_TYPES.TAP, cp.QuizButtonCH))
    },
    registerClearButton: function(a) {
        this.clearButtonDivElement =
            a;
        this.m_areButtonsDisabled ? this.disableButton(this.clearButtonDivElement) : this.enableButton(this
            .clearButtonDivElement)
    },
    registerBackButton: function(a) {
        this.backButtonDivElement = a;
        this.enableButton(this.backButtonDivElement)
    },
    shouldShowSuccessCaption: function() {
        return this.questionData.osct
    },
    shouldShowPartialCorrectCaption: function() {
        return this.questionData.spcc
    },
    shouldShowFailureCaption: function() {
        return this.questionData.ofct
    },
    shouldShowIncompleteCaption: function() {
        return this.questionData.sic
    },
    shouldShowRetryCaption: function() {
        return this.questionData.sfrc
    },
    shouldShowTimeOutCaption: function() {
        return this.questionData.stfc
    },
    getSuccessCaptionName: function() {
        return this.questionData.osc
    },
    getSuccessFeedback: function() {
        var a = {};
        a.name = this.getSuccessCaptionName();
        a.action = this.getSuccessAction();
        a.captionToBeShown = this.shouldShowSuccessCaption();
        return a
    },
    getPartialCorrectCaptionName: function() {
        return this.questionData.opcc
    },
    getPartialCorrectFeedback: function() {
        var a = {};
        a.name = this.getPartialCorrectCaptionName();
        a.action = this.getSuccessAction();
        a.captionToBeShown = this.shouldShowPartialCorrectCaption();
        return a
    },
    getRetryCaptionName: function() {
        return this.questionData.frc
    },
    getRetryFeedback: function() {
        var a = {};
        a.name = this.getRetryCaptionName();
        a.action = "";
        a.captionToBeShown = this.shouldShowRetryCaption();
        return a
    },
    getFailureCaptionName: function(a) {
        return this.incorrectFeedbackCaptions && 0 == this.incorrectFeedbackCaptions.length || a >= this
            .incorrectFeedbackCaptions.length || 0 > a ? void 0 : this.incorrectFeedbackCaptions[a]
    },
    getFailureFeedback: function(a) {
        var c = {};
        c.name = this.getFailureCaptionName(a);
        this.currentAttempt >= this.numberOfAttempts ? (cp.verbose && cp.log(
            "Last Attempt. Setting action now."), c.action = this.getFailureAction()) : (cp.verbose && cp
            .log("Current Attempt :" + this.currentAttempt), c.action = "");
        c.captionToBeShown = this.shouldShowFailureCaption();
        return c
    },
    getIncompleteCaptionName: function() {
        return this.questionData.oic
    },
    getIncompleteFeedback: function() {
        var a = {};
        a.name = this.getIncompleteCaptionName();
        a.action =
            "";
        a.captionToBeShown = this.shouldShowIncompleteCaption();
        return a
    },
    getTimeOutCaptionName: function() {
        return this.questionData.tfcn
    },
    getTimeOutFeedback: function() {
        var a = {};
        a.name = this.getTimeOutCaptionName();
        a.action = "cpCmndResume = 1;";
        a.captionToBeShown = this.shouldShowTimeOutCaption();
        return a
    },
    getSuccessAction: function() {
        return this.questionData.oca
    },
    getFailureAction: function() {
        return this.questionData.ofa
    },
    getSlideIndex: function() {
        return this.m_slideIndex
    },
    resetQuestionData: function() {
        this.score =
            this.latency = 0;
        this.wasJudged = !1;
        this.m_QuestionStatus = this.QuestionStatusEnum.INCOMPLETE;
        this.setCurrentAttempt(0);
        this.enableQuizButtons();
        this.m_answersDisabled = !1;
        this.m_questionScore && this.m_questionScore.resetScore()
    },
    setActionToBeExecuted: function(a) {
        this.actionToBeExecuted = a
    },
    getActionToBeExecuted: function() {
        return this.actionToBeExecuted
    },
    getName: function() {
        return this.questionObjName
    },
    startLatency: function() {
        if (!this.getWasJudged() && !this.m_quizController.GetIsInReviewMode()) {
            this.latency =
                0;
            var a = this;
            this.latencyTimer = setInterval(function() {
                a.latencyTimer += 100
            }, 100);
            this.timeLimit && 0 < this.timeLimit && (this.timer = setTimeout(function() {
                a.verbose && cp.log("Calling Timeout");
                a.disableAllOptions();
                a.stopLatencyTimer();
                a.autoJudge()
            }, this.timeLimit))
        }
    },
    stopLatencyTimer: function() {
        this.timer && (this.verbose && cp.log("Clearing Timeout"), clearTimeout(this.timer));
        this.latencyTimer && clearInterval(this.latencyTimer)
    },
    getLatency: function() {
        return this.latency = void 0 != this.startTime && 0 != this.startTime &&
            void 0 != this.endTime && 0 != this.endTime ? this.endTime.getTime() - this.startTime.getTime() -
            this.pausedMsecs : 0
    },
    getAssociatedObjName: function() {
        return this.associatedObjName
    },
    getQuestionType: function() {
        return this.questionType = this.questionData.qtp
    },
    getAnswerGroupName: function() {
        return this.answerGroupName = this.questionData.gn
    },
    getQuestionText: function() {
        this.questionText = this.questionData.qt;
        if (cp.responsive) {
            var a = cp.D[this.questionTextCanvasName];
            if (a && (a = cp.D[a.dn])) this.questionText = a.rpvt[cp.responsiveWidths[cp.responsiveWidths
                .length -
                1]].text
        }
        return this.questionText
    },
    getSelectedAnswerTextList: function() {
        return ""
    },
    getExpectedCorrectAnswerTextList: function() {
        return ""
    },
    getAnswerTexts: function() {
        var a = {};
        a.learner_response = this.getSelectedAnswerTextList("-");
        a.correct_response = this.getExpectedCorrectAnswerTextList("-");
        return a
    },
    getDescriptionText: function() {
        var a = {};
        a.questionText = this.getQuestionText();
        a.answerTexts = this.getAnswerTexts();
        return a
    },
    getProgressString: function(a) {
        this.progressString = "";
        if (!this.m_quizController) return this.progressString;
        var c = this.getQuestionNumberInQuiz() + 1,
            b = this.m_quizController.GetNumberOfQuestionsInQuiz(),
            d = this.m_quizController.GetGraphManager();
        d && (c = d.getQuestionSlideProgressNumber(this.m_slideIndex), b = d.getNumQuestions());
        if ("NaN" == c) return this.progressString;
        var d = this.m_quizController.GetProgressType(),
            e = this.m_quizController.GetForceAbsoluteProgressType();
        e && (d = 1);
        0 == d ? "NaN" == b && (a = a.substr(0, a.indexOf("%d") + 2)) : e && (a = a.substr(0, a.indexOf("%d") +
            2));
        return this.progressString = a.replace("%d", c)
            .replace("%d",
                b)
    },
    getAnsweredCorrectly: function() {
        var a = this.getQuestionStatus();
        return a == this.QuestionStatusEnum.CORRECT || a == this.QuestionStatusEnum.PARTIAL_CORRECT ? !0 : !1
    },
    getIsTracked: function() {
        return this.isTracked = this.questionData.it
    },
    getIsSurvey: function() {
        return this.isSurvey = this.questionData.is
    },
    getIsPretest: function() {
        return this.questionData.ipq
    },
    getNumberOfAttempts: function() {
        return this.numberOfAttempts
    },
    getCurrentAttempt: function() {
        return this.currentAttempt
    },
    setCurrentAttempt: function(a) {
        var c =
            this.m_quizController && this.m_quizController.GetIsSubmitAll() && !this.m_quizController
            .GetIsInReviewMode();
        this.m_questionScore && (this.m_questionScore.m_numTries = a);
        this.currentAttempt = a;
        if (this.currentAttempt >= this.numberOfAttempts && !c && (this.disableAllOptions(), this
                .submitButtonDivElement && (this.submitButtonDivElement.enable = !1), this.clearButtonDivElement
                )) this.clearButtonDivElement.enable = !1
    },
    getQuestionNumberInQuiz: function() {
        return this.questionNumberInQuiz = this.questionData.qnq
    },
    getObjectiveId: function() {
        return this.objectiveID =
            this.questionData.oid
    },
    getInteractionId: function() {
        this.interactionID = this.questionData.iid;
        var a = this.m_quizController.GetPlaybackController(),
            c = a.GetLMSType();
        c && (c = c.toUpperCase());
        if (!a.IsRunningInConnect() && ("SCORM12" == c || "AICC" == c)) a = this.getQuestionText(), this
            .interactionID = this.interactionID + "_" + a;
        return this.interactionID
    },
    getWeighting: function() {
        return this.weighting = this.questionData.w
    },
    getNegativeWeight: function() {
        return this.questionData.nw
    },
    getInteractionType: function() {
        return this.interactionType =
            this.questionData.itp
    },
    getScore: function() {
        return this.score
    },
    setScore: function(a) {
        this.score = this.shouldAddToTotal ? a : 0
    },
    getSelectedAnswerChoices: function() {
        this.getSelectedAnswersAsString()
    },
    getSelectedAnswersAsString: function() {
        var a = "";
        if (!this.m_selectedAnswersArr || 0 >= this.m_selectedAnswersArr.length) return a;
        for (var a = a + this.m_selectedAnswersArr[0], c = 1; c < this.m_selectedAnswersArr.length; ++c) a +=
            ";", a += this.m_selectedAnswersArr[c];
        return a
    },
    setSelectedAnswers: function(a) {
        this.m_selectedAnswersArr = [];
        this.m_selectedAnswersArr.push(a)
    },
    getAnswerOrder: function() {
        if (!this.answerOptions || 0 >= this.answerOptions.length) return "";
        for (var a = "", a = this.answerOptions[0], c = 1; c < this.answerOptions.length; ++c) a += ";", a +=
            this.answerOptions[c];
        return a
    },
    setAnswerOrder: function(a) {
        a && !(0 >= a.length) && (this.answerOptions = a.split(";"), this.m_answerOrderArray = this
            .answerOptions.slice(0))
    },
    getAnswerID: function(a) {
        a = cp(cp.D[a.parentNode.parentNode.id].answerTextCanvasHolder)
            .firstChild;
        return cp.D[a.id].aid
    },
    getExpectedCorrectAnswerIDList: function() {
        return this.questionData.cal
    },
    getQuestionLevelScoredPoints: function() {
        var a = 0;
        return a = this.getAnsweredCorrectly() ? this.getWeighting() : this.getNegativeWeight()
    },
    getQuestionScoredPoints: function() {
        return this.getIsSurvey() || !this.wasJudged ? 0 : this.getQuestionLevelScoredPoints()
    },
    getChosenAnswerFeedback: function() {},
    getFeedbackToShow: function(a, c) {
        var b = {},
            b = this.getChosenAnswerFeedback();
        if (c && this.shouldShowTimeOutCaption()) return b = this.getTimeOutFeedback();
        if (this.getIsIncomplete() && !a && this.shouldShowIncompleteCaption()) return b =
            this.getIncompleteFeedback();
        if (b) return b;
        this.getAnsweredCorrectly() ? b = this.getIsPartiallyCorrect() ? this.getPartialCorrectFeedback() : this
            .getSuccessFeedback() : this.shouldShowRetryCaption() && this.currentAttempt < this
            .numberOfAttempts ? b = this.getRetryFeedback() : this.getIsIncomplete() && a || this
            .currentAttempt >= this.numberOfAttempts ? (b = 0, this.incorrectFeedbackCaptions && (b = this
                .incorrectFeedbackCaptions.length - 1), b = this.getFailureFeedback(b)) : b = this
            .currentAttempt <= this.incorrectFeedbackCaptions.length ?
            this.getFailureFeedback(this.currentAttempt - 1) : void 0;
        return b
    },
    hideLastFeedback: function() {
        this.lastFeedbackShown && cp.hide(this.lastFeedbackShown.name);
        this.lastFeedbackShown = void 0
    },
    saveAnswerOrder: function() {},
    pauseQuestion: function() {
        if (this.state == this.StateEnum.PLAYING) {
            this.state = this.StateEnum.PAUSED;
            this.stopLatencyTimer();
            var a = new Date;
            this.timeBeforePause = this.startTime.getMilliseconds() - a.getMilliseconds();
            this.pausedMsecs += this.timeBeforePause;
            this.timeLimit -= this.timeBeforePause;
            this.timeBeforePause =
                0
        }
    },
    resumeQuestion: function() {
        this.state == this.StateEnum.PAUSED && (this.state = this.StateEnum.PLAYING, !this.m_quizController
            .GetIsInReviewMode() && 0 < this.timeLimit && this.startLatency())
    },
    endQuestion: function(a) {
        this.verbose && cp.log("End Question Called");
        if (this.state == this.StateEnum.PLAYING || this.state == this.StateEnum.PAUSED) {
            this.state = this.StateEnum.ENDED;
            this.stopLatencyTimer();
            var c = this.m_quizController && this.m_quizController.GetIsSubmitAll() && !this.getIsPretest(),
                b = this.m_quizController && this.m_quizController.GetIsInReviewMode();
            c && !b && this.checkAndSetQuestionStatus();
            b || this.saveAnswerOrder();
            var d = this.getAnsweredCorrectly();
            this.endTime = new Date;
            this.m_questionScore.m_endTime = this.endTime;
            this.m_questionScore.m_answerScores = this.getAnswerScores();
            var e = this.getIsIncomplete();
            this.m_questionScore.m_answersIncomplete = a || b || this.m_answersDisabled || c ? e : !0;
            this.m_questionScore.m_answeredCorrectly = this.getAnsweredCorrectly();
            this.m_questionScore.m_isShuffled = this.m_isShuffled;
            this.m_questionScore.m_partiallyCorrect = this.getIsPartiallyCorrect();
            a ? (this.wasJudged = this.m_questionScore.m_wasJudged = a, this.disableAllOptions(), this
                .disableQuizButtons(), this.setHandledClick(!0), this.stopLatencyTimer(), b = this
                .getQuestionScoredPoints(), this.setScore(b), this.m_questionScore.m_scoredPoints = this
                .getScore(), this.getIsPretest() || (d ? this.m_quizController && cp.setCpQuizScopeSlide(
                    this.m_quizController.GetNextQuestionSlideNumber()) : cp.setCpQuizScopeSlide(
                    cpInfoCurrentSlideIndex))) : (this.getIsPretest() || cp.setCpQuizScopeSlide(
                cpInfoCurrentSlideIndex), c ? (this.m_questionScore.m_wasJudged = !e, this
                .setCurrentAttempt(1), this.wasJudged = !this.getIsIncomplete(), b = this
                .getQuestionScoredPoints(), this.setScore(b), this.m_questionScore.m_scoredPoints = this
                .getScore()) : this.getWasJudged() || (this.wasJudged = this.m_questionScore
                .m_wasJudged = !1, this.setScore(0), this.m_questionScore.m_scoredPoints = 0));
            d && (c || this.disableAllOptions(), this.getIsPretest() && (cpQuizInfoPreTestTotalCorrectAnswers +=
                1), cpQuizInfoTotalCorrectAnswers += 1);
            cpQuizInfoAnswerChoice = this.getSelectedAnswerChoices();
            this.getIsSurvey() ?
                cpQuizInfoLastSlidePointScored = 0 : (cpQuizInfoNoQuestionsPerQuiz += 1,
                    cpQuizInfoLastSlidePointScored = this.getQuestionScoredPoints());
            d = this.getDescriptionText();
            a && (this.getIsTracked() && !this.m_quizController.GetIsInReviewMode()) && (this
                .m_eachAnswerIsSeparateInteraction ? this.shouldReportAnswers && this
                .sendInteractionDataForEachAnswer && this.sendInteractionDataForEachAnswer(d) : this
                .shouldReportAnswers && this.m_quizController.SendInteractionData(this.getQuestionScore(),
                    d), a = this.m_quizController.GetScore(),
                d = this.m_quizController.GetMaxScore(), b = this.m_quizController.GetMinScore(), cp.em
                .fireEvent("SCORE", {
                    score: a,
                    maxScore: d,
                    minScore: b,
                    quizId: cp.D.quizzingData.quizID
                }));
            a = this.m_quizController.GetPlaybackController();
            d = a.GetSendCourseDataWithInteractionData();
            this.wasJudged && (d && !c) && ((c = a.GetLMSType()) && c.toUpperCase(), a.GetIsTracked(), a
                .SendCourseData(!1))
        }
    },
    autoJudge: function() {
        this.verbose && cp.log("inside autojudge");
        this.setCurrentAttempt(this.numberOfAttempts - 1);
        this.judge(!0, !0)
    },
    checkAndSetQuestionStatus: function() {},
    judge: function(a, c) {
        this.verbose && cp.log("inside judge");
        this.saveAnswerOrder();
        this.hideLastFeedback(!1);
        var b = this.shouldShowIncompleteCaption(),
            d = this.getIsSurvey(),
            e;
        this.checkAndSetQuestionStatus();
        d ? (this.verbose && cp.log("inside judge : isSurvey"), this.getIsIncomplete() ? (this.verbose && cp
                .log("inside judge : incomplete"), e = this.getFeedbackToShow(a, c)) : (this
                .setCurrentAttempt(this.currentAttempt + 1), this.endQuestion(!0), e = this
                .getFeedbackToShow(a, !1))) : this.currentAttempt < this.numberOfAttempts &&
            (this.getIsIncomplete() && !a && b ? e = this.getFeedbackToShow(a, c) : (this.setCurrentAttempt(this
                    .currentAttempt + 1), e = this.getFeedbackToShow(a, c), this.currentAttempt >= this
                .numberOfAttempts || this.getAnsweredCorrectly() ? this.endQuestion(!0) : (this
                    .getIsIncorrect() && this.setQuestionStatus(this.QuestionStatusEnum.INCOMPLETE), b =
                    this.m_quizController.GetPlaybackController(), b
                .GetSendCourseDataWithInteractionData() && ((d = b.GetLMSType()) && (d = d.toUpperCase()), b
                        .GetIsTracked() && "EMAIL" != d && "ACROBAT" != d && "INTERNALSERVER" !=
                        d && "AICC" != d ? b.SendCourseData(!0) : b.SendCourseData(!1)))));
        if (e && (cp.D[e.name] && e.captionToBeShown ? this.showFeedbackCaptionAndDoAction(e) : cp.movie
                .executeAction(e.action), this.m_quizController && this.getIsLastPretestQuestion() && (this
                    .currentAttempt >= this.numberOfAttempts || this.getAnsweredCorrectly()))) this
            .m_quizController.m_PretestQuestionsDisabled = !0;
        e = this.getQuestionEventData();
        cp.em.fireEvent("CPQuestionSubmit", e)
    },
    getQuestionEventData: function() {
        var a = {};
        switch (this.getQuestionScoringType()) {
            case this.QuestionScoringTypeEnum.GRADED:
                a.Name =
                    "GradedQuestion";
                break;
            case this.QuestionScoringTypeEnum.SURVEY:
                a.Name = "SurveyQuestion";
                break;
            case this.QuestionScoringTypeEnum.PRETEST:
                a.Name = "PretestQuestion";
                break;
            default:
                a.Name = "GradedQuestion"
        }
        var c = this.getInteractionType(),
            b = this.getDescriptionText(),
            d = this.getCorrectAnswerAsString(),
            e = this.getChosenAnswerAsString();
        switch (c) {
            case "sequencing":
                d = b.answerTexts.correct_response.split("-")
                    .join(",");
                e = b.answerTexts.learner_response.split("-")
                    .join(",");
                break;
            case "likert":
                d = e = b.answerTexts.learner_response
        }
        a = {
            questionType: "hotspot" == c ? "hot-spot" : c,
            objectiveID: this.getObjectiveId(),
            questionScoringType: a,
            questionMaxScore: this.getWeighting(),
            correctAnswer: String(d),
            questionMaxAttempts: this.numberOfAttempts,
            selectedAnswer: String(e),
            slideNumber: this.m_slideIndex,
            quizName: "QuizName",
            interactionID: this.getInteractionId(),
            questionAttempts: this.currentAttempt,
            questionNumber: this.getQuestionNumberInQuiz(),
            questionAnswered: !1 == this.getIsIncomplete(),
            questionScore: this.getScore(),
            reportAnswers: this.shouldReportAnswers,
            questionAnsweredCorrectly: this.getAnsweredCorrectly(),
            infiniteAttempts: 9999 == this.numberOfAttempts,
            interactionType: this.getInteractionType(),
            weighting: this.getWeighting()
        };
        cp.IsRunningInACAP && (a.descriptionData = b);
        return a
    },
    showFeedbackCaptionAndDoAction: function(a) {
        function c() {
            b.parentNode.removeChild(b);
            cp.hide(d);
            h.setHandledClick(f);
            cp.movie.executeAction(a.action)
        }
        var b, d = a.name,
            e = cp.D[d].mdi;
        this.hideLastFeedback(!0);
        var f;
        this.slide && (f = cp.D[this.slide].handled);
        this.setHandledClick(!1);
        this.lastFeedbackShown =
            a;
        var h = this,
            g = document.getElementById(d);
        cp.moveDivElemToTop(g);
        e = document.getElementById(e);
        void 0 != e && cp.moveRewrapElemToTop(e.parentNode);
        e = cp.D[d];
        g = e.sc;
        g = new cp.Shortcut(g.k, g.c ? !0 : !1, g.s ? !0 : !1, g.a ? !0 : !1);
        (e = new cp.KeyHandler(function(a) {
            a && c()
        }, g, e.from, e.to, "")) && cp.movie.stage.addKeyHandler(e);
        cp.show(d);
        e = cp.movie.stage.getSlideDiv();
        b = cp.newElem("div");
        cp.fixWebkitScaling(b);
        b.id = "feedbackClickDiv";
        b.style.left = "0px";
        b.style.top = "0px";
        b.style.width = "100%";
        b.style.height = "100%";
        b.style.cursor =
            "pointer";
        b.style.backgroundColor = "#FFFFFF";
        b.style.opacity = 0;
        b.style.display = "block";
        b.style.position = "absolute";
        b.style.WebkitTapHighlightColor = "rgba(0,0,0,0)";
        e.parentNode.appendChild(b);
        cp.registerGestureEvent(b, cp.GESTURE_EVENT_TYPES.TAP, c);
        cp.registerGestureEvent(b, cp.GESTURE_EVENT_TYPES.DRAG_START, cp.m_gestureHandler.ondragstarthandler);
        cp.registerGestureEvent(b, cp.GESTURE_EVENT_TYPES.DRAG, cp.m_gestureHandler.ondraghandler);
        cp.registerGestureEvent(b, cp.GESTURE_EVENT_TYPES.DRAG_END, cp.m_gestureHandler.ondragendhandler);
        b.style.zIndex = 1E4
    },
    clearButtonClickHandler: function() {
        this.clearAnswers()
    },
    moveForward: function() {
        if (this.skipButtonDivElement && !this.skipButtonDivElement.disabled && this.m_quizController) {
            var a = this.m_quizController.GetIsInReviewMode();
            if (!1 == a && (this.getIsPretest() || !this.m_quizController || !this.m_quizController
                    .GetIsSubmitAll())) {
                var c = this.getQuestionEventData();
                cp.em.fireEvent("CPQuestionSkip", c)
            }
            c = this.m_quizController && this.m_quizController.GetIsSubmitAll();
            !this.getWasJudged() && !c && this.clearAnswers();
            if (cpInfoCurrentSlideIndex == cpInfoSlideCount) cpCmndResume = !0;
            else if (this.getIsLastPretestQuestion()) this.m_quizController && this.m_quizController
                .ExecutePretestAction(this.getSlideIndex());
            else {
                if ((a = !1 == a && !(this.getIsPretest() || c)) && this.m_quizController)
                    if (a = this.m_quizController.GetGraphManager(), void 0 != a) {
                        c = a.getNextSlideList(this.getSlideIndex());
                        if (1 == c.length) cpCmndGotoSlideAndResume = c[0];
                        else
                            for (var c = a.getBranchHistory(), b = c.length - 1; 0 <= b; --b) {
                                var d = c[b];
                                if (d == this.getSlideIndex() && b !=
                                    c.length - 1) {
                                    var e = c[b + 1];
                                    if (a.getIsJumpValid(d, e)) {
                                        cpCmndGotoSlideAndResume = e;
                                        break
                                    }
                                }
                            }
                        return
                    } cpCmndNextOnReview = !0
            }
        }
    },
    moveBackward: function() {
        if (this.backButtonDivElement && !this.backButtonDivElement.disabled && this.m_quizController) {
            var a = this.m_quizController.GetIsInReviewMode(),
                c = this.m_quizController && this.m_quizController.GetIsSubmitAll();
            if (!1 == a && this.m_quizController && (a = this.m_quizController.GetGraphManager(), void 0 !=
                a)) {
                for (var b = a.getBranchHistory(), d = b.length - 1; 0 <= d; --d) {
                    var e = b[d];
                    if (e ==
                        this.getSlideIndex() && 0 != d) {
                        var f = b[d - 1];
                        if (a.getIsJumpValid(f, e)) {
                            !this.getWasJudged() && !c && this.clearAnswers();
                            cpCmndGotoSlideAndResume = f;
                            break
                        }
                    }
                }
                return
            }!this.getWasJudged() && !c && this.clearAnswers();
            cpCmndPreviousOnReview = !0
        }
    },
    skipButtonClickHandler: function(a) {
        cp.D[a.id] && this.moveForward()
    },
    backButtonClickHandler: function(a) {
        cp.D[a.id] && this.moveBackward()
    },
    clearAnswers: function() {},
    disableAllOptions: function() {},
    getIsStarted: function() {
        return this.m_isStarted
    },
    startQuestion: function() {
        if (this.m_quizController) {
            void 0 ==
                this.m_questionScore && (this.m_questionScore = new cp.QuestionScore);
            var a = this.m_quizController.GetIsInReviewMode(),
                c = this.m_quizController.GetGoToQuizScopeActionExecuted();
            c && !a && (this.getIsPretest() || this.resetQuestionData(), this.m_quizController
                .SetGoToQuizScopeActionExecuted(!1));
            this.verbose && cp.log("current state : " + this.state);
            if (this.state == this.StateEnum.INIT || this.state == this.StateEnum.ENDED) {
                this.verbose && cp.log("startQuestion");
                this.state = this.StateEnum.PLAYING;
                this.updateQuizProgressIndicator();
                if (a || this.getWasJudged()) {
                    var b = c && !this.getIsPretest();
                    if (a || !b) this.disableAllOptions(), this.disableQuizButtons();
                    a && this.canShowReviewIcons() && this.markQuestionFeedback()
                } else this.startLatency(), this.startTime = new Date, 0 == this.m_questionScore.m_numTries && (
                    this.m_questionScore.m_startTime = this.startTime);
                a = this.m_quizController.GetIsSubmitAll() && !this.getIsPretest();
                if (0 == this.getCurrentAttempt() && !a || this.getIsIncomplete())
                    if (this.getCurrentAttempt() < this.getNumberOfAttempts() && (!this.m_quizController
                            .GetIsPretestQuestionsDisabled() ||
                            !this.getIsPretest())) c || this.clearAnswers();
                cpQuizInfoPointsPerQuestionSlide = this.getWeighting();
                cpQuizInfoNegativePointsOnCurrentQuestionSlide = this.getNegativeWeight();
                cpQuizInfoQuestionPartialScoreOn = this.isPartialScore;
                void 0 != this.timeLimit && (cpQuizInfoQuestionSlideTiming = this.timeLimit / 1E3);
                cpQuizInfoAnswerChoice = "";
                cpQuizInfoQuestionSlideType = this.getInteractionType();
                cpQuizInfoMaxAttemptsOnCurrentQuestion = this.numberOfAttempts;
                c = this.m_quizController.GetPassingScore();
                a = this.m_quizController.GetMaxScore();
                cpQuizInfoQuizPassPoints = c;
                0 != a && (cpQuizInfoQuizPassPercent = parseInt(100 * c / a))
            }
            this.m_isStarted = !0
        }
    },
    markQuestionFeedback: function() {
        if (this.getWasJudged() && this.questionTextCanvasName) {
            var a = cp.D[this.questionTextCanvasName],
                c = "re-" + this.questionTextCanvasName,
                b = cp.newElem("img");
            cp.fixWebkitScaling(b);
            var d = this.getQuestionStatus();
            d == this.QuestionStatusEnum.CORRECT ? (b.src = cp.movie.im.m_projectImages[
                    "assets/htmlimages/correct_question_normal.png"].nativeImage.src, b.setAttribute(
                    "tabIndex", "-1"),
                void 0 != this.m_correctFeedbackText && (b.setAttribute("aria-label", this
                    .m_correctFeedbackText), cp.removeAccessibilityOutline(b), b.setAttribute("role",
                    "img"))) : d == this.QuestionStatusEnum.PARTIAL_CORRECT ? (b.src = cp.movie.im
                .m_projectImages["assets/htmlimages/partial_correct_question_normal.png"].nativeImage.src, b
                .setAttribute("tabIndex", "-1"), void 0 != this.m_partialCorrectFeedbackText && (b
                    .setAttribute("aria-label", this.m_partialCorrectFeedbackText), cp
                    .removeAccessibilityOutline(b), b.setAttribute("role",
                        "img"))) : (b.src = cp.movie.im.m_projectImages[
                    "assets/htmlimages/incorrect_question_normal.png"].nativeImage.src, void 0 != this
                .m_incorrectDisplayChosenText && (void 0 != this.m_incorrectDisplayCorrectText &&
                    "Hotspot" != this.getQuestionType()) && (d = "".concat(this
                        .m_incorrectDisplayChosenText, " ", this.getChosenAnswerAsStringForReview(), " ",
                        this.m_incorrectDisplayCorrectText, " ", this.getCorrectAnswerAsStringForReview()),
                    b.setAttribute("tabIndex", "-1"), b.setAttribute("aria-label", d), cp
                    .removeAccessibilityOutline(b),
                    b.setAttribute("role", "img")));
            a.sh && (d = a.sh.a, cp.applyShadow(b, a.sh.d * Math.cos(Math.PI * d / 180) + "px " + a.sh.d * Math
                .sin(Math.PI * d / 180) + "px " + a.sh.b + "px " + cp.ConvertRGBToRGBA(a.sh.c, a.sh.o) +
                (a.sh.i ? " inset" : "")));
            b.style.left = "-30px";
            b.style.top = "0px";
            b.style.position = "absolute";
            document.getElementById(c)
                .appendChild(b)
        }
    },
    getWasJudged: function() {
        return this.wasJudged
    },
    setHandledClick: function(a) {
        this.slide && (cp.D[this.slide].handled = a)
    },
    enableButton: function(a) {
        void 0 != a && (cp.enable(a.id), a.disabled = !1, a.style.cursor = "pointer", cp.registerGestureEvent(a,
            cp.GESTURE_EVENT_TYPES.TAP, cp.QuizButtonCH))
    },
    enableQuizButtons: function() {
        this.verbose && cp.log("Enabling buttons");
        this.enableButton(this.submitButtonDivElement);
        this.enableButton(this.clearButtonDivElement);
        this.enableButton(this.submitAllButtonDivElement);
        this.m_areButtonsDisabled = !1
    },
    disableButton: function(a) {
        void 0 != a && (cp.disable(a.id), a.disabled = "disabled", a.tabIndex = -1, a.style.cursor = "default",
            a.onclick = "", cp.removeGestureEvent(a, cp.GESTURE_EVENT_TYPES.TAP))
    },
    disableQuizButtons: function() {
        this.verbose && cp.log("Disabling buttons");
        if (this.m_quizController) {
            var a = !0;
            this.m_quizController.GetIsSubmitAll() && !this.getIsPretest() && (!this.m_quizController
                .GetIsInReviewMode() && !this.m_quizController.m_submittedAllQuestions) && (a = !1);
            a && (this.disableButton(this.submitButtonDivElement), this.disableButton(this
                    .clearButtonDivElement), this.disableButton(this.submitAllButtonDivElement), this
                .m_areButtonsDisabled = !0)
        }
    },
    shouldDisableSkipButton: function() {
        var a = !1;
        if (this.m_quizController.GetIsInReviewMode()) return !1;
        var c = this.m_quizController.GetIsSubmitAll();
        if ("mustAnswer" == this.m_quizController.GetQuestionAdvanceType() && !c && !this.m_answersDisabled && !
            this.getIsPretest()) return !0;
        var b = this.getSlideIndex();
        if (0 <= b && (!this.getIsPretest() && !c) && (c = this.m_quizController.GetGraphManager(), void 0 !=
            c)) {
            var d = c.getNextSlideList(b);
            if (void 0 != d)
                if (1 == d.length) a = !1;
                else if (a = !0, d = c.getBranchHistory(), void 0 != d)
                for (var e = d.length - 1; 0 <= e; --e) {
                    var f = d[e];
                    if (f == b && e != d.length - 1 && c.getIsJumpValid(f, d[e + 1])) {
                        a = !1;
                        break
                    }
                }
        }
        return a
    },
    canShowReviewIcons: function() {
        return this.getIsSurvey() || this.getIsIncomplete() || !this.m_quizController || !this.m_quizController
            .GetIsInReviewMode() || this.getIsPretest() ? !1 : !0
    },
    getIsAttempted: function() {
        return 0 < this.currentAttempt
    },
    resumeSelectedAnswers: function(a) {
        if (void 0 != a) {
            this.m_selectedAnswersArr = [];
            for (var c = 0; c < a.length; ++c) "1" == a[c].m_chosenAnswer && this.m_selectedAnswersArr.push(a[c]
                .m_answerID)
        }
    },
    getChosenAnswerAsString: function() {
        return this.getSelectedAnswersAsString()
    },
    getCorrectAnswerAsString: function() {
        var a =
            this.getExpectedCorrectAnswerIDList();
        if (0 >= a.length) return "0";
        for (var c = a[0], b = 1; b < a.length; ++b) c += ";" + a[b];
        return c
    },
    getChosenAnswerAsStringForReview: function() {
        return ""
    },
    getCorrectAnswerAsStringForReview: function() {
        return ""
    },
    getAnswerScores: function() {
        var a = [];
        if (!this.answerOptions) return a;
        for (var c = this.m_selectedAnswersArr.slice(0), b = {}, d = 0; d < c.length; ++d) b[c[d]] = c[d];
        for (c = 0; c < this.answerOptions.length; ++c)
            if (d = cp.D[this.answerOptions[c]]) {
                var e = new cp.AnswerScore;
                e.m_answerID = d.aid;
                e.m_correctAnswer =
                    d.ic ? "1" : "0";
                e.m_chosenAnswer = b[e.m_answerID] ? "1" : "0";
                a.push(e)
            } return a
    },
    getQuestionScore: function() {
        if (this.m_questionScore) {
            this.m_questionScore.m_isPretestQuestion = this.getIsPretest();
            this.m_questionScore.m_slideNum = this.m_slideIndex;
            this.m_questionScore.m_questionNumInQuiz = this.getQuestionNumberInQuiz();
            this.getQuestionStatus();
            this.m_questionScore.m_numTries = this.getCurrentAttempt();
            this.m_questionScore.setinteractionType(this.getInteractionType());
            this.setQuestionSpecificScoreProperties(this.m_questionScore.m_questionSpecificScore);
            this.m_questionScore.m_interactionID = this.getInteractionId();
            this.m_questionScore.m_objectiveID = this.getObjectiveId();
            this.m_questionScore.m_chosenAnswersAsString = this.getChosenAnswerAsString();
            this.m_questionScore.m_isCorrectAsString = this.getAnsweredCorrectly() ? "C" : "W";
            this.m_questionScore.m_correctAnswersAsString = this.getCorrectAnswerAsString();
            this.m_questionScore.m_scoringType = this.getQuestionScoringType();
            this.m_questionScore.m_maxTries = this.numberOfAttempts;
            var a = this.getDescriptionText();
            this.m_questionScore.m_descriptionTexts =
                a;
            this.m_questionScore.m_weighting = this.getWeighting();
            addLeadingZero = function(a) {
                return 10 > a ? "0" + a : a
            };
            a = this.getLatency();
            this.m_questionScore.m_latencyAsSeconds = a;
            this.m_questionScore.m_latencyAsString = addLeadingZero(Math.round(a / 3600)) + ":" +
                addLeadingZero(Math.round(a % 3600 / 60)) + ":" + addLeadingZero(Math.round(a) % 60);
            a = new Date;
            this.m_questionScore.m_curDateAsString = addLeadingZero(a.getMonth() + 1) + "/" + addLeadingZero(a
                .getDate()) + "/" + a.getFullYear();
            this.m_questionScore.m_curDateAsString2 = a.getFullYear() +
                "/" + addLeadingZero(a.getMonth() + 1) + "/" + addLeadingZero(a.getDate());
            this.m_questionScore.m_curTimeAsSecondsSinceMidnight = 3600 * a.getHours() + 60 * a.getMinutes() + a
                .getSeconds();
            return this.m_questionScore
        }
    },
    getSlide: function() {
        return this.slide
    },
    updateQuizProgressIndicator: function() {
        if (this.m_quizController && !(0 >= this.m_quizController.GetQuestionsOnSlide(this.m_slideIndex)
                .length) && this.state == this.StateEnum.PLAYING) {
            var a = this.m_quizController.GetGraphManager();
            a && !this.getIsPretest() && (a.setQuestionSlideProgressNumber(this.m_slideIndex),
                this.m_quizController.GetFirstNonPretestQuestionEncountered() || (this.m_quizController
                    .SetFirstNonPretestQuestionEncountered(!0), 0 >= a.getCompletionBranch()
                    .length && this.m_quizController.SetForceAbsoluteProgressType(!0)))
        }
    },
    setQuestionSpecificScoreProperties: function(a) {
        if (void 0 != a) {
            var c = "",
                b = this.questionData.ao,
                d = this.m_answerOrderArray;
            if (d && b && 0 < d.length && d.length == b.length) {
                for (var e = {}, f = 0; f < b.length; ++f) {
                    var h = b[f].split(":");
                    e[h[0]] = h[1]
                }
                b = d[0];
                c += e[b];
                for (f = 1; f < d.length; ++f) b = d[f], c += ";" +
                    e[b]
            }
            a.m_answerOrderArrayAsString = c
        }
    },
    restoreFromQuestionSpecificScoreProperties: function(a) {
        if (void 0 != a && (a = a.m_answerOrderArrayAsString, !(void 0 == a || "" == a))) {
            var a = a.split(";"),
                c = this.questionData.ao,
                b = this.answerOptions;
            if (b && c && !(0 >= b.length || b.length != c.length || b.length != a.length)) {
                for (var b = {}, d = 0; d < c.length; ++d) {
                    var e = c[d].split(":");
                    b[e[1]] = e[0]
                }
                d = a[0];
                c = "" + b[d];
                for (e = 1; e < a.length; ++e) d = a[e], c += ";" + b[d];
                this.setAnswerOrder(c)
            }
        }
    }
};
cp.HotspotInput = function(a) {
    this.elementName = a.id;
    cp.HotspotInput.baseConstructor.call(this, a);
    this.id = this.getAttribute("id");
    this.type = this.getAttribute("type");
    this.answerID = this.getAttribute("aid");
    this.relatedQuestionSlide = this.getAttribute("rqs");
    cp.responsive && (this.responsiveCSS = this.getAttribute("css"));
    this.isCorrect = this.getAttribute("ic");
    this.value = "enabled";
    this.marked = this.getAttribute("mr");
    this.showHandCursorOnOver = this.getAttribute("cur");
    this.isDrawn = !1
};
cp.inherits(cp.HotspotInput, cp.HighlightBox);
cp.HotspotInput.prototype.getAttribute = function(a) {
    var c = cp.D[this.elementName];
    return !c ? null : c[a]
};
cp.HotspotInput.prototype.start = function(a) {
    this.drawIfNeeded();
    if (!this.effectIsStarted || a) this.updateEffects(this.hasEffect), this.effectIsStarted = !0
};
cp.HotspotInput.prototype.reset = function(a) {
    delete cp.ropMap[this.element.id];
    cp.HotspotInput.superClass.reset.call(this, a);
    this.isDrawn = !1;
    this.element.width = "0";
    this.element.height = "0";
    this.element.style.width = "0px";
    this.element.style.height = "0px";
    this.element.left = "0";
    this.element.top = "0";
    this.element.style.left = "0px";
    this.element.style.top = "0px";
    cp.responsive && (this.registered = !1)
};
cp.HotspotInput.prototype.linkedItemDrawingCompleteHandler = function(a) {
    if (cp.responsive && this.drawForResponsive) {
        var c = cp.getResponsiveCSS(this.responsiveCSS);
        a.cpData && a.cpData.uid && !(a.cpData.uid != c.lhID && a.cpData.uid != c.lvID) && (cp.verbose && cp.log(
            "drawing " + this.element.id + ", for " + a.cpData.uid), this.drawForResponsive(!0, cp
            .ReasonForDrawing.kLinkedToItemAppeared))
    }
};
cp.HotspotInput.prototype.subscribeToItemDrawingCompleteHandler = function() {
    if (cp.responsive && this.responsiveCSS) {
        var a = this,
            c = cp.getResponsiveCSS(this.responsiveCSS);
        c && (-1 != c.lhID || -1 != c.lvID) && cp.em.addEventListener(function(b) {
            a.linkedItemDrawingCompleteHandler(b)
        }, cp.ITEMDRAWINGCOMPLETEEVENT)
    }
};
cp.HotspotInput.prototype.drawForResponsive = function(a, c) {
    var b = cp.getQuestionObject(this.relatedQuestionSlide);
    if (!b || !b.getIsStarted() || !this.responsiveCSS) return !1;
    if (this.isDrawn && !a) return !0;
    var e = cp.getResponsiveCSS(this.responsiveCSS),
        d = !1,
        d = this.re || this.sh && !this.sh.i || this.fillOuterArea,
        f = void 0 != this.tr;
    if (this.currentCSS == e && !d && !f && !a) return !0;
    this.actualElement || (this.actualElement = this.element);
    f = this.actualElement.parentElement;
    cp.movie.stage.getSlideDiv();
    d = cp("re-" + this.actualElement.id);
    d || (this.zIndex = cp.D[this.parentDivName].zIndex, d = cp.newElem("div"), cp.fixWebkitScaling(d), d.id =
        "re-" + this.actualElement.id, this.element = cp.newElem("canvas"), cp
        .addRewrapObjectAsPerRestOfProjectItem(d), d.setAttribute("class", "cp-rewrap"), d.appendChild(this
            .element), d.style.zIndex = this.zIndex, this.parentDivName += "hotspot");
    f && (f.drawingBoard = d, f.bounds = this.bounds, f.drawingBoard.bounds = this.vbounds);
    cp.HotspotInput.superClass.drawForResponsive.call(this, a, c);
    this.currentCSS = e;
    if (cp.movie.playbackController &&
        (e = cp.movie.playbackController.GetQuizController())) return e.GetIsInReviewMode(), e = b
        .shouldDisableOptions(), this.group = b.getAnswerGroupName(), f.style.backgroundColor = "#FFFFFF", f
        .style.opacity = "0", f.style.cursor = this.showHandCursorOnOver ? "pointer" : "default", this
        .actualElement.name = this.group, e && (this.value = "disabled", f.style.cursor = "default", b
            .getWasJudged() && b.canShowReviewIcons() && this.isCorrect && (this.reviewIconImage || (this
                    .reviewIconImage = cp.newElem("img"), cp.fixWebkitScaling(this.reviewIconImage),
                    this.reviewIconImage.style.position = "absolute", this.sh && (e = this.sh.a, cp.applyShadow(
                        this.reviewIconImage, this.sh.d * Math.cos(Math.PI * e / 180) + "px " + this.sh.d *
                        Math.sin(Math.PI * e / 180) + "px " + this.sh.b + "px " + cp.ConvertRGBToRGBA(this
                            .sh.c, this.sh.o) + (this.sh.i ? " inset" : ""))), d.appendChild(this
                        .reviewIconImage), this.reviewIconImage.style.zIndex = this.zIndex), this
                .reviewIconImage.src = cp.movie.im.m_projectImages[
                    "assets/htmlimages/correct_answer_normal.png"].nativeImage.src, e = lOrigImageH = 15, f =
                this.actualElement.parentElement.getBoundingClientRect(),
                d = d.getBoundingClientRect(), this.reviewIconImage.style.left = f.left - d.left + (f.width /
                    2 - e / 2) + "px", this.reviewIconImage.style.top = f.top - d.top + (f.height / 2 -
                    lOrigImageH / 2) + "px")), this.actualElement.style.position = "absolute", this.isDrawn = !
        0, this.visible || (this.actualElement.style.visibility = "hidden"), b.registerHotspotInput(this, c),
        this.registered = !0
};
cp.HotspotInput.prototype.drawIfNeeded = function(a) {
    if (!cp.responsive || !this.drawForResponsive(a, cp.ReasonForDrawing.kRegularDraw))
        if ((a = cp.getQuestionObject(this.relatedQuestionSlide)) && !this.isDrawn && a.getIsStarted()) {
            var c = this.element,
                b = c.parentElement,
                e = cp.newElem("div");
            cp.fixWebkitScaling(e);
            e.id = "re-" + this.element.id;
            this.element = cp.newElem("canvas");
            cp.movie.stage.getSlideDiv();
            cp.addRewrapObjectAsPerRestOfProjectItem(e);
            e.setAttribute("class", "cp-rewrap");
            e.appendChild(this.element);
            this.zIndex =
                cp.D[this.parentDivName].zIndex;
            e.style.zIndex = this.zIndex;
            this.parentDivName += "hotspot";
            b && (b.drawingBoard = e, b.bounds = this.bounds, b.drawingBoard.bounds = this.vbounds);
            cp.HotspotInput.superClass.drawIfNeeded.call(this);
            if (cp.movie.playbackController) {
                var d = cp.movie.playbackController.GetQuizController();
                d && (d.GetIsInReviewMode(), d = a.shouldDisableOptions(), this.group = a.getAnswerGroupName(), b
                    .style.backgroundColor = "#FFFFFF", b.style.opacity = "0", b.style.cursor = this
                    .showHandCursorOnOver ? "pointer" : "default",
                    c.name = this.group, d && (this.value = "disabled", b.style.cursor = "default", a
                        .getWasJudged() && a.canShowReviewIcons() && this.isCorrect && (b = cp.newElem("img"),
                            cp.fixWebkitScaling(b), b.src = cp.movie.im.m_projectImages[
                                "assets/htmlimages/correct_answer_normal.png"].nativeImage.src, d =
                            lOrigImageH = 15, b.style.position = "absolute", b.style.left = parseFloat(c
                                .parentElement.style.left) - parseFloat(e.style.left) + parseFloat(c
                                .parentElement.style.width) / 2 - d / 2 + "px", b.style.top = parseFloat(c
                                .parentElement.style.top) - parseFloat(e.style.top) +
                            parseFloat(c.parentElement.style.height) / 2 - lOrigImageH / 2 + "px", this.sh && (
                                d = this.sh.a, cp.applyShadow(b, this.sh.d * Math.cos(Math.PI * d / 180) +
                                    "px " + this.sh.d * Math.sin(Math.PI * d / 180) + "px " + this.sh.b +
                                    "px " + cp.ConvertRGBToRGBA(this.sh.c, this.sh.o) + (this.sh.i ? " inset" :
                                        ""))), e.appendChild(b), b.style.zIndex = this.zIndex)), c.style
                    .position = "absolute", this.isDrawn = !0, this.visible || (c.style.visibility = "hidden"),
                    a.registerHotspotInput(this))
            }
        }
};
cp.HotspotQuestion = function(a, c) {
    cp.HotspotQuestion.baseConstructor.call(this, a, c);
    this.answerOptions = this.getAnswerOptions();
    this.questionData = cp.D[this.questionObjName];
    this.hotspotPositionList = [];
    this.hotspotGroupName = "hotspotImage_" + c;
    this.selectedHotspotPositions = "";
    this.m_selectedAnswersArr = [];
    this.verbose = !1
};
cp.inherits(cp.HotspotQuestion, cp.Question);
cp.HotspotQuestion.prototype.registerHotspotInput = function(a, c) {
    this.m_slideElem = cp.movie.stage.mainSlideDiv;
    this.m_slideContainerDivRect = this.m_slideElem.getBoundingClientRect();
    this.hotspotInputs || (this.hotspotInputs = {});
    this.hitTestingRects || (this.hitTestingRects = {});
    for (var b = 0; b < this.answerOptions.length; ++b) {
        var e = this.answerOptions[b];
        if (e == a.parentDivName) {
            this.hotspotInputs[e] = a;
            var d = document.getElementById(e),
                d = cp.getHitTestingRect(d.parentElement),
                f = 0,
                g = 0;
            cp.responsive ? (f -= this.m_slideContainerDivRect.left,
                g -= this.m_slideContainerDivRect.top) : (0 > this.m_slideContainerDivRect.left && (f -= this
                .m_slideContainerDivRect.left), 0 > this.m_slideContainerDivRect.top && (g -= this
                .m_slideContainerDivRect.top));
            d.minX += f;
            d.minY += g;
            d.maxX += f;
            d.maxY += g;
            d.minX /= this.m_slideElem.scaleFactor;
            d.minY /= this.m_slideElem.scaleFactor;
            d.maxX /= this.m_slideElem.scaleFactor;
            d.maxY /= this.m_slideElem.scaleFactor;
            cp.responsive && (d.minX = cp.getRoundedValue(100 * (d.minX / cp.project.clientWidth)), d.maxX = cp
                .getRoundedValue(100 * (d.maxX / cp.project.clientWidth)),
                d.minY = cp.getRoundedValue(100 * (d.minY / cp.project.clientHeight)), d.maxY = cp
                .getRoundedValue(100 * (d.maxY / cp.project.clientHeight)));
            this.hitTestingRects[e] = d
        }
    }
    for (b = 0; b < this.answerOptions.length; ++b)
        if (e = this.answerOptions[b], void 0 == this.hotspotInputs[e]) return;
    (!cp.responsive || c == cp.ReasonForDrawing.kRegularDraw) && this.drawHotspotsAgain()
};
cp.HotspotQuestion.prototype.resetQuestionData = function() {
    cp.HotspotQuestion.superClass.resetQuestionData.call(this);
    if (!this.m_quizController.GetGoToQuizScopeActionExecuted()) {
        this.m_selectedAnswersArr = [];
        this.selectedHotspotPositions = "";
        this.resetHotspotPositionList();
        for (var a = this.getAllHotspotInputs(), c = 0; c < a.length; ++c)(currHotspotInput = a[c]) && this
            .resetHotspotIsMarked(currHotspotInput)
    }
};
cp.HotspotQuestion.prototype.drawHotspotsAgain = function() {
    this.resetHotspotPositionList(!0);
    this.drawHotspots(!0)
};
cp.HotspotQuestion.prototype.drawHotspots = function(a) {
    var c = document.getElementById(this.getAssociatedObjName()),
        b = this.getSelectedPositions();
    if ("" != b) {
        var b = b.split(";"),
            e = b.length;
        if (0 != e)
            for (var d = 0; d < e; ++d) {
                var f = b[d].split("_"),
                    g = f[0],
                    h = f[1];
                cp.responsive && (g = Math.round(g * cp.project.clientWidth / 100), h = Math.round(h * cp.project
                    .clientHeight / 100));
                this.addHotspotDiv(c, g, h, f[2], a)
            }
    }
};
cp.HotspotQuestion.prototype.getAllowClickOnHotspotsOnlyFlag = function() {
    return this.questionData.ach
};
cp.HotspotQuestion.prototype.getHotspotImagePath = function() {
    return "./" + this.questionData.chap
};
cp.HotspotQuestion.prototype.getHotspotPositionList = function() {
    return this.hotspotPositionList
};
cp.HotspotQuestion.prototype.resetHotspotPositionList = function(a) {
    a || (this.hotspotPositionList = []);
    a = document.getElementById(this.getAssociatedObjName());
    if (void 0 != a && void 0 != a)
        for (var c = a.childNodes, b = c.length - 1; 0 <= b; --b) {
            var e = c[b];
            "IMG" == e.nodeName && -1 != e.name.indexOf("hotspotImage_") && a.removeChild(e)
        }
};
cp.HotspotQuestion.prototype.setSelectedPositions = function() {
    if (this.hotspotPositionList) {
        var a = this.hotspotPositionList.length;
        if (!(0 >= a)) {
            for (var c = "", c = this.hotspotPositionList[0].x + "_" + this.hotspotPositionList[0].y + "_" + this
                    .hotspotPositionList[0].isCorrect, b = 1; b < a; ++b) c += ";", c += this.hotspotPositionList[b]
                .x + "_" + this.hotspotPositionList[b].y + "_" + this.hotspotPositionList[b].isCorrect;
            this.selectedHotspotPositions = c
        }
    }
};
cp.HotspotQuestion.prototype.getSelectedPositions = function() {
    return this.selectedHotspotPositions
};
cp.HotspotQuestion.prototype.getHotspotIsMarked = function(a) {
    return cp.D[a.id].mr
};
cp.HotspotQuestion.prototype.setHotspotIsMarked = function(a) {
    cp.D[a.id].mr = !0
};
cp.HotspotQuestion.prototype.resetHotspotIsMarked = function(a) {
    var c = cp.D[a.id];
    c.cur && (a.parentNode.style.cursor = "pointer");
    c.mr = !1
};
cp.HotspotQuestion.prototype.getHotspotAnswerID = function(a) {
    return cp.D[a.id].aid
};
cp.HotspotQuestion.prototype.setSelectedAnswers = function() {
    this.setSelectedPositions();
    var a = this.getAllHotspotInputs();
    this.m_selectedAnswersArr = [];
    if (!(0 >= a.length))
        for (var c = 0; c < a.length; ++c) {
            var b = a[c];
            this.getHotspotIsMarked(b) && this.m_selectedAnswersArr.push(this.getHotspotAnswerID(b))
        }
};
cp.HotspotQuestion.prototype.disableAllOptions = function() {
    if (this.m_quizController) {
        var a = !0;
        this.m_quizController.GetIsSubmitAll() && !this.getIsPretest() && (!this.m_quizController
        .GetIsInReviewMode() && !this.m_quizController.m_submittedAllQuestions) && (a = !1);
        if (a && (a = this.getAllHotspotInputs(), !(1 > a.length))) {
            for (var c = 0; c < a.length; ++c) a[c].parentNode.style.cursor = "default";
            this.m_answersDisabled = !0
        }
    }
};
cp.HotspotQuestion.prototype.getAllHotspotInputs = function() {
    this.getAnswerGroupName();
    for (var a = [], c = this.answerOptions, b = 0; b < c.length; ++b) a[b] = document.getElementById(c[b]);
    return a
};
cp.HotspotQuestion.prototype.getCorrectHotspotInputs = function() {
    for (var a = this.getAllHotspotInputs(), c = [], b = 0; b < a.length; ++b) {
        var e = a[b],
            d = cp.D[e.id];
        d && d.ic && c.push(e)
    }
    return c
};
cp.HotspotQuestion.prototype.clearAnswers = function() {
    this.verbose && cp.log("Inside Clear Answers");
    var a = this.m_quizController && this.m_quizController.GetIsSubmitAll() && !this.getIsPretest(),
        a = (a = !1 == this.getWasJudged() || a && !1 == this.m_quizController.m_submittedAllQuestions) && !this
        .m_quizController.GetIsInReviewMode();
    if (!1 != a) {
        this.m_selectedAnswersArr = [];
        this.selectedHotspotPositions = "";
        this.verbose && cp.log("Not Attempted. Hence Clearing");
        for (var c = document.getElementsByName(this.hotspotGroupName),
                b = c.length, a = 0; a < b; ++a) {
            var e = c[0];
            if (e) {
                var d = e.parentNode;
                d && d.removeChild(e)
            }
        }
        c = this.getAllHotspotInputs();
        for (a = 0; a < c.length; ++a)(b = c[a]) && this.resetHotspotIsMarked(b);
        this.hotspotPositionList = []
    }
};
cp.HotspotQuestion.prototype.isCorrectHotspotInput = function(a) {
    return cp.D[a].ic
};
cp.HotspotQuestion.prototype.getOffsetXPosition = function(a) {
    return a - window.pageXOffset
};
cp.HotspotQuestion.prototype.getOffsetYPosition = function(a) {
    return a - window.pageYOffset
};
cp.HotspotQuestion.prototype.checkIfMarkedCorrectHotspot = function(a) {
    for (var c in this.hitTestingRects) {
        var b = this.hitTestingRects[c],
            e, d;
        e = !1;
        if (cp.responsive) {
            e = Math.floor(a.x * cp.project.clientWidth / 100);
            d = Math.floor(a.y * cp.project.clientHeight / 100);
            var f = Math.floor(b.maxX * cp.project.clientWidth / 100),
                g = Math.floor(b.minY * cp.project.clientHeight / 100),
                h = Math.floor(b.maxY * cp.project.clientHeight / 100);
            e = e > Math.floor(b.minX * cp.project.clientWidth / 100) - 2 && e < f + 2 && d > g - 2 && d < h + 2
        } else e = a.x - window.pageXOffset,
            d = a.y - window.pageYOffset, e = e > this.getOffsetXPosition(b.minX) && e < this.getOffsetXPosition(b
                .maxX) && d > this.getOffsetYPosition(b.minY) && d < this.getOffsetYPosition(b.maxY);
        if (e && this.isCorrectHotspotInput(c)) return a.isCorrect = "true", !0
    }
    a.isCorrect = "false";
    return !1
};
cp.HotspotQuestion.prototype.checkIfPositionCorrect = function(a, c) {
    if (!cp.responsive) {
        this.getAnswerGroupName();
        for (var b = this.answerOptions, e = 0; e < b.length; ++e) {
            var d = cp.D[b[e]],
                f = d.vb,
                g = f[1],
                h = f[2],
                i = f[3];
            if (a > f[0] && (a < h && c > g && c < i) && (d.mr = !0, d.ic)) return !0
        }
        return !1
    }
};
cp.HotspotQuestion.prototype.checkIfAllCorrectHotspotsMarked = function() {
    for (var a = this.getCorrectHotspotInputs(), c = 0; c < a.length; ++c)
        if (!this.getHotspotIsMarked(a[c])) return !1;
    return !0
};
cp.HotspotQuestion.prototype.getQuestionScoredPoints = function() {
    return this.getIsSurvey() || !this.getWasJudged() ? 0 : this.getQuestionLevelScoredPoints()
};
cp.HotspotQuestion.prototype.saveAnswerOrder = function() {
    this.setSelectedAnswers()
};
cp.HotspotQuestion.prototype.checkAndSetQuestionStatus = function() {
    var a = this.QuestionStatusEnum.INCOMPLETE,
        c = this.hotspotPositionList.length;
    if (0 >= c) a = this.QuestionStatusEnum.INCOMPLETE;
    else {
        var b = !0,
            e = !1;
        if (this.getIsSurvey()) this.getIsSurvey() && (a = this.QuestionStatusEnum.CORRECT);
        else {
            for (a = 0; a < c; ++a) this.checkIfMarkedCorrectHotspot(this.hotspotPositionList[a]) || (b = b && !1);
            b && (e = b && this.checkIfAllCorrectHotspotsMarked());
            a = e ? this.QuestionStatusEnum.CORRECT : this.QuestionStatusEnum.INCORRECT
        }
        this.setSelectedPositions()
    }
    this.setQuestionStatus(a)
};
cp.HotspotQuestion.prototype.hotspotQuestionHandler = function(a, c, b) {
    if (this.m_quizController) {
        var a = this.m_quizController.GetIsInReviewMode(),
            e = this.m_quizController.GetIsSubmitAll() && !this.getIsPretest();
        a || this.getWasJudged() && !e || (a = this.getAssociatedObjName(), a = document.getElementById(a), this
            .showHideHotspotImage(a, c, b))
    }
};
cp.HotspotQuestion.prototype.checkIfClickedInsideHotspotAndSetMarked = function(a, c) {
    for (var b = this.getAllHotspotInputs(), e = 0; e < b.length; ++e) {
        var d = b[e];
        currHotspotInputParent = d.parentElement;
        var f = currHotspotInputParent.getBoundingClientRect(),
            g = !1,
            g = a - window.pageXOffset,
            h = c - window.pageYOffset;
        if (g = cp.responsive ? g > f.left - 2 && g < f.right + 2 && h > f.top - 2 && h < f.bottom + 2 : g > f
            .left && g < f.right && h > f.top && h < f.bottom) return this.setHotspotIsMarked(d), !0
    }
    return !1
};
cp.HotspotQuestion.prototype.showHideHotspotImage = function(a, c, b) {
    var e = a.childNodes,
        d = cp.movie.stage.mainSlideDiv,
        f = d.getBoundingClientRect();
    cp("project")
        .getBoundingClientRect();
    for (var g = e.length - 1; 0 <= g; --g) {
        var h = e[g];
        if ("IMG" == h.nodeName && -1 != h.name.indexOf("hotspotImage_")) {
            var i = h.getBoundingClientRect(),
                j = c - window.pageXOffset,
                k = b - window.pageYOffset;
            if (isInside = cp.responsive ? j > i.left - 2 && j < i.right + 2 && k > i.top - 2 && k < i.bottom + 2 :
                j > i.left && j < i.right && k > i.top && k < i.bottom) {
                this.removeHotspotPosition(h.id) &&
                    a.removeChild(h);
                return
            }
        }
    }
    e = this.checkIfClickedInsideHotspotAndSetMarked(c, b, !0);
    if (!this.getAllowClickOnHotspotsOnlyFlag() || e) g = cp.getScaledPosition(c, b), e = g.X, g = g.Y, cp
        .shouldScale || (e = c - f.left, g = b - f.top, e -= window.pageXOffset, g -= window.pageYOffset), e /= d
        .scaleFactor, g /= d.scaleFactor, this.addHotspotDiv(a, e, g)
};
cp.HotspotQuestion.prototype.addHotspotDiv = function(a, c, b, e, d) {
    var f = cp.newElem("img");
    cp.fixWebkitScaling(f);
    var g = 0,
        h = 0;
    this.m_quizController.GetIsInReviewMode() ? this.getIsSurvey() ? (f.src = cp.movie.im.m_projectImages[
            "assets/htmlimages/hotspot_correct_answer_normal.png"].nativeImage.src, g = h = 20) : "undefined" ==
        typeof e ? (f.src = this.getHotspotImagePath(), g = h = 30) : "false" == e ? (f.src = cp.movie.im
            .m_projectImages["assets/htmlimages/hotspot_incorrect_answer_normal.png"].nativeImage.src, g = h = 20) :
        "true" == e && (f.src =
            cp.movie.im.m_projectImages["assets/htmlimages/hotspot_correct_answer_normal.png"].nativeImage.src, g =
            h = 20) : (f.src = this.getHotspotImagePath(), g = h = 30);
    f.name = this.hotspotGroupName;
    f.style.position = "absolute";
    a.appendChild(f);
    var i = f.clientWidth,
        a = f.clientHeight;
    f.naturalWidth && (i = i > f.naturalWidth ? i : f.naturalWidth);
    f.naturalHeight && (a = a > f.naturalHeight ? a : f.naturalHeight);
    i = i > f.width ? i : f.width;
    a = a > f.height ? a : f.height;
    0 == i && (i = g);
    0 == a && (a = h);
    cp.verbose && (cp.log("x,y : " + c + "," + b), cp.log("lBrowserSpecificW,lBrowserSpecificH : " +
        i + "," + a));
    cp.responsive ? (g = Math.round(100 * (c - i / 2) / cp.project.clientWidth), h = Math.round(100 * (b - a / 2) /
        cp.project.clientHeight), c = Math.round(100 * c / cp.project.clientWidth), b = Math.round(100 * b /
        cp.project.clientHeight), f.style.left = g + "%", f.style.top = h + "%") : (f.style.left = c - i / 2 +
        "px", f.style.top = b - a / 2 + "px");
    f.style.zIndex = 1E3;
    f.id = "hs_" + c + b;
    cp.redrawItem(f.id);
    d || this.addHotspotPosition(c, b, e, f.id)
};
cp.HotspotQuestion.prototype.addHotspotPosition = function(a, c, b, e) {
    var d = {};
    d.x = a;
    d.y = c;
    d.id = e;
    d.isCorrect = "undefined" != typeof b ? b : "-1";
    this.hotspotPositionList.push(d)
};
cp.HotspotQuestion.prototype.removeHotspotPosition = function(a) {
    for (var c = 0; c < this.hotspotPositionList.length; ++c)
        if (this.hotspotPositionList[c].id == a) return this.hotspotPositionList.splice(c, 1), !0;
    return !1
};
cp.HotspotQuestion.prototype.startQuestion = function() {
    if (this.m_quizController) {
        var a = this.m_quizController.GetIsInReviewMode();
        this.hotspotInputs = [];
        if (a || this.getWasJudged()) this.resetHotspotPositionList(), this.drawHotspots();
        this.lastViewedBreakPointWidth && parseFloat(this.lastViewedBreakPointWidth) != parseFloat(cp
            .ResponsiveProjWidth) && (a = cp.D.quizzingData) && cp.alert(a.rpViDv);
        cp.HotspotQuestion.superClass.startQuestion.call(this)
    }
};
cp.HotspotQuestion.prototype.setQuestionSpecificScoreProperties = function(a) {
    if (void 0 != a && this.getWasJudged()) {
        var c = this.hotspotPositionList.length;
        if (!(0 >= c)) {
            a.m_hotSpotNamesArrayAsString = "hotSpotAnimation_" + this.hotspotPositionList[0].x + "_" + this
                .hotspotPositionList[0].y;
            a.m_hotSpot_xchordsAsString = "" + this.hotspotPositionList[0].x;
            a.m_hotSpot_ychordsAsString = "" + this.hotspotPositionList[0].y;
            cp.responsive && (a.m_hotSpotIsCorrect = "" + this.hotspotPositionList[0].isCorrect);
            for (var b = 1; b < c; ++b) a.m_hotSpotNamesArrayAsString +=
                ";" + ("hotSpotAnimation_" + this.hotspotPositionList[b].x + "_" + this.hotspotPositionList[b].y), a
                .m_hotSpot_xchordsAsString += ";" + this.hotspotPositionList[b].x, a.m_hotSpot_ychordsAsString +=
                ";" + this.hotspotPositionList[b].y, cp.responsive && (a.m_hotSpotIsCorrect += ";" + this
                    .hotspotPositionList[b].isCorrect);
            cp.responsive && (a.m_BreakPointWidth = "" + cp.ResponsiveProjWidth)
        }
    }
};
cp.HotspotQuestion.prototype.restoreFromQuestionSpecificScoreProperties = function(a) {
    if (void 0 != a) {
        var c = [],
            b = [],
            e = [];
        "" != a.m_hotSpot_xchordsAsString && (c = a.m_hotSpot_xchordsAsString.split(";"));
        "" != a.m_hotSpot_ychordsAsString && (b = a.m_hotSpot_ychordsAsString.split(";"));
        cp.responsive && (a.m_hotSpotIsCorrect && (e = a.m_hotSpotIsCorrect.split(";")), a.m_BreakPointWidth && (
            this.lastViewedBreakPointWidth = a.m_BreakPointWidth));
        if (c.length == b.length && !(0 >= c.length || 0 >= b.length))
            if (!cp.responsive || !(e.length != c.length &&
                    0 >= e.length)) {
                for (var a = "", a = c[0] + "_" + b[0], a = cp.responsive ? a + ("_" + e[0]) : a + ("_" + this
                        .checkIfPositionCorrect(c[0], b[0])), d = 1; d < c.length; ++d) a += ";", a += c[d] + "_" +
                    b[d], a = cp.responsive ? a + ("_" + e[d]) : a + ("_" + this.checkIfPositionCorrect(c[d], b[
                    d]));
                this.selectedHotspotPositions = a
            }
    }
};
cp.MCQInput = function(a, c) {
    cp.MCQInput.baseConstructor.call(this, a);
    this.isSingleChoice = "radio" == this.type;
    if (cp.responsive) {
        var b = cp.D[cp.D[this.element.id].ahn];
        this.responsiveCSS = b ? b.css : this.getAttribute("css")
    }
    this.isCorrect = this.getAttribute("ic");
    this.tabIndex = -1;
    this.accessibilityText = this.getAttribute("ad");
    this.canvasDivName = this.getAttribute("cn");
    this.value = "enabled";
    this.checked = "unchecked";
    b = this.getAttribute("b");
    this.bounds = {
        minX: b[0],
        minY: b[1],
        maxX: b[2],
        maxY: b[3]
    };
    b = this.getAttribute("vb");
    this.vbounds = {
        minX: b[0],
        minY: b[1],
        maxX: b[2],
        maxY: b[3]
    };
    this.answerHolderLeft = this.getAttribute("ahl");
    this.answerHolderTop = this.getAttribute("aht");
    this.sh = this.getAttribute("sh");
    this.args = c
};
cp.inherits(cp.MCQInput, cp.Answer);
cp.MCQInput.prototype.start = function(a) {
    this.addIfNeeded();
    if (!this.effectIsStarted || a) this.updateEffects(this.hasEffect), this.effectIsStarted = !0
};
cp.MCQInput.prototype.reset = function() {
    delete cp.ropMap[this.element.id];
    this.isDrawn = !1;
    this.element.width = "0";
    this.element.height = "0";
    this.element.style.width = "0px";
    this.element.style.height = "0px";
    this.element.left = "0";
    this.element.top = "0";
    this.element.style.left = "0px";
    this.element.style.top = "0px"
};
cp.MCQInput.prototype.disableOption = function() {
    if ("disabled" != this.value && (this.element.style.cursor = "default", this.value = "disabled", this
            .inputControl.disabled = "disabled", this.inputControl.style.cursor = "default", this.inputControl
            .parentNode.style.cursor = "default", this.inputControl.parentNode.parentNode.style.cursor = "default",
            "checked" == this.checked || this.inputControl.checked ? this.loadAndDrawImage(this.m_questionObj
                .getImageForState(this.type, "selectedDisabled")) : this.loadAndDrawImage(this.m_questionObj
                .getImageForState(this.type,
                    "disabled")), this.m_questionObj.getWasJudged() && this.m_questionObj.canShowReviewIcons())) {
        if (!this.reviewIconImage) {
            this.reviewIconImage = cp.newElem("img");
            this.reviewIconImage.tabIndex = -1;
            this.reviewIconImage.style.position = "absolute";
            this.reviewIconImage.style.zIndex = this.zIndex;
            if (this.sh) {
                var a = this.sh.a;
                cp.applyShadow(this.reviewIconImage, this.sh.d * Math.cos(Math.PI * a / 180) + "px " + this.sh.d *
                    Math.sin(Math.PI * a / 180) + "px " + this.sh.b + "px " + cp.ConvertRGBToRGBA(this.sh.c,
                        this.sh.o) + (this.sh.i ? " inset" :
                        ""))
            }
            this.isCorrect ? (this.reviewIconImage.src = this.isSingleChoice ? cp.movie.im.m_projectImages[
                        "assets/htmlimages/correct_answer_normal.png"].nativeImage.src : "checked" == this.checked ?
                    cp.movie.im.m_projectImages["assets/htmlimages/correct_answer_normal.png"].nativeImage.src : cp
                    .movie.im.m_projectImages["assets/htmlimages/skip_answer_normal.png"].nativeImage.src, this
                    .element.parentNode.appendChild(this.reviewIconImage)) : this.m_questionObj.getWasJudged() &&
                "checked" == this.checked ? (this.reviewIconImage.src =
                    cp.movie.im.m_projectImages["assets/htmlimages/incorrect_answer_normal.png"].nativeImage.src,
                    this.element.parentNode.appendChild(this.reviewIconImage)) : this.reviewIconImage = void 0
        }
        if (this.reviewIconImage) {
            var a = this.inputControlCanvasElement.parentElement.getBoundingClientRect(),
                c = cp("div_Slide")
                .getBoundingClientRect();
            cp.responsive ? (this.element.parentElement.getBoundingClientRect(), this.element
                .getBoundingClientRect(), this.reviewIconImage.style.left = parseFloat(this.inputControl.style
                    .left) - 20 +
                "px", this.reviewIconImage.style.top = this.inputControl.style.top) : (this.reviewIconImage
                .style.left = parseFloat(this.element.style.left) - 20 + "px", this.reviewIconImage.style.top =
                (a.top - c.top) / cp.movie.m_scaleFactor + "px")
        }
    }
};
cp.MCQInput.prototype.loadAndDrawImage = function(a) {
    var c = this.sh && !this.sh.i,
        b = cp.movie.im.m_projectImages[a].nativeImage;
    null == this.loadedBtnImages && (this.loadedBtnImages = {});
    this.loadedBtnImages[a] = b;
    this.inputControlCanvasElement.img = a;
    cp.clearCanvasProperly(this.canvas);
    b = this.canvas.gc;
    if (!cp.responsive) {
        var d = 0 < this.vbounds.minX && c ? 0 : this.vbounds.minX,
            e = 0 < this.vbounds.minY && c ? 0 : this.vbounds.minY,
            f = (cp.model.data.project.h > this.vbounds.maxY && c ? cp.model.data.project.h : this.vbounds.maxY +
            4) - e;
        b.width =
            (cp.model.data.project.w > this.vbounds.maxX && c ? cp.model.data.project.w : this.vbounds.maxX + 4) -
            d;
        b.height = f;
        b.left = d;
        b.top = e
    }
    this.sh && !this.sh.i && (b.shadowOffsetX = this.sh.d * Math.cos(Math.PI * this.sh.a / 180), b.shadowOffsetY =
        this.sh.d * Math.sin(Math.PI * this.sh.a / 180), b.shadowBlur = this.sh.b, b.shadowColor = cp
        .ConvertRGBToRGBA(this.sh.c, this.sh.o));
    c ? cp.responsive ? (c = this.answerLabelCanvasParentElement.getBoundingClientRect(), d = cp("div_Slide")
        .getBoundingClientRect(), b.drawImage(this.loadedBtnImages[a], c.left -
            d.left - 30, c.top - d.top)) : b.drawImage(this.loadedBtnImages[a], this.bounds.minX - 2, this
        .bounds.minY - 2) : b.drawImage(this.loadedBtnImages[a], 0, 0)
};
cp.MCQInput.prototype.addHighlightBoxMouseHandlers = function() {
    if (cp.DESKTOP == cp.device) {
        var a = this,
            c = document.getElementById(this.element.id + "_dummyhighlight");
        this.highlightElement.onmouseover = function() {
            if ("disabled" != a.value && (c.style.backgroundColor = "#000000", c.style.opacity = "0.3", a.sh)) {
                var b = a.sh.a;
                cp.applyShadow(c, a.sh.d * Math.cos(Math.PI * b / 180) + "px " + a.sh.d * Math.sin(Math.PI * b /
                    180) + "px " + a.sh.b + "px " + cp.ConvertRGBToRGBA(a.sh.c, a.sh.o) + (a.sh.i ?
                    " inset" : ""))
            }
        };
        this.highlightElement.onmouseout =
            function() {
                "disabled" != a.value && (c.style.backgroundColor = "transparent", cp.applyShadow(c, ""))
            }
    }
};
cp.MCQInput.prototype.addDummyHighlightDiv = function(a, c) {
    var b = cp(this.element.id + "_dummyhighlight");
    b || (b = cp.newElem("div"), cp.fixWebkitScaling(b), a.insertBefore(b, this.answerLabelCanvasElement
            .parentElement), b.id = this.element.id + "_dummyhighlight", b.style.cursor = c, b.style.position =
        "absolute", b.style.zIndex = this.zIndex, b.style.borderRadius = "5px");
    var d = cp.movie.stage.mainSlideDiv.getBoundingClientRect(),
        e = this.element.getBoundingClientRect(),
        f = this.inputControlCanvasElement.parentElement.getBoundingClientRect();
    b.style.left = (f.left - d.left - 5) / cp.movie.m_scaleFactor + "px";
    b.style.top = (e.top - d.top - 2) / cp.movie.m_scaleFactor + "px";
    b.style.width = this.element.clientWidth + "px";
    b.style.height = this.element.clientHeight + "px"
};
cp.MCQInput.prototype.adjustVerticalAlignment = function(a, c, b, d) {
    if (c && b) {
        d = d ? 0 : parseFloat(c.parentElement.style.top);
        switch (a) {
            case cp.TextLayoutEnum.kTLCenter:
                d += (c.parentElement.clientHeight - b.clientHeight) / 2;
                break;
            case cp.TextLayoutEnum.kTLBottom:
                d += c.parentElement.clientHeight - b.clientHeight
        }
        b.style.top = d + "px"
    }
};
cp.MCQInput.prototype.drawForResponsive = function(a) {
    if (!this.m_questionObj || !this.m_questionObj.getIsStarted() || !this.responsiveCSS) return !1;
    if (this.isDrawn && !a) return !0;
    var c = cp.getResponsiveCSS(this.responsiveCSS),
        b = !1,
        b = this.re || this.sh && !this.sh.i || this.fillOuterArea,
        d = void 0 != this.tr;
    if (this.currentCSS == c && !b && !d && !a) return !0;
    this.currentCSS = c;
    a = this.element.id;
    if (cp.movie.playbackController) {
        var e = cp.movie.playbackController.GetQuizController();
        if (e) {
            var f = cp.D[this.element.id];
            this.answerTextCanvasDivName ||
                (this.answerTextCanvasDivName = this.m_questionObj.getAnswerOption(f));
            if (this.answerLabelCanvasElement = document.getElementById(this.canvasDivName)) {
                var d = cp.movie.stage.getSlideDiv()
                    .firstChild,
                    h = cp.D[this.answerTextCanvasDivName],
                    j = cp.D[f.cn];
                e.GetIsInReviewMode();
                var i = (e = this.m_questionObj.shouldDisableOptions()) ? "default" : "pointer";
                this.group = this.m_questionObj.getAnswerGroupName();
                this.accessibilityText = cp.getAccessibilityString(h);
                cp.modifyAlternativeAccessibleText(this.element.parentElement,
                    this.accessibilityText);
                this.isCorrect = h.ic;
                f.ic = this.isCorrect;
                this.value = "enabled";
                this.m_questionObj.getIfSelected(this.answerID) && (this.checked = "checked");
                this.zIndex = cp.D[f.actid].zIndex;
                this.inputIdSuffix = this.isSingleChoice ? "_radioInputField" : "_checkBoxInputField";
                "" == this.element.innerHTML && (this.element.innerHTML += "<div id='" + this.element.id +
                    "_highlight' style='" + cp.accOutlineStyleStr + ";cursor:" + i +
                    ";border-radius:5px; left:0px;top: 0px;width:100%;height:100%;position:absolute;background-color:#FF0000;opacity:.5'><label><input type='" +
                    this.type + "' " + this.value + " " + this.checked + " name='" + this.group + "' id='" + a +
                    this.inputIdSuffix + "' role='" + (this.isSingleChoice ? "radio" : "checkbox") +
                    "' aria-label='" + this.accessibilityText + "' style='cursor:" + i +
                    ";opacity:0;left: 0px; top:0px;width: 22px; height: 22px;position:absolute;border-radius:0px;'></input></label></div>"
                    );
                this.inputControl = document.getElementById(this.element.id + this.inputIdSuffix);
                this.inputControl.answerObject = this;
                this.inputControl.tabIndex = 0;
                var k = f.actid,
                    g = cp(k + "canvasHolder");
                g || (g = cp.newElem("div"), cp.fixWebkitScaling(g), d.insertBefore(g, this.answerLabelCanvasElement
                        .parentElement), g.setAttribute("class", "cp-rewrap"), g.id = k + "canvasHolder", f
                    .answerTextCanvasHolder = g.id, g.style.zIndex = this.zIndex, this.answertextCanvas = cp(
                        this.answerTextCanvasDivName), this.answertextCanvas || (this.answertextCanvas = cp
                        .newElem("canvas"), this.answertextCanvas.setAttribute("class", "cp-shape"), this
                        .answertextCanvas.id = this.answerTextCanvasDivName, g.appendChild(this
                            .answertextCanvas)), f = document.getElementById(h.dn),
                    f.drawingBoard = g, cp.D[this.answerTextCanvasDivName].dns = this.element.id, this
                    .answertextCanvasShape || (this.answertextCanvasShape = new cp.Shape(this.answertextCanvas,
                        cp.D[this.answerTextCanvasDivName]), this.answertextCanvasShape.start()), cp
                    .updateVarText(f));
                f = cp.movie.stage.mainSlideDiv.getBoundingClientRect();
                this.parentElementClientBoundingRect = this.element.parentElement.getBoundingClientRect();
                this.isDrawn || (this.answerLabelCanvasParentElement = this.answerLabelCanvasElement.parentElement,
                    this.answerLabelCanvasParentSiblingElement =
                    this.answerLabelCanvasParentElement.nextSibling, d.removeChild(this
                        .answerLabelCanvasParentElement), d.insertBefore(this.answerLabelCanvasParentElement,
                        this.answerLabelCanvasParentSiblingElement));
                this.inputControlCanvasElement || (this.inputControlCanvasElement = cp.newElem("canvas"), g = b ? cp
                    .project.clientWidth : 26, k = b ? cp.project.clientHeight : 26, canvas = this.canvas = cp
                    .createCanvas(0, 0, g, k, this.inputControlCanvasElement), this.inputControlCanvasElement
                    .style.display = "block", this.inputControlCanvasElement.style.position =
                    "absolute", g = cp.newElem("div"), cp.fixWebkitScaling(g), d.insertBefore(g, this
                        .answerLabelCanvasParentSiblingElement), g.appendChild(this.inputControlCanvasElement),
                    g.style.display = "block", g.style.position = "absolute", g.style.width = "22px", g.style
                    .height = "22px", g.style.zIndex = this.zIndex);
                this.adjustPositionWithAnswerArea(j.css[cp.ResponsiveProjWidth], this
                    .answerLabelCanvasParentElement);
                this.adjustPositionWithAnswerArea(j.css[cp.ResponsiveProjWidth], cp(j.dn));
                this.adjustPositionWithAnswerArea(h.css[cp.ResponsiveProjWidth],
                    this.answertextCanvas.parentElement);
                this.inputControlCanvasElement && this.inputControlCanvasElement.img && (g = b ? cp.project
                    .clientWidth : 26, k = b ? cp.project.clientHeight : 26, this.inputControlCanvasElement
                    .width = g, this.inputControlCanvasElement.height = k, this.inputControlCanvasElement.style
                    .width = g + "px", this.inputControlCanvasElement.style.height = k + "px", this
                    .loadAndDrawImage(this.inputControlCanvasElement.img));
                g = this.answerLabelCanvasParentElement.getBoundingClientRect();
                k = this.answertextCanvas.parentElement.getBoundingClientRect();
                this.inputControlCanvasElement.parentElement.style.left = g.left - f.left - 30 + "px";
                this.inputControlCanvasElement.parentElement.style.top = g.top - f.top + "px";
                b && (this.inputControlCanvasElement.style.left = -(g.left - f.left - 30) + "px", this
                    .inputControlCanvasElement.style.top = -(g.top - f.top) + "px");
                b = this.inputControlCanvasElement.parentElement.getBoundingClientRect();
                this.element.style.left = "0px";
                this.element.style.top = "0px";
                this.element.style.right = "auto";
                this.element.style.bottom = "auto";
                this.element.style.width =
                    "100%";
                this.element.style.height = "100%";
                this.element.style.position = "absolute";
                this.element.style.backgroundColor = "#ff0000";
                this.element.style.opacity = 0;
                this.adjustPositionWithAnswerArea(c, this.element.parentElement);
                c = this.element.getBoundingClientRect();
                this.answertextCanvas.parentElement.style.top = c.top - f.top + "px";
                this.element.parentElement.style.width = b.width + g.width + k.width + 20 + "px";
                this.element.parentElement.style.height = k.height + 6 + "px";
                c = cp.D[h.dn];
                h = c.rptl[cp.ResponsiveProjWidth];
                this.adjustVerticalAlignment(h,
                    this.answertextCanvas, this.answerLabelCanvasParentElement);
                this.adjustVerticalAlignment(h, this.answertextCanvas, this.inputControlCanvasElement
                .parentElement);
                this.adjustVerticalAlignment(h, this.answertextCanvas, this.inputControl, !0);
                this.addDummyHighlightDiv(d, i);
                this.element.parentElement.style.left = b.left - f.left - 5 + "px";
                cp.D[j.dn].rptl = c.rptl;
                if (!this.isDrawn) {
                    var l = this;
                    this.highlightElement = document.getElementById(a + "_highlight");
                    this.addHighlightBoxMouseHandlers();
                    a = function() {
                        l.value != "disabled" &&
                            l.m_questionObj.selectAnswerOption(l)
                    };
                    cp.registerGestureEvent(this.element, cp.GESTURE_EVENT_TYPES.TAP, a);
                    cp.DESKTOP == cp.device ? cp.registerGestureEvent(this.inputControl, cp.GESTURE_EVENT_TYPES.TAP,
                        a) : cp.useg || (this.inputControl.onclick = a);
                    "checked" == this.checked ? this.loadAndDrawImage(this.m_questionObj.getImageForState(this.type,
                        "selected")) : this.loadAndDrawImage(this.m_questionObj.getImageForState(this.type,
                        "default"))
                }
                e && this.disableOption();
                this.isDrawn = !0;
                this.visible || (this.element.style.visibility =
                    "hidden");
                return !0
            }
        }
    }
};
cp.MCQInput.prototype.addIfNeeded = function(a) {
    if ((!cp.responsive || !this.drawForResponsive(a)) && this.m_questionObj && !this.isDrawn && this.m_questionObj
        .getIsStarted()) {
        var a = this.element.id,
            c = this.type;
        if (cp.movie.playbackController) {
            var b = cp.movie.playbackController.GetQuizController();
            if (b) {
                b.GetIsInReviewMode();
                b = this.m_questionObj.shouldDisableOptions();
                this.group = this.m_questionObj.getAnswerGroupName();
                var d = b ? "default" : "pointer",
                    e = cp.D[this.element.id];
                this.answerTextCanvasDivName = this.m_questionObj.getAnswerOption(e);
                if (this.answerLabelCanvasElement = document.getElementById(this.canvasDivName)) {
                    var f = cp.movie.stage.getSlideDiv()
                        .firstChild,
                        h = cp.D[this.answerTextCanvasDivName];
                    this.m_questionObj.getIfSelected(this.answerID) && (this.checked = "checked");
                    this.accessibilityText = cp.getAccessibilityString(h);
                    this.isCorrect = h.ic;
                    e.ic = this.isCorrect;
                    var j = !1,
                        j = this.re || this.sh && !this.sh.i,
                        i = h.b;
                    this.answerTextCanvasImageBounds = {
                        minX: i[0],
                        minY: i[1],
                        maxX: i[2],
                        maxY: i[3]
                    };
                    i = cp.D[e.cn].b;
                    this.lAnswerLabelBounds = {
                        minX: i[0],
                        minY: i[1],
                        maxX: i[2],
                        maxY: i[3]
                    };
                    this.zIndex = cp.D[e.actid].zIndex;
                    this.inputIdSuffix = this.isSingleChoice ? "_radioInputField" : "_checkBoxInputField";
                    "" == this.element.innerHTML && (this.element.innerHTML += "<div id='" + a +
                        "_highlight' style='" + cp.accOutlineStyleStr + ";cursor:" + d +
                        ";border-radius:5px; left: -5px; top: -1px;width: " + (this.answerTextCanvasImageBounds
                            .maxX - this.answerTextCanvasImageBounds.minX + 50) + "px;height: " + (this
                            .answerTextCanvasImageBounds.maxY - this.answerTextCanvasImageBounds.minY + 6) +
                        "px;position:absolute;background-color:#FF0000;opacity:.5'><label><input type='" +
                        c + "' " + this.value + " " + this.checked + " role='" + (this.isSingleChoice ?
                            "radio" : "checkbox") + "' aria-label='" + this.accessibilityText + "'  name='" +
                        this.group + "' id='" + a + this.inputIdSuffix + "' style='cursor:" + d +
                        ";opacity:0;left: 0px; top: " + (this.lAnswerLabelBounds.maxY - this.lAnswerLabelBounds
                            .minY - 22) / 2 +
                        "px;width: 22px; height: 22px;position:absolute;border-radius:0px;'></input></label></div>"
                        );
                    this.inputControl = document.getElementById(a + this.inputIdSuffix);
                    this.inputControl.answerObject = this;
                    this.inputControl.tabIndex =
                        0;
                    c = e.actid;
                    i = cp.newElem("div");
                    cp.fixWebkitScaling(i);
                    f.insertBefore(i, this.answerLabelCanvasElement.parentElement);
                    i.setAttribute("class", "cp-rewrap");
                    i.id = c + "canvasHolder";
                    e.answerTextCanvasHolder = i.id;
                    e = cp.newElem("canvas");
                    e.setAttribute("class", "cp-shape");
                    e.id = this.answerTextCanvasDivName;
                    i.appendChild(e);
                    i.style.zIndex = this.zIndex;
                    var k = document.getElementById(h.dn);
                    k.drawingBoard = i;
                    cp.updateVarText(k);
                    cp.D[this.answerTextCanvasDivName].dns = this.element.id;
                    (new cp.Shape(e, cp.D[this.answerTextCanvasDivName]))
                    .start();
                    i = cp.D[c].mdi;
                    e.parentElement.style.left = parseFloat(e.parentElement.style.left) + (cp.D[i].b[0] - this
                        .answerTextCanvasImageBounds.minX) + "px";
                    e.parentElement.style.top = parseFloat(e.parentElement.style.top) + (cp.D[i].b[1] - this
                        .answerTextCanvasImageBounds.minY) + "px";
                    c = this.answerLabelCanvasElement.parentElement;
                    k = c.nextSibling;
                    f.removeChild(c);
                    f.insertBefore(c, k);
                    this.inputControlCanvasElement = cp.newElem("canvas");
                    canvas = this.canvas = cp.createCanvas(0, 0, (cp.model.data.project.w > this.vbounds.maxX && j ?
                            cp.model.data.project.w :
                            this.vbounds.maxX + 4) - (0 < this.vbounds.minX && j ? 0 : this.vbounds.minX), (cp
                            .model.data.project.h > this.vbounds.maxY && j ? cp.model.data.project.h : this
                            .vbounds.maxY + 4) - (0 < this.vbounds.minY && j ? 0 : this.vbounds.minY), this
                        .inputControlCanvasElement);
                    this.inputControlCanvasElement.style.display = "block";
                    this.inputControlCanvasElement.style.position = "absolute";
                    var g = cp.newElem("div");
                    cp.fixWebkitScaling(g);
                    f.insertBefore(g, k);
                    g.appendChild(this.inputControlCanvasElement);
                    g.style.display = "block";
                    g.style.position = "absolute";
                    g.style.left = this.vbounds.minX + "px";
                    g.style.top = this.lAnswerLabelBounds.minY + (this.lAnswerLabelBounds.maxY - this
                        .lAnswerLabelBounds.minY - 22) / 2 + "px";
                    g.style.width = "22px";
                    g.style.height = "22px";
                    g.style.zIndex = this.zIndex;
                    j ? (this.inputControlCanvasElement.style.marginLeft = -this.vbounds.minX + "px", this
                        .inputControlCanvasElement.style.marginTop = -this.lAnswerLabelBounds.minY + "px") : (
                        this.inputControlCanvasElement.style.marginLeft = "-2px", this.inputControlCanvasElement
                        .style.marginTop = "-2px");
                    var l = this;
                    this.element.style.left =
                        parseFloat(e.parentElement.style.left) + (cp.D[i].b[0] - this.answerTextCanvasImageBounds
                            .minX) + "px";
                    this.element.style.top = cp.D[i].b[1] + "px";
                    this.element.style.width = this.answerTextCanvasImageBounds.maxX - this
                        .answerTextCanvasImageBounds.minX + 50 + "px";
                    this.element.style.height = this.answerTextCanvasImageBounds.maxY - this
                        .answerTextCanvasImageBounds.minY + 6 + "px";
                    this.element.style.position = "absolute";
                    this.element.style.backgroundColor = "#ff0000";
                    this.element.style.opacity = 0;
                    h = cp.D[h.dn].txtl;
                    this.adjustVerticalAlignment(h,
                        e, c);
                    this.adjustVerticalAlignment(h, e, this.inputControlCanvasElement.parentElement);
                    this.adjustVerticalAlignment(h, e, this.inputControl, !0);
                    h = this.inputControlCanvasElement.parentElement.getBoundingClientRect();
                    j = cp.movie.stage.mainSlideDiv.getBoundingClientRect();
                    this.addDummyHighlightDiv(f, d);
                    this.highlightElement = document.getElementById(a + "_highlight");
                    this.addHighlightBoxMouseHandlers();
                    this.element.style.left = (h.left - j.left - 5) / cp.movie.m_scaleFactor + "px";
                    a = function() {
                        l.value != "disabled" && l.m_questionObj.selectAnswerOption(l)
                    };
                    cp.registerGestureEvent(this.element, cp.GESTURE_EVENT_TYPES.TAP, a);
                    cp.DESKTOP == cp.device ? cp.registerGestureEvent(this.inputControl, cp.GESTURE_EVENT_TYPES.TAP,
                        a) : cp.useg || (this.inputControl.onclick = a);
                    "checked" == this.checked ? this.loadAndDrawImage(this.m_questionObj.getImageForState(this.type,
                        "selected")) : this.loadAndDrawImage(this.m_questionObj.getImageForState(this.type,
                        "default"));
                    b && this.disableOption();
                    this.isDrawn = !0;
                    this.visible || (this.element.style.visibility = "hidden")
                }
            }
        }
    }
};
cp.MultipleChoiceQuestion = function(a, c) {
    cp.MultipleChoiceQuestion.baseConstructor.call(this, a, c);
    this.answerOptions = this.getAnswerOptions();
    this.shuffleCounter = -1;
    this.isShuffleEnabled = this.questionData.ish;
    this.correctAnswersList = "";
    this.chosenAnswerHasAdvancedFeedback = !1;
    this.typeStatesMap = {
        radio: {
            "default": "assets/htmlimages/radioButton_normal.png",
            selected: "assets/htmlimages/radioButton_selected.png",
            disabled: "assets/htmlimages/radioButton_disabled.png",
            selectedDisabled: "assets/htmlimages/radioButton_selectedDisabled.png"
        },
        checkbox: {
            "default": "assets/htmlimages/checkBox_normal.png",
            selected: "assets/htmlimages/checkBox_selected.png",
            disabled: "assets/htmlimages/checkBox_disabled.png",
            selectedDisabled: "assets/htmlimages/checkBox_selectedDisabled.png"
        }
    };
    this.verbose = !1
};
cp.inherits(cp.MultipleChoiceQuestion, cp.Question);
cp.MultipleChoiceQuestion.prototype.getImageForState = function(a, c) {
    return this.typeStatesMap[a][c]
};
cp.MultipleChoiceQuestion.prototype.getAnswerScore = function(a) {
    for (var c = 0, b = 0; b < this.answerOptions.length; ++b) {
        var d = cp.D[this.answerOptions[b]];
        if (a == d.aid) {
            c = d.ap;
            break
        }
    }
    return c
};
cp.MultipleChoiceQuestion.prototype.getSelectedAnswerChoices = function() {
    var a = "",
        c = this.m_selectedAnswersArr.slice(0);
    if (c && 0 >= c.length) return "";
    for (var b = [], d = this.questionData.ao, e = 0; e < d.length; ++e)
        for (var f = d[e].split(":"), f = cp.D[f[0]], h = 0; h < c.length; ++h) f.aid == c[h] && b.push(cp.D[this
            .answerOptions[e]].aid);
    a += b[0];
    for (c = 1; c < b.length; ++c) a += ";", a += b[c];
    return a
};
cp.MultipleChoiceQuestion.prototype.getAnswerScores = function() {
    var a = [];
    if (!this.answerOptions) return a;
    for (var c = document.getElementsByName(this.getAnswerGroupName()), b = this.m_selectedAnswersArr.slice(0),
        d = {}, e = 0; e < b.length; ++e) d[b[e]] = b[e];
    for (b = 0; b < c.length; ++b) {
        var e = cp.D[c[b].parentElement.parentElement.parentElement.id],
            f = cp(e.answerTextCanvasHolder)
            .firstChild,
            f = cp.D[f.id],
            h = new cp.AnswerScore;
        h.m_answerID = e.aid;
        h.m_correctAnswer = f.ic ? "1" : "0";
        h.m_chosenAnswer = d[e.aid] ? "1" : "0";
        a.push(h)
    }
    return a
};
cp.MultipleChoiceQuestion.prototype.getQuestionScoredPoints = function() {
    if (this.getIsSurvey() || !this.getWasJudged()) return 0;
    if (!this.isPartialScore) return this.getQuestionLevelScoredPoints();
    var a = this.getSelectedOptions(this.getAnswerGroupName());
    if (!a) return 0;
    for (var c = 0, b = 0; b < a.length; ++b) {
        var d = this.getAnswerID(a[b].parentNode);
        d && (c += this.getAnswerScore(d))
    }
    return c
};
cp.MultipleChoiceQuestion.prototype.shuffleAnswers = function() {
    var a = !this.m_quizController.GetIsAttemptFinished() && this.getWasJudged() && !this.m_quizController
        .GetIsSubmitAll(),
        c = this.getIsPretest() && this.m_quizController.GetIsPretestQuestionsDisabled();
    if (this.isShuffleEnabled && (!a && !this.m_quizController.GetIsInReviewMode() && !c) && !this.m_isShuffled) {
        for (var b = this.answerOptions.length, d, c = [], a = 0; a < b; ++a) c[a] = this.answerOptions[a];
        for (a = b; 1 < a; a--) b = Math.floor(Math.random() * a), b != a && (d = c[b], c[b] = c[a -
            1], c[a - 1] = d);
        this.answerOptions = c;
        this.m_isShuffled = !0
    }
};
cp.MultipleChoiceQuestion.prototype.getAnswerOption = function() {
    this.shuffleAnswers();
    return this.answerOptions[++this.shuffleCounter]
};
cp.MultipleChoiceQuestion.prototype.getIfSelected = function(a) {
    if (!this.m_selectedAnswersArr || 0 >= this.m_selectedAnswersArr.length) return !1;
    for (var c = 0; c < this.m_selectedAnswersArr.length; ++c)
        if (a == this.m_selectedAnswersArr[c]) return !0;
    return !1
};
cp.MultipleChoiceQuestion.prototype.resetQuestionData = function() {
    cp.MultipleChoiceQuestion.superClass.resetQuestionData.call(this);
    this.m_quizController.GetGoToQuizScopeActionExecuted() || (this.m_selectedAnswersArr = []);
    this.correctAnswersList = "";
    this.shuffleCounter = -1;
    this.chosenAnswerHasAdvancedFeedback = !1
};
cp.MultipleChoiceQuestion.prototype.selectAnswerOption = function(a) {
    if (a && (a.inputControl && !a.inputControl.disabled) && !this.m_answersDisabled) {
        this.getSelectedOptions();
        for (var c = document.getElementsByName(this.getAnswerGroupName()), b = 0; b < c.length; ++b) {
            var d = c[b],
                e = d.answerObject;
            a.isSingleChoice ? (a.inputControl == d ? (d.checked = !0, a.checked = !0) : (d.checked = !1, a
                        .checked = !1), d.checked ? e.loadAndDrawImage(this.getImageForState(a.type, "selected")) :
                    e.loadAndDrawImage(this.getImageForState(a.type, "default"))) :
                a.inputControl == d && (d.checked = !d.checked, d.checked ? (e.loadAndDrawImage(this
                    .getImageForState(a.type, "selected")), a.checked = !0) : (e.loadAndDrawImage(this
                    .getImageForState(a.type, "default")), a.checked = !1))
        }
    }
};
cp.MultipleChoiceQuestion.prototype.setSelectedAnswers = function() {
    var a = this.getSelectedOptions(this.getAnswerGroupName());
    if (a && !(0 >= a.length)) {
        this.m_selectedAnswersArr = [];
        for (var c = 0; c < a.length; ++c) this.m_selectedAnswersArr.push(cp.D[a[c].parentElement.parentElement
            .parentElement.id].aid)
    }
};
cp.MultipleChoiceQuestion.prototype.disableAllOptions = function() {
    if (this.m_quizController) {
        var a = !0;
        this.m_quizController.GetIsSubmitAll() && !this.getIsPretest() && (!this.m_quizController
        .GetIsInReviewMode() && !this.m_quizController.m_submittedAllQuestions) && (a = !1);
        if (a && (a = document.getElementsByName(this.getAnswerGroupName()), !(1 > a.length))) {
            for (var c = 0; c < a.length; ++c) {
                var b = a[c].answerObject;
                b && b.disableOption && b.disableOption()
            }
            this.m_answersDisabled = !0
        }
    }
};
cp.MultipleChoiceQuestion.prototype.getChosenAnswerFeedback = function() {
    for (var a = document.getElementsByName(this.getAnswerGroupName()), c = 0, b, d = 0; d < a.length; ++d)
        if (!0 == a[d].checked) {
            c++;
            var e = cp(cp.D[a[d].parentElement.parentElement.parentElement.id].answerTextCanvasHolder)
                .firstChild,
                f = cp.D[e.id],
                e = f.fb,
                f = f.ac;
            if (e || f)
                if (b = {}, void 0 != e && cp.D[e] && (b.name = e, b.captionToBeShown = !0), void 0 != f) b.action =
                    f
        } return b
};
cp.MultipleChoiceQuestion.prototype.getSelectedOptions = function(a) {
    for (var a = document.getElementsByName(a), c = [], b = 0, d = 0; d < a.length; ++d) !0 == a[d].checked && (c[
        b++] = a[d]);
    return c
};
cp.MultipleChoiceQuestion.prototype.clearAnswers = function() {
    this.verbose && cp.log("Inside Clear Answers");
    var a = this.m_quizController && this.m_quizController.GetIsSubmitAll() && !this.getIsPretest(),
        a = (a = !1 == this.getWasJudged() || a && !1 == this.m_quizController.m_submittedAllQuestions) && !this
        .m_quizController.GetIsInReviewMode();
    if (!1 != a && (this.m_selectedAnswersArr = [], this.verbose && cp.log("Not Attempted. Hence Clearing"), a =
            document.getElementsByName(this.getAnswerGroupName()), !(1 > a.length)))
        for (var c = 0; c <
            a.length; ++c) {
            var b = a[c];
            b && (b.checked = !1, b.answerObject && b.answerObject.loadAndDrawImage(this.getImageForState(b.type,
                "default")))
        }
};
cp.MultipleChoiceQuestion.prototype.checkIfPartiallyCorrect = function(a) {
    if (!this.isPartialScore) return !1;
    for (var c = this.getExpectedCorrectAnswerIDList(), b = {}, d = c.length, e = 0; e < c.length; ++e) b[c[e]] = c[
        e];
    for (var f = e = c = 0; f < a.length; ++f) {
        var h = this.getAnswerID(a[f].parentNode);
        b[h] ? ++c : ++e
    }
    a = !1;
    0 < c && (a = !0, c == d && 0 == e && (a = !1));
    return a
};
cp.MultipleChoiceQuestion.prototype.checkIfCorrect = function(a) {
    for (var c = this.getExpectedCorrectAnswerIDList(), b = {}, d = 0; d < c.length; ++d) b[c[d]] = c[d];
    for (var e = [], d = {}, f = 0, h = 0; h < a.length; ++h) {
        var j = a[h];
        if (!cp.D[j.parentNode.parentNode.parentNode.id].ic) return !1;
        j = this.getAnswerID(j.parentNode);
        if (!b[j]) return !1;
        e[f++] = j;
        d[j] = j
    }
    if (e.length != c.length) return !1;
    for (a = 0; a < c.length; ++a)
        if (!d[c[a]]) return !1;
    return !0
};
cp.MultipleChoiceQuestion.prototype.getChosenAnswerAsString = function() {
    if ("choice" == this.getInteractionType()) return this.getSelectedAnswerChoices();
    for (var a = this.getAnsweredCorrectly(), c = 0; c < this.answerOptions.length; ++c) {
        var b = cp.D[this.answerOptions[c]];
        if (b.ic) {
            if (a) return b.isTrue
        } else if (!a) return b.isTrue
    }
};
cp.MultipleChoiceQuestion.prototype.getCorrectAnswerAsString = function() {
    if ("choice" == this.getInteractionType()) {
        var a = this.getExpectedCorrectAnswerIDList();
        if (0 >= a.length) return "0";
        for (var c = a[0], b = 1; b < a.length; ++b) c += ";" + a[b];
        return c
    }
    for (b = 0; b < this.answerOptions.length; ++b)
        if (a = cp.D[this.answerOptions[b]], a.ic) return a.isTrue
};
cp.MultipleChoiceQuestion.prototype.getChosenAnswerAsStringForReview = function() {
    return this.getSelectedAnswerChoices()
};
cp.MultipleChoiceQuestion.prototype.getCorrectAnswerAsStringForReview = function() {
    var a = this.getExpectedCorrectAnswerIDList();
    if (0 >= a.length) return "0";
    for (var c = a[0], b = 1; b < a.length; ++b) c += ";" + a[b];
    return c
};
cp.MultipleChoiceQuestion.prototype.getExpectedCorrectAnswerTextList = function(a) {
    for (var c = [], b = -1, d = 0; d < this.answerOptions.length; ++d) {
        var e = cp.D[this.answerOptions[d]];
        e.ic && (c[++b] = cp.trimStartingAndTrailingSpaces(e.atxtlms))
    }
    if (0 >= c.length) return "";
    b = c[0];
    for (d = 1; d < c.length; ++d) b += a + c[d];
    cp.verbose && cp.log("Expected Answer Text List : " + b);
    return b
};
cp.MultipleChoiceQuestion.prototype.getSelectedAnswerTextList = function(a) {
    var c = [];
    if (this.m_quizController.GetIsSubmitAll() && !this.getIsPretest() && cp.IsRunningInACAP) {
        var b = this.m_selectedAnswersArr.slice(0);
        if (b && 0 >= b.length) return "";
        for (var d = this.questionData.ao, e = 0; e < d.length; ++e)
            for (var f = d[e].split(":"), f = cp.D[f[0]], h = 0; h < b.length; ++h) f.aid == b[h] && c.push(cp.D[
                this.answerOptions[e]].accstr)
    } else {
        b = this.getSelectedOptions(this.getAnswerGroupName());
        if (!b || 0 >= b.length) return;
        d = -1;
        for (e = 0; e < b.length; ++e) f =
            cp.D[b[e].parentNode.parentNode.parentNode.id].answerTextCanvasHolder.replace("canvasHolder", ""), f =
            cp.D[cp.D[f].mdi], c[++d] = cp.trimStartingAndTrailingSpaces(f.atxtlms)
    }
    if (0 >= c.length) return "";
    b = c[0];
    for (e = 1; e < c.length; ++e) b += a + c[e];
    cp.verbose && cp.log("Expected Answer Text List : " + b);
    return b
};
cp.MultipleChoiceQuestion.prototype.getAnswerTexts = function() {
    for (var a = cp.MultipleChoiceQuestion.superClass.getAnswerTexts.call(this), c = {}, b = this.questionData.ao,
            d = 0; d < b.length; ++d) {
        var e = b[d].split(":"),
            e = cp.D[e[0]];
        c[e.aid] = cp.trimStartingAndTrailingSpaces(e.atxtlms)
    }
    a.answerTextMap = c;
    return a
};
cp.MultipleChoiceQuestion.prototype.saveAnswerOrder = function() {
    this.m_answerOrderArray = this.answerOptions.slice(0);
    this.setSelectedAnswers()
};
cp.MultipleChoiceQuestion.prototype.checkAndSetQuestionStatus = function() {
    var a = this.QuestionStatusEnum.INCOMPLETE,
        a = this.getSelectedOptions(this.getAnswerGroupName()),
        a = !a || 0 == a.length ? this.QuestionStatusEnum.INCOMPLETE : this.getIsSurvey() ? this.QuestionStatusEnum
        .CORRECT : this.checkIfPartiallyCorrect(a) ? this.QuestionStatusEnum.PARTIAL_CORRECT : this.checkIfCorrect(
            a) ? this.QuestionStatusEnum.CORRECT : this.QuestionStatusEnum.INCORRECT;
    this.setQuestionStatus(a)
};
cp.MultipleChoiceQuestion.prototype.startQuestion = function() {
    this.chosenAnswerFeedback = this.correctAnswersList = "";
    this.shuffleCounter = -1;
    this.chosenAnswerHasAdvancedFeedback = !1;
    cp.MultipleChoiceQuestion.superClass.startQuestion.call(this)
};
cp.playbar = function(a) {
    return document.getElementById(a)
};
cp.PB = cp.playbar;
cp.PB.Btns = {
    kBtnAudioOff: "AudioOff",
    kBtnAudioOn: "AudioOn",
    kBtnBackward: "Backward",
    kBtnCC: "CC",
    kBtnExit: "Exit",
    kBtnFastForward: "FastForward",
    kBtnFastForward1: "FastForward1",
    kBtnFastForward2: "FastForward2",
    kBtnForward: "Forward",
    kBtnInfo: "Info",
    kBtnLogo: "Logo",
    kBtnPlay: "Play",
    kBtnPause: "Pause",
    kBtnPrint: "Print",
    kBtnProgress: "Progress",
    kBtnRewind: "Rewind",
    kBtnThumb: "Thumb",
    kBtnThumbBase: "ThumbBase",
    kBtnTOC: "TOC"
};
cp.PB.BtnStyleImages =
    "Color ColorSmall Glow GlowSmall Height Shadow ShadowSmall InnerStroke InnerStrokeSmall Shade ShadeSmall Stroke StrokeSmall"
    .split(" ");
cp.PB.kLargeBtn = 0;
cp.PB.kSmallBtn = 1;
cp.PB.kBtnMargin = 2;
cp.PB.kIndentMargin = 8;
cp.PB.movieProperties = null;
cp.PB.assetsLoaded = 0;
cp.PB.isVertical = !1;
cp.PB.numBtns = 0;
cp.PB.playBarDim = 0;
cp.PB.mainMovie = null;
cp.PB.playBarOtherDim = 0;
cp.PB.playbarHasLogo = !1;
cp.PB.playbarHasInfo = !1;
cp.PB.playbarHasPrint = !1;
cp.PB.loadedAssetArr = {};
cp.PB.playBarIconsFolder = "./assets/playbar/PlaybarIcons/";
cp.PB.PNGSuffix = ".png";
cp.PB.btnSizeMap = {};
cp.PB.btnSizeMap[cp.PB.Btns.kBtnAudioOff] = cp.PB.kSmallBtn;
cp.PB.btnSizeMap[cp.PB.Btns.kBtnAudioOn] = cp.PB.kSmallBtn;
cp.PB.btnSizeMap[cp.PB.Btns.kBtnBackward] = cp.PB.kSmallBtn;
cp.PB.btnSizeMap[cp.PB.Btns.kBtnCC] = cp.PB.kSmallBtn;
cp.PB.btnSizeMap[cp.PB.Btns.kBtnExit] = cp.PB.kSmallBtn;
cp.PB.btnSizeMap[cp.PB.Btns.kBtnFastForward] = cp.PB.kSmallBtn;
cp.PB.btnSizeMap[cp.PB.Btns.kBtnFastForward1] = cp.PB.kSmallBtn;
cp.PB.btnSizeMap[cp.PB.Btns.kBtnFastForward2] = cp.PB.kSmallBtn;
cp.PB.btnSizeMap[cp.PB.Btns.kBtnForward] = cp.PB.kSmallBtn;
cp.PB.btnSizeMap[cp.PB.Btns.kBtnPlay] = cp.PB.kLargeBtn;
cp.PB.btnSizeMap[cp.PB.Btns.kBtnPause] = cp.PB.kLargeBtn;
cp.PB.btnSizeMap[cp.PB.Btns.kBtnRewind] = cp.PB.kSmallBtn;
cp.PB.btnSizeMap[cp.PB.Btns.kBtnTOC] = cp.PB.kSmallBtn;
cp.PB.btnSizeMap[cp.PB.Btns.kBtnInfo] = cp.PB.kSmallBtn;
cp.PB.btnSizeMap[cp.PB.Btns.kBtnPrint] = cp.PB.kSmallBtn;
cp.PB.playBarHeight = 0;
cp.PB.playBarCSSLoaded = !1;
cp.PB.toolTips = {};
cp.PB.toolTips[cp.PB.Btns.kBtnRewind] =
    "Rewind ;\u5012\u5e36 ;Rembobiner ;Zur\u00fcckspulen ;Riavvolgi ;\u5dfb\u304d\u623b\u3057 ;Rebobinar ;\ub418\uac10\uae30 ;Retroceder "
    .split(";");
cp.PB.toolTips[cp.PB.Btns.kBtnBackward] =
    "Back ;\u5f8c\u9000 ;Retour ;Zur\u00fcck ;Indietro ;\u623b\u308b ;Atr\u00e1s ;\ub4a4\ub85c ;Voltar ".split(";");
cp.PB.toolTips[cp.PB.Btns.kBtnPlay] =
    "Play ;\u64ad\u653e ;Lire ;Abspielen ;Esegui ;\u518d\u751f ;Reproducir ;\uc7ac\uc0dd ;Reproduzir ".split(";");
cp.PB.toolTips[cp.PB.Btns.kBtnPause] =
    "Pause ;\u66ab\u505c ;Pause ;Anhalten ;Pausa ;\u4e00\u6642\u505c\u6b62 ;Pausa ;\uc77c\uc2dc \uc911\uc9c0 ;Pausar "
    .split(";");
cp.PB.toolTips[cp.PB.Btns.kBtnForward] =
    "Forward ;\u524d\u9032 ;Avancer ;Weiter ;Avanti ;\u9032\u3080 ;Adelante ;\uc55e\uc73c\ub85c ;Avan\u00e7ar ".split(
        ";");
cp.PB.toolTips[cp.PB.Btns.kBtnCC] =
    "Closed Captioning ;\u96b1\u85cf\u5f0f\u5b57\u5e55 ;Sous-titrage ;Bilduntertitel ;Didascalie ;\u30af\u30ed\u30fc\u30ba\u30c9\u30ad\u30e3\u30d7\u30b7\u30e7\u30f3 ;Subt\u00edtulos opcionales ;\ud3d0\uc1c4 \ucea1\uc158 ;Legenda codificada "
    .split(";");
cp.PB.toolTips[cp.PB.Btns.kBtnAudioOn] =
    "Audio Off ;\u95dc\u9589\u97f3\u8a0a ;Audio d\u00e9sactiv\u00e9 ;Audio aus ;Audio spento ;\u97f3\u58f0 \u30aa\u30d5 ;Audio desact. ;\uc624\ub514\uc624 \ub044\uae30 ;\u00c1udio ligado "
    .split(";");
cp.PB.toolTips[cp.PB.Btns.kBtnAudioOff] =
    "Audio On ;\u958b\u555f\u97f3\u8a0a ;Audio activ\u00e9 ;Audio an ;Audio acceso ;\u97f3\u58f0 \u30aa\u30f3 ;Audio act.;\uc624\ub514\uc624 \ucf1c\uae30 ;\u00c1udio desligado "
    .split(";");
cp.PB.toolTips[cp.PB.Btns.kBtnExit] =
    "Exit ;\u7d50\u675f ;Quitter ;Beenden ;Esci ;\u9589\u3058\u308b ;Salir ;\ub05d\ub0b4\uae30 ;Sair ".split(";");
cp.PB.toolTips[cp.PB.Btns.kBtnInfo] =
    "Information ;\u8cc7\u8a0a ;Informations ;Informationen ;Informazioni ;\u60c5\u5831 ;Informaci\u00f3n ;\uc815\ubcf4 ;Informa\u00e7\u00f5es "
    .split(";");
cp.PB.toolTips[cp.PB.Btns.kBtnTOC] =
    "Table of Contents ;\u76ee\u9304 ;Table des mati\u00e8res ;Inhaltsverzeichnis ;Sommario ;\u76ee\u6b21 ;Contenido ;\ubaa9\ucc28 ;\u00cdndice anal\u00edtico "
    .split(";");
cp.PB.toolTips[cp.PB.Btns.kBtnFastForward] =
    "2x Fast Forward Speed ;2 \u500d\u901f\u5feb\u8f49 ;Vitesse d'avance rapide x2 ;Zweifache Vorspulgeschwindigkeit ;Velocit\u00e0 avanzamento rapido 2x ;2 \u500d\u901f ;Velocidad de avance r\u00e1pido 2x ;2\ubc30\uc18d \ube68\ub9ac \uac10\uae30 ;Velocidade 2x de avan\u00e7ar "
    .split(";");
cp.PB.toolTips[cp.PB.Btns.kBtnFastForward1] =
    "4x Fast Forward Speed ;4 \u500d\u901f\u5feb\u8f49 ;Vitesse d'avance rapide x4 ;Vierfache Vorspulgeschwindigkeit ;Velocit\u00e0 avanzamento rapido 4x ;4 \u500d\u901f ;Velocidad de avance r\u00e1pido 4x ;4\ubc30\uc18d \ube68\ub9ac \uac10\uae30 ;Velocidade 4x de avan\u00e7ar "
    .split(";");
cp.PB.toolTips[cp.PB.Btns.kBtnFastForward2] =
    "Normal Speed ;\u6b63\u5e38\u901f\u5ea6 ;Vitesse normale ;Normale Geschwindigkeit ;Velocit\u00e0 normale ;\u6a19\u6e96\u901f\u5ea6 ;Velocidad normal ;\uc77c\ubc18 \uc18d\ub3c4 ;Velocidade normal "
    .split(";");
cp.PB.toolTips[cp.PB.Btns.kBtnPrint] =
    "Print;\u5217\u5370 ;Imprimer ;Drucken ;Stampa ;\u5370\u5237 ;Imprimir ;\uc778\uc1c4 ;Imprimir ".split(";");
cp.PB.toolTipLocaleIndex = 0;
cp.localizeToolTips = function(a) {
    return cp.playbarTooltips && cp.playbarTooltips[a] ? cp.playbarTooltips[a] : cp.PB.toolTips[a][cp.PB
        .toolTipLocaleIndex
    ] ? cp.PB.toolTips[a][cp.PB.toolTipLocaleIndex] : a
};
cp.PB.PlayBarButton = function(a, b, c) {
    this.SmallSuffix = "Small";
    this.isSmall = cp.PB.btnSizeMap[a];
    this.iconName = a;
    this.playBarDiv = b;
    this.currDiv = document.createElement("canvas");
    this.currDiv.parentObj = this;
    this.playBarDiv.appendChild(this.currDiv);
    this.currDiv.setAttribute("class", this.isSmall ? "playbarSmallButton" : "playbarBigButton");
    this.currDiv.width = this.currDiv.clientWidth;
    this.currDiv.height = this.currDiv.clientHeight;
    this.ctx = this.currDiv.getContext("2d");
    this.currDiv.imgElemArray = [];
    this.currDiv.toggleimgElemArray = [];
    this.currDiv.title = cp.PB.MP.PBP.noToolTips ? "" : this.iconName;
    this.currDiv.curIcon = 0;
    this.currDiv.tabIndex = 0;
    this.currDiv.setAttribute("role", "button");
    this.clickHandler = c;
    this.currDiv.style.marginTop = 0 == cp.PB.MP.PBP.tworow ? (this.playBarDiv.height - this.currDiv.height) / 2 +
        "px" : "0px";
    this.currDiv.style.marginLeft = "0px"
};
cp.PB.PlayBarButton.prototype = {
    setImage: function(a) {
        var b = cp.PB.loadedAssetArr[a + (this.isSmall ? this.SmallSuffix : "")];
        void 0 != b && (b.isGlow = "Glow" == a, b.showImage = !0, b.imageName = a + (this.isSmall ? this
            .SmallSuffix : ""), this.currDiv.imgElemArray[this.currDiv.imgElemArray.length] = b)
    },
    getWidth: function() {
        void 0 == this.actualClientWidth && (this.actualClientWidth = this.currDiv.clientWidth);
        return this.actualClientWidth
    },
    destroy: function() {
        this.currDiv && (this.currDiv.style.display = "none", this.currDiv.parentElement &&
            this.currDiv.parentElement.removeChild(this.currDiv))
    },
    setPosNWidth: function(a, b, c, d) {
        if (0 >= d) return 0;
        cp.registerGestureEvent(this.currDiv, cp.GESTURE_EVENT_TYPES.TAP, this.onClick);
        this.currDiv.onkeydown = this.onKeyDown;
        d = a ? 0 : parseFloat(window.getComputedStyle(this.currDiv)
            .marginLeft.replace("px", ""));
        this.currDiv.style.marginLeft = d + b + "px";
        b = parseFloat(window.getComputedStyle(this.currDiv)
            .marginTop.replace("px", ""));
        this.currDiv.style.marginTop = b + (a ? 0 : c) + "px";
        this.refresh();
        return cp.PB.kBtnMargin
    },
    setIcon: function(a) {
        var b = cp.PB.loadedAssetArr[a];
        b.parentElem = this.currDiv;
        b.isGlow = !1;
        b.imageName = a;
        cp.PB.isVertical && cp.applyTransform(b, "matrix(0,1,-1,0,0,0)");
        this.currDiv.toggleimgElemArray[this.currDiv.toggleimgElemArray.length] = b;
        this.currDiv.currImageName = a;
        this.currDiv.title = cp.PB.MP.PBP.noToolTips ? "" : cp.localizeToolTips(this.currDiv.toggleimgElemArray[
            this.currDiv.curIcon].imageName)
    },
    onClick: function(a) {
        this.parentObj.toggleImage(a);
        void 0 != this.parentObj.clickHandler && this.parentObj.clickHandler()
    },
    onKeyDown: function(a) {
        var b;
        a.keyCode ? b = a.keyCode : a.which && (b = a.which);
        32 == b && (this.parentObj.toggleImage(a), void 0 != this.parentObj.clickHandler && this.parentObj
            .clickHandler())
    },
    toggleImage: function(a) {
        var b = this.currDiv;
        null == b && (b = this);
        b.curIcon = (b.curIcon + 1) % b.toggleimgElemArray.length;
        var c = cp.localizeToolTips(b.toggleimgElemArray[b.curIcon].imageName);
        b.title = cp.PB.MP.PBP.noToolTips ? "" : c;
        cp.modifyAlternativeAccessibleText(b, c);
        b.parentObj.onMouseOver(a)
    },
    changeImage: function(a) {
        var b = this.currDiv;
        null == b && (b = this);
        this.currDiv.currImageName = a;
        for (var c = 0; c < b.toggleimgElemArray.length; ++c)
            if (a == b.toggleimgElemArray[c].imageName) {
                if (c == b.curIcon) return;
                b.curIcon = c;
                b.title = cp.localizeToolTips(b.toggleimgElemArray[b.curIcon].imageName)
            } if (b.rollover) b.parentObj.onMouseOver(null);
        else b.parentObj.onMouseOut(null)
    },
    refresh: function() {
        this.onMouseOut(null)
    },
    onMouseOver: function() {
        var a = this.ctx,
            b = this.currDiv;
        null == b && (b = this);
        null == a && (a = this.getContext("2d"));
        b.rollover = !0;
        var c;
        a.clearRect(0,
            0, b.clientWidth, b.clientHeight);
        for (var d = 0; d < b.imgElemArray.length; ++d) c = b.imgElemArray[d], a.drawImage(c, (b.clientWidth - c
            .width) / 2, (b.clientHeight - c.height) / 2);
        c = b.toggleimgElemArray[b.curIcon];
        var d = b.clientWidth / 2,
            f = b.clientHeight / 2,
            g = c.width,
            e = c.height;
        a.translate(d, f);
        a.rotate(Math.PI / 180 * (cp.PB.isVertical ? -90 : 0));
        a.drawImage(c, -g / 2, -e / 2, g, e);
        b.currImageName = c.imageName;
        a.rotate(Math.PI / 180 * (cp.PB.isVertical ? 90 : 0));
        a.translate(-d, -f)
    },
    onMouseOut: function() {
        var a = this.ctx,
            b = this.currDiv;
        null ==
            b && (b = this);
        null == a && (a = this.getContext("2d"));
        b.rollover = !1;
        a.clearRect(0, 0, b.clientWidth, b.clientHeight);
        if (b.imgElemArray) {
            for (var c = 0; c < b.imgElemArray.length; ++c) {
                var d = b.imgElemArray[c];
                d.isGlow || a.drawImage(d, (b.clientWidth - d.width) / 2, (b.clientHeight - d.height) / 2)
            }
            var d = b.toggleimgElemArray[b.curIcon],
                c = b.clientWidth / 2,
                f = b.clientHeight / 2,
                g = d.width,
                e = d.height;
            a.translate(c, f);
            a.rotate(Math.PI / 180 * (cp.PB.isVertical ? -90 : 0));
            a.drawImage(d, -g / 2, -e / 2, g, e);
            b.currImageName = d.imageName;
            a.rotate(Math.PI /
                180 * (cp.PB.isVertical ? 90 : 0));
            a.translate(-c, -f)
        }
    }
};
cp.PB.PlayBarSlider = function(a) {
    this.thumbBase = "ThumbBase";
    this.progress = "Progress";
    this.thumb = "Thumb";
    this.playBarDiv = a;
    this.currDiv = document.createElement("div");
    this.currDiv.setAttribute("class", "playbarSlider");
    this.playBarDiv.appendChild(this.currDiv);
    this.currDiv.border = "0px";
    this.currDiv.margin = "0px";
    this.currDiv.padding = "0px";
    this.progressDiv = document.createElement("canvas");
    this.currDiv.appendChild(this.progressDiv);
    this.currDiv.progressDiv = this.progressDiv;
    this.progressDiv.id = "playbarSlider";
    this.thumbimg = cp.PB.loadedAssetArr[this.thumb];
    this.thumbDiv = document.createElement("div");
    a = -1;
    0 === cp.D.pref.rkt && (a = 10006);
    this.thumbDiv.setAttribute("tabindex", a);
    this.thumbDiv.setAttribute("class", "playbarSliderThumb");
    this.currDiv.appendChild(this.thumbDiv);
    cp.fixWebkitScaling(this.thumbDiv);
    this.thumbimg.style.display = "block";
    this.thumbDiv.appendChild(this.thumbimg);
    this.progressDiv.thumbDiv = this.thumbDiv;
    this.thumbDiv.progressDiv = this.progressDiv;
    this.thumbDiv.id = "playbarSliderThumb";
    this.currDiv.style.marginLeft =
        "0px";
    "" == this.currDiv.style.marginTop && (this.currDiv.style.marginTop = "0px");
    this.currDiv.height = 1 == cp.PB.MP.PBP.tworow ? this.playBarDiv.height / 2 : this.playBarDiv.height
};
cp.PB.PlayBarSlider.prototype = {
    adjustWidth: function() {
        this.currDiv.style.width = "58px"
    },
    setPosNWidth: function(a, b, c, d) {
        d -= this.progressDiv.thumbDiv.clientWidth;
        if (0 >= d) return 0;
        this.currDiv.width = d;
        this.currDiv.style.width = d + "px";
        d = a ? 0 : parseFloat(window.getComputedStyle(this.currDiv)
            .marginLeft.replace("px", ""));
        this.currDiv.style.marginLeft = d + b + 2 * cp.PB.kBtnMargin + "px";
        b = a ? 0 : parseFloat(window.getComputedStyle(this.currDiv)
            .marginTop.replace("px", ""));
        a || (this.currDiv.style.marginTop = b + c + "px");
        this.init(a);
        this.refresh(a);
        this.currDiv.style.display = "inline";
        return 2 * cp.PB.kBtnMargin
    },
    getWidth: function() {
        void 0 == this.actualClientWidth && (this.actualClientWidth = this.currDiv.clientWidth + this
            .progressDiv.thumbDiv.clientWidth);
        return this.actualClientWidth
    },
    destroy: function() {
        this.currDiv && (this.currDiv.style.display = "none", this.currDiv.parentElement && this.currDiv
            .parentElement.removeChild(this.currDiv))
    },
    init: function() {
        this.thumbDiv.width = this.thumbDiv.clientWidth;
        this.thumbDiv.height = this.thumbDiv.clientHeight;
        var a = cp.PB.loadedAssetArr[this.thumbBase];
        this.progressDiv.parentObj = this;
        cp.registerGestureEvent(this.progressDiv, cp.GESTURE_EVENT_TYPES.TAP, this.moveSlider);
        this.progressDiv.updateSlider = this.updateSlider;
        this.progressDiv.thumbBasePattern = this.progressDiv.getContext("2d")
            .createPattern(a, "repeat");
        a = cp.PB.loadedAssetArr[this.progress];
        this.progressDiv.progressPattern = this.progressDiv.getContext("2d")
            .createPattern(a, "repeat");
        this.progressDiv.width = this.currDiv.width;
        this.progressDiv.height = a.height;
        this.progressDiv.style.marginTop = "0px";
        this.progressDiv.style.marginLeft = this.thumbDiv.width / 2 + "px";
        this.progressDiv.maxFrameWidth = this.progressDiv.width;
        this.progressDiv.maxFrameHeight = this.progressDiv.height;
        this.progressDiv.style.marginTop = 0 == cp.PB.MP.PBP.tworow ? (this.playBarDiv.height - this.progressDiv
            .height) / 2 + "px" : (this.playBarDiv.height / 2 - this.progressDiv.height) / 2 + "px";
        this.currDiv.width += this.thumbDiv.width;
        this.currDiv.style.width = this.currDiv.width + "px";
        this.currDiv.height = this.playBarDiv.height;
        cp.device == cp.IDEVICE ? this.thumbDiv.ontouchstart = this.onMouseDown : this.thumbDiv.onmousedown =
            this.onMouseDown;
        a = parseFloat(window.getComputedStyle(this.thumbDiv)
            .top.replace("px", ""));
        if (1 == cp.PB.MP.PBP.tworow) {
            var b = 0;
            cp.responsive && (b = -this.thumbDiv.clientHeight / 2);
            this.thumbDiv.style.top = a + b + this.playBarDiv.height / 2 + (this.playBarDiv.height / 2 - this
                .progressDiv.height) / 2 + "px"
        } else this.thumbDiv.style.top = a + (this.playBarDiv.height - this.progressDiv.height) / 2 + "px";
        cp.pg || cp.createAlternativeAccessibleText(this.thumbDiv,
            "Progress, Slide " + (cpInfoCurrentSlideIndex + 1) + " of " + cp.movie.stage.slides.length,
            "slider")
    },
    refresh: function() {
        cp.responsive ? this.updateSlider(cpInfoCurrentFrame) : this.updateSlider(1)
    },
    onMouseDown: function(a) {
        this.underDrag = !0;
        cp.em && cp.em.fireEvent("CPStartPlaybarScrubbing");
        this.style.position = "absolute";
        var b = document.getElementById("playbarSliderThumb")
            .progressDiv,
            c = b.progLen,
            d = document.onmousemove,
            f = document.onmouseup;
        cp.device == cp.IDEVICE && (d = document.ontouchmove, f = document.ontouchend);
        var g =
            a;
        cp.device == cp.IDEVICE && (g = a.touches[0]);
        a = function(a) {
            cp.playbarMoved();
            a.stopPropagation();
            var d = a;
            if (cp.device == cp.IDEVICE) {
                d = a.touches[0];
                a.preventDefault()
            }
            a = 0;
            a = cp.PB.isVertical ? d.clientY - g.clientY : d.clientX - g.clientX;
            if (a != 0) {
                d = Math.round((c + a) * cp.PB.MP.project_main.to / b.width);
                if (d < 1) d = 1;
                else if (cp.frame > cp.PB.MP.project_main.to) d = cp.PB.MP.project_main.to;
                if (cp.PB.mainMovie && !cp.PB.mainMovie.virgin) {
                    cp.PB.mainMovie.pause(cp.ReasonForPause.PLAYBAR_ACTION);
                    cp.PB.mainMovie.jumpToFrame(d)
                }
            }
        };
        cp.device == cp.IDEVICE ? document.ontouchmove = a : document.onmousemove = a;
        a = function() {
            if (cp.device == cp.IDEVICE) {
                document.ontouchmove = d;
                document.ontouchend = f
            } else {
                document.onmousemove = d;
                document.onmouseup = f
            }
            cp.em && cp.em.fireEvent("CPEndPlaybarScrubbing")
        };
        cp.device == cp.IDEVICE ? document.ontouchend = a : document.onmouseup = a;
        return !1
    },
    moveSlider: function(a) {
        cp.playbarMoved();
        a = Math.round((void 0 == a.offsetX ? a.layerX - a.currentTarget.offsetLeft : a.offsetX) * cp.PB.MP
            .project_main.to / this.width);
        1 > a ? a = 1 : a > cp.PB.MP.project_main.to &&
            (a = cp.PB.MP.project_main.to);
        cp.PB.mainMovie && !cp.PB.mainMovie.virgin && (cp.PB.mainMovie.pause(cp.ReasonForPause.PLAYBAR_ACTION),
            cp.PB.mainMovie.jumpToFrame(a))
    },
    updateSlider: function(a) {
        a > cp.PB.MP.project_main.to && (a = cp.PB.MP.project_main.to);
        var b = this.progressDiv;
        null == b && (b = this);
        var c = b.getContext("2d");
        c.clearRect(0, 0, b.width, b.height);
        c.fillStyle = b.thumbBasePattern;
        c.fillRect(0, 0, b.width, b.height);
        c.fillStyle = b.progressPattern;
        c.fillRect(0, 0, b.width * a / cp.PB.MP.project_main.to, b.height);
        b.progLen =
            b.width * a / cp.PB.MP.project_main.to;
        b.thumbDiv.style.marginLeft = b.progLen + "px";
        b.thumbDiv.title = cpInfoCurrentSlideIndex + 1 + "/" + cp.movie.stage.slides.length;
        cp.modifyAlternativeAccessibleText(this.thumbDiv, "Progress, Slide " + (cpInfoCurrentSlideIndex + 1) +
            " of " + cp.movie.stage.slides.length)
    }
};
cp.PB.playBarConstruct = function(a) {
    this.playBarDiv = a;
    this.slider = this.bkGrndDiv = null;
    this.firstRowArray = [];
    this.secondRowArray = [];
    this.btnMap = {};
    this.secondRowMinWidth = this.firstRowMinWidth = this.minWidth = 0;
    this.logo = null
};
cp.PB.playBarConstruct.prototype = {
    createSlider: function(a, b, c) {
        this.slider && cp.responsive && this.slider.destroy();
        if (void 0 == cp.PB.MP.playBarProperties.hasSlider || 0 == cp.PB.MP.playBarProperties.hasSlider)
        return 0;
        this.slider = new cp.PB.PlayBarSlider(this.bkGrndDiv);
        if (this.slider.getWidth() + 4 * cp.PB.kBtnMargin + c + 2 * cp.PB.kIndentMargin > cp.PB.playBarDim)
            return this.slider.destroy(), 0;
        b[b.length] = this.slider;
        this.slider.expectedWidth = this.slider.getWidth();
        return this.slider.expectedWidth + 4 * cp.PB.kBtnMargin
    },
    createBackground: function() {
        var a = document.getElementById("playbarBkGrnd");
        a.height = a.clientHeight;
        this.bkGrndDiv = a
    },
    setBackGroundWidth: function(a) {
        this.bkGrndDiv.width = a;
        this.bkGrndDiv.style.width = a + "px";
        a = cp.PB.loadedAssetArr.BackGround.src;
        if (cp.PB.MP.PBP.applyColors) {
            var b = document.createElement("canvas");
            b.width = this.bkGrndDiv.width;
            b.height = this.bkGrndDiv.height;
            a = b.getContext("2d");
            a.clearRect(0, 0, this.bkGrndDiv.width, this.bkGrndDiv.height);
            a.globalAlpha = cp.PB.MP.PBP.alpha / 100;
            cp.setFillStrokeStyle(cp.PB.MP.PBP.BkColor,
                b);
            a.fillRect(0, 0, this.bkGrndDiv.width, this.bkGrndDiv.height);
            "" == this.bkGrndDiv.style.backgroundImage && (a = b.toDataURL("image/png"), this.bkGrndDiv.style
                .backgroundImage = 'url("' + a + '")');
            this.bkGrndDiv.style.backgroundSize = "100% 100%"
        } else b = document.createElement("canvas"), this.bkGrndDiv.insertBefore(b, this.bkGrndDiv.firstChild),
            b.width = this.bkGrndDiv.width, b.height = this.bkGrndDiv.height, b.style.position = "absolute", b
            .style.display = "block", a = b.getContext("2d"), a.clearRect(0, 0, this.bkGrndDiv.width, this
                .bkGrndDiv.height),
            a.globalAlpha = cp.PB.MP.PBP.alpha / 100, a.drawImage(cp.PB.loadedAssetArr.BackGround, 0, 0, this
                .bkGrndDiv.width, this.bkGrndDiv.height), b.style.zIndex = -10
    },
    createButton: function(a, b, c, d, f, g) {
        var e, h;
        if (cp.responsive && (e = this.btnMap[b[0]])) e.currDiv && (h = e.currDiv.currImageName), e.destroy();
        if (b[0] != cp.PB.Btns.kBtnInfo && b[0] != cp.PB.Btns.kBtnPrint) {
            if (void 0 == cp.PB.MP.playBarProperties["has" + b[0]] || 0 == cp.PB.MP.playBarProperties["has" + b[
                    0]]) return 0
        } else if (b[0] == cp.PB.Btns.kBtnInfo && !1 == cp.PB.playbarHasInfo ||
            b[0] == cp.PB.Btns.kBtnPrint && !1 == cp.PB.playbarHasPrint) return 0;
        if (void 0 == cp.PB.loadedAssetArr[b[0]]) return 0;
        e = new cp.PB.PlayBarButton(b[0], this.bkGrndDiv, d);
        if (e.getWidth() + cp.PB.kBtnMargin + f + 2 * cp.PB.kIndentMargin > cp.PB.playBarDim) return e
        .destroy(), 0;
        e.setImage("Shadow");
        e.setImage("Stroke");
        e.setImage("Color");
        e.setImage("Shade");
        e.setImage("InnerStroke");
        e.setImage("Glow");
        e.setImage("InnerShade");
        a && (e.currDiv.style.display = "block");
        for (d = 0; d < b.length; ++d) e.setIcon(b[d]), a && e.changeImage(h),
            this.btnMap[b[d]] = e;
        e.currDiv.setAttribute("tabindex", g);
        cp.createAlternativeAccessibleText(e.currDiv, cp.localizeToolTips(b[0]), "");
        e.currDiv.onmouseover = e.onMouseOver;
        cp.registerGestureEvent(e.currDiv, cp.GESTURE_EVENT_TYPES.TAP, e.toggleImage);
        e.currDiv.onmouseout = e.onMouseOut;
        c[c.length] = e;
        e.expectedWidth = e.getWidth();
        return e.expectedWidth + cp.PB.kBtnMargin
    },
    createLogo: function(a, b) {
        if (!1 == cp.PB.playbarHasLogo) return 0;
        var c;
        a ? (c = document.getElementById("playbarLogo"), this.bkGrndDiv.removeChild(c),
            this.bkGrndDiv.appendChild(c)) : (c = document.createElement("div"), c.id = "playbarLogo", this
            .bkGrndDiv.appendChild(c), c.setAttribute("class", "playbarLogo"));
        c.style.marginTop = 0 == cp.PB.MP.PBP.tworow ? (this.bkGrndDiv.height - c.clientHeight) / 2 + "px" :
            "0px";
        if (c.clientWidth + cp.PB.kBtnMargin + b + 2 * cp.PB.kIndentMargin > cp.PB.playBarDim) return this
            .bkGrndDiv.removeChild(c), 0;
        this.logo = c;
        return c.clientWidth + cp.PB.kBtnMargin
    },
    initComponents: function(a) {
        var b = cp.D.quizzingData.quizBranchAware;
        if (0 == cp.PB.MP.PBP.tworow) {
            for (var c =
                    cp.PB.kIndentMargin, d = 0, d = void 0 == this.slider && !b ? 1 < this.firstRowArray
                    .length ? (this.bkGrndDiv.width - this.firstRowMinWidth) / (this.firstRowArray.length - 1) :
                    (this.bkGrndDiv.width - this.firstRowMinWidth) / 2 : 0, b = 0; b < this.firstRowArray
                .length; ++b) cp.responsive && 0 >= this.firstRowArray[b].expectedWidth || (c = this
                .firstRowArray[b].setPosNWidth(a, c, 0, this.firstRowArray[b].expectedWidth), c += d);
            null != this.logo && (this.logo.style.marginLeft = c + "px")
        } else {
            for (var c = cp.PB.kIndentMargin, d = 1 < this.firstRowArray.length ? (this.bkGrndDiv.width -
                    this.firstRowMinWidth) / (this.firstRowArray.length - 1) : (this.bkGrndDiv.width - this
                    .firstRowMinWidth) / 2, f = 0, b = 0; b < this.firstRowArray.length; ++b) c = this
                .firstRowArray[b].setPosNWidth(a, c, (this.bkGrndDiv.height / 2 - this.firstRowArray[b].currDiv
                    .height) / 2, this.firstRowArray[b].expectedWidth), c += d, f < (this.bkGrndDiv.height / 2 +
                    this.firstRowArray[b].currDiv.height) / 2 && (f = (this.bkGrndDiv.height / 2 + this
                    .firstRowArray[b].currDiv.height) / 2);
            c = cp.PB.kIndentMargin;
            d = void 0 == this.slider ? 1 < this.secondRowArray.length ? (this.bkGrndDiv.width -
                this.secondRowMinWidth) / (this.secondRowArray.length - 1) : (this.bkGrndDiv.width - this
                .secondRowMinWidth) / 2 : 0;
            for (b = 0; b < this.secondRowArray.length; ++b) c = this.secondRowArray[b].setPosNWidth(a, c, this
                .bkGrndDiv.height / 2 - f + (this.bkGrndDiv.height / 2 - this.secondRowArray[b].currDiv
                    .height) / 2, this.secondRowArray[b].expectedWidth), c += d;
            null != this.logo && (this.logo.style.marginLeft = c + "px", this.logo.style.marginTop = this
                .bkGrndDiv.height / 2 - f + (this.bkGrndDiv.height / 2 - this.secondRowArray[b].currDiv
                    .height) / 2 + "px")
        }
    },
    transformPlaybar: function() {
        var a = "matrix(",
            a = cp.PB.isVertical ? a + "0,1,-1,0," : a + "1,0,0,1,";
        this.playBarDiv.style.left = "0px";
        this.playBarDiv.style.top = "0px";
        var b = 0,
            c = 0;
        switch (cp.PB.MP.PBP.position) {
            case 2:
                b += cp.PB.playBarOtherDim, cp.PB.MP.PBP.overlay && (b -= this.bkGrndDiv.height);
            case 0:
                b += (-this.bkGrndDiv.width + this.bkGrndDiv.height) / 2;
                cp.loadedModules.toc && 1 == cp.toc.movieProperties.tocProperties.position && (b += cp.D
                    .tocProperties.width);
                switch (cp.PB.MP.PBP.layout) {
                    case 0:
                        c = (this.bkGrndDiv.width - this.bkGrndDiv.height) /
                            2;
                        break;
                    case 1:
                        c = (cp.PB.playBarDim - this.bkGrndDiv.height) / 2;
                        break;
                    case 2:
                        c = cp.PB.playBarDim - (this.bkGrndDiv.width + this.bkGrndDiv.height) / 2;
                        break;
                    case 3:
                        c = (cp.PB.playBarDim - this.bkGrndDiv.height) / 2
                }
                break;
            case 3:
                c += cp.PB.playBarOtherDim, cp.PB.MP.PBP.overlay && (c -= this.bkGrndDiv.height);
            case 1:
                switch (cp.PB.MP.PBP.layout) {
                    case 0:
                        b = 0;
                        break;
                    case 1:
                        b = cp.PB.playBarDim - this.bkGrndDiv.width;
                        break;
                    case 2:
                        b = (cp.PB.playBarDim - this.bkGrndDiv.width) / 2;
                        break;
                    case 3:
                        b = 0
                }
                cp.loadedModules.toc && (1 == cp.toc.movieProperties.tocProperties.position &&
                    !cp.toc.movieProperties.tocProperties.overlay) && (b += cp.D.tocProperties.width)
        }
        cp.applyTransform(this.playBarDiv, a + (b + "," + c + ")"))
    },
    applyColor: function(a, b) {
        var c = document.createElement("canvas"),
            d = document.createElement("canvas");
        d.width = b.width;
        d.height = b.height;
        c.width = b.width;
        c.height = b.height;
        var f = c.getContext("2d");
        f.clearRect(0, 0, b.width, b.height);
        cp.setFillStrokeStyle(a, c, void 0, !0);
        f.fillRect(0, 0, b.width, b.height);
        f = d.getContext("2d");
        f.clearRect(0, 0, b.width, b.height);
        f.globalAlpha = a.alpha /
            100;
        f.drawImage(b, 0, 0, b.width, b.height);
        f.globalCompositeOperation = "source-atop";
        f.drawImage(c, 0, 0, b.width, b.height);
        return d
    },
    setHasButtons: function() {
        if (cp.responsive && cp.PB && (cp.PB.MP && cp.PB.MP.PBP) && cp.responsiveButtons) {
            cp.PB.MP.PBPO || (cp.PB.MP.PBPO = {});
            var a = cp.responsiveWidths.indexOf(cp.ResponsiveProjWidth);
            if (!(0 > a || a >= cp.responsiveWidths.length)) {
                var a = cp.responsiveWidths.length - 1 - a,
                    b;
                for (b in cp.responsiveButtons) {
                    if (void 0 === cp.PB.MP.PBPO["has" + b] || "undefined" === cp.PB.MP.PBPO["has" + b]) cp.PB
                        .MP.PBPO["has" +
                            b] = cp.PB.MP.PBP["has" + b];
                    cp.PB.MP.PBPO["has" + b] && (cp.PB.MP.PBP["has" + b] = cp.responsiveButtons[b][a])
                }
            }
        }
    },
    layoutPlaybar: function(a) {
        this.firstRowArray = [];
        this.secondRowArray = [];
        var b = 0,
            c = -cp.PB.kBtnMargin;
        cp.PB.isVertical = 0 == cp.PB.MP.PBP.position % 2 ? !0 : !1;
        cp.responsive ? (this.setHasButtons(), cp.PB.playBarDim = cp("project")
            .clientWidth * cp.respGestureScaleFactor > window.innerWidth ? window.innerWidth : cp("project")
            .clientWidth) : cp.PB.playBarDim = cp.PB.isVertical ? cp.PB.MP.project.h : cp.PB.MP.project.w;
        cp.PB.playBarOtherDim = !1 == cp.PB.isVertical ? cp.PB.MP.project.h : cp.PB.MP.project.w;
        this.createBackground(cp.PB.playBarDim);
        if (cp.PB.MP.PBP.tworow) c += this.createButton(a, [cp.PB.Btns.kBtnRewind], this.firstRowArray, this
                .rewindHandler, c), c += this.createButton(a, [cp.PB.Btns.kBtnBackward], this.firstRowArray,
                this.backwardHandler, c), c += this.createButton(a, [cp.PB.Btns.kBtnPlay, cp.PB.Btns.kBtnPause],
                this.firstRowArray, this.playPauseHandler, c), c += this.createButton(a, [cp.PB.Btns
                .kBtnForward], this.firstRowArray, this.forwardHandler, c),
            c += this.createButton(a, [cp.PB.Btns.kBtnFastForward, cp.PB.Btns.kBtnFastForward1, cp.PB.Btns
                .kBtnFastForward2
            ], this.firstRowArray, this.fastForwardHandler, c), this.firstRowMinWidth = c += 2 * cp.PB
            .kIndentMargin, c = -cp.PB.kBtnMargin, c += this.createButton(a, [cp.PB.Btns.kBtnTOC], this
                .secondRowArray, this.tocHandler, c), c += this.createButton(a, [cp.PB.Btns.kBtnPrint], this
                .secondRowArray, null, c), c += this.createButton(a, [cp.PB.Btns.kBtnExit], this.secondRowArray,
                this.exitHandler, c), d = this.createSlider(a, this.secondRowArray,
                c), cp.device != cp.IDEVICE && (c += this.createButton(a, [cp.PB.Btns.kBtnAudioOn, cp.PB.Btns
                .kBtnAudioOff
            ], this.secondRowArray, this.audioOnOffHandler, c)), c += this.createButton(a, [cp.PB.Btns.kBtnCC],
                this.secondRowArray, this.ccHandler, c), c += this.createButton(a, [cp.PB.Btns.kBtnInfo], this
                .secondRowArray, this.showInfoHandler, c), c += this.createLogo(a, c), c += 2 * cp.PB
            .kIndentMargin, this.secondRowMinWidth = c + d, this.minWidth = this.firstRowMinWidth > this
            .secondRowMinWidth ? this.firstRowMinWidth : this.secondRowMinWidth, 3 == cp.PB.MP.PBP.layout ?
            (b = cp.PB.playBarDim, void 0 != this.slider && (d = b - c - 4 * cp.PB.kBtnMargin, this.slider
                .expectedWidth = d, cp.responsive && 58 >= this.slider.expectedWidth && (this.slider
                    .destroy(), this.slider = void 0))) : b = this.minWidth;
        else {
            if (0 === cp.D.pref.rkt) {
                var c = c + this.createButton(a, [cp.PB.Btns.kBtnRewind], this.firstRowArray, this
                        .rewindHandler, c, 10001),
                    c = c + this.createButton(a, [cp.PB.Btns.kBtnPlay, cp.PB.Btns.kBtnPause], this
                        .firstRowArray, this.playPauseHandler, c, 10002),
                    c = c + this.createButton(a, [cp.PB.Btns.kBtnBackward], this.firstRowArray,
                        this.backwardHandler, c, 10003),
                    c = c + this.createButton(a, [cp.PB.Btns.kBtnForward], this.firstRowArray, this
                        .forwardHandler, c, 10004),
                    c = c + this.createButton(a, [cp.PB.Btns.kBtnFastForward, cp.PB.Btns.kBtnFastForward1, cp.PB
                        .Btns.kBtnFastForward2
                    ], this.firstRowArray, this.fastForwardHandler, c, 10005),
                    d = this.createSlider(a, this.firstRowArray, c);
                cp.device != cp.IDEVICE && (c += this.createButton(a, [cp.PB.Btns.kBtnAudioOn, cp.PB.Btns
                    .kBtnAudioOff
                ], this.firstRowArray, this.audioOnOffHandler, c, 10007));
                c += this.createButton(a,
                    [cp.PB.Btns.kBtnCC], this.firstRowArray, this.ccHandler, c, 10008);
                c += this.createButton(a, [cp.PB.Btns.kBtnTOC], this.firstRowArray, this.tocHandler, c, 10009);
                c += this.createButton(a, [cp.PB.Btns.kBtnPrint], this.firstRowArray, null, c, 10010);
                c += this.createButton(a, [cp.PB.Btns.kBtnExit], this.firstRowArray, this.exitHandler, c,
                10011);
                c += this.createButton(a, [cp.PB.Btns.kBtnInfo], this.firstRowArray, this.showInfoHandler, c,
                    10012)
            } else c += this.createButton(a, [cp.PB.Btns.kBtnRewind], this.firstRowArray, this.rewindHandler,
                c, -1), c += this.createButton(a, [cp.PB.Btns.kBtnPlay, cp.PB.Btns.kBtnPause], this
                .firstRowArray, this.playPauseHandler, c, -1), c += this.createButton(a, [cp.PB.Btns
                .kBtnBackward
            ], this.firstRowArray, this.backwardHandler, c, -1), c += this.createButton(a, [cp.PB.Btns
                .kBtnForward
            ], this.firstRowArray, this.forwardHandler, c, -1), c += this.createButton(a, [cp.PB.Btns
                .kBtnFastForward, cp.PB.Btns.kBtnFastForward1, cp.PB.Btns.kBtnFastForward2
            ], this.firstRowArray, this.fastForwardHandler, c, -1), d = this.createSlider(a, this
                .firstRowArray,
                c), cp.device != cp.IDEVICE && (c += this.createButton(a, [cp.PB.Btns.kBtnAudioOn, cp.PB
                .Btns.kBtnAudioOff
            ], this.firstRowArray, this.audioOnOffHandler, c, -1)), c += this.createButton(a, [cp.PB.Btns
                .kBtnCC
            ], this.firstRowArray, this.ccHandler, c, -1), c += this.createButton(a, [cp.PB.Btns.kBtnTOC],
                this.firstRowArray, this.tocHandler, c, -1), c += this.createButton(a, [cp.PB.Btns
                .kBtnPrint], this.firstRowArray, null, c, -1), c += this.createButton(a, [cp.PB.Btns
                .kBtnExit
            ], this.firstRowArray, this.exitHandler, c, -1), c += this.createButton(a,
                [cp.PB.Btns.kBtnInfo], this.firstRowArray, this.showInfoHandler, c, -1);
            c += this.createLogo(a, c);
            this.minWidth = this.firstRowMinWidth = c += 2 * cp.PB.kIndentMargin;
            3 == cp.PB.MP.PBP.layout ? (b = cp.PB.playBarDim, void 0 != this.slider && (d = b - c - 4 * cp.PB
                .kBtnMargin, this.slider.expectedWidth = d, cp.responsive && 58 >= this.slider
                .expectedWidth && (this.slider.destroy(), this.slider = void 0))) : b = c + d
        }
        this.setBackGroundWidth(b);
        this.initComponents(a);
        cp.responsive || this.transformPlaybar();
        this.playBarDiv.constrObj = this;
        this.playBarDiv.play =
            this.onMovieResume;
        this.playBarDiv.pause = this.onMoviePaused;
        this.playBarDiv.mute = this.onAudioOff;
        this.playBarDiv.unmute = this.onAudioOn;
        cp.handleSpecialForPlaybar(this);
        cp.PB.MP.PBP.showOnHover && !cp("playbar")
            .animator && (a = new cp.PB.playbarAnimator(this.playBarDiv), a.init(cp.PB.playBarHeight), this
                .playBarDiv.animator = a)
    },
    morphImages: function() {
        for (var a = 0; a < cp.playbarAssetArr.length; ++a) {
            var b = cp.PB.loadedAssetArr[cp.playbarAssetArr[a]];
            if (void 0 != b) {
                var c = b.playbarassetName,
                    c = c.replace("Small", "");
                if ("Glow" == c || "Progress" == c) cp.PB.loadedAssetArr[cp.playbarAssetArr[a]] = this
                    .applyColor(cp.PB.MP.PBP.GlowColor, b);
                else if ("Color" == c || "ThumbBase" == c) cp.PB.loadedAssetArr[cp.playbarAssetArr[a]] = this
                    .applyColor(cp.PB.MP.PBP.FaceColor, b);
                else if (c == cp.PB.Btns.kBtnAudioOff || c == cp.PB.Btns.kBtnAudioOn || c == cp.PB.Btns
                    .kBtnBackward || c == cp.PB.Btns.kBtnCC || c == cp.PB.Btns.kBtnExit || c == cp.PB.Btns
                    .kBtnFastForward || c == cp.PB.Btns.kBtnFastForward1 || c == cp.PB.Btns.kBtnFastForward2 ||
                    c == cp.PB.Btns.kBtnForward || c == cp.PB.Btns.kBtnPlay ||
                    c == cp.PB.Btns.kBtnPause || c == cp.PB.Btns.kBtnRewind || c == cp.PB.Btns.kBtnTOC) cp.PB
                    .loadedAssetArr[cp.playbarAssetArr[a]] = this.applyColor(cp.PB.MP.PBP.IconColor, b)
            }
        }
    },
    exitHandler: function() {
        DoCPExit && DoCPExit()
    },
    showInfoHandler: function() {
        cp.infoBgImg ? cp.showInfoDialog() : (cp.infoBgImg = new Image, cp.infoBgImg.onload = function() {
            cp.showInfoDialog()
        }, cp.infoBgImg.src = "assets/playbar/PlaybarIcons/infobg.png")
    },
    audioOnOffHandler: function() {
        cp.toggleMute()
    },
    playPauseHandler: function() {
        cp.playPause(!0)
    },
    backwardHandler: function() {
        cp.goToPreviousSlide()
    },
    forwardHandler: function() {
        cp.goToNextSlide()
    },
    fastForwardHandler: function() {
        cp.fastForward()
    },
    rewindHandler: function() {
        cp.rewind()
    },
    ccHandler: function() {
        cp.showHideCC()
    },
    tocHandler: function() {
        cp.showHideTOC()
    },
    onMoviePaused: function() {
        var a = this.constrObj;
        void 0 != a && void 0 != a.btnMap[cp.PB.Btns.kBtnPause] && a.btnMap[cp.PB.Btns.kBtnPause].changeImage(cp
            .PB.Btns.kBtnPlay)
    },
    onMovieResume: function() {
        var a = this.constrObj;
        void 0 != a && void 0 != a.btnMap[cp.PB.Btns.kBtnPlay] && a.btnMap[cp.PB.Btns.kBtnPlay].changeImage(cp
            .PB.Btns.kBtnPause)
    },
    onAudioOn: function() {
        var a = this.constrObj;
        void 0 != a && void 0 != a.btnMap[cp.PB.Btns.kBtnAudioOff] && a.btnMap[cp.PB.Btns.kBtnAudioOff]
            .changeImage(cp.PB.Btns.kBtnAudioOn)
    },
    onAudioOff: function() {
        var a = this.constrObj;
        void 0 != a && void 0 != a.btnMap[cp.PB.Btns.kBtnAudioOn] && a.btnMap[cp.PB.Btns.kBtnAudioOn]
            .changeImage(cp.PB.Btns.kBtnAudioOff)
    },
    playbarAssetsLoaded: function() {
        cp.PB.playbarCreated = !1;
        cp.PB.assetsLoaded++;
        cp.PB.assetsLoaded == cp.playbarAssetArr.length && (cp.PB.MP.PBP.applyColors && this.parentObj
            .morphImages(),
            this.parentObj.layoutPlaybar(), cp.PB.playbarCreated = !0, cp.complete())
    },
    createBkDiv: function() {
        var a = document.createElement("div");
        this.playBarDiv.appendChild(a);
        a.setAttribute("class", "playbarBackGround");
        a.style.webkitBoxShadow = "";
        a.style.boxShadow = "";
        a.style.mozBoxShadow = "";
        a.id = "playbarBkGrnd";
        cp.PB.MP.PBP.tworow && (a.style.height = 2 * a.clientHeight + "px");
        a = parseFloat(window.getComputedStyle(a)
            .height.replace("px", ""));
        cp.PB.playBarHeight = a;
        cp.PB.MP.PBP.playBarHeight = a;
        if (cp.PB.MP.PBP.overlay) cp.setMovieLeftTopRightBottom(0,
            0, 0, 0);
        else {
            var b = 0,
                c = 0,
                d = 0,
                f = 0;
            0 == cp.PB.MP.PBP.position ? b = a : 1 == cp.PB.MP.PBP.position ? c = a : 2 == cp.PB.MP.PBP
                .position ? d = a : 3 == cp.PB.MP.PBP.position && (f = a);
            cp.setMovieLeftTopRightBottom(b, c, d, f)
        }
        3 == cp.PB.MP.PBP.position ? cp.setCCPosition(a) : cp.setCCPosition(0)
    },
    loadPlaybarAssets: function() {
        for (var a = 0; a < cp.playbarAssetArr.length; ++a) {
            var b = new Image;
            b.playbarassetName = cp.playbarAssetArr[a];
            cp.playbarAssetArr[a] == cp.PB.Btns.kBtnLogo && (cp.PB.playbarHasLogo = !0);
            cp.playbarAssetArr[a] == cp.PB.Btns.kBtnInfo &&
                (cp.PB.playbarHasInfo = !0);
            cp.playbarAssetArr[a] == cp.PB.Btns.kBtnPrint && (cp.PB.playbarHasPrint = !0);
            b.parentObj = this;
            cp.PB.loadedAssetArr[cp.playbarAssetArr[a]] = b;
            b.onload = this.playbarAssetsLoaded;
            b.onerror = this.playbarAssetsLoaded;
            b.src = cp.PB.playBarIconsFolder + cp.playbarAssetArr[a] + cp.PB.PNGSuffix
        }
    },
    shrinkPlaybarAssetsArr: function() {
        var a = {},
            b;
        for (b in cp.PB.Btns) a[cp.PB.Btns[b]] = cp.playbarAssetArr.indexOf(cp.PB.Btns[b]);
        !cp.PB.MP.PBP.hasRewind && 0 <= a[cp.PB.Btns.kBtnRewind] && delete cp.playbarAssetArr[a[cp.PB.Btns
            .kBtnRewind]];
        !cp.PB.MP.PBP.hasBackward && 0 <= a[cp.PB.Btns.kBtnBackward] && delete cp.playbarAssetArr[a[cp.PB.Btns
            .kBtnBackward]];
        !cp.PB.MP.PBP.hasForward && 0 <= a[cp.PB.Btns.kBtnForward] && delete cp.playbarAssetArr[a[cp.PB.Btns
            .kBtnForward]];
        !cp.PB.MP.PBP.hasCC && 0 <= a[cp.PB.Btns.kBtnCC] && delete cp.playbarAssetArr[a[cp.PB.Btns.kBtnCC]];
        !cp.PB.MP.PBP.hasExit && 0 <= a[cp.PB.Btns.kBtnExit] && delete cp.playbarAssetArr[a[cp.PB.Btns
            .kBtnExit]];
        cp.PB.MP.PBP.hasPlay || (0 <= a[cp.PB.Btns.kBtnPlay] && delete cp.playbarAssetArr[a[cp.PB.Btns
                .kBtnPlay]],
            0 <= a[cp.PB.Btns.kBtnPause] && delete cp.playbarAssetArr[a[cp.PB.Btns.kBtnPause]]);
        cp.PB.MP.PBP.hasSlider || (0 <= a[cp.PB.Btns.kBtnProgress] && delete cp.playbarAssetArr[a[cp.PB.Btns
            .kBtnProgress]], 0 <= a[cp.PB.Btns.kBtnThumb] && delete cp.playbarAssetArr[a[cp.PB.Btns
            .kBtnThumb]], 0 <= a[cp.PB.Btns.kBtnThumbBase] && delete cp.playbarAssetArr[a[cp.PB.Btns
            .kBtnThumbBase]]);
        cp.PB.MP.PBP.hasAudioOn || (0 <= a[cp.PB.Btns.kBtnAudioOn] && delete cp.playbarAssetArr[a[cp.PB.Btns
            .kBtnAudioOn]], 0 <= a[cp.PB.Btns.kBtnAudioOff] && delete cp.playbarAssetArr[a[cp.PB.Btns
            .kBtnAudioOff]]);
        cp.PB.MP.PBP.hasFastForward || (0 <= a[cp.PB.Btns.kBtnFastForward] && delete cp.playbarAssetArr[a[cp.PB
                .Btns.kBtnFastForward]], 0 <= a[cp.PB.Btns.kBtnFastForward1] && delete cp.playbarAssetArr[a[
                cp.PB.Btns.kBtnFastForward1]], 0 <= a[cp.PB.Btns.kBtnFastForward2] && delete cp
            .playbarAssetArr[a[cp.PB.Btns.kBtnFastForward2]]);
        (!cp.PB.MP.project.hasTOC || !cp.PB.MP.tocProperties.overlay) && 0 <= a[cp.PB.Btns.kBtnTOC] && delete cp
            .playbarAssetArr[a[cp.PB.Btns.kBtnTOC]];
        a = !1;
        for (b in cp.PB.Btns) cp.playbarAssetArr.indexOf(0 <= cp.PB.Btns[b]) &&
            (a = !0);
        if (!a)
            for (b = 0; b < cp.PB.BtnStyleImages.length; ++b) a = cp.playbarAssetArr.indexOf(cp.PB
                .BtnStyleImages[b]), 0 <= a && cp.playbarAssetArr.splice(a, 1);
        for (b = cp.playbarAssetArr.length - 1; 0 <= b; --b) void 0 == cp.playbarAssetArr[b] && cp
            .playbarAssetArr.splice(b, 1)
    }
};
cp.loadplaybar = function() {
    cp.PB.rootObj.createBkDiv();
    cp.PB.rootObj.shrinkPlaybarAssetsArr();
    cp.PB.rootObj.loadPlaybarAssets()
};
cp.PB.playbarAnimator = function(a) {
    this.endVal = this.startVal = 0;
    this.param = "";
    this.objDiv = a;
    this.totalSteps = 25;
    this.currStep = 0;
    this.direction = 1;
    this.intervalId = this.timeoutId = -1;
    this.isAnimating = !1
};
cp.PB.playbarAnimator.prototype = {
    init: function(a) {
        3 == cp.PB.MP.PBP.position ? (this.startVal = cp.responsive ? cp("div_Slide")
                .getBoundingClientRect()
                .bottom - a : parseFloat(window.getComputedStyle(this.objDiv)
                    .top.replace("px", "")), this.endVal = this.startVal + a, this.param = "top") : 2 == cp.PB
            .MP.PBP.position ? (this.startVal = cp.responsive ? this.objDiv.getBoundingClientRect()
                .left : parseFloat(window.getComputedStyle(this.objDiv)
                    .left.replace("px", "")), this.endVal = this.startVal + a, cp.loadedModules.toc && 0 == cp
                .toc.movieProperties.tocProperties.position &&
                (this.endVal += cp.toc.movieProperties.tocProperties.width), this.param = "left") : 1 == cp.PB
            .MP.PBP.position ? (this.startVal = cp.responsive ? this.objDiv.getBoundingClientRect()
                .top : parseFloat(window.getComputedStyle(this.objDiv)
                    .top.replace("px", "")), this.endVal = this.startVal - a, this.param = "top") : 0 == cp.PB
            .MP.PBP.position && (this.startVal = cp.responsive ? this.objDiv.getBoundingClientRect()
                .left : parseFloat(window.getComputedStyle(this.objDiv)
                    .left.replace("px", "")), this.endVal = this.startVal - a, cp.loadedModules.toc &&
                1 == cp.toc.movieProperties.tocProperties.position && (this.endVal -= cp.toc.movieProperties
                    .tocProperties.width), this.param = "left")
    },
    resetStartEndValForResponsive: function() {
        cp.responsive && (this.startVal = cp("div_Slide")
            .getBoundingClientRect()
            .bottom - cp.PB.playBarHeight, this.endVal = this.startVal + cp.PB.playBarHeight)
    },
    startTimer: function() {
        clearTimeout(this.timeoutId);
        this.timeoutId = setTimeout(this.hidePlaybar, 2E3)
    },
    easeOut: function(a, b) {
        var c = a + Math.pow(1 / this.totalSteps * this.currStep, 0.3) * (b - a);
        return Math.ceil(c)
    },
    beginAnim: function() {
        var a = document.getElementById("playbar");
        if (null != a) {
            a.style.position = "absolute";
            var b = a.animator;
            b.direction ? (b.currStep++, b.currStep >= b.totalSteps ? (clearInterval(b.intervalId), b.currStep =
                    0, b.isAnimating = !1, a.style[b.param] = b.endVal + "px") : a.style[b.param] = b
                .easeOut(b.startVal, b.endVal) + "px") : (b.currStep++, b.currStep >= b.totalSteps ? (
                clearInterval(b.intervalId), b.currStep = 0, b.isAnimating = !1, a.style[b.param] = b
                .startVal + "px") : a.style[b.param] = b.easeOut(b.endVal, b.startVal) + "px")
        }
    },
    hidePlaybar: function() {
        var a = document.getElementById("playbar");
        a && (clearTimeout(a.animator.timeoutId), a.animator.direction = 1, a.animator.isAnimating = !0,
            clearInterval(a.animator.intervalId), a.animator.playbarHidden = !0, a.animator.intervalId =
            setInterval(a.animator.beginAnim, 20))
    },
    showPlaybar: function(a) {
        var b = document.getElementById("playbar");
        if (b && (clearTimeout(b.animator.timeoutId), a || (b.animator.timeoutId = setTimeout(b.animator
                    .hidePlaybar, 2E3)), !(b.animator.isAnimating && 0 == b.animator.direction) &&
                parseFloat(window.getComputedStyle(b)[b.animator.param].replace("px", "")) != this.startVal)) b
            .animator.direction = 0, b.animator.isAnimating = !0, clearInterval(b.animator.intervalId), b
            .animator.playbarHidden = !1, b.animator.intervalId = setInterval(b.animator.beginAnim, 20)
    }
};
cp.playBarInit = function(a, b) {
    cp.PB.movieProperties = a;
    cp.PB.MP = cp.PB.movieProperties;
    cp.PB.MP.PBP = cp.PB.MP.playBarProperties;
    cp.PB.MP.PBP.locale && (cp.PB.toolTipLocaleIndex = cp.PB.MP.PBP.locale);
    var c = document.getElementById("playbar");
    cp.PB.MP.PBP.hasPlayBar || (c.style.display = "none", cp.setMovieLeftTopRightBottom(0, 0, 0, 0));
    cp.PB.rootObj = new cp.PB.playBarConstruct(c);
    cp.responsive || (c.style.left = 0 == cp.PB.MP.PBP.position ? "0px" : (cp.PB.MP.project.hasTOC && !cp.PB.MP
        .tocProperties.overlay ? cp.D.tocProperties.width :
        0) + "px", c.style.top = "0px");
    cp.PB.MP.project.hasTOC && cp.PB.MP.tocProperties.overlay && (cp.PB.MP.PBP.hasTOC = !0);
    cp.PB.MP.PBP.hasPlayBar && cp.loadplaybar(b)
};
cp.setPlaybarCallback = function(a) {
    cp.PB.mainMovie = a
};
cp.scriptPath = function() {
    var b, e = "",
        a = document.getElementsByTagName("script");
    if (a && 0 < a.length)
        for (b = 0; b < a.length; b += 1)
            if (a[b].src && a[b].src.match(/cp\.js$/)) {
                e = a[b].src.replace(/(.*)cp\.js$/, "$1");
                break
            } return e
};
cp.loadCPScript = function(b, e) {
    var a, d = document.getElementsByTagName("head")[0];
    d && (a = document.createElement("script"), a.setAttribute("src", b), a.setAttribute("type", "text/javascript"),
        a.setAttribute("defer", !1), "undefined" !== typeof e && null !== e && (a.onreadystatechange =
        function() {
            if ("complete" === this.readyState || "loaded" === this.readyState) this.onreadystatechange =
                this.onload = null, e()
        }, a.onload = function() {
            this.onreadystatechange = this.onload = null;
            e()
        }), d.appendChild(a))
};
cp.WidgetManager = function() {
    var b, e = this;
    e.verbose = !1;
    return {
        getInstance: function() {
            if (null === b || void 0 === b) "undefined" !== typeof OpenAjax && OpenAjax.hub.registerLibrary(
                    "Captivate.html5.WidgetLoader", "http://com.adobe.captivate/html5/widget", "0.1", {}), e
                .hub = new OpenAjax.hub.ManagedHub({
                    onPublish: function() {
                        return !0
                    },
                    onSubscribe: function() {
                        return !0
                    },
                    onUnsubscribe: function() {
                        return !0
                    },
                    log: function(a) {
                        e.verbose && cp.log(a)
                    }
                }), b = e, b.constructor = null;
            return b
        }
    }
};
cp.WidgetManager.prototype.getHub = function() {
    return this.hub
};
cp.WidgetManager.getInstance = function() {
    return (new cp.WidgetManager)
        .getInstance()
};
cp.Widget = function(b, e) {
    cp.Widget.baseConstructor.call(this, b);
    var a, d, c, j, h, s, g, t, p, m, q;
    c = this.getAttribute("b");
    var n = this.getAttribute("wrs"),
        o = 0,
        r = 0,
        i = cp.D.project.w,
        l = cp.D.project.h;
    cp.D.project.hasTOC && (cp.D.tocProperties && !cp.D.tocProperties.overlay) && (1 == cp.D.tocProperties
        .position && (o = cp.D.tocProperties.width), i += cp.D.tocProperties.width);
    a = 30;
    cp.D.playBarProperties.playBarHeight && (a = cp.D.playBarProperties.playBarHeight);
    if (cp.D.playBarProperties.hasPlayBar) switch (cp.D.playBarProperties.position) {
        case 0:
            o +=
                a;
            i += a;
            break;
        case 1:
            r += a;
            l += a;
            break;
        case 2:
            i += a;
            break;
        case 3:
            l += a
    }
    g = this;
    this.bounds = {
        minX: c[0],
        minY: c[1],
        maxX: c[2],
        maxY: c[3]
    };
    this.args = e;
    this.isDrawn = !1;
    this.visible = this.getAttribute("visible");
    this.alpha = this.getAttribute("a");
    this.element.style.opacity = this.alpha;
    this.element.style.left = this.bounds.minX + "px";
    this.element.style.top = this.bounds.minY + "px";
    this.element.style.width = this.bounds.maxX - this.bounds.minX + "px";
    this.element.style.height = this.bounds.maxY - this.bounds.minY + "px";
    this.element.style.position =
        "absolute";
    this.element.style.color = "#00FF00";
    this.element.style.borderWidth = "0 px";
    this.widgetManager = cp.WidgetManager.getInstance();
    this.widget = null;
    this.isStarted = !1;
    this.parentDivName = this.getAttribute("dn");
    cp.movie.stage.addToParentChildMap(this.parentDivName, this.element.id);
    d = this.getAttribute("tr");
    c = this.getAttribute("sh");
    a = 0;
    d && (cp.applyTransform(this.element, d), a = cp.getAngleFromRotateStr(d));
    c && (a = c.a - a, cp.applyShadow(this.element, c.d * Math.cos(Math.PI * a / 180) + "px " + c.d * Math.sin(Math
        .PI *
        a / 180) + "px " + c.b + "px " + cp.ConvertRGBToRGBA(c.c, c.o)));
    j = this.getAttribute("id");
    h = this.getAttribute("wu");
    s = this.getAttribute("wc");
    t = this.getAttribute("wp");
    m = this.getAttribute("sn");
    var v = this.getAttribute("iiw"),
        k = this.getAttribute("dn"),
        f = cp.D[k],
        u = f.dep ? f.dep[0] : "";
    this.getClientID = function() {
        return j
    };
    this.getClientURI = function() {
        return h
    };
    c = window.location.protocol + "//" + window.location.host + (0 == window.location.pathname.indexOf("/") ? "" :
        "/") + window.location.pathname;
    p = c.substring(0, c.lastIndexOf("/")) +
        "/" + h.substring(0, h.lastIndexOf("/")) + "/";
    this.getJsClass = function() {
        return s
    };
    this.OpenAjax = {
        getId: function() {
            return g.getClientID()
        },
        getAvailableSize: function() {
            return {
                width: g.element.style.width,
                height: g.element.style.height
            }
        },
        getSize: function() {
            return g.OpenAjax.getAvailableSize()
        },
        requestSizeChange: function() {},
        getMode: "view",
        requestModeChange: function() {},
        getPropertyValue: function() {},
        setPropertyValue: function() {},
        getPropertyNames: function() {},
        getMsg: function() {},
        rewriteURI: function(a) {
            return p +
                a
        },
        hub: g.widgetManager.getHub(),
        widget: {
            byId: function() {
                return g.widget
            },
            Error: {
                Inactive: "OpenAjax.widget.Error.Inactive",
                BadParameters: "OpenAjax.widget.Error.BadParameters",
                NotFound: "OpenAjax.widget.Error.NotFound"
            }
        }
    };
    q = cp.D[m].from;
    this.captivate = {
        CPMovieHandle: {
            getCPAPIInterface: function() {
                return window.cpAPIInterface
            },
            getCPAPIEventEmitter: function() {
                return window.cpAPIEventEmitter
            },
            widgetParams: function() {
                return t
            },
            replaceVariables: function(a) {
                var b, e, c, d = a.split("$$");
                if (d.length > 1) {
                    c = d[0];
                    b =
                        0;
                    for (e = 1; e < d.length; ++e) {
                        a = d[e];
                        if (b === 0) {
                            b = 1;
                            c = c + ('"+' + a)
                        } else {
                            b = 0;
                            c = c + ('+"' + a)
                        }
                    }
                    return eval(c)
                }
                return a
            },
            getContainerProps: function() {
                return {
                    containerType: "Slide"
                }
            },
            getSlideProps: function() {
                return {
                    startFrame: q,
                    endFrame: cp.D[m].to,
                    slideType: function() {
                        return cp.D[m].st
                    },
                    slideHandle: function() {
                        return {
                            AddNoSkipFrame: function(a) {
                                a = a + q;
                                cp.movie.stage.noSkipFrames[a] = a
                            }
                        }
                    }
                }
            },
            getCPSlideData: function() {
                return cp.getCPSlideData()
            },
            doesCourseHasQuiz: function() {
                return cp.doesCourseHasQuiz()
            },
            getQuizController: function() {
                return !cp.movie ||
                    !cp.movie.playbackController ? 0 : cp.movie.playbackController.GetQuizController()
            },
            getInteractiveWidgetHandle: function() {
                return !v ? 0 : {
                    shouldDisable: function() {
                        if (cp.getQuestionObject) {
                            var a = cp.getQuestionObject(k);
                            if (a) return a.shouldDisableOptions()
                        }
                        return false
                    },
                    setSuccess: function(a, b, e) {
                        if (f && !f.actionInProgress) {
                            var c = 0,
                                d = f.currentAttempt;
                            d != void 0 && (c = d);
                            if (a) {
                                cp.SubmitInteractions(k, cp.QuestionStatusEnum.CORRECT, c, b, e);
                                cp.clickSuccessHandler(f);
                                f.handled = true
                            } else {
                                a = f.ma;
                                c = c + 1;
                                f.currentAttempt =
                                    c;
                                var d = a != -1 && c == a,
                                    g = a == -1 || c <= a;
                                k && cp.SubmitInteractions(k, cp.QuestionStatusEnum.INCORRECT, c -
                                    1, b, e);
                                cp.clickFailureHandler(f, d, g);
                                if (!f.handled) f.handled = a != -1 && c >= a
                            }
                        }
                    },
                    setShowHint: function() {
                        cp.showHint(u, cp.movie.stage)
                    },
                    setHideHint: function() {
                        cp.hideHint(u, cp.movie.stage)
                    }
                }
            },
            getMovieProps: function() {
                return {
                    contentWidth: cp.D.project.w,
                    contentHeight: cp.D.project.h,
                    contentLeft: o,
                    contentTop: r,
                    movieWidth: i,
                    movieHeight: l,
                    variablesHandle: window,
                    movieHandle: cp.Timeline,
                    eventDispatcher: {
                        VARIABLECREATEDEVENT: cp.VARIABLE_CREATED_EVENT,
                        VARIABLECHANGEDEVENT: cp.VARIABLE_CHANGED_EVENT,
                        SLIDE_ENTER_EVENT: cp.SLIDEENTEREVENT,
                        SLIDE_EXIT_EVENT: cp.SLIDEEXITEVENT,
                        INTERACTIVE_ITEMSUBMIT_EVENT: cp.INTERACTIVEITEMSUBMITEVENT,
                        MOVIE_PAUSE_EVENT: cp.MOVIEPAUSEEVENT,
                        MOVIE_RESUME_EVENT: cp.MOVIERESUMEEVENT,
                        MOVIE_START_EVENT: cp.MOVIESTARTEVENT,
                        MOVIE_STOP_EVENT: cp.MOVIESTOPEVENT,
                        QUESTION_SKIP_EVENT: cp.QUESTIONSKIPEVENT,
                        QUESTION_SUBMIT_EVENT: cp.QUESTIONSUBMITEVENT,
                        START_PLAYBAR_SCRUBBING_EVENT: cp.STARTPLAYBARSCRUBBINGEVENT,
                        END_PLAYBAR_SCRUBBING_EVENT: cp.ENDPLAYBARSCRUBBINGEVENT,
                        MOVIE_FOCUS_IN: cp.MOVIEFOCUSINEVENT,
                        MOVIE_FOCUS_LOST: cp.MOVIEFOCUSLOSTEVENT,
                        addEventListener: function(a, b, c) {
                            return cp.em.addEventListener(b, a, "", c)
                        },
                        removeEventListener: function(a, b) {
                            return cp.em.removeEventListener(b, a)
                        }
                    },
                    getCpHandle: function() {
                        return cp
                    },
                    ExternalResourceLoader: {
                        getResourcePath: function(a) {
                            var b = 0;
                            if (n)
                                for (; b < n.length; ++b)
                                    if (a == n[b].id) return p + n[b].p;
                            return ""
                        }
                    }
                }
            },
            isWidgetVisible: function() {
                return g.getAttribute("visible")
            },
            isWidgetEnabled: function() {
                return true
            },
            getCPRandomPoolSlideProperties: function() {
                return null
            },
            getCPQuestionPoolProperties: function() {
                return null
            },
            pauseMovie: function() {
                cpCmndPause = 1
            },
            playMovie: function() {
                cpCmndPause = 0;
                cpCmndResume = 1
            },
            playWidgetAudio: function(a) {
                return cp.playWidgetAudio(a)
            },
            pauseWidgetAudio: function(a) {
                return cp.pauseWidgetAudio(a)
            },
            stopWidgetAudio: function(a) {
                return cp.stopWidgetAudio(a)
            },
            getCPQuestionData: function() {
                var a = {
                    questionNumInQuiz: -1,
                    maxAttempts: 0,
                    weightage: 0
                };
                if (f) {
                    if (f.ma != 999) a.maxAttempts = f.ma;
                    a.numTries = f.currentAttempt
                }
                if (cp.getQuestionObject) {
                    var b = cp.getQuestionObject(k);
                    if (!b) return a;
                    a.questionNumInQuiz = b.getQuestionNumberInQuiz();
                    a.weightage = b.getWeighting();
                    a.maxAttempts = b.numberOfAttempts;
                    a.numTries = b.currentAttempt
                }
                return a
            }
        }
    };
    this.iframe = null;
    this.loadingCompleted = this.loadingStarted = this.loaded = !1;
    this.doOpenAjaxLoading(!1);
    cp.responsive && (this.responsiveCSS = this.getAttribute("css"))
};
cp.inherits(cp.Widget, cp.DisplayObject);
cp.Widget.prototype.start = function(b) {
    !0 !== this.isStarted && (this.element.style.left = this.bounds.minX + "px", this.element.style.top = this
        .bounds.minY + "px", this.element.style.width = this.bounds.maxX - this.bounds.minX + "px", this.element
        .style.height = this.bounds.maxY - this.bounds.minY + "px", this.isStarted = !0, cp.responsive && this
        .drawForResponsive(!0, cp.ReasonForDrawing.kRegularDraw), this.loadingCompleted || (this.iframe ? this
            .doActualWidgetLoad() : this.doOpenAjaxLoading(!0)), this.visible ? cp.redrawItem(this
            .parentDivName) :
        cp.hide(this.parentDivName), cp.Widget.superClass.start.call(this, b))
};
cp.Widget.prototype.drawForResponsive = function(b, e) {
    if (!this.responsiveCSS) return !1;
    if (this.isDrawn && !b) return !0;
    var a = cp.getResponsiveCSS(this.responsiveCSS),
        d = !1,
        d = this.sh && !this.sh.i,
        c = void 0 != this.tr;
    if (this.isDrawn && this.currentCSS == a && !d && !c && (!b || e == cp.ReasonForDrawing.kMoviePaused)) return !
    0;
    this.actualParent = cp(this.parentDivName);
    this.currentCSS = a;
    cp.applyResponsiveStyles(this.element.parentElement, this.currentCSS, !0);
    this.element.style.left = "0px";
    this.element.style.top = "0px";
    this.element.style.width =
        this.element.parentElement.clientWidth + "px";
    this.element.style.height = this.element.parentElement.clientHeight + "px";
    this.iframe && (this.iframe.width = this.element.parentElement.clientWidth + "px", this.iframe.height = this
        .element.parentElement.clientHeight + "px", a = cp(this.getClientID()), a.style && (a.width = this
            .element.parentElement.clientWidth + "px", a.height = this.element.parentElement.clientHeight +
            "px", a.style.width = this.element.parentElement.clientWidth + "px", a.style.height = this.element
            .parentElement.clientHeight +
            "px"));
    this.isDrawn = !0;
    this.drawComplete(e)
};
cp.Widget.prototype.HandleClickEvent = function(b) {
    if (this.widget && this.widget.onClickExternal) this.widget.onClickExternal(b)
};
cp.Widget.prototype.doActualWidgetLoad = function() {
    if (this.iframe) {
        var b = this.getJsClass();
        if (b) try {
            this.loadingCompleted = !0;
            this.widget = new this.iframe[b];
            this.widget.OpenAjax = this.OpenAjax;
            this.widget.captivate = this.captivate;
            if (this.widget.onLoad) {
                this.widget.onLoad();
                var e = this.getAttribute("iqw") || this.getAttribute("iiw"),
                    a = this.getAttribute("dn");
                if (e && a && cp.getQuestionObject) {
                    var d = cp.getQuestionObject(a);
                    d && d.setWidget && d.setWidget(this.widget)
                }
            }
            this.actualDrawingElement = this.element;
            cp.responsive ||
                (this.element.parentElement.style.left = this.element.style.left, this.element.parentElement
                    .style.top = this.element.style.top, this.element.parentElement.style.width = this.element
                    .style.width, this.element.parentElement.style.height = this.element.style.height, this
                    .element.style.left = "0px", this.element.style.top = "0px");
            this.actualParent = cp(a)
        } catch (c) {}
    }
};
cp.Widget.prototype.doOpenAjaxLoading = function(b) {
    if (!this.loaded && !this.loadingStarted) {
        cp.movie.stage.addToItemNotLoaded(this);
        this.loadingStarted = !0;
        var e = this.widgetManager.getHub(),
            a = this,
            d = this.getClientID(),
            c = e.subscribe(d + "_loaded", function() {
                var d, g = null;
                a.loaded = !0;
                cp.movie.stage.removeFromItemNotLoaded(a);
                a.verbose && cp.log("Client Success fully loaded");
                e.unsubscribe(c);
                g = d = a.container.getIframe();
                if (d = d.contentWindow || d.contentDocument) a.iframe = d, cp.movie.stage.addToParentChildMap(a
                    .parentDivName,
                    g.id), b && a.doActualWidgetLoad()
            }),
            j = "100%",
            h = "100%";
        cp.responsive && (j = this.element.parentElement.clientWidth + "px", h = this.element.parentElement
            .clientHeight + "px");
        this.container = new OpenAjax.hub.IframeContainer(e, d, {
            Container: {
                onSecurityAlert: function(b, c) {
                    a.verbose && cp.log("onSecurityAlert: s=" + b.getClientID() + " a=" + c)
                },
                scope: this,
                log: function(b) {
                    a.verbose && cp.log(b)
                }
            },
            IframeContainer: {
                parent: this.element,
                uri: this.getClientURI(),
                iframeAttrs: {
                    frameBorder: "0",
                    scrolling: "no",
                    style: {
                        width: j,
                        height: h,
                        borderWidth: "0 px"
                    }
                }
            }
        })
    }
};
cp.Widget.prototype.reset = function() {
    this.isStarted = !1;
    this.deleteFromRopMap(this.element);
    this.loadingCompleted = this.loadingStarted = this.loaded = !1;
    var b = this.widgetManager.getHub();
    try {
        var e = this.getAttribute("iqw") || this.getAttribute("iiw"),
            a = this.getAttribute("dn");
        if (e && a && cp.getQuestionObject) {
            var d = cp.getQuestionObject(a);
            d && d.resetWidget && d.resetWidget()
        }
        if (this.widget.onUnLoad) this.widget.onUnLoad()
    } catch (c) {}
    if (this.iframe && this.iframe.deInit) try {
        this.iframe.deInit()
    } catch (j) {}
    try {
        b.removeContainer(this.container)
    } catch (h) {}
    this.iframe = null
};
cp.CPProjInit();
cp.fireModuleReadyEvent = function(c) {
    if (document.createEvent) {
        var a = document.createEvent("Events");
        a.initEvent("moduleReadyEvent", !0, !0, null);
        a.Data = cp.currentWindow.cpAPIInterface;
        c.dispatchEvent(a)
    }
};
cp.DoCPInit = function() {
    function c() {
        d();
        cp.Automate()
    }
    cp.initializeGestureEvents && cp.initializeGestureEvents();
    if (!cp.pg && !cp.sbw && (!cp.getIsBrowserSupported() && !cp.isSupportedWebkitBasedBrowser()) &&
        RuntimeBrowserDetect) {
        var a =
            "This browser does not support some of the content in the file you are trying to view. Use one of the following browsers:<ul><li>Internet Explorer 9 or later</li><li>Safari 5.1 or later</li><li>Google Chrome 17 or later</li><li>Firefox " +
            cp.FF_MIN_SUPPORTED_VERSION + " or later </li></ul>",
            b = "Adobe Captivate",
            f = "OK";
        if (cp && cp.model && cp.model.data) {
            var e = cp.model.data.rtDialog;
            e && (a = e.rtUnsupportedBowser, -1 != a.indexOf("@FFVERSION") && (a = a.replace("@FFVERSION", cp
                .FF_MIN_SUPPORTED_VERSION)), b = e.rtWarningTitle, f = e.rtokb)
        }
        RuntimeBrowserDetect.init(a, b, f)
    }
    cp.initiated = !1;
    cp.LMSTypes = {};
    cp.LMSTypes.NONE = 0;
    cp.LMSTypes.SCORM2004 = 1;
    cp.LMSTypes.SCORM12 = 2;
    cp.LMSTypes.Authorware = 3;
    cp.LMSTypes.AICC = 4;
    cp.LMSTypes.QuestionMark = 5;
    cp.LMSTypes.Email = 6;
    cp.LMSTypes.Breeze = 7;
    cp.LMSTypes.Acrobat = 8;
    cp.LMSTypes.InternalServer =
        9;
    cp.LMSTypes.TinCan = 10;
    var d = cp.ContinueCPInit,
        a = function() {
            jQuery(window)
                .unload(function() {
                    cp.UnloadActivties()
                })
        };
    cp.currentWindow = window;
    cp.parentWindow = window.parent;
    cp.topWindow = window.top;
    try {
        cp.parentWindow.document && cp.verbose && console.log("tring to access document of parent window")
    } catch (g) {
        cp.parentWindow = cp.currentWindow
    }
    try {
        cp.topWindow.document && cp.verbose && console.log("tring to access document of top window")
    } catch (h) {
        cp.topWindow = cp.currentWindow;
        try {
            for (; cp.topWindow.parent.document;) cp.topWindow =
                cp.topWindow.parent
        } catch (i) {}
    }
    cp.IsRunningInACAP = 1 == cp.getParameterByName("capi_player");
    cp.IsRunningInALEC = 1 == cp.getParameterByName("CPinsideAlec");
    cp.IsRunningInRoboHelp = "true" == cp.getParameterByName("CPinsideRH");
    cp.currentWindow.cpAPIInterface = cp.IsRunningInACAP ? new cp.ACAPInterfaceClass : new cp.CPAPIInterfaceClass;
    cp.currentWindow.cpAPIEventEmitter = cp.currentWindow.cpAPIInterface.getEventEmitter();
    if (cp.IsRunningInACAP) cp.fireModuleReadyEvent(cp.parentWindow), b = {
            Name: "CPGetEvent"
        }, b.cpName = b.Name,
        b.Data = {}, b.Data.ask = "resumeData", b.Data.callback = cp.handleACAPResumeData, b.cpData = b.Data, cp
        .currentWindow.cpAPIEventEmitter.trigger(b), a();
    else {
        if (!cp.IsRunningInACAP && cp.D && cp.D.quizReportingData) switch (b = cp.D.quizReportingData.lmsType, cp
            .LMSDriverHolder = void 0, b) {
            case cp.LMSTypes.SCORM2004:
            case cp.LMSTypes.SCORM12:
            case cp.LMSTypes.TinCan:
                cp.LMSDriverHolder = window;
                d = cp.LoadActivities;
                a();
                break;
            case cp.LMSTypes.AICC:
                cp.LMSDriverHolder = window.parent;
                cp.LMSDriverHolder.blockedForLMS || (cp.LMSDriverHolder.blockedForLMS = !0, cp(
                        "blockUserInteraction")
                    .style.display = "block", cp("blockUserInteraction")
                    .style.width = "100%", cp("blockUserInteraction")
                    .style.height = "100%");
                d = cp.LMSDriverHolder.HTMLContentLoadedCallback;
                a();
                break;
            default:
                cp.LMSDriverHolder = void 0
        }
        d = cp.IsRunningInConnect() ? cp.LoadActivities : d;
        d || (d = cp.ContinueCPInit, cp.NotRunningInLMS = !0);
        cp.pg && window.device && "iOS" === window.device.platform && StatusBar && StatusBar.overlaysWebView(!1);
        cp.pg && window.device && "Android" === window.device.platform ? cp.Phonegap.loadResources(c) :
            c()
    }
};
cp.ContinueCPInit = function() {
    cp.CPPreInit();
    cp.QuizLibraryInit();
    cp.CPPostInit();
    "undefined" != typeof CPAutomator && CPAutomator.init();
    document.getElementById("playImage")
        .focus();
    cp.initiated = !0;
    cp.complete()
};
window.DoCPExit = function() {
    try {
        cp.em.fireEvent("CPMovieExit");
        if (cp.IsRunningInACAP || cp.IsRunningInALEC) {
            cp.currentWindow.open("goodbye.html", "_self");
            return
        }
        if (cp.IsRunningInRoboHelp) {
            var c = cp.currentWindow.open("", "_self");
            c.close();
            return
        }
        cp.currentWindow != cp.parentWindow && cp.parentWindow && cp.parentWindow.hasOwnProperty("DoCPExit") ? cp
            .parentWindow.DoCPExit() : cp.IsRunningInConnect() ? cp.parentWindow.close() : cp.topWindow == self ? (
                c = window.open("", "_self"), c.close()) : (c = cp.topWindow.open("", "_self"),
                c.top.close())
    } catch (a) {}
    cp.pg && navigator && navigator.app && "function" === typeof navigator.app.exitApp && navigator.app.exitApp();
    cp.win8 && (window && window.parent) && window.parent.postMessage({
        name: "WIN8APPCLOSE",
        data: {}
    }, "*");
    cp.currentWindow.open("goodbye.html", "_self")
};
cp.Automate = function() {
    "undefined" != typeof CPAutomator && CPAutomator.CPRunSuite.model.workflow && setTimeout(function() {
        CPAutomator.Replay.init()
    }, 1E4)
};
